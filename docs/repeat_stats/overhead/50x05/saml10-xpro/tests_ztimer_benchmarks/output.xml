<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:45.568" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.141" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:46.150" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:47.257" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:46.140" endtime="20201115 21:59:47.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.260" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:47.259" endtime="20201115 21:59:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.139" endtime="20201115 21:59:47.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:47.263" endtime="20201115 21:59:47.504"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.262" endtime="20201115 21:59:47.504"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.518" endtime="20201115 21:59:47.530"></status>
</kw>
<msg timestamp="20201115 21:59:47.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.516" endtime="20201115 21:59:47.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.532" endtime="20201115 21:59:47.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.536" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:47.534" endtime="20201115 21:59:47.537"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:47.513" endtime="20201115 21:59:47.537"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:47.511" endtime="20201115 21:59:47.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.510" endtime="20201115 21:59:47.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:47.542" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:47.541" endtime="20201115 21:59:47.542"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.539" endtime="20201115 21:59:47.543"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.509" endtime="20201115 21:59:47.543"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.508" endtime="20201115 21:59:47.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.544" endtime="20201115 21:59:47.545"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.507" endtime="20201115 21:59:47.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.546" endtime="20201115 21:59:47.548"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.505" endtime="20201115 21:59:47.549"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.137" endtime="20201115 21:59:47.549"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:47.555" endtime="20201115 21:59:47.574"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.553" endtime="20201115 21:59:47.575"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.590" endtime="20201115 21:59:47.602"></status>
</kw>
<msg timestamp="20201115 21:59:47.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.588" endtime="20201115 21:59:47.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.603" endtime="20201115 21:59:47.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.607" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:47.606" endtime="20201115 21:59:47.608"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:47.585" endtime="20201115 21:59:47.608"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:47.583" endtime="20201115 21:59:47.609"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.580" endtime="20201115 21:59:47.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:47.613" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:47.612" endtime="20201115 21:59:47.613"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.610" endtime="20201115 21:59:47.614"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.580" endtime="20201115 21:59:47.614"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.579" endtime="20201115 21:59:47.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.615" endtime="20201115 21:59:47.616"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.577" endtime="20201115 21:59:47.617"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.576" endtime="20201115 21:59:47.617"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.552" endtime="20201115 21:59:47.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.624" endtime="20201115 21:59:47.632"></status>
</kw>
<msg timestamp="20201115 21:59:47.633" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.623" endtime="20201115 21:59:47.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.635" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:47.634" endtime="20201115 21:59:47.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:47.636" endtime="20201115 21:59:47.638"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.620" endtime="20201115 21:59:47.639"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.618" endtime="20201115 21:59:47.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.643" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:47.642" endtime="20201115 21:59:47.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.645" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:47.644" endtime="20201115 21:59:47.645"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.640" endtime="20201115 21:59:47.646"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:47.549" endtime="20201115 21:59:47.647" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:45.678" endtime="20201115 21:59:47.649"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:47.701" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:47.710" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:48.819" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:47.700" endtime="20201115 21:59:48.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.822" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:48.821" endtime="20201115 21:59:48.823"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.699" endtime="20201115 21:59:48.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.825" endtime="20201115 21:59:49.092"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.824" endtime="20201115 21:59:49.093"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.105" endtime="20201115 21:59:49.117"></status>
</kw>
<msg timestamp="20201115 21:59:49.118" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.104" endtime="20201115 21:59:49.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.119" endtime="20201115 21:59:49.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.124" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:49.121" endtime="20201115 21:59:49.124"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.101" endtime="20201115 21:59:49.125"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.099" endtime="20201115 21:59:49.126"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.098" endtime="20201115 21:59:49.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:49.130" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:49.129" endtime="20201115 21:59:49.130"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.127" endtime="20201115 21:59:49.130"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.097" endtime="20201115 21:59:49.130"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.096" endtime="20201115 21:59:49.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.131" endtime="20201115 21:59:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.095" endtime="20201115 21:59:49.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.134" endtime="20201115 21:59:49.136"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.094" endtime="20201115 21:59:49.136"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:47.697" endtime="20201115 21:59:49.136"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.142" endtime="20201115 21:59:49.161"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.141" endtime="20201115 21:59:49.162"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.175" endtime="20201115 21:59:49.187"></status>
</kw>
<msg timestamp="20201115 21:59:49.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.173" endtime="20201115 21:59:49.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.189" endtime="20201115 21:59:49.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:49.191" endtime="20201115 21:59:49.194"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.171" endtime="20201115 21:59:49.194"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:49.168" endtime="20201115 21:59:49.195"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.167" endtime="20201115 21:59:49.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:49.200" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:49.198" endtime="20201115 21:59:49.200"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.196" endtime="20201115 21:59:49.200"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.166" endtime="20201115 21:59:49.200"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.166" endtime="20201115 21:59:49.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.201" endtime="20201115 21:59:49.203"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.164" endtime="20201115 21:59:49.203"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.163" endtime="20201115 21:59:49.204"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.139" endtime="20201115 21:59:49.204"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:49.206" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.214" endtime="20201115 21:59:49.223"></status>
</kw>
<msg timestamp="20201115 21:59:49.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.212" endtime="20201115 21:59:49.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.225" endtime="20201115 21:59:49.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.227" endtime="20201115 21:59:49.229"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.210" endtime="20201115 21:59:49.229"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.208" endtime="20201115 21:59:49.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.236" endtime="20201115 21:59:49.524"></status>
</kw>
<msg timestamp="20201115 21:59:49.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061909708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061910931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.234" endtime="20201115 21:59:49.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061909708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061910931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.528" endtime="20201115 21:59:49.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.536" endtime="20201115 21:59:49.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.232" endtime="20201115 21:59:49.538"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.230" endtime="20201115 21:59:49.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.543" level="INFO">${RESULT} = [{'time': 0.061910931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.223000000001584e-06, 'source_diff': 1.223000000001584e-06}, {'time': 0.061938931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:49.539" endtime="20201115 21:59:49.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.556" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:49.544" endtime="20201115 21:59:49.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.560" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.559" endtime="20201115 21:59:49.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.563" level="INFO">VALUE: [1.223000000001584e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.27800000000039e-06, 1.2080000000025404e-06, 1.2499999999943112e-06, 1.319000000006565e-06, 1.3059999999995298e-06, 1.2360000000016802e-06, 1.26400000000082e-06, 1.1940000000029705e-06, 1.27800000000039e-06, 1.27800000000039e-06, 1.3050000000000561e-06, 1.3050000000000561e-06, 1.2500000000012501e-06, 1.1950000000024441e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2630000000013464e-06, 1.26400000000082e-06, 1.26400000000082e-06, 1.2219999999951714e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2639999999869422e-06, 1.26400000000082e-06, 1.2499999999943112e-06, 1.2499999999943112e-06, 1.2220000000090492e-06, 1.2359999999878024e-06, 1.26400000000082e-06, 1.250000000008189e-06, 1.3049999999931172e-06, 1.26400000000082e-06, 1.2499999999943112e-06, 1.2370000000011538e-06, 1.2499999999943112e-06, 1.2499999999943112e-06, 1.2370000000011538e-06, 1.2360000000016802e-06, 1.277999999993451e-06, 1.2780000000073288e-06, 1.250000000008189e-06, 1.2360000000016802e-06, 1.2360000000016802e-06, 1.2499999999943112e-06]</msg>
<status status="PASS" starttime="20201115 21:59:49.562" endtime="20201115 21:59:49.564"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.557" endtime="20201115 21:59:49.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.566" endtime="20201115 21:59:49.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.570" endtime="20201115 21:59:49.589"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.568" endtime="20201115 21:59:49.590"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.565" endtime="20201115 21:59:49.590"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.207" endtime="20201115 21:59:49.591"></status>
</kw>
<msg timestamp="20201115 21:59:49.591" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.598" endtime="20201115 21:59:49.607"></status>
</kw>
<msg timestamp="20201115 21:59:49.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.597" endtime="20201115 21:59:49.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.609" endtime="20201115 21:59:49.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.611" endtime="20201115 21:59:49.613"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.594" endtime="20201115 21:59:49.613"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.593" endtime="20201115 21:59:49.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.620" endtime="20201115 21:59:49.905"></status>
</kw>
<msg timestamp="20201115 21:59:49.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018391486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.619" endtime="20201115 21:59:49.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018391486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018392722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.909" endtime="20201115 21:59:49.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.917" endtime="20201115 21:59:49.919"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.616" endtime="20201115 21:59:49.919"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.615" endtime="20201115 21:59:49.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.924" level="INFO">${RESULT} = [{'time': 0.018392722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2360000000016802e-06, 'source_diff': 1.2360000000016802e-06}, {'time': 0.018419806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:49.921" endtime="20201115 21:59:49.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.937" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:49.925" endtime="20201115 21:59:49.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.942" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.941" endtime="20201115 21:59:49.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.944" level="INFO">VALUE: [1.2360000000016802e-06, 1.1809999999994047e-06, 1.2499999999977807e-06, 1.2219999999986408e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.2639999999973506e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.27800000000039e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.2359999999982108e-06, 1.2499999999977807e-06, 1.2639999999973506e-06, 1.2219999999986408e-06, 1.2219999999986408e-06, 1.2359999999982108e-06, 1.2639999999973506e-06, 1.2359999999982108e-06, 1.2220000000021103e-06, 1.26400000000082e-06, 1.26400000000082e-06, 1.27800000000039e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2360000000016802e-06, 1.26400000000082e-06, 1.2639999999973506e-06, 1.2219999999986408e-06, 1.2360000000016802e-06, 1.262999999997877e-06, 1.2500000000012501e-06, 1.2359999999982108e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.2369999999976844e-06, 1.207999999999071e-06, 1.2499999999977807e-06, 1.1810000000028742e-06, 1.3200000000025691e-06, 1.2500000000012501e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.2359999999982108e-06, 1.26400000000082e-06, 1.223000000001584e-06, 1.2359999999982108e-06]</msg>
<status status="PASS" starttime="20201115 21:59:49.943" endtime="20201115 21:59:49.945"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.938" endtime="20201115 21:59:49.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.947" endtime="20201115 21:59:49.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.951" endtime="20201115 21:59:49.970"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.949" endtime="20201115 21:59:49.971"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.946" endtime="20201115 21:59:49.971"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.591" endtime="20201115 21:59:49.972"></status>
</kw>
<msg timestamp="20201115 21:59:49.972" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.979" endtime="20201115 21:59:49.988"></status>
</kw>
<msg timestamp="20201115 21:59:49.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.978" endtime="20201115 21:59:49.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.990" endtime="20201115 21:59:49.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.992" endtime="20201115 21:59:49.994"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.975" endtime="20201115 21:59:49.994"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.974" endtime="20201115 21:59:49.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.001" endtime="20201115 21:59:50.285"></status>
</kw>
<msg timestamp="20201115 21:59:50.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.000" endtime="20201115 21:59:50.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018377056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.289" endtime="20201115 21:59:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.298" endtime="20201115 21:59:50.299"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.997" endtime="20201115 21:59:50.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.995" endtime="20201115 21:59:50.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.304" level="INFO">${RESULT} = [{'time': 0.018377056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.26400000000082e-06, 'source_diff': 1.26400000000082e-06}, {'time': 0.018403194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:50.301" endtime="20201115 21:59:50.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.319" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:50.305" endtime="20201115 21:59:50.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.323" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.322" endtime="20201115 21:59:50.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.326" level="INFO">VALUE: [1.26400000000082e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2360000000016802e-06, 1.2360000000016802e-06, 1.2219999999986408e-06, 1.27800000000039e-06, 1.2360000000016802e-06, 1.2359999999982108e-06, 1.26400000000082e-06, 1.2220000000021103e-06, 1.2779999999969205e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2220000000021103e-06, 1.318999999999626e-06, 1.2359999999982108e-06, 1.26400000000082e-06, 1.2499999999977807e-06, 1.3050000000000561e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.2499999999977807e-06, 1.2639999999973506e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.27800000000039e-06, 1.2360000000016802e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2499999999977807e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.2229999999981145e-06, 1.3059999999995298e-06, 1.2639999999973506e-06, 1.2499999999977807e-06, 1.2359999999982108e-06, 1.2500000000012501e-06, 1.2499999999977807e-06, 1.27800000000039e-06, 1.2360000000016802e-06, 1.2500000000012501e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.325" endtime="20201115 21:59:50.326"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.320" endtime="20201115 21:59:50.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.329" endtime="20201115 21:59:50.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.332" endtime="20201115 21:59:50.352"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.331" endtime="20201115 21:59:50.352"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.328" endtime="20201115 21:59:50.353"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.972" endtime="20201115 21:59:50.353"></status>
</kw>
<msg timestamp="20201115 21:59:50.353" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.361" endtime="20201115 21:59:50.370"></status>
</kw>
<msg timestamp="20201115 21:59:50.370" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.359" endtime="20201115 21:59:50.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.371" endtime="20201115 21:59:50.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.374" endtime="20201115 21:59:50.375"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.357" endtime="20201115 21:59:50.376"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.355" endtime="20201115 21:59:50.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.383" endtime="20201115 21:59:50.667"></status>
</kw>
<msg timestamp="20201115 21:59:50.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018330208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:50.381" endtime="20201115 21:59:50.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018330208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:50.671" endtime="20201115 21:59:50.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.680" endtime="20201115 21:59:50.681"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.379" endtime="20201115 21:59:50.682"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.377" endtime="20201115 21:59:50.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.686" level="INFO">${RESULT} = [{'time': 0.0183315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2919999999999598e-06, 'source_diff': 1.2919999999999598e-06}, {'time': 0.018354181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:50.683" endtime="20201115 21:59:50.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.700" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:50.687" endtime="20201115 21:59:50.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.704" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.703" endtime="20201115 21:59:50.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.706" level="INFO">VALUE: [1.2919999999999598e-06, 1.2370000000011538e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.2499999999977807e-06, 1.2369999999976844e-06, 1.207999999999071e-06, 1.2630000000013464e-06, 1.2219999999986408e-06, 1.2220000000021103e-06, 1.2500000000012501e-06, 1.207999999999071e-06, 1.26400000000082e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2359999999982108e-06, 1.2499999999977807e-06, 1.223000000001584e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.27800000000039e-06, 1.26400000000082e-06, 1.2220000000021103e-06, 1.318999999999626e-06, 1.26400000000082e-06, 1.27800000000039e-06, 1.2089999999985446e-06, 1.26400000000082e-06, 1.2219999999986408e-06, 1.2359999999982108e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.27800000000039e-06, 1.2360000000016802e-06, 1.26400000000082e-06, 1.27800000000039e-06, 1.2770000000009163e-06, 1.2639999999973506e-06, 1.332999999999196e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.27800000000039e-06, 1.26400000000082e-06, 1.2500000000012501e-06, 1.2639999999973506e-06, 1.2500000000012501e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.705" endtime="20201115 21:59:50.707"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.701" endtime="20201115 21:59:50.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.710" endtime="20201115 21:59:50.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.713" endtime="20201115 21:59:50.732"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.711" endtime="20201115 21:59:50.733"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.708" endtime="20201115 21:59:50.733"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.354" endtime="20201115 21:59:50.734"></status>
</kw>
<msg timestamp="20201115 21:59:50.734" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.741" endtime="20201115 21:59:50.751"></status>
</kw>
<msg timestamp="20201115 21:59:50.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.740" endtime="20201115 21:59:50.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.752" endtime="20201115 21:59:50.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.754" endtime="20201115 21:59:50.756"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.737" endtime="20201115 21:59:50.756"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.736" endtime="20201115 21:59:50.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.764" endtime="20201115 21:59:51.050"></status>
</kw>
<msg timestamp="20201115 21:59:51.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.762" endtime="20201115 21:59:51.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.055" endtime="20201115 21:59:51.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.063" endtime="20201115 21:59:51.065"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.759" endtime="20201115 21:59:51.065"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.758" endtime="20201115 21:59:51.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.070" level="INFO">${RESULT} = [{'time': 0.018537681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2370000000011538e-06, 'source_diff': 1.2370000000011538e-06}, {'time': 0.018555444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:51.067" endtime="20201115 21:59:51.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.084" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:51.071" endtime="20201115 21:59:51.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:51.087" endtime="20201115 21:59:51.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.091" level="INFO">VALUE: [1.2370000000011538e-06, 1.2630000000013464e-06, 1.2219999999986408e-06, 1.2499999999977807e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2499999999977807e-06, 1.2630000000013464e-06, 1.2370000000011538e-06, 1.2500000000012501e-06, 1.2499999999977807e-06, 1.27800000000039e-06, 1.2219999999986408e-06, 1.2499999999977807e-06, 1.207999999999071e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.2639999999973506e-06, 1.2219999999986408e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.26400000000082e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.179999999999931e-06, 1.26400000000082e-06, 1.2369999999976844e-06, 1.207999999999071e-06, 1.318999999999626e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.27800000000039e-06, 1.2219999999986408e-06, 1.207999999999071e-06, 1.2499999999977807e-06, 1.2360000000016802e-06, 1.2360000000016802e-06, 1.2499999999977807e-06, 1.2500000000012501e-06, 1.2500000000012501e-06, 1.2360000000016802e-06, 1.2500000000012501e-06, 1.2370000000011538e-06, 1.2359999999982108e-06, 1.2360000000016802e-06, 1.2500000000012501e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.089" endtime="20201115 21:59:51.091"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.085" endtime="20201115 21:59:51.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.094" endtime="20201115 21:59:51.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.097" endtime="20201115 21:59:51.117"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.096" endtime="20201115 21:59:51.117"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.092" endtime="20201115 21:59:51.118"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.734" endtime="20201115 21:59:51.118"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.205" endtime="20201115 21:59:51.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.123" endtime="20201115 21:59:51.142"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.121" endtime="20201115 21:59:51.143"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.120" endtime="20201115 21:59:51.143"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:49.137" endtime="20201115 21:59:51.143" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.151" endtime="20201115 21:59:51.170"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.149" endtime="20201115 21:59:51.171"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.185" endtime="20201115 21:59:51.198"></status>
</kw>
<msg timestamp="20201115 21:59:51.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.184" endtime="20201115 21:59:51.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.201" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.199" endtime="20201115 21:59:51.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.204" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:51.202" endtime="20201115 21:59:51.204"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.181" endtime="20201115 21:59:51.204"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:51.178" endtime="20201115 21:59:51.205"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.176" endtime="20201115 21:59:51.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:51.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:51.208" endtime="20201115 21:59:51.210"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.206" endtime="20201115 21:59:51.211"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.175" endtime="20201115 21:59:51.211"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.174" endtime="20201115 21:59:51.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.212" endtime="20201115 21:59:51.213"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.173" endtime="20201115 21:59:51.214"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.171" endtime="20201115 21:59:51.214"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.148" endtime="20201115 21:59:51.215"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:51.217" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.224" endtime="20201115 21:59:51.235"></status>
</kw>
<msg timestamp="20201115 21:59:51.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.223" endtime="20201115 21:59:51.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.237" endtime="20201115 21:59:51.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.239" endtime="20201115 21:59:51.241"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.220" endtime="20201115 21:59:51.241"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.219" endtime="20201115 21:59:51.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.248" endtime="20201115 21:59:51.532"></status>
</kw>
<msg timestamp="20201115 21:59:51.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064600917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064610569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.246" endtime="20201115 21:59:51.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064600917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064610569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.536" endtime="20201115 21:59:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.545" endtime="20201115 21:59:51.546"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.244" endtime="20201115 21:59:51.547"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.242" endtime="20201115 21:59:51.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.551" level="INFO">${RESULT} = [{'time': 0.064610569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652000000012761e-06, 'source_diff': 9.652000000012761e-06}, {'time': 0.064633542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:51.548" endtime="20201115 21:59:51.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.564" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:51.552" endtime="20201115 21:59:51.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.569" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.568" endtime="20201115 21:59:51.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.571" level="INFO">VALUE: [9.652000000012761e-06, 8.959000000002826e-06, 8.986000000002492e-06, 9.054999999993929e-06, 8.972999999995457e-06, 8.959000000002826e-06, 8.971999999995983e-06, 8.915999999997704e-06, 8.972000000009861e-06, 8.972000000009861e-06, 8.971999999995983e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.971999999995983e-06, 8.971999999995983e-06, 8.971999999995983e-06, 8.959000000002826e-06, 8.931000000003686e-06, 8.958000000003352e-06, 8.959000000002826e-06, 8.986000000002492e-06, 8.987000000001966e-06, 8.915999999997704e-06, 8.943999999996843e-06, 8.973000000009335e-06, 8.987000000001966e-06, 8.971999999995983e-06, 8.971999999995983e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.958000000003352e-06, 9.02800000000814e-06, 8.986000000002492e-06, 9.05600000000728e-06, 8.944999999996317e-06, 8.944999999996317e-06, 8.931000000003686e-06, 8.957999999989474e-06, 8.971999999995983e-06, 8.987000000001966e-06, 8.986000000002492e-06, 8.971999999995983e-06, 8.944999999996317e-06, 8.959000000002826e-06, 8.971999999995983e-06, 8.972000000009861e-06, 8.959000000002826e-06, 8.958000000003352e-06, 8.915999999997704e-06, 8.943999999996843e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.570" endtime="20201115 21:59:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.565" endtime="20201115 21:59:51.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.574" endtime="20201115 21:59:51.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.578" endtime="20201115 21:59:51.598"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.577" endtime="20201115 21:59:51.598"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.572" endtime="20201115 21:59:51.599"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.217" endtime="20201115 21:59:51.599"></status>
</kw>
<msg timestamp="20201115 21:59:51.599" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.607" endtime="20201115 21:59:51.617"></status>
</kw>
<msg timestamp="20201115 21:59:51.618" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.605" endtime="20201115 21:59:51.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.620" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.619" endtime="20201115 21:59:51.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.621" endtime="20201115 21:59:51.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.603" endtime="20201115 21:59:51.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.601" endtime="20201115 21:59:51.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.630" endtime="20201115 21:59:51.917"></status>
</kw>
<msg timestamp="20201115 21:59:51.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019086986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019096639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.629" endtime="20201115 21:59:51.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019086986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019096639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.921" endtime="20201115 21:59:51.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.930" endtime="20201115 21:59:51.931"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.626" endtime="20201115 21:59:51.932"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.624" endtime="20201115 21:59:51.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.936" level="INFO">${RESULT} = [{'time': 0.019096639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019136736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:51.933" endtime="20201115 21:59:51.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.950" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:51.937" endtime="20201115 21:59:51.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.954" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.953" endtime="20201115 21:59:51.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.957" level="INFO">VALUE: [9.652999999998357e-06, 8.944000000000313e-06, 8.958000000003352e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.999999999998592e-06, 8.999999999998592e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.931000000000217e-06, 8.944999999999786e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.957999999999883e-06, 9.013999999998162e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.986000000002492e-06, 8.986000000002492e-06, 8.944999999999786e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.958000000003352e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.973000000002396e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.957999999999883e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.955" endtime="20201115 21:59:51.957"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.951" endtime="20201115 21:59:51.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.960" endtime="20201115 21:59:51.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.964" endtime="20201115 21:59:51.983"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.962" endtime="20201115 21:59:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.958" endtime="20201115 21:59:51.984"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.600" endtime="20201115 21:59:51.985"></status>
</kw>
<msg timestamp="20201115 21:59:51.985" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.992" endtime="20201115 21:59:52.003"></status>
</kw>
<msg timestamp="20201115 21:59:52.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.991" endtime="20201115 21:59:52.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.005" endtime="20201115 21:59:52.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.007" endtime="20201115 21:59:52.009"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.988" endtime="20201115 21:59:52.009"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.987" endtime="20201115 21:59:52.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.016" endtime="20201115 21:59:52.301"></status>
</kw>
<msg timestamp="20201115 21:59:52.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019107958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.014" endtime="20201115 21:59:52.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019107958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.305" endtime="20201115 21:59:52.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.314" endtime="20201115 21:59:52.315"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.012" endtime="20201115 21:59:52.316"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.010" endtime="20201115 21:59:52.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.320" level="INFO">${RESULT} = [{'time': 0.019107958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652000000002353e-06, 'source_diff': 9.652000000002353e-06}, {'time': 0.019135903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.317" endtime="20201115 21:59:52.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.321" endtime="20201115 21:59:52.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.338" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.337" endtime="20201115 21:59:52.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.340" level="INFO">VALUE: [9.652000000002353e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.915999999997704e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.944999999999786e-06, 8.944000000000313e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.959000000002826e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.972000000002922e-06, 8.986999999998496e-06, 8.929999999997273e-06, 8.931000000000217e-06, 8.958999999999356e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.999999999998592e-06, 8.889000000001507e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.888999999998037e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.944000000000313e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.971999999999453e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.339" endtime="20201115 21:59:52.340"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.334" endtime="20201115 21:59:52.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.343" endtime="20201115 21:59:52.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.347" endtime="20201115 21:59:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.345" endtime="20201115 21:59:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.342" endtime="20201115 21:59:52.368"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.985" endtime="20201115 21:59:52.368"></status>
</kw>
<msg timestamp="20201115 21:59:52.368" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.376" endtime="20201115 21:59:52.386"></status>
</kw>
<msg timestamp="20201115 21:59:52.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.374" endtime="20201115 21:59:52.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.389" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.388" endtime="20201115 21:59:52.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.390" endtime="20201115 21:59:52.392"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.372" endtime="20201115 21:59:52.392"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.370" endtime="20201115 21:59:52.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.400" endtime="20201115 21:59:52.685"></status>
</kw>
<msg timestamp="20201115 21:59:52.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019141514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.398" endtime="20201115 21:59:52.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019131875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019141514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.689" endtime="20201115 21:59:52.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.697" endtime="20201115 21:59:52.699"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.395" endtime="20201115 21:59:52.699"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.394" endtime="20201115 21:59:52.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.703" level="INFO">${RESULT} = [{'time': 0.019141514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.019161986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:52.700" endtime="20201115 21:59:52.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.717" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.704" endtime="20201115 21:59:52.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.721" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.720" endtime="20201115 21:59:52.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.723" level="INFO">VALUE: [9.638999999998787e-06, 8.971999999999453e-06, 8.972000000002922e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.971999999999453e-06, 8.930000000000743e-06, 8.931000000000217e-06, 8.957999999999883e-06, 9.027999999997732e-06, 9.000000000002062e-06, 8.973000000002396e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.986000000002492e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.902000000001603e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.902999999997607e-06, 8.986000000002492e-06, 8.957999999999883e-06, 8.972000000002922e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944999999999786e-06, 8.973000000002396e-06, 8.986999999998496e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.972999999998926e-06, 8.930999999996747e-06, 8.957999999999883e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.722" endtime="20201115 21:59:52.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.718" endtime="20201115 21:59:52.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.726" endtime="20201115 21:59:52.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.730" endtime="20201115 21:59:52.750"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.728" endtime="20201115 21:59:52.750"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.725" endtime="20201115 21:59:52.751"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.369" endtime="20201115 21:59:52.751"></status>
</kw>
<msg timestamp="20201115 21:59:52.751" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.759" endtime="20201115 21:59:52.770"></status>
</kw>
<msg timestamp="20201115 21:59:52.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.757" endtime="20201115 21:59:52.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.771" endtime="20201115 21:59:52.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.774" endtime="20201115 21:59:52.776"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.755" endtime="20201115 21:59:52.776"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.753" endtime="20201115 21:59:52.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.783" endtime="20201115 21:59:53.068"></status>
</kw>
<msg timestamp="20201115 21:59:53.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01907375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:52.781" endtime="20201115 21:59:53.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01907375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:53.072" endtime="20201115 21:59:53.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.080" endtime="20201115 21:59:53.082"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.779" endtime="20201115 21:59:53.082"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.777" endtime="20201115 21:59:53.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.087" level="INFO">${RESULT} = [{'time': 0.01907375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.019097042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:53.083" endtime="20201115 21:59:53.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.100" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.088" endtime="20201115 21:59:53.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.104" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:53.103" endtime="20201115 21:59:53.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.106" level="INFO">VALUE: [9.653000000001827e-06, 8.973000000002396e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.917000000000647e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.958999999999356e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.972999999998926e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.973000000002396e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.971999999999453e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.958999999999356e-06, 8.958000000003352e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.930000000000743e-06, 8.915999999997704e-06, 8.973000000002396e-06, 8.901999999998134e-06, 8.944999999999786e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.957999999999883e-06, 9.056000000000342e-06, 8.944000000000313e-06, 8.972000000002922e-06, 8.944999999999786e-06, 9.013999999998162e-06]</msg>
<status status="PASS" starttime="20201115 21:59:53.105" endtime="20201115 21:59:53.107"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.101" endtime="20201115 21:59:53.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.110" endtime="20201115 21:59:53.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.114" endtime="20201115 21:59:53.133"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.111" endtime="20201115 21:59:53.134"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.108" endtime="20201115 21:59:53.134"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.752" endtime="20201115 21:59:53.134"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.216" endtime="20201115 21:59:53.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.139" endtime="20201115 21:59:53.159"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.138" endtime="20201115 21:59:53.159"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.136" endtime="20201115 21:59:53.159"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:51.145" endtime="20201115 21:59:53.160" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.169" endtime="20201115 21:59:53.188"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.167" endtime="20201115 21:59:53.189"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.201" endtime="20201115 21:59:53.214"></status>
</kw>
<msg timestamp="20201115 21:59:53.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.200" endtime="20201115 21:59:53.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.215" endtime="20201115 21:59:53.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.220" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:53.218" endtime="20201115 21:59:53.220"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.197" endtime="20201115 21:59:53.221"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:53.195" endtime="20201115 21:59:53.221"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.194" endtime="20201115 21:59:53.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:53.225" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:53.224" endtime="20201115 21:59:53.225"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.222" endtime="20201115 21:59:53.226"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.193" endtime="20201115 21:59:53.226"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.192" endtime="20201115 21:59:53.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.227" endtime="20201115 21:59:53.228"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.191" endtime="20201115 21:59:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.189" endtime="20201115 21:59:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.166" endtime="20201115 21:59:53.229"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.233" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.244" endtime="20201115 21:59:53.261"></status>
</kw>
<msg timestamp="20201115 21:59:53.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.242" endtime="20201115 21:59:53.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.263" endtime="20201115 21:59:53.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.265" endtime="20201115 21:59:53.267"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.240" endtime="20201115 21:59:53.267"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.237" endtime="20201115 21:59:53.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.275" endtime="20201115 21:59:53.559"></status>
</kw>
<msg timestamp="20201115 21:59:53.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066594833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066628514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.273" endtime="20201115 21:59:53.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066594833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066628514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.563" endtime="20201115 21:59:53.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.571" endtime="20201115 21:59:53.573"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.270" endtime="20201115 21:59:53.573"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.268" endtime="20201115 21:59:53.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.578" level="INFO">${RESULT} = [{'time': 0.066628514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3680999999993744e-05, 'source_diff': 3.3680999999993744e-05}, {'time': 0.066831306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:53.575" endtime="20201115 21:59:53.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.591" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.579" endtime="20201115 21:59:53.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.596" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.595" endtime="20201115 21:59:53.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.598" level="INFO">VALUE: [3.3680999999993744e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.323600000000593e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.326400000000507e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.323600000000593e-05, 3.323599999999205e-05, 3.32770000000121e-05, 3.324999999999856e-05, 3.320799999999291e-05, 3.32770000000121e-05, 3.3278000000011576e-05, 3.326399999999119e-05, 3.326400000000507e-05, 3.326400000000507e-05, 3.326400000000507e-05, 3.3250000000012436e-05, 3.324999999999856e-05, 3.316700000000061e-05, 3.319499999999975e-05, 3.324999999999856e-05, 3.329200000000421e-05, 3.329200000000421e-05, 3.322199999999942e-05, 3.324999999999856e-05, 3.326399999999119e-05, 3.32370000000054e-05, 3.326400000000507e-05, 3.3276999999998225e-05, 3.3318999999989996e-05, 3.324999999999856e-05, 3.316600000000114e-05, 3.326400000000507e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.329200000000421e-05, 3.323600000000593e-05, 3.326400000000507e-05, 3.332000000000335e-05, 3.3208999999992384e-05, 3.324999999999856e-05, 3.326400000000507e-05, 3.324999999999856e-05, 3.326400000000507e-05]</msg>
<status status="PASS" starttime="20201115 21:59:53.597" endtime="20201115 21:59:53.598"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.592" endtime="20201115 21:59:53.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.601" endtime="20201115 21:59:53.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.604" endtime="20201115 21:59:53.624"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.603" endtime="20201115 21:59:53.624"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.599" endtime="20201115 21:59:53.625"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.234" endtime="20201115 21:59:53.625"></status>
</kw>
<msg timestamp="20201115 21:59:53.625" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.635" endtime="20201115 21:59:53.652"></status>
</kw>
<msg timestamp="20201115 21:59:53.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.633" endtime="20201115 21:59:53.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.654" endtime="20201115 21:59:53.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.656" endtime="20201115 21:59:53.658"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.631" endtime="20201115 21:59:53.659"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.628" endtime="20201115 21:59:53.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.666" endtime="20201115 21:59:53.951"></status>
</kw>
<msg timestamp="20201115 21:59:53.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.664" endtime="20201115 21:59:53.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.955" endtime="20201115 21:59:53.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.963" endtime="20201115 21:59:53.965"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.662" endtime="20201115 21:59:53.966"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.660" endtime="20201115 21:59:53.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.970" level="INFO">${RESULT} = [{'time': 0.022110292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.369500000000025e-05, 'source_diff': 3.369500000000025e-05}, {'time': 0.022309361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:53.967" endtime="20201115 21:59:53.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.983" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.971" endtime="20201115 21:59:53.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.988" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.987" endtime="20201115 21:59:53.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.990" level="INFO">VALUE: [3.369500000000025e-05, 3.326399999999813e-05, 3.331999999999988e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.3277000000001694e-05, 3.320799999999985e-05, 3.323600000000246e-05, 3.320899999999932e-05, 3.323599999999899e-05, 3.318100000000018e-05, 3.324999999999856e-05, 3.317999999999724e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.320799999999985e-05, 3.323599999999899e-05, 3.319499999999975e-05, 3.325000000000203e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.3319000000000404e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.3276999999998225e-05, 3.3291000000001264e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.323600000000246e-05, 3.320799999999985e-05, 3.326399999999813e-05, 3.3305000000000834e-05, 3.3277000000001694e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.323600000000246e-05, 3.32500000000055e-05, 3.326399999999813e-05, 3.323599999999899e-05]</msg>
<status status="PASS" starttime="20201115 21:59:53.989" endtime="20201115 21:59:53.991"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.984" endtime="20201115 21:59:53.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.993" endtime="20201115 21:59:53.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.997" endtime="20201115 21:59:54.016"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.995" endtime="20201115 21:59:54.017"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.992" endtime="20201115 21:59:54.017"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.626" endtime="20201115 21:59:54.018"></status>
</kw>
<msg timestamp="20201115 21:59:54.018" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.027" endtime="20201115 21:59:54.045"></status>
</kw>
<msg timestamp="20201115 21:59:54.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.025" endtime="20201115 21:59:54.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.048" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.047" endtime="20201115 21:59:54.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.049" endtime="20201115 21:59:54.051"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.022" endtime="20201115 21:59:54.051"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.020" endtime="20201115 21:59:54.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.058" endtime="20201115 21:59:54.344"></status>
</kw>
<msg timestamp="20201115 21:59:54.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.057" endtime="20201115 21:59:54.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.348" endtime="20201115 21:59:54.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.356" endtime="20201115 21:59:54.358"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.054" endtime="20201115 21:59:54.359"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.052" endtime="20201115 21:59:54.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.363" level="INFO">${RESULT} = [{'time': 0.022214014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.369500000000025e-05, 'source_diff': 3.369500000000025e-05}, {'time': 0.022402208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.360" endtime="20201115 21:59:54.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.376" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.364" endtime="20201115 21:59:54.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.381" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.380" endtime="20201115 21:59:54.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.383" level="INFO">VALUE: [3.369500000000025e-05, 3.3276999999998225e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.3263000000002124e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.320799999999985e-05, 3.32640000000016e-05, 3.329199999999727e-05, 3.326399999999813e-05, 3.323699999999846e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.323699999999846e-05, 3.325000000000203e-05, 3.3262999999998655e-05, 3.3319000000000404e-05, 3.32779999999977e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.329199999999727e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.322299999999889e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.325000000000203e-05, 3.320799999999985e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.325000000000203e-05, 3.320899999999932e-05, 3.325000000000203e-05, 3.3263000000002124e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.319400000000028e-05, 3.323699999999846e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.320799999999985e-05, 3.324999999999856e-05]</msg>
<status status="PASS" starttime="20201115 21:59:54.382" endtime="20201115 21:59:54.383"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.377" endtime="20201115 21:59:54.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.386" endtime="20201115 21:59:54.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.389" endtime="20201115 21:59:54.409"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.388" endtime="20201115 21:59:54.409"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.384" endtime="20201115 21:59:54.410"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.018" endtime="20201115 21:59:54.410"></status>
</kw>
<msg timestamp="20201115 21:59:54.410" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.420" endtime="20201115 21:59:54.437"></status>
</kw>
<msg timestamp="20201115 21:59:54.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.418" endtime="20201115 21:59:54.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.439" endtime="20201115 21:59:54.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.441" endtime="20201115 21:59:54.444"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.415" endtime="20201115 21:59:54.444"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.413" endtime="20201115 21:59:54.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.451" endtime="20201115 21:59:54.759"></status>
</kw>
<msg timestamp="20201115 21:59:54.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.449" endtime="20201115 21:59:54.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.768" endtime="20201115 21:59:54.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.786" endtime="20201115 21:59:54.789"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.447" endtime="20201115 21:59:54.790"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.445" endtime="20201115 21:59:54.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.800" level="INFO">${RESULT} = [{'time': 0.021691556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.370899999999982e-05, 'source_diff': 3.370899999999982e-05}, {'time': 0.021892458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.792" endtime="20201115 21:59:54.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.829" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.802" endtime="20201115 21:59:54.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.834" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.833" endtime="20201115 21:59:54.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.836" level="INFO">VALUE: [3.370899999999982e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.32779999999977e-05, 3.323600000000246e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.329200000000074e-05, 3.324999999999856e-05, 3.3290999999997795e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.320899999999932e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.324999999999856e-05]</msg>
<status status="PASS" starttime="20201115 21:59:54.835" endtime="20201115 21:59:54.836"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.830" endtime="20201115 21:59:54.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.839" endtime="20201115 21:59:54.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.842" endtime="20201115 21:59:54.862"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.841" endtime="20201115 21:59:54.863"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.837" endtime="20201115 21:59:54.863"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.411" endtime="20201115 21:59:54.863"></status>
</kw>
<msg timestamp="20201115 21:59:54.864" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.873" endtime="20201115 21:59:54.891"></status>
</kw>
<msg timestamp="20201115 21:59:54.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.872" endtime="20201115 21:59:54.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.893" endtime="20201115 21:59:54.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.895" endtime="20201115 21:59:54.898"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.869" endtime="20201115 21:59:54.899"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.866" endtime="20201115 21:59:54.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.906" endtime="20201115 21:59:55.191"></status>
</kw>
<msg timestamp="20201115 21:59:55.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.904" endtime="20201115 21:59:55.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.195" endtime="20201115 21:59:55.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.203" endtime="20201115 21:59:55.204"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.902" endtime="20201115 21:59:55.205"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.900" endtime="20201115 21:59:55.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.209" level="INFO">${RESULT} = [{'time': 0.022359611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.366700000000111e-05, 'source_diff': 3.366700000000111e-05}, {'time': 0.022550875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.206" endtime="20201115 21:59:55.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.222" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.210" endtime="20201115 21:59:55.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.227" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:55.226" endtime="20201115 21:59:55.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.229" level="INFO">VALUE: [3.366700000000111e-05, 3.323600000000246e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.318100000000018e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.3262999999998655e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.329199999999727e-05, 3.322299999999889e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.320799999999985e-05, 3.323600000000246e-05, 3.325000000000203e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.323600000000246e-05, 3.32779999999977e-05, 3.316600000000114e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.32500000000055e-05, 3.323699999999846e-05, 3.326399999999813e-05, 3.32500000000055e-05]</msg>
<status status="PASS" starttime="20201115 21:59:55.228" endtime="20201115 21:59:55.230"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.223" endtime="20201115 21:59:55.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.233" endtime="20201115 21:59:55.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.236" endtime="20201115 21:59:55.256"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.235" endtime="20201115 21:59:55.256"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.231" endtime="20201115 21:59:55.257"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.864" endtime="20201115 21:59:55.257"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.232" endtime="20201115 21:59:55.257"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.231" endtime="20201115 21:59:55.257"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.260" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.268" endtime="20201115 21:59:55.288"></status>
</kw>
<msg timestamp="20201115 21:59:55.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.266" endtime="20201115 21:59:55.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.290" endtime="20201115 21:59:55.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.292" endtime="20201115 21:59:55.295"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.264" endtime="20201115 21:59:55.295"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.262" endtime="20201115 21:59:55.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.302" endtime="20201115 21:59:55.587"></status>
</kw>
<msg timestamp="20201115 21:59:55.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.301" endtime="20201115 21:59:55.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.591" endtime="20201115 21:59:55.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.599" endtime="20201115 21:59:55.600"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.298" endtime="20201115 21:59:55.601"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.296" endtime="20201115 21:59:55.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.605" level="INFO">${RESULT} = [{'time': 0.023627569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9166000000001016e-05, 'source_diff': 1.9166000000001016e-05}, {'time': 0.023862847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:55.602" endtime="20201115 21:59:55.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.618" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.606" endtime="20201115 21:59:55.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.623" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.622" endtime="20201115 21:59:55.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.626" level="INFO">VALUE: [1.9166000000001016e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.915299999999745e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.9137999999998406e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.916699999999702e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.915299999999745e-05, 1.919499999999963e-05, 1.911099999999874e-05, 1.9166000000001016e-05, 1.9166000000001016e-05, 1.912500000000178e-05, 1.9221999999999295e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.9097999999998644e-05, 1.919499999999963e-05, 1.9194000000000155e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.919499999999963e-05, 1.9165999999994077e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.9207999999999725e-05, 1.9249999999998435e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.915299999999398e-05, 1.918100000000006e-05, 1.919499999999963e-05]</msg>
<status status="PASS" starttime="20201115 21:59:55.624" endtime="20201115 21:59:55.626"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.619" endtime="20201115 21:59:55.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.629" endtime="20201115 21:59:55.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.632" endtime="20201115 21:59:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.631" endtime="20201115 21:59:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.627" endtime="20201115 21:59:55.653"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.260" endtime="20201115 21:59:55.653"></status>
</kw>
<msg timestamp="20201115 21:59:55.653" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.662" endtime="20201115 21:59:55.682"></status>
</kw>
<msg timestamp="20201115 21:59:55.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.660" endtime="20201115 21:59:55.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.683" endtime="20201115 21:59:55.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.686" endtime="20201115 21:59:55.688"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.658" endtime="20201115 21:59:55.689"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.656" endtime="20201115 21:59:55.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.696" endtime="20201115 21:59:55.981"></status>
</kw>
<msg timestamp="20201115 21:59:55.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.694" endtime="20201115 21:59:55.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.985" endtime="20201115 21:59:55.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.993" endtime="20201115 21:59:55.995"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.692" endtime="20201115 21:59:55.995"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.690" endtime="20201115 21:59:55.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.000" level="INFO">${RESULT} = [{'time': 0.021272917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915299999999745e-05, 'source_diff': 1.915299999999745e-05}, {'time': 0.021515694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.997" endtime="20201115 21:59:56.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.013" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.001" endtime="20201115 21:59:56.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.018" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.017" endtime="20201115 21:59:56.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.020" level="INFO">VALUE: [1.915299999999745e-05, 1.9179999999997116e-05, 1.918100000000006e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.915299999999745e-05, 1.915300000000092e-05, 1.9194000000000155e-05, 1.9221999999999295e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.922299999999877e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.9165999999997546e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.912500000000178e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9221999999999295e-05, 1.913900000000135e-05, 1.9166000000001016e-05, 1.92089999999992e-05, 1.9166000000001016e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.9221999999999295e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.920900000000267e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.916699999999702e-05, 1.9179999999997116e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.916699999999355e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.918100000000006e-05]</msg>
<status status="PASS" starttime="20201115 21:59:56.019" endtime="20201115 21:59:56.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.014" endtime="20201115 21:59:56.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.024" endtime="20201115 21:59:56.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.027" endtime="20201115 21:59:56.046"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.025" endtime="20201115 21:59:56.047"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.022" endtime="20201115 21:59:56.047"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.654" endtime="20201115 21:59:56.048"></status>
</kw>
<msg timestamp="20201115 21:59:56.048" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.056" endtime="20201115 21:59:56.076"></status>
</kw>
<msg timestamp="20201115 21:59:56.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.055" endtime="20201115 21:59:56.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.078" endtime="20201115 21:59:56.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.080" endtime="20201115 21:59:56.083"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.052" endtime="20201115 21:59:56.083"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.050" endtime="20201115 21:59:56.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.090" endtime="20201115 21:59:56.375"></status>
</kw>
<msg timestamp="20201115 21:59:56.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.089" endtime="20201115 21:59:56.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021224431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.379" endtime="20201115 21:59:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.387" endtime="20201115 21:59:56.389"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.086" endtime="20201115 21:59:56.389"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.084" endtime="20201115 21:59:56.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.394" level="INFO">${RESULT} = [{'time': 0.021243625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9194000000000155e-05, 'source_diff': 1.9194000000000155e-05}, {'time': 0.021484875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:56.391" endtime="20201115 21:59:56.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.412" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.399" endtime="20201115 21:59:56.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.416" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.415" endtime="20201115 21:59:56.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.418" level="INFO">VALUE: [1.9194000000000155e-05, 1.9207999999999725e-05, 1.913899999999788e-05, 1.911100000000221e-05, 1.9180000000000585e-05, 1.9179999999997116e-05, 1.919499999999963e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.91950000000031e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.912500000000178e-05, 1.919499999999963e-05, 1.9165999999997546e-05, 1.9249999999998435e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.9180000000000585e-05, 1.915299999999745e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.913899999999788e-05, 1.9180000000000585e-05, 1.912499999999831e-05, 1.919499999999963e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.915300000000092e-05, 1.9180000000000585e-05]</msg>
<status status="PASS" starttime="20201115 21:59:56.417" endtime="20201115 21:59:56.419"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.412" endtime="20201115 21:59:56.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.421" endtime="20201115 21:59:56.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.425" endtime="20201115 21:59:56.444"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.423" endtime="20201115 21:59:56.445"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.420" endtime="20201115 21:59:56.445"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.048" endtime="20201115 21:59:56.446"></status>
</kw>
<msg timestamp="20201115 21:59:56.446" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.454" endtime="20201115 21:59:56.474"></status>
</kw>
<msg timestamp="20201115 21:59:56.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.453" endtime="20201115 21:59:56.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.476" endtime="20201115 21:59:56.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.478" endtime="20201115 21:59:56.482"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.450" endtime="20201115 21:59:56.482"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.448" endtime="20201115 21:59:56.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.489" endtime="20201115 21:59:56.774"></status>
</kw>
<msg timestamp="20201115 21:59:56.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021227542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.487" endtime="20201115 21:59:56.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021227542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.778" endtime="20201115 21:59:56.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.786" endtime="20201115 21:59:56.788"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.485" endtime="20201115 21:59:56.789"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.483" endtime="20201115 21:59:56.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.793" level="INFO">${RESULT} = [{'time': 0.021227542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.918100000000006e-05, 'source_diff': 1.918100000000006e-05}, {'time': 0.021480611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.790" endtime="20201115 21:59:56.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.806" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.794" endtime="20201115 21:59:56.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.811" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.810" endtime="20201115 21:59:56.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.813" level="INFO">VALUE: [1.918100000000006e-05, 1.9207999999999725e-05, 1.9180000000000585e-05, 1.913899999999788e-05, 1.9207999999999725e-05, 1.911099999999874e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.920900000000267e-05, 1.918100000000006e-05, 1.915300000000092e-05, 1.913899999999788e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9111999999998214e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.9166000000001016e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.919499999999963e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.9180000000000585e-05, 1.9165999999997546e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.9249999999998435e-05, 1.922299999999877e-05, 1.916700000000049e-05, 1.9263999999998005e-05, 1.915299999999745e-05, 1.9221999999999295e-05, 1.922299999999877e-05, 1.919499999999963e-05, 1.919499999999963e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.9194000000000155e-05]</msg>
<status status="PASS" starttime="20201115 21:59:56.812" endtime="20201115 21:59:56.813"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.807" endtime="20201115 21:59:56.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.816" endtime="20201115 21:59:56.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.819" endtime="20201115 21:59:56.839"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.818" endtime="20201115 21:59:56.839"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.814" endtime="20201115 21:59:56.840"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.446" endtime="20201115 21:59:56.840"></status>
</kw>
<msg timestamp="20201115 21:59:56.840" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.849" endtime="20201115 21:59:56.869"></status>
</kw>
<msg timestamp="20201115 21:59:56.869" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.847" endtime="20201115 21:59:56.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.872" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.870" endtime="20201115 21:59:56.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.873" endtime="20201115 21:59:56.875"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.845" endtime="20201115 21:59:56.876"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.843" endtime="20201115 21:59:56.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.883" endtime="20201115 21:59:57.168"></status>
</kw>
<msg timestamp="20201115 21:59:57.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.881" endtime="20201115 21:59:57.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.173" endtime="20201115 21:59:57.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.181" endtime="20201115 21:59:57.182"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.879" endtime="20201115 21:59:57.183"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.877" endtime="20201115 21:59:57.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.187" level="INFO">${RESULT} = [{'time': 0.021220694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9179999999997116e-05, 'source_diff': 1.9179999999997116e-05}, {'time': 0.021467208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:57.184" endtime="20201115 21:59:57.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.200" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.188" endtime="20201115 21:59:57.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.205" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:57.204" endtime="20201115 21:59:57.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.207" level="INFO">VALUE: [1.9179999999997116e-05, 1.911100000000221e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.920900000000267e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.919499999999963e-05, 1.915299999999745e-05, 1.916700000000049e-05, 1.919499999999963e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.913900000000135e-05, 1.9180000000000585e-05, 1.912499999999831e-05, 1.9165999999997546e-05, 1.9179999999997116e-05, 1.919499999999963e-05, 1.9194000000000155e-05, 1.922299999999877e-05, 1.9250000000001904e-05, 1.912500000000178e-05, 1.9166000000001016e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.9180000000000585e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.9208000000003195e-05, 1.916699999999702e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.911099999999874e-05, 1.919499999999963e-05, 1.9179999999997116e-05, 1.918100000000006e-05, 1.9236000000002335e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.92089999999992e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.918100000000006e-05]</msg>
<status status="PASS" starttime="20201115 21:59:57.206" endtime="20201115 21:59:57.208"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.201" endtime="20201115 21:59:57.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.210" endtime="20201115 21:59:57.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.214" endtime="20201115 21:59:57.233"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.212" endtime="20201115 21:59:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.209" endtime="20201115 21:59:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.841" endtime="20201115 21:59:57.234"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.258" endtime="20201115 21:59:57.235"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.258" endtime="20201115 21:59:57.235"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.237" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.246" endtime="20201115 21:59:57.268"></status>
</kw>
<msg timestamp="20201115 21:59:57.268" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.244" endtime="20201115 21:59:57.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.271" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.269" endtime="20201115 21:59:57.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.272" endtime="20201115 21:59:57.273"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.242" endtime="20201115 21:59:57.274"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.240" endtime="20201115 21:59:57.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.281" endtime="20201115 21:59:57.567"></status>
</kw>
<msg timestamp="20201115 21:59:57.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023482694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.280" endtime="20201115 21:59:57.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023482694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.571" endtime="20201115 21:59:57.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.579" endtime="20201115 21:59:57.580"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.277" endtime="20201115 21:59:57.581"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.275" endtime="20201115 21:59:57.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.585" level="INFO">${RESULT} = [{'time': 0.023482694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.97769999999986e-05, 'source_diff': 1.97769999999986e-05}, {'time': 0.023765944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:57.582" endtime="20201115 21:59:57.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.599" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.586" endtime="20201115 21:59:57.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.603" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.602" endtime="20201115 21:59:57.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.605" level="INFO">VALUE: [1.97769999999986e-05, 1.9749999999998935e-05, 1.9750000000002405e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9750000000002405e-05, 1.9736000000002835e-05, 1.9721999999999795e-05, 1.9764000000001974e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9694000000000655e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9750000000002405e-05, 1.9735999999999365e-05, 1.976299999999903e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9750000000005874e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.9820000000003724e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.969499999999319e-05, 1.9735999999999365e-05, 1.9750000000005874e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201115 21:59:57.604" endtime="20201115 21:59:57.606"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.599" endtime="20201115 21:59:57.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.609" endtime="20201115 21:59:57.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.612" endtime="20201115 21:59:57.631"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.611" endtime="20201115 21:59:57.632"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.607" endtime="20201115 21:59:57.632"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.238" endtime="20201115 21:59:57.633"></status>
</kw>
<msg timestamp="20201115 21:59:57.633" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.642" endtime="20201115 21:59:57.664"></status>
</kw>
<msg timestamp="20201115 21:59:57.664" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.640" endtime="20201115 21:59:57.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.665" endtime="20201115 21:59:57.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.668" endtime="20201115 21:59:57.671"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.638" endtime="20201115 21:59:57.671"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.635" endtime="20201115 21:59:57.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.678" endtime="20201115 21:59:57.963"></status>
</kw>
<msg timestamp="20201115 21:59:57.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.677" endtime="20201115 21:59:57.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021248222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.967" endtime="20201115 21:59:57.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.975" endtime="20201115 21:59:57.977"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.674" endtime="20201115 21:59:57.978"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.672" endtime="20201115 21:59:57.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.982" level="INFO">${RESULT} = [{'time': 0.021248222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.021545181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:57.979" endtime="20201115 21:59:57.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.995" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.983" endtime="20201115 21:59:57.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.000" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.999" endtime="20201115 21:59:58.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.002" level="INFO">VALUE: [1.9749999999998935e-05, 1.97089999999997e-05, 1.9665999999998046e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.973699999999884e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9737000000002308e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9750000000002405e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 1.9679999999997616e-05, 1.9721999999999795e-05, 1.9791999999997645e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9693999999993717e-05, 1.9693999999993717e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9763999999998505e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201115 21:59:58.001" endtime="20201115 21:59:58.003"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.996" endtime="20201115 21:59:58.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.005" endtime="20201115 21:59:58.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.009" endtime="20201115 21:59:58.028"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.007" endtime="20201115 21:59:58.029"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.004" endtime="20201115 21:59:58.029"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.633" endtime="20201115 21:59:58.030"></status>
</kw>
<msg timestamp="20201115 21:59:58.030" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.039" endtime="20201115 21:59:58.061"></status>
</kw>
<msg timestamp="20201115 21:59:58.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.037" endtime="20201115 21:59:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.063" endtime="20201115 21:59:58.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.066" endtime="20201115 21:59:58.069"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.034" endtime="20201115 21:59:58.070"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.032" endtime="20201115 21:59:58.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.076" endtime="20201115 21:59:58.362"></status>
</kw>
<msg timestamp="20201115 21:59:58.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.075" endtime="20201115 21:59:58.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.366" endtime="20201115 21:59:58.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.374" endtime="20201115 21:59:58.375"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.072" endtime="20201115 21:59:58.376"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.071" endtime="20201115 21:59:58.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.381" level="INFO">${RESULT} = [{'time': 0.021911653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.022212625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:58.377" endtime="20201115 21:59:58.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.394" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.382" endtime="20201115 21:59:58.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.398" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.397" endtime="20201115 21:59:58.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.401" level="INFO">VALUE: [1.9721999999999795e-05, 1.9763999999998505e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 1.972300000000274e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9722000000003265e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9736000000002835e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9736000000002835e-05, 1.9764000000001974e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.981900000000078e-05, 1.973699999999884e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9820000000000254e-05, 1.973699999999884e-05, 1.979099999999817e-05, 1.966700000000099e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9709000000006638e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201115 21:59:58.399" endtime="20201115 21:59:58.401"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.395" endtime="20201115 21:59:58.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.404" endtime="20201115 21:59:58.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.407" endtime="20201115 21:59:58.426"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.405" endtime="20201115 21:59:58.427"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.402" endtime="20201115 21:59:58.427"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.030" endtime="20201115 21:59:58.428"></status>
</kw>
<msg timestamp="20201115 21:59:58.428" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.437" endtime="20201115 21:59:58.459"></status>
</kw>
<msg timestamp="20201115 21:59:58.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.435" endtime="20201115 21:59:58.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.462" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.461" endtime="20201115 21:59:58.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.463" endtime="20201115 21:59:58.466"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.433" endtime="20201115 21:59:58.466"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.431" endtime="20201115 21:59:58.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.473" endtime="20201115 21:59:58.758"></status>
</kw>
<msg timestamp="20201115 21:59:58.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:58.472" endtime="20201115 21:59:58.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:58.762" endtime="20201115 21:59:58.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.770" endtime="20201115 21:59:58.772"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.469" endtime="20201115 21:59:58.772"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.467" endtime="20201115 21:59:58.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.776" level="INFO">${RESULT} = [{'time': 0.021722986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.022005375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:58.773" endtime="20201115 21:59:58.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.790" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.778" endtime="20201115 21:59:58.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.794" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.793" endtime="20201115 21:59:58.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.796" level="INFO">VALUE: [1.9735999999999365e-05, 1.981900000000078e-05, 1.9750000000002405e-05, 1.9763999999998505e-05, 1.976299999999903e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9806000000000684e-05, 1.9737000000002308e-05, 1.980500000000121e-05, 1.9778000000001544e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.968099999999709e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9792000000001114e-05, 1.9735999999999365e-05, 1.9792000000001114e-05, 1.968100000000056e-05, 1.97630000000025e-05, 1.9736000000002835e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9750000000002405e-05, 1.9750000000002405e-05, 1.9735999999999365e-05, 1.9806000000000684e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9820000000003724e-05, 1.9791999999997645e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.968100000000056e-05, 1.9749999999998935e-05, 1.966700000000099e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9819999999996785e-05]</msg>
<status status="PASS" starttime="20201115 21:59:58.795" endtime="20201115 21:59:58.797"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.791" endtime="20201115 21:59:58.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.800" endtime="20201115 21:59:58.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.803" endtime="20201115 21:59:58.823"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.802" endtime="20201115 21:59:58.823"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.798" endtime="20201115 21:59:58.824"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.429" endtime="20201115 21:59:58.824"></status>
</kw>
<msg timestamp="20201115 21:59:58.824" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.833" endtime="20201115 21:59:58.855"></status>
</kw>
<msg timestamp="20201115 21:59:58.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.831" endtime="20201115 21:59:58.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.857" endtime="20201115 21:59:58.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.859" endtime="20201115 21:59:58.862"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.829" endtime="20201115 21:59:58.862"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.827" endtime="20201115 21:59:58.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.869" endtime="20201115 21:59:59.155"></status>
</kw>
<msg timestamp="20201115 21:59:59.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021224444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.868" endtime="20201115 21:59:59.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021204722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021224444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.159" endtime="20201115 21:59:59.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.167" endtime="20201115 21:59:59.168"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.865" endtime="20201115 21:59:59.169"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.863" endtime="20201115 21:59:59.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.173" level="INFO">${RESULT} = [{'time': 0.021224444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.021513333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:59.170" endtime="20201115 21:59:59.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.187" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.174" endtime="20201115 21:59:59.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.191" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:59.190" endtime="20201115 21:59:59.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.193" level="INFO">VALUE: [1.9721999999999795e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9750000000002405e-05, 1.973699999999884e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.973699999999884e-05, 1.9721999999999795e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.9792000000001114e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9820000000000254e-05, 1.981900000000078e-05, 1.9735999999999365e-05, 1.9764000000001974e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9764000000005444e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1.9777999999998075e-05, 1.9721999999999795e-05, 1.9722000000006734e-05]</msg>
<status status="PASS" starttime="20201115 21:59:59.192" endtime="20201115 21:59:59.194"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.188" endtime="20201115 21:59:59.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.197" endtime="20201115 21:59:59.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.200" endtime="20201115 21:59:59.220"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.199" endtime="20201115 21:59:59.220"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.195" endtime="20201115 21:59:59.221"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.825" endtime="20201115 21:59:59.221"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.236" endtime="20201115 21:59:59.221"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.235" endtime="20201115 21:59:59.222"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.224" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.232" endtime="20201115 21:59:59.257"></status>
</kw>
<msg timestamp="20201115 21:59:59.258" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.231" endtime="20201115 21:59:59.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.259" endtime="20201115 21:59:59.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.261" endtime="20201115 21:59:59.263"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.228" endtime="20201115 21:59:59.263"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.226" endtime="20201115 21:59:59.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.270" endtime="20201115 21:59:59.554"></status>
</kw>
<msg timestamp="20201115 21:59:59.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.269" endtime="20201115 21:59:59.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.558" endtime="20201115 21:59:59.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.566" endtime="20201115 21:59:59.568"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.266" endtime="20201115 21:59:59.568"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.264" endtime="20201115 21:59:59.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.573" level="INFO">${RESULT} = [{'time': 0.023584194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0415999999998796e-05, 'source_diff': 2.0415999999998796e-05}, {'time': 0.023930403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:59.570" endtime="20201115 21:59:59.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.586" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.574" endtime="20201115 21:59:59.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.590" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.589" endtime="20201115 21:59:59.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.593" level="INFO">VALUE: [2.0415999999998796e-05, 2.043099999999784e-05, 2.0416000000002266e-05, 2.0429999999998366e-05, 2.0486000000000115e-05, 2.0443999999997936e-05, 2.0444000000001405e-05, 2.038899999999913e-05, 2.041699999999827e-05, 2.044500000000088e-05, 2.0429999999998366e-05, 2.0415999999998796e-05, 2.041700000000174e-05, 2.047300000000002e-05, 2.044500000000088e-05, 2.0416000000002266e-05, 2.0430000000001836e-05, 2.0416000000002266e-05, 2.0429999999998366e-05, 2.045900000000045e-05, 2.0444000000001405e-05, 2.0443999999997936e-05, 2.0416000000002266e-05, 2.0444000000001405e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.03890000000026e-05, 2.0472000000000545e-05, 2.047300000000002e-05, 2.044500000000088e-05, 2.0429999999994897e-05, 2.037499999999609e-05, 2.03890000000026e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.04169999999948e-05, 2.0472000000000545e-05, 2.0429999999994897e-05, 2.044500000000088e-05, 2.0430000000001836e-05, 2.0430000000001836e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.03890000000026e-05, 2.0416000000002266e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0415999999995327e-05, 2.0430000000001836e-05]</msg>
<status status="PASS" starttime="20201115 21:59:59.591" endtime="20201115 21:59:59.594"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.587" endtime="20201115 21:59:59.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.596" endtime="20201115 21:59:59.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.600" endtime="20201115 21:59:59.619"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.598" endtime="20201115 21:59:59.620"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.595" endtime="20201115 21:59:59.620"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.224" endtime="20201115 21:59:59.620"></status>
</kw>
<msg timestamp="20201115 21:59:59.621" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.629" endtime="20201115 21:59:59.654"></status>
</kw>
<msg timestamp="20201115 21:59:59.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.628" endtime="20201115 21:59:59.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.656" endtime="20201115 21:59:59.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.658" endtime="20201115 21:59:59.662"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.625" endtime="20201115 21:59:59.662"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.623" endtime="20201115 21:59:59.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.669" endtime="20201115 21:59:59.955"></status>
</kw>
<msg timestamp="20201115 21:59:59.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.667" endtime="20201115 21:59:59.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.959" endtime="20201115 21:59:59.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.967" endtime="20201115 21:59:59.969"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.665" endtime="20201115 21:59:59.970"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.663" endtime="20201115 21:59:59.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.974" level="INFO">${RESULT} = [{'time': 0.021351403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043100000000131e-05, 'source_diff': 2.043100000000131e-05}, {'time': 0.021682292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.971" endtime="20201115 21:59:59.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.987" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.975" endtime="20201115 21:59:59.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.992" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.991" endtime="20201115 21:59:59.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.994" level="INFO">VALUE: [2.043100000000131e-05, 2.041699999999827e-05, 2.044499999999741e-05, 2.0429999999998366e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.0415999999998796e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.044500000000088e-05, 2.043100000000131e-05, 2.0429999999998366e-05, 2.044500000000088e-05, 2.043100000000131e-05, 2.043099999999784e-05, 2.043099999999784e-05, 2.04029999999987e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.041699999999827e-05, 2.041699999999827e-05, 2.041699999999827e-05, 2.043100000000131e-05, 2.043099999999784e-05, 2.0401999999999226e-05, 2.038899999999913e-05, 2.044500000000088e-05, 2.043099999999784e-05, 2.043100000000131e-05, 2.040300000000217e-05, 2.036100000000346e-05, 2.0486000000000115e-05, 2.0429999999994897e-05, 2.0416000000002266e-05, 2.043100000000131e-05, 2.04169999999948e-05, 2.0429999999994897e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.040299999999523e-05, 2.0430000000001836e-05, 2.045900000000045e-05, 2.041700000000174e-05, 2.0415999999995327e-05, 2.0430000000001836e-05, 2.03890000000026e-05, 2.040300000000217e-05, 2.044500000000088e-05, 2.0430000000001836e-05]</msg>
<status status="PASS" starttime="20201115 21:59:59.993" endtime="20201115 21:59:59.995"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.988" endtime="20201115 21:59:59.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.997" endtime="20201115 21:59:59.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.001" endtime="20201115 22:00:00.020"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.999" endtime="20201115 22:00:00.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.996" endtime="20201115 22:00:00.021"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.621" endtime="20201115 22:00:00.022"></status>
</kw>
<msg timestamp="20201115 22:00:00.022" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.030" endtime="20201115 22:00:00.055"></status>
</kw>
<msg timestamp="20201115 22:00:00.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.029" endtime="20201115 22:00:00.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.058" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.057" endtime="20201115 22:00:00.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.059" endtime="20201115 22:00:00.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.026" endtime="20201115 22:00:00.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.024" endtime="20201115 22:00:00.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.069" endtime="20201115 22:00:00.354"></status>
</kw>
<msg timestamp="20201115 22:00:00.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.068" endtime="20201115 22:00:00.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021328875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.358" endtime="20201115 22:00:00.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.366" endtime="20201115 22:00:00.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.065" endtime="20201115 22:00:00.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.063" endtime="20201115 22:00:00.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.373" level="INFO">${RESULT} = [{'time': 0.021328875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043100000000131e-05, 'source_diff': 2.043100000000131e-05}, {'time': 0.02166075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:00.369" endtime="20201115 22:00:00.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.386" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.374" endtime="20201115 22:00:00.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.391" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.390" endtime="20201115 22:00:00.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.393" level="INFO">VALUE: [2.043100000000131e-05, 2.043099999999784e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.0499999999999685e-05, 2.0401999999999226e-05, 2.0415999999998796e-05, 2.0430000000001836e-05, 2.043099999999784e-05, 2.041699999999827e-05, 2.0429999999998366e-05, 2.0430000000001836e-05, 2.043099999999784e-05, 2.043100000000131e-05, 2.037499999999956e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.044500000000088e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.037499999999956e-05, 2.041700000000174e-05, 2.0416000000002266e-05, 2.0415999999998796e-05, 2.0443999999997936e-05, 2.0444000000001405e-05, 2.044499999999741e-05, 2.043099999999784e-05, 2.043100000000131e-05, 2.04029999999987e-05, 2.0430000000001836e-05, 2.044500000000088e-05, 2.0429999999994897e-05, 2.047300000000002e-05, 2.0430000000001836e-05, 2.043100000000131e-05, 2.044500000000088e-05, 2.043100000000131e-05, 2.04169999999948e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.0430000000001836e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.0429999999994897e-05, 2.047300000000002e-05, 2.037500000000303e-05, 2.043100000000131e-05, 2.043099999999437e-05, 2.041700000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:00:00.392" endtime="20201115 22:00:00.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.387" endtime="20201115 22:00:00.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.396" endtime="20201115 22:00:00.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.400" endtime="20201115 22:00:00.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.398" endtime="20201115 22:00:00.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.394" endtime="20201115 22:00:00.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.022" endtime="20201115 22:00:00.420"></status>
</kw>
<msg timestamp="20201115 22:00:00.420" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.429" endtime="20201115 22:00:00.454"></status>
</kw>
<msg timestamp="20201115 22:00:00.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.428" endtime="20201115 22:00:00.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.457" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.455" endtime="20201115 22:00:00.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.458" endtime="20201115 22:00:00.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.425" endtime="20201115 22:00:00.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.423" endtime="20201115 22:00:00.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.468" endtime="20201115 22:00:00.753"></status>
</kw>
<msg timestamp="20201115 22:00:00.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021262875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.466" endtime="20201115 22:00:00.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021262875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.757" endtime="20201115 22:00:00.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.765" endtime="20201115 22:00:00.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.463" endtime="20201115 22:00:00.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.462" endtime="20201115 22:00:00.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.772" level="INFO">${RESULT} = [{'time': 0.021262875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.043100000000131e-05, 'source_diff': 2.043100000000131e-05}, {'time': 0.02159875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:00.768" endtime="20201115 22:00:00.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.785" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.773" endtime="20201115 22:00:00.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.789" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.788" endtime="20201115 22:00:00.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.792" level="INFO">VALUE: [2.043100000000131e-05, 2.043100000000131e-05, 2.045900000000045e-05, 2.041699999999827e-05, 2.0443999999997936e-05, 2.043100000000131e-05, 2.0415999999998796e-05, 2.037499999999956e-05, 2.0415999999998796e-05, 2.041699999999827e-05, 2.037499999999956e-05, 2.0430000000001836e-05, 2.043100000000131e-05, 2.0415999999998796e-05, 2.0401999999999226e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0415999999998796e-05, 2.041700000000174e-05, 2.0430000000001836e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.044500000000088e-05, 2.043100000000131e-05, 2.044499999999741e-05, 2.043099999999784e-05, 2.043100000000131e-05, 2.041700000000174e-05, 2.043099999999784e-05, 2.0443999999997936e-05, 2.0416000000002266e-05, 2.043100000000131e-05, 2.0429999999994897e-05, 2.043100000000131e-05, 2.041700000000174e-05, 2.044500000000088e-05, 2.0458000000000975e-05, 2.038899999999566e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.0415999999995327e-05, 2.047300000000002e-05, 2.0430000000001836e-05, 2.0415999999995327e-05, 2.0486000000000115e-05, 2.037499999999609e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.0430000000001836e-05, 2.041700000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:00:00.790" endtime="20201115 22:00:00.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.786" endtime="20201115 22:00:00.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.795" endtime="20201115 22:00:00.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.798" endtime="20201115 22:00:00.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.797" endtime="20201115 22:00:00.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.793" endtime="20201115 22:00:00.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.421" endtime="20201115 22:00:00.819"></status>
</kw>
<msg timestamp="20201115 22:00:00.819" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.828" endtime="20201115 22:00:00.852"></status>
</kw>
<msg timestamp="20201115 22:00:00.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.826" endtime="20201115 22:00:00.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.855" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.854" endtime="20201115 22:00:00.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.856" endtime="20201115 22:00:00.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.824" endtime="20201115 22:00:00.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.822" endtime="20201115 22:00:00.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.866" endtime="20201115 22:00:01.152"></status>
</kw>
<msg timestamp="20201115 22:00:01.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021223403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.865" endtime="20201115 22:00:01.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021223403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.157" endtime="20201115 22:00:01.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.165" endtime="20201115 22:00:01.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.862" endtime="20201115 22:00:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.861" endtime="20201115 22:00:01.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.171" level="INFO">${RESULT} = [{'time': 0.021243861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0458000000000975e-05, 'source_diff': 2.0458000000000975e-05}, {'time': 0.021576639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:01.168" endtime="20201115 22:00:01.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.185" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.172" endtime="20201115 22:00:01.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.189" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:01.188" endtime="20201115 22:00:01.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.191" level="INFO">VALUE: [2.0458000000000975e-05, 2.044500000000088e-05, 2.0415999999998796e-05, 2.040300000000217e-05, 2.043099999999784e-05, 2.043099999999784e-05, 2.045900000000045e-05, 2.0430000000001836e-05, 2.040300000000217e-05, 2.0430000000001836e-05, 2.043099999999784e-05, 2.0444000000001405e-05, 2.0415999999998796e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.041699999999827e-05, 2.0429999999998366e-05, 2.0458000000000975e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.043100000000131e-05, 2.0430000000001836e-05, 2.041699999999827e-05, 2.043100000000131e-05, 2.0443999999997936e-05, 2.0513999999999255e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.043100000000131e-05, 2.0401999999995757e-05, 2.043099999999437e-05, 2.0444000000001405e-05, 2.043100000000131e-05, 2.043099999999437e-05, 2.0430000000001836e-05, 2.043099999999437e-05, 2.040300000000217e-05, 2.041700000000174e-05, 2.0499999999999685e-05, 2.036099999999652e-05, 2.0415999999995327e-05]</msg>
<status status="PASS" starttime="20201115 22:00:01.190" endtime="20201115 22:00:01.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.185" endtime="20201115 22:00:01.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.195" endtime="20201115 22:00:01.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.198" endtime="20201115 22:00:01.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.196" endtime="20201115 22:00:01.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.193" endtime="20201115 22:00:01.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.820" endtime="20201115 22:00:01.219"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.223" endtime="20201115 22:00:01.219"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.222" endtime="20201115 22:00:01.219"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.221" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.230" endtime="20201115 22:00:01.259"></status>
</kw>
<msg timestamp="20201115 22:00:01.259" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.228" endtime="20201115 22:00:01.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.260" endtime="20201115 22:00:01.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.263" endtime="20201115 22:00:01.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.226" endtime="20201115 22:00:01.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.224" endtime="20201115 22:00:01.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.272" endtime="20201115 22:00:01.557"></status>
</kw>
<msg timestamp="20201115 22:00:01.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:01.271" endtime="20201115 22:00:01.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025138306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0251595, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:01.561" endtime="20201115 22:00:01.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.569" endtime="20201115 22:00:01.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.268" endtime="20201115 22:00:01.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.266" endtime="20201115 22:00:01.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.576" level="INFO">${RESULT} = [{'time': 0.0251595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1194000000002156e-05, 'source_diff': 2.1194000000002156e-05}, {'time': 0.025545681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.573" endtime="20201115 22:00:01.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.589" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.577" endtime="20201115 22:00:01.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.593" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.592" endtime="20201115 22:00:01.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.596" level="INFO">VALUE: [2.1194000000002156e-05, 2.118100000000206e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.1222000000001295e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.1112000000000214e-05, 2.1179999999999116e-05, 2.1236000000000865e-05, 2.1179999999999116e-05, 2.1166000000003016e-05, 2.116699999999902e-05, 2.1180000000002586e-05, 2.115299999999598e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.1222000000001295e-05, 2.116700000000249e-05, 2.112500000000378e-05, 2.119500000000163e-05, 2.1179999999995647e-05, 2.118100000000206e-05, 2.1180000000002586e-05, 2.1179999999995647e-05, 2.116700000000249e-05, 2.1179999999995647e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.1194000000002156e-05, 2.1166000000003016e-05, 2.1222000000001295e-05, 2.1194000000002156e-05, 2.116700000000249e-05, 2.1180000000002586e-05, 2.1180000000002586e-05, 2.118099999999512e-05, 2.1179999999995647e-05, 2.116699999999555e-05, 2.118100000000206e-05, 2.1180000000002586e-05, 2.115299999999598e-05, 2.1179999999995647e-05, 2.1193999999995217e-05, 2.119499999999469e-05, 2.115300000000292e-05, 2.116700000000249e-05]</msg>
<status status="PASS" starttime="20201115 22:00:01.595" endtime="20201115 22:00:01.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.590" endtime="20201115 22:00:01.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.599" endtime="20201115 22:00:01.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.602" endtime="20201115 22:00:01.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.601" endtime="20201115 22:00:01.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.597" endtime="20201115 22:00:01.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.222" endtime="20201115 22:00:01.623"></status>
</kw>
<msg timestamp="20201115 22:00:01.623" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.632" endtime="20201115 22:00:01.659"></status>
</kw>
<msg timestamp="20201115 22:00:01.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.630" endtime="20201115 22:00:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.666" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.661" endtime="20201115 22:00:01.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.668" endtime="20201115 22:00:01.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.628" endtime="20201115 22:00:01.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.626" endtime="20201115 22:00:01.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.678" endtime="20201115 22:00:01.972"></status>
</kw>
<msg timestamp="20201115 22:00:01.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.676" endtime="20201115 22:00:01.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021274014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.983" endtime="20201115 22:00:02.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.003" endtime="20201115 22:00:02.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.673" endtime="20201115 22:00:02.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.672" endtime="20201115 22:00:02.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.012" level="INFO">${RESULT} = [{'time': 0.021274014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.116700000000249e-05, 'source_diff': 2.116700000000249e-05}, {'time': 0.021667667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.008" endtime="20201115 22:00:02.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.029" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.014" endtime="20201115 22:00:02.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.035" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.034" endtime="20201115 22:00:02.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.039" level="INFO">VALUE: [2.116700000000249e-05, 2.119500000000163e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.1165999999999546e-05, 2.113899999999988e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.118100000000206e-05, 2.1193999999998686e-05, 2.1165999999999546e-05, 2.1151999999999976e-05, 2.1179999999999116e-05, 2.118099999999859e-05, 2.1221999999997826e-05, 2.115300000000292e-05, 2.112500000000031e-05, 2.116699999999902e-05, 2.1194000000002156e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1151999999996507e-05, 2.115299999999598e-05, 2.1166000000003016e-05, 2.119499999999469e-05, 2.1151999999996507e-05, 2.1180000000002586e-05, 2.116700000000249e-05, 2.115300000000292e-05, 2.118099999999512e-05, 2.116699999999555e-05, 2.115300000000292e-05, 2.1166000000003016e-05, 2.119500000000163e-05, 2.1166000000003016e-05, 2.111099999999727e-05, 2.118099999999512e-05, 2.118100000000206e-05, 2.1166000000003016e-05, 2.118100000000206e-05, 2.1166000000003016e-05, 2.1194000000002156e-05, 2.116700000000249e-05, 2.1236000000000865e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201115 22:00:02.037" endtime="20201115 22:00:02.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.030" endtime="20201115 22:00:02.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.042" endtime="20201115 22:00:02.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.047" endtime="20201115 22:00:02.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.045" endtime="20201115 22:00:02.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.041" endtime="20201115 22:00:02.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.624" endtime="20201115 22:00:02.069"></status>
</kw>
<msg timestamp="20201115 22:00:02.069" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.078" endtime="20201115 22:00:02.105"></status>
</kw>
<msg timestamp="20201115 22:00:02.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.076" endtime="20201115 22:00:02.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.107" endtime="20201115 22:00:02.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.109" endtime="20201115 22:00:02.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.073" endtime="20201115 22:00:02.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.071" endtime="20201115 22:00:02.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.119" endtime="20201115 22:00:02.404"></status>
</kw>
<msg timestamp="20201115 22:00:02.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.118" endtime="20201115 22:00:02.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.408" endtime="20201115 22:00:02.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.416" endtime="20201115 22:00:02.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.115" endtime="20201115 22:00:02.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.113" endtime="20201115 22:00:02.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.423" level="INFO">${RESULT} = [{'time': 0.022039389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.022421667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:02.419" endtime="20201115 22:00:02.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.436" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.424" endtime="20201115 22:00:02.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.440" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.439" endtime="20201115 22:00:02.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.443" level="INFO">VALUE: [2.1236000000000865e-05, 2.116699999999902e-05, 2.112500000000031e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1221999999997826e-05, 2.1165999999999546e-05, 2.116699999999902e-05, 2.1179999999999116e-05, 2.118099999999859e-05, 2.115299999999945e-05, 2.116700000000249e-05, 2.1165999999999546e-05, 2.111100000000074e-05, 2.1165999999999546e-05, 2.118100000000206e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.115299999999945e-05, 2.115299999999945e-05, 2.118099999999859e-05, 2.111100000000074e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.1236000000000865e-05, 2.1180000000002586e-05, 2.116699999999555e-05, 2.1193999999995217e-05, 2.1194000000002156e-05, 2.111099999999727e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.1166000000003016e-05, 2.1151999999996507e-05, 2.116700000000249e-05, 2.1165999999996077e-05, 2.116700000000249e-05, 2.113900000000335e-05, 2.118100000000206e-05, 2.116699999999555e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.116700000000249e-05, 2.111100000000421e-05, 2.112499999999684e-05, 2.1151999999996507e-05, 2.118100000000206e-05, 2.115299999999598e-05, 2.108300000000507e-05, 2.111099999999727e-05]</msg>
<status status="PASS" starttime="20201115 22:00:02.441" endtime="20201115 22:00:02.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.436" endtime="20201115 22:00:02.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.446" endtime="20201115 22:00:02.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.449" endtime="20201115 22:00:02.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.447" endtime="20201115 22:00:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.444" endtime="20201115 22:00:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.069" endtime="20201115 22:00:02.470"></status>
</kw>
<msg timestamp="20201115 22:00:02.470" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.479" endtime="20201115 22:00:02.506"></status>
</kw>
<msg timestamp="20201115 22:00:02.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.477" endtime="20201115 22:00:02.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.508" endtime="20201115 22:00:02.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.510" endtime="20201115 22:00:02.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.475" endtime="20201115 22:00:02.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.473" endtime="20201115 22:00:02.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.520" endtime="20201115 22:00:02.804"></status>
</kw>
<msg timestamp="20201115 22:00:02.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.519" endtime="20201115 22:00:02.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.809" endtime="20201115 22:00:02.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.816" endtime="20201115 22:00:02.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.516" endtime="20201115 22:00:02.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.514" endtime="20201115 22:00:02.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.823" level="INFO">${RESULT} = [{'time': 0.021707861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.116699999999902e-05, 'source_diff': 2.116699999999902e-05}, {'time': 0.022087458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.820" endtime="20201115 22:00:02.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.836" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.824" endtime="20201115 22:00:02.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.841" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.840" endtime="20201115 22:00:02.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.843" level="INFO">VALUE: [2.116699999999902e-05, 2.1179999999999116e-05, 2.118099999999859e-05, 2.119500000000163e-05, 2.1179999999999116e-05, 2.1165999999999546e-05, 2.115300000000292e-05, 2.115299999999945e-05, 2.1236000000000865e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.1151999999999976e-05, 2.1180000000002586e-05, 2.1165999999999546e-05, 2.113899999999988e-05, 2.1193999999998686e-05, 2.1165999999999546e-05, 2.116700000000249e-05, 2.118099999999859e-05, 2.118099999999859e-05, 2.1193999999998686e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.115299999999945e-05, 2.118099999999512e-05, 2.1235999999993926e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.119500000000163e-05, 2.113900000000335e-05, 2.1236000000000865e-05, 2.1194000000002156e-05, 2.119500000000163e-05, 2.10969999999977e-05, 2.1137999999996937e-05, 2.1165999999996077e-05, 2.118100000000206e-05, 2.116699999999555e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.1180000000002586e-05, 2.118100000000206e-05, 2.1236000000000865e-05, 2.1221999999994356e-05, 2.116699999999555e-05, 2.116700000000249e-05, 2.1165999999996077e-05, 2.116699999999555e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201115 22:00:02.842" endtime="20201115 22:00:02.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.837" endtime="20201115 22:00:02.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.846" endtime="20201115 22:00:02.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.850" endtime="20201115 22:00:02.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.849" endtime="20201115 22:00:02.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.845" endtime="20201115 22:00:02.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.471" endtime="20201115 22:00:02.871"></status>
</kw>
<msg timestamp="20201115 22:00:02.871" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.880" endtime="20201115 22:00:02.907"></status>
</kw>
<msg timestamp="20201115 22:00:02.908" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.878" endtime="20201115 22:00:02.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.909" endtime="20201115 22:00:02.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.911" endtime="20201115 22:00:02.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.876" endtime="20201115 22:00:02.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.874" endtime="20201115 22:00:02.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.922" endtime="20201115 22:00:03.208"></status>
</kw>
<msg timestamp="20201115 22:00:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:02.920" endtime="20201115 22:00:03.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:03.212" endtime="20201115 22:00:03.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.220" endtime="20201115 22:00:03.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.918" endtime="20201115 22:00:03.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.916" endtime="20201115 22:00:03.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.226" level="INFO">${RESULT} = [{'time': 0.0213945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1193999999998686e-05, 'source_diff': 2.1193999999998686e-05}, {'time': 0.021788347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.223" endtime="20201115 22:00:03.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.239" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.227" endtime="20201115 22:00:03.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.244" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:03.243" endtime="20201115 22:00:03.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.246" level="INFO">VALUE: [2.1193999999998686e-05, 2.1165999999999546e-05, 2.116699999999902e-05, 2.1193999999998686e-05, 2.1193999999998686e-05, 2.1179999999999116e-05, 2.116700000000249e-05, 2.1193999999998686e-05, 2.1208000000001725e-05, 2.1222000000001295e-05, 2.118099999999859e-05, 2.1179999999999116e-05, 2.116700000000249e-05, 2.115299999999945e-05, 2.1180000000002586e-05, 2.1151999999999976e-05, 2.118099999999859e-05, 2.118100000000206e-05, 2.1235999999997396e-05, 2.115300000000292e-05, 2.1180000000002586e-05, 2.1165999999999546e-05, 2.118100000000206e-05, 2.1208000000001725e-05, 2.1165999999999546e-05, 2.1194000000002156e-05, 2.1207999999994787e-05, 2.118099999999512e-05, 2.1236000000000865e-05, 2.115300000000292e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.10969999999977e-05, 2.1221999999994356e-05, 2.1165999999996077e-05, 2.1151999999996507e-05, 2.1180000000002586e-05, 2.1180000000002586e-05, 2.111099999999727e-05, 2.1165999999996077e-05, 2.1165999999996077e-05, 2.118100000000206e-05, 2.118099999999512e-05, 2.115299999999598e-05, 2.115300000000292e-05, 2.116700000000249e-05, 2.118099999999512e-05, 2.113899999999641e-05, 2.111099999999727e-05, 2.1165999999996077e-05]</msg>
<status status="PASS" starttime="20201115 22:00:03.245" endtime="20201115 22:00:03.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.240" endtime="20201115 22:00:03.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.250" endtime="20201115 22:00:03.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.253" endtime="20201115 22:00:03.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.252" endtime="20201115 22:00:03.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.248" endtime="20201115 22:00:03.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.872" endtime="20201115 22:00:03.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.220" endtime="20201115 22:00:03.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.220" endtime="20201115 22:00:03.274"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.276" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.285" endtime="20201115 22:00:03.315"></status>
</kw>
<msg timestamp="20201115 22:00:03.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.283" endtime="20201115 22:00:03.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.316" endtime="20201115 22:00:03.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.319" endtime="20201115 22:00:03.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.281" endtime="20201115 22:00:03.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.279" endtime="20201115 22:00:03.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.327" endtime="20201115 22:00:03.613"></status>
</kw>
<msg timestamp="20201115 22:00:03.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.326" endtime="20201115 22:00:03.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023611306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.617" endtime="20201115 22:00:03.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.625" endtime="20201115 22:00:03.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.323" endtime="20201115 22:00:03.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.322" endtime="20201115 22:00:03.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.631" level="INFO">${RESULT} = [{'time': 0.023611306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1999999999997716e-05, 'source_diff': 2.1999999999997716e-05}, {'time': 0.024048347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:03.628" endtime="20201115 22:00:03.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.644" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.632" endtime="20201115 22:00:03.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.649" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.648" endtime="20201115 22:00:03.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.652" level="INFO">VALUE: [2.1999999999997716e-05, 2.1916000000000296e-05, 2.191699999999977e-05, 2.19030000000002e-05, 2.1929999999999866e-05, 2.191699999999977e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2.1902000000000726e-05, 2.1916000000000296e-05, 2.19030000000002e-05, 2.1916000000000296e-05, 2.193099999999934e-05, 2.193099999999934e-05, 2.1916000000000296e-05, 2.1929999999999866e-05, 2.191700000000324e-05, 2.19030000000002e-05, 2.191700000000324e-05, 2.190299999999673e-05, 2.1929999999996397e-05, 2.1916000000003766e-05, 2.19169999999963e-05, 2.1915999999996827e-05, 2.191700000000324e-05, 2.191700000000324e-05, 2.1901999999997257e-05, 2.194500000000238e-05, 2.184699999999845e-05, 2.1915999999996827e-05, 2.194499999999544e-05, 2.1957999999995537e-05, 2.184699999999845e-05, 2.1902000000004196e-05, 2.19169999999963e-05, 2.19169999999963e-05, 2.193100000000281e-05, 2.19169999999963e-05, 2.1930000000003336e-05, 2.1916000000003766e-05, 2.187499999999759e-05, 2.1915999999996827e-05, 2.1902000000004196e-05, 2.1916000000003766e-05, 2.1929999999996397e-05, 2.1972000000002045e-05, 2.1958000000002476e-05, 2.193099999999587e-05, 2.186099999999802e-05, 2.1929999999996397e-05]</msg>
<status status="PASS" starttime="20201115 22:00:03.650" endtime="20201115 22:00:03.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.645" endtime="20201115 22:00:03.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.655" endtime="20201115 22:00:03.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.658" endtime="20201115 22:00:03.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.657" endtime="20201115 22:00:03.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.653" endtime="20201115 22:00:03.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.277" endtime="20201115 22:00:03.679"></status>
</kw>
<msg timestamp="20201115 22:00:03.679" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.688" endtime="20201115 22:00:03.718"></status>
</kw>
<msg timestamp="20201115 22:00:03.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.686" endtime="20201115 22:00:03.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.719" endtime="20201115 22:00:03.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.722" endtime="20201115 22:00:03.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.684" endtime="20201115 22:00:03.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.682" endtime="20201115 22:00:03.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.731" endtime="20201115 22:00:04.017"></status>
</kw>
<msg timestamp="20201115 22:00:04.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021348931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.730" endtime="20201115 22:00:04.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021348931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.021" endtime="20201115 22:00:04.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.029" endtime="20201115 22:00:04.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.727" endtime="20201115 22:00:04.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.726" endtime="20201115 22:00:04.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.037" level="INFO">${RESULT} = [{'time': 0.021370875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1943999999999436e-05, 'source_diff': 2.1943999999999436e-05}, {'time': 0.021803028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:04.033" endtime="20201115 22:00:04.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.050" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.038" endtime="20201115 22:00:04.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.055" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.054" endtime="20201115 22:00:04.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.057" level="INFO">VALUE: [2.1943999999999436e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1916000000000296e-05, 2.193099999999934e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.1902000000000726e-05, 2.19030000000002e-05, 2.1943999999999436e-05, 2.1929999999999866e-05, 2.1916000000000296e-05, 2.191700000000324e-05, 2.193099999999934e-05, 2.1929999999999866e-05, 2.19030000000002e-05, 2.193099999999934e-05, 2.1916000000000296e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1957999999999006e-05, 2.1930000000003336e-05, 2.19169999999963e-05, 2.1916000000003766e-05, 2.19169999999963e-05, 2.1930000000003336e-05, 2.1930000000003336e-05, 2.19169999999963e-05, 2.188899999999716e-05, 2.1944000000002906e-05, 2.1929999999996397e-05, 2.19169999999963e-05, 2.1944000000002906e-05, 2.1915999999996827e-05, 2.1930000000003336e-05, 2.191700000000324e-05, 2.191700000000324e-05, 2.1944000000002906e-05, 2.191700000000324e-05, 2.193100000000281e-05, 2.1916000000003766e-05, 2.1916000000003766e-05, 2.1902000000004196e-05, 2.188899999999716e-05, 2.191700000000324e-05, 2.1972000000002045e-05, 2.190299999999673e-05, 2.193099999999587e-05]</msg>
<status status="PASS" starttime="20201115 22:00:04.056" endtime="20201115 22:00:04.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.051" endtime="20201115 22:00:04.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.060" endtime="20201115 22:00:04.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.064" endtime="20201115 22:00:04.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.062" endtime="20201115 22:00:04.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.059" endtime="20201115 22:00:04.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.680" endtime="20201115 22:00:04.084"></status>
</kw>
<msg timestamp="20201115 22:00:04.085" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.093" endtime="20201115 22:00:04.123"></status>
</kw>
<msg timestamp="20201115 22:00:04.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.092" endtime="20201115 22:00:04.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.124" endtime="20201115 22:00:04.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.127" endtime="20201115 22:00:04.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.089" endtime="20201115 22:00:04.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.087" endtime="20201115 22:00:04.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.137" endtime="20201115 22:00:04.422"></status>
</kw>
<msg timestamp="20201115 22:00:04.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.135" endtime="20201115 22:00:04.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021371139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.426" endtime="20201115 22:00:04.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.434" endtime="20201115 22:00:04.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.133" endtime="20201115 22:00:04.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.131" endtime="20201115 22:00:04.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.440" level="INFO">${RESULT} = [{'time': 0.021371139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.194500000000238e-05, 'source_diff': 2.194500000000238e-05}, {'time': 0.021807958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.437" endtime="20201115 22:00:04.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.454" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.442" endtime="20201115 22:00:04.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.458" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.457" endtime="20201115 22:00:04.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.461" level="INFO">VALUE: [2.194500000000238e-05, 2.1901999999997257e-05, 2.193099999999934e-05, 2.1929999999999866e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1971999999998576e-05, 2.193100000000281e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.1916000000000296e-05, 2.1916000000000296e-05, 2.194499999999891e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.1986000000001615e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1902000000000726e-05, 2.1929999999999866e-05, 2.1986000000001615e-05, 2.190299999999673e-05, 2.191700000000324e-05, 2.193099999999587e-05, 2.193100000000281e-05, 2.191700000000324e-05, 2.193099999999587e-05, 2.193100000000281e-05, 2.191700000000324e-05, 2.188899999999716e-05, 2.1929999999996397e-05, 2.1943999999995967e-05, 2.194500000000238e-05, 2.194499999999544e-05, 2.19169999999963e-05, 2.1944000000002906e-05, 2.1929999999996397e-05, 2.19169999999963e-05, 2.19169999999963e-05, 2.190300000000367e-05, 2.193099999999587e-05, 2.1915999999996827e-05, 2.190300000000367e-05, 2.19169999999963e-05, 2.19169999999963e-05, 2.1986000000001615e-05, 2.1902000000004196e-05, 2.190300000000367e-05]</msg>
<status status="PASS" starttime="20201115 22:00:04.459" endtime="20201115 22:00:04.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.455" endtime="20201115 22:00:04.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.464" endtime="20201115 22:00:04.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.467" endtime="20201115 22:00:04.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.466" endtime="20201115 22:00:04.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.462" endtime="20201115 22:00:04.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.085" endtime="20201115 22:00:04.488"></status>
</kw>
<msg timestamp="20201115 22:00:04.488" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.497" endtime="20201115 22:00:04.527"></status>
</kw>
<msg timestamp="20201115 22:00:04.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.495" endtime="20201115 22:00:04.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.528" endtime="20201115 22:00:04.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.531" endtime="20201115 22:00:04.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.493" endtime="20201115 22:00:04.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.491" endtime="20201115 22:00:04.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.541" endtime="20201115 22:00:04.825"></status>
</kw>
<msg timestamp="20201115 22:00:04.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.540" endtime="20201115 22:00:04.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021379931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021401861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.829" endtime="20201115 22:00:04.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.838" endtime="20201115 22:00:04.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.537" endtime="20201115 22:00:04.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.536" endtime="20201115 22:00:04.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.844" level="INFO">${RESULT} = [{'time': 0.021401861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.021839986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:04.841" endtime="20201115 22:00:04.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.857" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.845" endtime="20201115 22:00:04.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.862" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.861" endtime="20201115 22:00:04.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.864" level="INFO">VALUE: [2.1929999999999866e-05, 2.1943999999999436e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.1929999999999866e-05, 2.183299999999888e-05, 2.184700000000192e-05, 2.191699999999977e-05, 2.1916000000000296e-05, 2.193099999999934e-05, 2.1943999999999436e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1916000000000296e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.193099999999934e-05, 2.191699999999977e-05, 2.187499999999759e-05, 2.193099999999587e-05, 2.1930000000003336e-05, 2.1915999999996827e-05, 2.1916000000003766e-05, 2.193100000000281e-05, 2.1915999999996827e-05, 2.1915999999996827e-05, 2.1929999999996397e-05, 2.1930000000003336e-05, 2.191700000000324e-05, 2.1916000000003766e-05, 2.190299999999673e-05, 2.190300000000367e-05, 2.191700000000324e-05, 2.1929999999996397e-05, 2.1916000000003766e-05, 2.1958000000002476e-05, 2.194499999999544e-05, 2.191700000000324e-05, 2.190300000000367e-05, 2.19169999999963e-05, 2.19169999999963e-05, 2.1929999999996397e-05, 2.193099999999587e-05, 2.191700000000324e-05, 2.193100000000281e-05, 2.18890000000041e-05]</msg>
<status status="PASS" starttime="20201115 22:00:04.863" endtime="20201115 22:00:04.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.858" endtime="20201115 22:00:04.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.867" endtime="20201115 22:00:04.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.871" endtime="20201115 22:00:04.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.869" endtime="20201115 22:00:04.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.866" endtime="20201115 22:00:04.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.489" endtime="20201115 22:00:04.891"></status>
</kw>
<msg timestamp="20201115 22:00:04.892" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.900" endtime="20201115 22:00:04.930"></status>
</kw>
<msg timestamp="20201115 22:00:04.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.899" endtime="20201115 22:00:04.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.932" endtime="20201115 22:00:04.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.934" endtime="20201115 22:00:04.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.896" endtime="20201115 22:00:04.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.894" endtime="20201115 22:00:04.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.944" endtime="20201115 22:00:05.230"></status>
</kw>
<msg timestamp="20201115 22:00:05.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:04.942" endtime="20201115 22:00:05.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02141075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:05.234" endtime="20201115 22:00:05.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.242" endtime="20201115 22:00:05.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.940" endtime="20201115 22:00:05.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.938" endtime="20201115 22:00:05.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.249" level="INFO">${RESULT} = [{'time': 0.021432722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1972000000002045e-05, 'source_diff': 2.1972000000002045e-05}, {'time': 0.021873278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:05.246" endtime="20201115 22:00:05.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.262" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.250" endtime="20201115 22:00:05.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.266" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:05.265" endtime="20201115 22:00:05.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.269" level="INFO">VALUE: [2.1972000000002045e-05, 2.1833999999998355e-05, 2.1929999999999866e-05, 2.193099999999934e-05, 2.1929999999999866e-05, 2.1916000000000296e-05, 2.193099999999934e-05, 2.1929999999999866e-05, 2.194499999999891e-05, 2.187500000000106e-05, 2.1916000000000296e-05, 2.195899999999848e-05, 2.191699999999977e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.191699999999977e-05, 2.1929999999999866e-05, 2.193099999999934e-05, 2.2014000000000755e-05, 2.193099999999934e-05, 2.187500000000106e-05, 2.1958000000002476e-05, 2.193099999999934e-05, 2.191700000000324e-05, 2.193099999999587e-05, 2.193099999999587e-05, 2.188899999999716e-05, 2.191700000000324e-05, 2.1915999999996827e-05, 2.198700000000109e-05, 2.193100000000281e-05, 2.193100000000281e-05, 2.1929999999996397e-05, 2.1916000000003766e-05, 2.190299999999673e-05, 2.191700000000324e-05, 2.19169999999963e-05, 2.191700000000324e-05, 2.1957999999995537e-05, 2.191700000000324e-05, 2.190300000000367e-05, 2.193099999999587e-05, 2.191700000000324e-05, 2.1944000000002906e-05, 2.191700000000324e-05, 2.193099999999587e-05, 2.1930000000003336e-05, 2.1930000000003336e-05, 2.193100000000281e-05, 2.19169999999963e-05]</msg>
<status status="PASS" starttime="20201115 22:00:05.268" endtime="20201115 22:00:05.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.263" endtime="20201115 22:00:05.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.272" endtime="20201115 22:00:05.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.275" endtime="20201115 22:00:05.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.274" endtime="20201115 22:00:05.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.270" endtime="20201115 22:00:05.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.892" endtime="20201115 22:00:05.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.275" endtime="20201115 22:00:05.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.274" endtime="20201115 22:00:05.296"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.299" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.307" endtime="20201115 22:00:05.340"></status>
</kw>
<msg timestamp="20201115 22:00:05.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.306" endtime="20201115 22:00:05.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.341" endtime="20201115 22:00:05.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.344" endtime="20201115 22:00:05.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.303" endtime="20201115 22:00:05.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.301" endtime="20201115 22:00:05.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.353" endtime="20201115 22:00:05.638"></status>
</kw>
<msg timestamp="20201115 22:00:05.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023648833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023671514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.351" endtime="20201115 22:00:05.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023648833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023671514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.642" endtime="20201115 22:00:05.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.650" endtime="20201115 22:00:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.349" endtime="20201115 22:00:05.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.347" endtime="20201115 22:00:05.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.656" level="INFO">${RESULT} = [{'time': 0.023671514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.268100000000009e-05, 'source_diff': 2.268100000000009e-05}, {'time': 0.024167903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.653" endtime="20201115 22:00:05.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.669" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.657" endtime="20201115 22:00:05.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.674" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.673" endtime="20201115 22:00:05.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.676" level="INFO">VALUE: [2.268100000000009e-05, 2.266700000000052e-05, 2.262499999999834e-05, 2.2680000000000616e-05, 2.262499999999834e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.2707999999999756e-05, 2.266699999999705e-05, 2.2680000000000616e-05, 2.2666000000001046e-05, 2.2666000000001046e-05, 2.2707999999999756e-05, 2.262500000000181e-05, 2.268100000000009e-05, 2.2680000000000616e-05, 2.266700000000399e-05, 2.2638000000005376e-05, 2.2679999999997147e-05, 2.266699999999705e-05, 2.265300000000442e-05, 2.2665999999997577e-05, 2.2666000000004516e-05, 2.266699999999705e-05, 2.27090000000027e-05, 2.268100000000356e-05, 2.265299999999748e-05, 2.268100000000356e-05, 2.266699999999705e-05, 2.269499999999619e-05, 2.266700000000399e-05, 2.266700000000399e-05, 2.266699999999705e-05, 2.2707999999996287e-05, 2.2708000000003226e-05, 2.265300000000442e-05, 2.2694000000003656e-05, 2.266700000000399e-05, 2.265300000000442e-05, 2.266700000000399e-05, 2.272300000000227e-05, 2.2680000000004086e-05, 2.258299999999963e-05, 2.269499999999619e-05, 2.2598000000005614e-05, 2.263899999999791e-05, 2.2680000000004086e-05, 2.266699999999705e-05, 2.2638000000005376e-05, 2.265300000000442e-05]</msg>
<status status="PASS" starttime="20201115 22:00:05.675" endtime="20201115 22:00:05.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.670" endtime="20201115 22:00:05.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.679" endtime="20201115 22:00:05.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.683" endtime="20201115 22:00:05.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.681" endtime="20201115 22:00:05.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.678" endtime="20201115 22:00:05.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.299" endtime="20201115 22:00:05.703"></status>
</kw>
<msg timestamp="20201115 22:00:05.704" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.712" endtime="20201115 22:00:05.744"></status>
</kw>
<msg timestamp="20201115 22:00:05.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.711" endtime="20201115 22:00:05.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.746" endtime="20201115 22:00:05.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.749" endtime="20201115 22:00:05.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.708" endtime="20201115 22:00:05.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.706" endtime="20201115 22:00:05.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.759" endtime="20201115 22:00:06.044"></status>
</kw>
<msg timestamp="20201115 22:00:06.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.757" endtime="20201115 22:00:06.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.048" endtime="20201115 22:00:06.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.056" endtime="20201115 22:00:06.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.755" endtime="20201115 22:00:06.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.753" endtime="20201115 22:00:06.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.063" level="INFO">${RESULT} = [{'time': 0.021321931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.273699999999837e-05, 'source_diff': 2.273699999999837e-05}, {'time': 0.021817903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.060" endtime="20201115 22:00:06.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.077" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.064" endtime="20201115 22:00:06.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.081" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.080" endtime="20201115 22:00:06.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.084" level="INFO">VALUE: [2.273699999999837e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.2665999999997577e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.2680000000000616e-05, 2.265300000000095e-05, 2.2666000000001046e-05, 2.266699999999705e-05, 2.261099999999877e-05, 2.266700000000052e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.2665999999997577e-05, 2.265299999999748e-05, 2.2665999999997577e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.265299999999748e-05, 2.258299999999963e-05, 2.266699999999705e-05, 2.2693999999996717e-05, 2.2666000000004516e-05, 2.268100000000356e-05, 2.25969999999992e-05, 2.266700000000399e-05, 2.268099999999662e-05, 2.2679999999997147e-05, 2.265299999999748e-05, 2.2693999999996717e-05, 2.265300000000442e-05, 2.263900000000485e-05, 2.266699999999705e-05, 2.2652000000004946e-05, 2.2666000000004516e-05, 2.265299999999748e-05, 2.2665999999997577e-05, 2.266699999999705e-05, 2.268099999999662e-05, 2.2694000000003656e-05, 2.266699999999705e-05, 2.263899999999791e-05, 2.261100000000571e-05, 2.2665999999997577e-05, 2.268100000000356e-05, 2.266700000000399e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:00:06.082" endtime="20201115 22:00:06.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.078" endtime="20201115 22:00:06.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.087" endtime="20201115 22:00:06.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.090" endtime="20201115 22:00:06.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.089" endtime="20201115 22:00:06.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.085" endtime="20201115 22:00:06.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.704" endtime="20201115 22:00:06.111"></status>
</kw>
<msg timestamp="20201115 22:00:06.111" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.120" endtime="20201115 22:00:06.152"></status>
</kw>
<msg timestamp="20201115 22:00:06.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.118" endtime="20201115 22:00:06.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.154" endtime="20201115 22:00:06.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.156" endtime="20201115 22:00:06.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.116" endtime="20201115 22:00:06.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.114" endtime="20201115 22:00:06.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.167" endtime="20201115 22:00:06.453"></status>
</kw>
<msg timestamp="20201115 22:00:06.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.166" endtime="20201115 22:00:06.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.457" endtime="20201115 22:00:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.465" endtime="20201115 22:00:06.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.163" endtime="20201115 22:00:06.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.161" endtime="20201115 22:00:06.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.471" level="INFO">${RESULT} = [{'time': 0.021821361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.022302764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.468" endtime="20201115 22:00:06.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.484" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.472" endtime="20201115 22:00:06.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.489" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.488" endtime="20201115 22:00:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.491" level="INFO">VALUE: [2.266700000000052e-05, 2.266700000000052e-05, 2.2652000000001477e-05, 2.269499999999966e-05, 2.263899999999791e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.259700000000267e-05, 2.265300000000095e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.2665999999997577e-05, 2.266700000000052e-05, 2.2666000000001046e-05, 2.2652000000001477e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.2749999999998466e-05, 2.2679999999997147e-05, 2.265300000000442e-05, 2.2679999999997147e-05, 2.266700000000399e-05, 2.263899999999791e-05, 2.2680000000004086e-05, 2.2680000000004086e-05, 2.2665999999997577e-05, 2.2708000000003226e-05, 2.268099999999662e-05, 2.2679999999997147e-05, 2.2665999999997577e-05, 2.265300000000442e-05, 2.268099999999662e-05, 2.266700000000399e-05, 2.269499999999619e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.2680000000004086e-05, 2.2666000000004516e-05, 2.2679999999997147e-05, 2.265299999999748e-05, 2.2679999999997147e-05, 2.2665999999997577e-05, 2.266700000000399e-05, 2.2665999999997577e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.266699999999705e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:00:06.490" endtime="20201115 22:00:06.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.485" endtime="20201115 22:00:06.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.494" endtime="20201115 22:00:06.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.498" endtime="20201115 22:00:06.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.496" endtime="20201115 22:00:06.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.493" endtime="20201115 22:00:06.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.112" endtime="20201115 22:00:06.519"></status>
</kw>
<msg timestamp="20201115 22:00:06.519" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.528" endtime="20201115 22:00:06.560"></status>
</kw>
<msg timestamp="20201115 22:00:06.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.526" endtime="20201115 22:00:06.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.561" endtime="20201115 22:00:06.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.564" endtime="20201115 22:00:06.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.524" endtime="20201115 22:00:06.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.522" endtime="20201115 22:00:06.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.574" endtime="20201115 22:00:06.859"></status>
</kw>
<msg timestamp="20201115 22:00:06.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.572" endtime="20201115 22:00:06.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.863" endtime="20201115 22:00:06.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.871" endtime="20201115 22:00:06.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.570" endtime="20201115 22:00:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.568" endtime="20201115 22:00:06.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.878" level="INFO">${RESULT} = [{'time': 0.021699403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.022183917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.875" endtime="20201115 22:00:06.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.891" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.879" endtime="20201115 22:00:06.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.896" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.895" endtime="20201115 22:00:06.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.898" level="INFO">VALUE: [2.266700000000052e-05, 2.266700000000052e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.265300000000095e-05, 2.2652000000001477e-05, 2.266699999999705e-05, 2.266700000000052e-05, 2.2680000000000616e-05, 2.2666000000001046e-05, 2.268100000000009e-05, 2.268099999999662e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.2722000000002796e-05, 2.265299999999748e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.268100000000009e-05, 2.2708000000003226e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.2652000000004946e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.266700000000399e-05, 2.266699999999705e-05, 2.265299999999748e-05, 2.265300000000442e-05, 2.2666000000004516e-05, 2.266700000000399e-05, 2.2666000000004516e-05, 2.266699999999705e-05, 2.266699999999705e-05, 2.2680000000004086e-05, 2.266699999999705e-05, 2.268100000000356e-05, 2.266700000000399e-05, 2.266699999999705e-05, 2.268099999999662e-05, 2.261099999999877e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.2651999999998007e-05, 2.268099999999662e-05, 2.265299999999748e-05, 2.2694000000003656e-05, 2.2665999999997577e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:00:06.897" endtime="20201115 22:00:06.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.892" endtime="20201115 22:00:06.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.902" endtime="20201115 22:00:06.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.912" endtime="20201115 22:00:06.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.910" endtime="20201115 22:00:06.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.900" endtime="20201115 22:00:06.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.520" endtime="20201115 22:00:06.932"></status>
</kw>
<msg timestamp="20201115 22:00:06.933" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.942" endtime="20201115 22:00:06.976"></status>
</kw>
<msg timestamp="20201115 22:00:06.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.940" endtime="20201115 22:00:06.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.979" endtime="20201115 22:00:06.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.984" endtime="20201115 22:00:06.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.937" endtime="20201115 22:00:06.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.935" endtime="20201115 22:00:06.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.006" endtime="20201115 22:00:07.300"></status>
</kw>
<msg timestamp="20201115 22:00:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.003" endtime="20201115 22:00:07.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.304" endtime="20201115 22:00:07.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.312" endtime="20201115 22:00:07.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.997" endtime="20201115 22:00:07.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.993" endtime="20201115 22:00:07.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.319" level="INFO">${RESULT} = [{'time': 0.021812861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2680000000000616e-05, 'source_diff': 2.2680000000000616e-05}, {'time': 0.0222955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.315" endtime="20201115 22:00:07.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.332" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.320" endtime="20201115 22:00:07.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.337" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:07.335" endtime="20201115 22:00:07.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.339" level="INFO">VALUE: [2.2680000000000616e-05, 2.268100000000009e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.2666000000001046e-05, 2.2680000000000616e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.263899999999791e-05, 2.265299999999748e-05, 2.268100000000009e-05, 2.2666000000001046e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.2665999999997577e-05, 2.263899999999791e-05, 2.2707999999999756e-05, 2.266700000000052e-05, 2.2651999999998007e-05, 2.2666000000004516e-05, 2.266700000000399e-05, 2.2693999999996717e-05, 2.263899999999791e-05, 2.2679999999997147e-05, 2.266699999999705e-05, 2.2680000000004086e-05, 2.2708000000003226e-05, 2.263899999999791e-05, 2.266700000000399e-05, 2.2693999999996717e-05, 2.2651999999998007e-05, 2.265300000000442e-05, 2.2680000000004086e-05, 2.265300000000442e-05, 2.2665999999997577e-05, 2.268099999999662e-05, 2.266699999999705e-05, 2.2652000000004946e-05, 2.268099999999662e-05, 2.2597999999998675e-05, 2.263899999999791e-05, 2.266699999999705e-05, 2.2665999999997577e-05, 2.266700000000399e-05, 2.263899999999791e-05, 2.266699999999705e-05, 2.268099999999662e-05, 2.25969999999992e-05]</msg>
<status status="PASS" starttime="20201115 22:00:07.338" endtime="20201115 22:00:07.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.333" endtime="20201115 22:00:07.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.343" endtime="20201115 22:00:07.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.346" endtime="20201115 22:00:07.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.345" endtime="20201115 22:00:07.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.341" endtime="20201115 22:00:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.933" endtime="20201115 22:00:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.298" endtime="20201115 22:00:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.297" endtime="20201115 22:00:07.367"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.370" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.378" endtime="20201115 22:00:07.413"></status>
</kw>
<msg timestamp="20201115 22:00:07.414" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.377" endtime="20201115 22:00:07.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.416" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.415" endtime="20201115 22:00:07.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.417" endtime="20201115 22:00:07.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.374" endtime="20201115 22:00:07.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.372" endtime="20201115 22:00:07.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.426" endtime="20201115 22:00:07.712"></status>
</kw>
<msg timestamp="20201115 22:00:07.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.425" endtime="20201115 22:00:07.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.716" endtime="20201115 22:00:07.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.724" endtime="20201115 22:00:07.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.422" endtime="20201115 22:00:07.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.421" endtime="20201115 22:00:07.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.731" level="INFO">${RESULT} = [{'time': 0.024125181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.348699999999912e-05, 'source_diff': 2.348699999999912e-05}, {'time': 0.024661819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.727" endtime="20201115 22:00:07.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.744" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.732" endtime="20201115 22:00:07.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.749" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.748" endtime="20201115 22:00:07.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.752" level="INFO">VALUE: [2.348699999999912e-05, 2.3416000000001796e-05, 2.34030000000017e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.3402000000002227e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.343100000000084e-05, 2.3416000000001796e-05, 2.34169999999978e-05, 2.3415999999998327e-05, 2.3401999999998757e-05, 2.3430000000004836e-05, 2.34169999999978e-05, 2.341700000000474e-05, 2.34169999999978e-05, 2.3416000000005266e-05, 2.338899999999866e-05, 2.3416000000005266e-05, 2.3429999999997897e-05, 2.34169999999978e-05, 2.3429999999997897e-05, 2.341700000000474e-05, 2.3401999999998757e-05, 2.3416000000005266e-05, 2.3429999999997897e-05, 2.340300000000517e-05, 2.3416000000005266e-05, 2.3429999999997897e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.343100000000431e-05, 2.341700000000474e-05, 2.3429999999997897e-05, 2.3401999999998757e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.344499999999694e-05, 2.3401999999998757e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.340299999999823e-05]</msg>
<status status="PASS" starttime="20201115 22:00:07.750" endtime="20201115 22:00:07.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.745" endtime="20201115 22:00:07.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.755" endtime="20201115 22:00:07.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.758" endtime="20201115 22:00:07.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.757" endtime="20201115 22:00:07.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.753" endtime="20201115 22:00:07.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.370" endtime="20201115 22:00:07.779"></status>
</kw>
<msg timestamp="20201115 22:00:07.779" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.788" endtime="20201115 22:00:07.823"></status>
</kw>
<msg timestamp="20201115 22:00:07.823" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.787" endtime="20201115 22:00:07.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.825" endtime="20201115 22:00:07.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.827" endtime="20201115 22:00:07.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.784" endtime="20201115 22:00:07.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.782" endtime="20201115 22:00:07.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.838" endtime="20201115 22:00:08.124"></status>
</kw>
<msg timestamp="20201115 22:00:08.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.836" endtime="20201115 22:00:08.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021574458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.128" endtime="20201115 22:00:08.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.136" endtime="20201115 22:00:08.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.834" endtime="20201115 22:00:08.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.832" endtime="20201115 22:00:08.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.143" level="INFO">${RESULT} = [{'time': 0.021597875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.34169999999978e-05, 'source_diff': 2.34169999999978e-05}, {'time': 0.022138625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:08.140" endtime="20201115 22:00:08.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.156" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.144" endtime="20201115 22:00:08.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.161" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.160" endtime="20201115 22:00:08.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.164" level="INFO">VALUE: [2.34169999999978e-05, 2.34169999999978e-05, 2.343100000000084e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.3500000000002685e-05, 2.3429999999997897e-05, 2.341700000000127e-05, 2.336099999999952e-05, 2.34169999999978e-05, 2.338900000000213e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.3430000000001366e-05, 2.341700000000127e-05, 2.3429999999997897e-05, 2.340299999999823e-05, 2.3429999999997897e-05, 2.343100000000431e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.341700000000474e-05, 2.3415999999998327e-05, 2.3401999999998757e-05, 2.333300000000038e-05, 2.343100000000431e-05, 2.3443999999997467e-05, 2.340299999999823e-05, 2.3430000000004836e-05, 2.340300000000517e-05, 2.341700000000474e-05, 2.340299999999823e-05, 2.336099999999952e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.34169999999978e-05, 2.3416000000005266e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.343099999999737e-05, 2.343099999999737e-05, 2.34169999999978e-05, 2.338899999999866e-05, 2.3458000000003976e-05, 2.340300000000517e-05, 2.341700000000474e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.162" endtime="20201115 22:00:08.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.158" endtime="20201115 22:00:08.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.167" endtime="20201115 22:00:08.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.170" endtime="20201115 22:00:08.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.169" endtime="20201115 22:00:08.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.165" endtime="20201115 22:00:08.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.780" endtime="20201115 22:00:08.191"></status>
</kw>
<msg timestamp="20201115 22:00:08.191" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.200" endtime="20201115 22:00:08.235"></status>
</kw>
<msg timestamp="20201115 22:00:08.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.199" endtime="20201115 22:00:08.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.237" endtime="20201115 22:00:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.239" endtime="20201115 22:00:08.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.196" endtime="20201115 22:00:08.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.194" endtime="20201115 22:00:08.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.249" endtime="20201115 22:00:08.535"></status>
</kw>
<msg timestamp="20201115 22:00:08.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.248" endtime="20201115 22:00:08.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.539" endtime="20201115 22:00:08.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.547" endtime="20201115 22:00:08.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.245" endtime="20201115 22:00:08.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.243" endtime="20201115 22:00:08.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.554" level="INFO">${RESULT} = [{'time': 0.021679069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3387999999999187e-05, 'source_diff': 2.3387999999999187e-05}, {'time': 0.02222575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:08.551" endtime="20201115 22:00:08.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.568" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.556" endtime="20201115 22:00:08.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.572" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.571" endtime="20201115 22:00:08.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.575" level="INFO">VALUE: [2.3387999999999187e-05, 2.338899999999866e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.337500000000256e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.34030000000017e-05, 2.3415999999998327e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.341700000000127e-05, 2.344499999999694e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.337499999999909e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.343100000000431e-05, 2.341700000000474e-05, 2.3429999999997897e-05, 2.336099999999952e-05, 2.3415999999998327e-05, 2.343100000000431e-05, 2.3430000000004836e-05, 2.341700000000474e-05, 2.337499999999909e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.334699999999995e-05, 2.3416000000005266e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.3457999999997037e-05, 2.3401999999998757e-05, 2.340299999999823e-05, 2.343099999999737e-05, 2.341700000000474e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.34169999999978e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.574" endtime="20201115 22:00:08.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.569" endtime="20201115 22:00:08.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.578" endtime="20201115 22:00:08.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.582" endtime="20201115 22:00:08.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.580" endtime="20201115 22:00:08.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.576" endtime="20201115 22:00:08.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.192" endtime="20201115 22:00:08.602"></status>
</kw>
<msg timestamp="20201115 22:00:08.603" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.611" endtime="20201115 22:00:08.646"></status>
</kw>
<msg timestamp="20201115 22:00:08.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.610" endtime="20201115 22:00:08.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.648" endtime="20201115 22:00:08.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.650" endtime="20201115 22:00:08.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.607" endtime="20201115 22:00:08.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.605" endtime="20201115 22:00:08.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.660" endtime="20201115 22:00:08.950"></status>
</kw>
<msg timestamp="20201115 22:00:08.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.659" endtime="20201115 22:00:08.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.954" endtime="20201115 22:00:08.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.963" endtime="20201115 22:00:08.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.656" endtime="20201115 22:00:08.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.655" endtime="20201115 22:00:08.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.969" level="INFO">${RESULT} = [{'time': 0.021676042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.337499999999909e-05, 'source_diff': 2.337499999999909e-05}, {'time': 0.022219306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.966" endtime="20201115 22:00:08.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.983" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.970" endtime="20201115 22:00:08.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.987" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.986" endtime="20201115 22:00:08.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.990" level="INFO">VALUE: [2.337499999999909e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.34169999999978e-05, 2.337499999999909e-05, 2.3416000000001796e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.336099999999952e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.336100000000299e-05, 2.338900000000213e-05, 2.3415999999998327e-05, 2.34030000000017e-05, 2.337499999999909e-05, 2.336099999999952e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.334699999999995e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.3429999999997897e-05, 2.3415999999998327e-05, 2.334699999999995e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.340300000000517e-05, 2.33890000000056e-05, 2.3471999999996607e-05, 2.3415999999998327e-05, 2.3486000000003115e-05, 2.343099999999737e-05, 2.341700000000474e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.3429999999997897e-05, 2.3415999999998327e-05, 2.340300000000517e-05, 2.3429999999997897e-05, 2.340299999999823e-05, 2.341700000000474e-05, 2.343100000000431e-05, 2.3415999999998327e-05, 2.3443999999997467e-05, 2.343100000000431e-05]</msg>
<status status="PASS" starttime="20201115 22:00:08.988" endtime="20201115 22:00:08.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.984" endtime="20201115 22:00:08.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.993" endtime="20201115 22:00:08.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.996" endtime="20201115 22:00:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.995" endtime="20201115 22:00:09.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.991" endtime="20201115 22:00:09.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.603" endtime="20201115 22:00:09.017"></status>
</kw>
<msg timestamp="20201115 22:00:09.017" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.026" endtime="20201115 22:00:09.061"></status>
</kw>
<msg timestamp="20201115 22:00:09.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.025" endtime="20201115 22:00:09.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.063" endtime="20201115 22:00:09.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.065" endtime="20201115 22:00:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.022" endtime="20201115 22:00:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.020" endtime="20201115 22:00:09.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.075" endtime="20201115 22:00:09.362"></status>
</kw>
<msg timestamp="20201115 22:00:09.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.074" endtime="20201115 22:00:09.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.366" endtime="20201115 22:00:09.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.375" endtime="20201115 22:00:09.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.071" endtime="20201115 22:00:09.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.069" endtime="20201115 22:00:09.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.381" level="INFO">${RESULT} = [{'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3416000000001796e-05, 'source_diff': 2.3416000000001796e-05}, {'time': 0.022280069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:09.378" endtime="20201115 22:00:09.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.395" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.382" endtime="20201115 22:00:09.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.399" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:09.398" endtime="20201115 22:00:09.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.402" level="INFO">VALUE: [2.3416000000001796e-05, 2.3387999999999187e-05, 2.3430000000001366e-05, 2.343100000000084e-05, 2.3415999999998327e-05, 2.3416000000001796e-05, 2.336099999999952e-05, 2.3429999999997897e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.344500000000041e-05, 2.343099999999737e-05, 2.341700000000127e-05, 2.3415999999998327e-05, 2.3402000000002227e-05, 2.338899999999866e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.343099999999737e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.3416000000005266e-05, 2.340300000000517e-05, 2.341700000000474e-05, 2.3415999999998327e-05, 2.343099999999737e-05, 2.343100000000431e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.341700000000474e-05, 2.340300000000517e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.33890000000056e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.3429999999997897e-05, 2.343099999999737e-05, 2.343099999999737e-05, 2.338899999999866e-05, 2.3457999999997037e-05, 2.341700000000474e-05, 2.340299999999823e-05, 2.3415999999998327e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.400" endtime="20201115 22:00:09.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.395" endtime="20201115 22:00:09.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.405" endtime="20201115 22:00:09.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.408" endtime="20201115 22:00:09.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.407" endtime="20201115 22:00:09.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.403" endtime="20201115 22:00:09.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.018" endtime="20201115 22:00:09.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.368" endtime="20201115 22:00:09.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.368" endtime="20201115 22:00:09.429"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.432" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.440" endtime="20201115 22:00:09.480"></status>
</kw>
<msg timestamp="20201115 22:00:09.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.439" endtime="20201115 22:00:09.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.481" endtime="20201115 22:00:09.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.484" endtime="20201115 22:00:09.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.436" endtime="20201115 22:00:09.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.434" endtime="20201115 22:00:09.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.493" endtime="20201115 22:00:09.778"></status>
</kw>
<msg timestamp="20201115 22:00:09.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025530361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.492" endtime="20201115 22:00:09.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025530361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025554514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.782" endtime="20201115 22:00:09.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.790" endtime="20201115 22:00:09.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.489" endtime="20201115 22:00:09.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.487" endtime="20201115 22:00:09.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.797" level="INFO">${RESULT} = [{'time': 0.025554514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.026155736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.794" endtime="20201115 22:00:09.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.810" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.798" endtime="20201115 22:00:09.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.815" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.814" endtime="20201115 22:00:09.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.818" level="INFO">VALUE: [2.415299999999898e-05, 2.4096999999997232e-05, 2.4111999999999745e-05, 2.4193999999998217e-05, 2.413899999999941e-05, 2.4222000000000826e-05, 2.418100000000159e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.4208000000001256e-05, 2.4193999999998217e-05, 2.4222000000004296e-05, 2.4222000000004296e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.4207999999997787e-05, 2.4137999999999937e-05, 2.411100000000027e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.4165999999999077e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.418100000000506e-05, 2.4151999999999507e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.4137999999999937e-05, 2.4235999999996927e-05, 2.4193999999998217e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.4137999999999937e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.419500000000463e-05, 2.416699999999855e-05, 2.415300000000592e-05, 2.415299999999898e-05, 2.4165999999999077e-05]</msg>
<status status="PASS" starttime="20201115 22:00:09.816" endtime="20201115 22:00:09.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.811" endtime="20201115 22:00:09.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.821" endtime="20201115 22:00:09.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.824" endtime="20201115 22:00:09.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.823" endtime="20201115 22:00:09.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.819" endtime="20201115 22:00:09.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.432" endtime="20201115 22:00:09.845"></status>
</kw>
<msg timestamp="20201115 22:00:09.845" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.854" endtime="20201115 22:00:09.892"></status>
</kw>
<msg timestamp="20201115 22:00:09.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.852" endtime="20201115 22:00:09.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.893" endtime="20201115 22:00:09.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.896" endtime="20201115 22:00:09.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.850" endtime="20201115 22:00:09.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.848" endtime="20201115 22:00:09.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.906" endtime="20201115 22:00:10.192"></status>
</kw>
<msg timestamp="20201115 22:00:10.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.905" endtime="20201115 22:00:10.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.196" endtime="20201115 22:00:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.204" endtime="20201115 22:00:10.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.902" endtime="20201115 22:00:10.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.900" endtime="20201115 22:00:10.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.211" level="INFO">${RESULT} = [{'time': 0.021792347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4165999999999077e-05, 'source_diff': 2.4165999999999077e-05}, {'time': 0.022394069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:10.208" endtime="20201115 22:00:10.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.225" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.212" endtime="20201115 22:00:10.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.229" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.228" endtime="20201115 22:00:10.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.232" level="INFO">VALUE: [2.4165999999999077e-05, 2.4151999999999507e-05, 2.416699999999855e-05, 2.413899999999941e-05, 2.416700000000202e-05, 2.412499999999984e-05, 2.416699999999855e-05, 2.4165999999999077e-05, 2.413900000000288e-05, 2.416700000000202e-05, 2.4222000000000826e-05, 2.418099999999812e-05, 2.4235999999996927e-05, 2.4222000000000826e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.418099999999812e-05, 2.418099999999812e-05, 2.418099999999812e-05, 2.411100000000027e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.415300000000592e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.4221999999997357e-05, 2.4179999999998647e-05, 2.4165999999999077e-05, 2.416699999999855e-05, 2.4137999999999937e-05, 2.420899999999726e-05, 2.418100000000506e-05, 2.416700000000549e-05, 2.4179999999998647e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.230" endtime="20201115 22:00:10.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.226" endtime="20201115 22:00:10.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.235" endtime="20201115 22:00:10.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.238" endtime="20201115 22:00:10.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.237" endtime="20201115 22:00:10.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.233" endtime="20201115 22:00:10.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.846" endtime="20201115 22:00:10.259"></status>
</kw>
<msg timestamp="20201115 22:00:10.259" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.269" endtime="20201115 22:00:10.306"></status>
</kw>
<msg timestamp="20201115 22:00:10.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.266" endtime="20201115 22:00:10.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.309" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.308" endtime="20201115 22:00:10.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.310" endtime="20201115 22:00:10.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.264" endtime="20201115 22:00:10.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.262" endtime="20201115 22:00:10.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.320" endtime="20201115 22:00:10.606"></status>
</kw>
<msg timestamp="20201115 22:00:10.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.319" endtime="20201115 22:00:10.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.610" endtime="20201115 22:00:10.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.618" endtime="20201115 22:00:10.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.316" endtime="20201115 22:00:10.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.314" endtime="20201115 22:00:10.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.625" level="INFO">${RESULT} = [{'time': 0.022186903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.416700000000202e-05, 'source_diff': 2.416700000000202e-05}, {'time': 0.022772139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.621" endtime="20201115 22:00:10.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.638" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.626" endtime="20201115 22:00:10.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.643" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.642" endtime="20201115 22:00:10.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.645" level="INFO">VALUE: [2.416700000000202e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.4180000000002116e-05, 2.412499999999984e-05, 2.419499999999769e-05, 2.415300000000245e-05, 2.416700000000202e-05, 2.415300000000245e-05, 2.416699999999855e-05, 2.416700000000202e-05, 2.418100000000159e-05, 2.416699999999855e-05, 2.416700000000202e-05, 2.416700000000202e-05, 2.4179999999998647e-05, 2.416699999999855e-05, 2.4165999999999077e-05, 2.413899999999941e-05, 2.416700000000549e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.415300000000592e-05, 2.4165999999999077e-05, 2.4165999999999077e-05, 2.416700000000549e-05, 2.4151999999999507e-05, 2.4166000000006016e-05, 2.416700000000549e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4180000000005586e-05, 2.416699999999855e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.418100000000506e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.418100000000506e-05, 2.408300000000113e-05, 2.413900000000635e-05]</msg>
<status status="PASS" starttime="20201115 22:00:10.644" endtime="20201115 22:00:10.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.639" endtime="20201115 22:00:10.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.648" endtime="20201115 22:00:10.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.652" endtime="20201115 22:00:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.650" endtime="20201115 22:00:10.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.647" endtime="20201115 22:00:10.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.260" endtime="20201115 22:00:10.672"></status>
</kw>
<msg timestamp="20201115 22:00:10.673" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.682" endtime="20201115 22:00:10.719"></status>
</kw>
<msg timestamp="20201115 22:00:10.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.680" endtime="20201115 22:00:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.721" endtime="20201115 22:00:10.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.723" endtime="20201115 22:00:10.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.678" endtime="20201115 22:00:10.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.676" endtime="20201115 22:00:10.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.733" endtime="20201115 22:00:11.019"></status>
</kw>
<msg timestamp="20201115 22:00:11.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.732" endtime="20201115 22:00:11.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.023" endtime="20201115 22:00:11.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.031" endtime="20201115 22:00:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.729" endtime="20201115 22:00:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.728" endtime="20201115 22:00:11.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.038" level="INFO">${RESULT} = [{'time': 0.022080917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.022676153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.034" endtime="20201115 22:00:11.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.051" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.039" endtime="20201115 22:00:11.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.055" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:11.054" endtime="20201115 22:00:11.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.058" level="INFO">VALUE: [2.415299999999898e-05, 2.415300000000245e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.415300000000245e-05, 2.4179999999998647e-05, 2.4151999999999507e-05, 2.418100000000159e-05, 2.416699999999855e-05, 2.416700000000202e-05, 2.415299999999898e-05, 2.415300000000245e-05, 2.418099999999812e-05, 2.412499999999984e-05, 2.416700000000202e-05, 2.4151999999999507e-05, 2.415299999999898e-05, 2.416700000000549e-05, 2.419499999999769e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4180000000005586e-05, 2.419500000000463e-05, 2.416700000000549e-05, 2.4137999999999937e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.4235999999996927e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4179999999998647e-05, 2.413899999999941e-05, 2.4166000000006016e-05, 2.415299999999898e-05, 2.416700000000549e-05, 2.4193999999998217e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.418099999999812e-05, 2.4179999999998647e-05, 2.418099999999812e-05, 2.415299999999898e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.056" endtime="20201115 22:00:11.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.052" endtime="20201115 22:00:11.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.061" endtime="20201115 22:00:11.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.065" endtime="20201115 22:00:11.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.063" endtime="20201115 22:00:11.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.059" endtime="20201115 22:00:11.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.674" endtime="20201115 22:00:11.085"></status>
</kw>
<msg timestamp="20201115 22:00:11.086" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.094" endtime="20201115 22:00:11.132"></status>
</kw>
<msg timestamp="20201115 22:00:11.132" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.093" endtime="20201115 22:00:11.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.135" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.133" endtime="20201115 22:00:11.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.136" endtime="20201115 22:00:11.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.090" endtime="20201115 22:00:11.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.088" endtime="20201115 22:00:11.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.148" endtime="20201115 22:00:11.450"></status>
</kw>
<msg timestamp="20201115 22:00:11.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.146" endtime="20201115 22:00:11.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.454" endtime="20201115 22:00:11.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.462" endtime="20201115 22:00:11.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.143" endtime="20201115 22:00:11.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.142" endtime="20201115 22:00:11.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.468" level="INFO">${RESULT} = [{'time': 0.021444542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.022041375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.465" endtime="20201115 22:00:11.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.482" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.469" endtime="20201115 22:00:11.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.487" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:11.486" endtime="20201115 22:00:11.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.489" level="INFO">VALUE: [2.415299999999898e-05, 2.413899999999941e-05, 2.416700000000202e-05, 2.416699999999855e-05, 2.415300000000245e-05, 2.4236000000000396e-05, 2.413899999999941e-05, 2.4179999999998647e-05, 2.4151999999999507e-05, 2.4180000000002116e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.4165999999999077e-05, 2.4165999999999077e-05, 2.415299999999898e-05, 2.416700000000202e-05, 2.415299999999898e-05, 2.418100000000506e-05, 2.4151999999999507e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.419500000000463e-05, 2.40970000000007e-05, 2.418099999999812e-05, 2.418099999999812e-05, 2.415300000000592e-05, 2.415300000000592e-05, 2.4165999999999077e-05, 2.4236000000003866e-05, 2.415299999999898e-05, 2.416699999999855e-05, 2.4193999999998217e-05, 2.415299999999898e-05, 2.416700000000549e-05, 2.413899999999941e-05, 2.4165999999999077e-05, 2.415300000000592e-05, 2.418099999999812e-05, 2.413899999999941e-05, 2.415299999999898e-05, 2.4151999999999507e-05, 2.411100000000027e-05, 2.4179999999998647e-05, 2.4165999999999077e-05, 2.418099999999812e-05, 2.4179999999998647e-05, 2.4165999999999077e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.488" endtime="20201115 22:00:11.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.483" endtime="20201115 22:00:11.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.493" endtime="20201115 22:00:11.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.496" endtime="20201115 22:00:11.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.495" endtime="20201115 22:00:11.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.491" endtime="20201115 22:00:11.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.086" endtime="20201115 22:00:11.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.431" endtime="20201115 22:00:11.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.430" endtime="20201115 22:00:11.517"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.520" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.528" endtime="20201115 22:00:11.568"></status>
</kw>
<msg timestamp="20201115 22:00:11.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.527" endtime="20201115 22:00:11.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.571" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.570" endtime="20201115 22:00:11.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.572" endtime="20201115 22:00:11.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.524" endtime="20201115 22:00:11.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.522" endtime="20201115 22:00:11.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.581" endtime="20201115 22:00:11.868"></status>
</kw>
<msg timestamp="20201115 22:00:11.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.580" endtime="20201115 22:00:11.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024034917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.872" endtime="20201115 22:00:11.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.880" endtime="20201115 22:00:11.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.577" endtime="20201115 22:00:11.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.576" endtime="20201115 22:00:11.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.886" level="INFO">${RESULT} = [{'time': 0.024059764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.024706611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.883" endtime="20201115 22:00:11.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.900" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.887" endtime="20201115 22:00:11.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.904" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.903" endtime="20201115 22:00:11.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.912" level="INFO">VALUE: [2.484700000000145e-05, 2.488900000000016e-05, 2.493100000000234e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.491700000000277e-05, 2.4846999999997982e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4902000000000257e-05, 2.490300000000667e-05, 2.493099999999887e-05, 2.49169999999993e-05, 2.4902000000000257e-05, 2.4930000000006336e-05, 2.488900000000016e-05, 2.4902000000000257e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.4943999999998967e-05, 2.4902000000000257e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.4943999999998967e-05, 2.490300000000667e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.493099999999887e-05, 2.49169999999993e-05, 2.4943999999998967e-05, 2.493100000000581e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.491700000000624e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.493099999999887e-05, 2.486100000000102e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201115 22:00:11.905" endtime="20201115 22:00:11.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.901" endtime="20201115 22:00:11.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.915" endtime="20201115 22:00:11.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.919" endtime="20201115 22:00:11.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.917" endtime="20201115 22:00:11.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.913" endtime="20201115 22:00:11.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.520" endtime="20201115 22:00:11.939"></status>
</kw>
<msg timestamp="20201115 22:00:11.940" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.948" endtime="20201115 22:00:11.989"></status>
</kw>
<msg timestamp="20201115 22:00:11.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.947" endtime="20201115 22:00:11.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.990" endtime="20201115 22:00:11.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.993" endtime="20201115 22:00:11.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.944" endtime="20201115 22:00:11.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.942" endtime="20201115 22:00:11.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.003" endtime="20201115 22:00:12.302"></status>
</kw>
<msg timestamp="20201115 22:00:12.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.001" endtime="20201115 22:00:12.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.306" endtime="20201115 22:00:12.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.314" endtime="20201115 22:00:12.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.999" endtime="20201115 22:00:12.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.997" endtime="20201115 22:00:12.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.321" level="INFO">${RESULT} = [{'time': 0.021729556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.49169999999993e-05, 'source_diff': 2.49169999999993e-05}, {'time': 0.022384306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:12.317" endtime="20201115 22:00:12.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.334" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.322" endtime="20201115 22:00:12.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.339" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.338" endtime="20201115 22:00:12.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.341" level="INFO">VALUE: [2.49169999999993e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.495899999999801e-05, 2.4902000000000257e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.487500000000059e-05, 2.4915999999999827e-05, 2.4915999999999827e-05, 2.488900000000016e-05, 2.4929999999999397e-05, 2.494500000000538e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.484700000000145e-05, 2.4971999999998107e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.4902000000000257e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.4915999999999827e-05, 2.484700000000145e-05, 2.49169999999993e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.340" endtime="20201115 22:00:12.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.335" endtime="20201115 22:00:12.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.344" endtime="20201115 22:00:12.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.348" endtime="20201115 22:00:12.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.346" endtime="20201115 22:00:12.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.343" endtime="20201115 22:00:12.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.940" endtime="20201115 22:00:12.368"></status>
</kw>
<msg timestamp="20201115 22:00:12.368" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.377" endtime="20201115 22:00:12.417"></status>
</kw>
<msg timestamp="20201115 22:00:12.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.376" endtime="20201115 22:00:12.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.419" endtime="20201115 22:00:12.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.421" endtime="20201115 22:00:12.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.373" endtime="20201115 22:00:12.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.371" endtime="20201115 22:00:12.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.431" endtime="20201115 22:00:12.717"></status>
</kw>
<msg timestamp="20201115 22:00:12.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.430" endtime="20201115 22:00:12.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021542139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.721" endtime="20201115 22:00:12.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.729" endtime="20201115 22:00:12.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.427" endtime="20201115 22:00:12.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.425" endtime="20201115 22:00:12.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.735" level="INFO">${RESULT} = [{'time': 0.021542139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.49169999999993e-05, 'source_diff': 2.49169999999993e-05}, {'time': 0.022192625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:12.732" endtime="20201115 22:00:12.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.749" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.737" endtime="20201115 22:00:12.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.753" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.752" endtime="20201115 22:00:12.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.756" level="INFO">VALUE: [2.49169999999993e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.491700000000277e-05, 2.493100000000234e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.4929999999999397e-05, 2.4929999999999397e-05, 2.4943999999998967e-05, 2.4834000000001355e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.49030000000032e-05, 2.487500000000059e-05, 2.4929999999999397e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.493099999999887e-05, 2.4902000000000257e-05, 2.4915999999999827e-05, 2.4957999999998537e-05, 2.486100000000102e-05, 2.49169999999993e-05, 2.4902000000000257e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4943999999998967e-05, 2.4972000000005046e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.486100000000102e-05, 2.49169999999993e-05, 2.4999999999997247e-05]</msg>
<status status="PASS" starttime="20201115 22:00:12.754" endtime="20201115 22:00:12.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.750" endtime="20201115 22:00:12.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.759" endtime="20201115 22:00:12.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.762" endtime="20201115 22:00:12.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.761" endtime="20201115 22:00:12.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.757" endtime="20201115 22:00:12.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.369" endtime="20201115 22:00:12.783"></status>
</kw>
<msg timestamp="20201115 22:00:12.783" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.792" endtime="20201115 22:00:12.832"></status>
</kw>
<msg timestamp="20201115 22:00:12.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.790" endtime="20201115 22:00:12.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.833" endtime="20201115 22:00:12.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.836" endtime="20201115 22:00:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.788" endtime="20201115 22:00:12.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.785" endtime="20201115 22:00:12.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.846" endtime="20201115 22:00:13.132"></status>
</kw>
<msg timestamp="20201115 22:00:13.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02153675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:12.845" endtime="20201115 22:00:13.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021511833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02153675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:13.136" endtime="20201115 22:00:13.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.145" endtime="20201115 22:00:13.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.842" endtime="20201115 22:00:13.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.841" endtime="20201115 22:00:13.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.151" level="INFO">${RESULT} = [{'time': 0.02153675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.49169999999993e-05, 'source_diff': 2.49169999999993e-05}, {'time': 0.022178444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:13.148" endtime="20201115 22:00:13.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.164" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.152" endtime="20201115 22:00:13.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.169" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:13.168" endtime="20201115 22:00:13.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.171" level="INFO">VALUE: [2.49169999999993e-05, 2.4915999999999827e-05, 2.49030000000032e-05, 2.4888000000000687e-05, 2.493100000000234e-05, 2.494500000000191e-05, 2.49169999999993e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.491700000000277e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.4902000000000257e-05, 2.490299999999973e-05, 2.491700000000624e-05, 2.491700000000624e-05, 2.4971999999998107e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.493100000000581e-05, 2.49169999999993e-05, 2.4888000000000687e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.4888000000000687e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.494500000000538e-05, 2.4915999999999827e-05, 2.491700000000624e-05, 2.49169999999993e-05, 2.4902000000000257e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.170" endtime="20201115 22:00:13.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.165" endtime="20201115 22:00:13.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.174" endtime="20201115 22:00:13.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.178" endtime="20201115 22:00:13.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.176" endtime="20201115 22:00:13.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.173" endtime="20201115 22:00:13.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.784" endtime="20201115 22:00:13.199"></status>
</kw>
<msg timestamp="20201115 22:00:13.199" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.208" endtime="20201115 22:00:13.248"></status>
</kw>
<msg timestamp="20201115 22:00:13.248" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.206" endtime="20201115 22:00:13.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.249" endtime="20201115 22:00:13.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.252" endtime="20201115 22:00:13.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.203" endtime="20201115 22:00:13.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.201" endtime="20201115 22:00:13.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.262" endtime="20201115 22:00:13.547"></status>
</kw>
<msg timestamp="20201115 22:00:13.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.260" endtime="20201115 22:00:13.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.551" endtime="20201115 22:00:13.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.559" endtime="20201115 22:00:13.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.258" endtime="20201115 22:00:13.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.256" endtime="20201115 22:00:13.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.566" level="INFO">${RESULT} = [{'time': 0.021863222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.488900000000016e-05, 'source_diff': 2.488900000000016e-05}, {'time': 0.022502778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.562" endtime="20201115 22:00:13.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.579" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.567" endtime="20201115 22:00:13.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.583" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:13.582" endtime="20201115 22:00:13.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.586" level="INFO">VALUE: [2.488900000000016e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.493100000000234e-05, 2.4915999999999827e-05, 2.490299999999973e-05, 2.49030000000032e-05, 2.490299999999973e-05, 2.493099999999887e-05, 2.486100000000102e-05, 2.49169999999993e-05, 2.493099999999887e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.486100000000102e-05, 2.49169999999993e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.4957999999998537e-05, 2.4915999999999827e-05, 2.4902000000000257e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.490300000000667e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.4915999999999827e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.493100000000581e-05, 2.4929999999999397e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.493099999999887e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.49169999999993e-05]</msg>
<status status="PASS" starttime="20201115 22:00:13.584" endtime="20201115 22:00:13.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.580" endtime="20201115 22:00:13.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.589" endtime="20201115 22:00:13.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.592" endtime="20201115 22:00:13.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.591" endtime="20201115 22:00:13.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.587" endtime="20201115 22:00:13.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.199" endtime="20201115 22:00:13.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.518" endtime="20201115 22:00:13.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.518" endtime="20201115 22:00:13.613"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.615" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.624" endtime="20201115 22:00:13.667"></status>
</kw>
<msg timestamp="20201115 22:00:13.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.622" endtime="20201115 22:00:13.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.668" endtime="20201115 22:00:13.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.671" endtime="20201115 22:00:13.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.620" endtime="20201115 22:00:13.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.618" endtime="20201115 22:00:13.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.680" endtime="20201115 22:00:13.965"></status>
</kw>
<msg timestamp="20201115 22:00:13.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023825014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.679" endtime="20201115 22:00:13.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023825014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.969" endtime="20201115 22:00:13.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.977" endtime="20201115 22:00:13.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.676" endtime="20201115 22:00:13.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.674" endtime="20201115 22:00:13.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.984" level="INFO">${RESULT} = [{'time': 0.023825014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.565299999999701e-05, 'source_diff': 2.565299999999701e-05}, {'time': 0.024516167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.980" endtime="20201115 22:00:13.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.997" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.985" endtime="20201115 22:00:13.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.001" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.000" endtime="20201115 22:00:14.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.004" level="INFO">VALUE: [2.565299999999701e-05, 2.5624999999997872e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.569499999999919e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.5652000000001007e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.562500000000134e-05, 2.568099999999962e-05, 2.5680000000000147e-05, 2.566700000000005e-05, 2.5652999999993542e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.5680000000000147e-05, 2.563900000000091e-05, 2.563900000000091e-05, 2.5707999999999287e-05, 2.5666000000000577e-05, 2.566599999999364e-05, 2.563900000000091e-05, 2.5721999999998857e-05, 2.566599999999364e-05, 2.566700000000005e-05, 2.561100000000177e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5652999999993542e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.563900000000091e-05, 2.568099999999962e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.566599999999364e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.002" endtime="20201115 22:00:14.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.998" endtime="20201115 22:00:14.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.007" endtime="20201115 22:00:14.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.010" endtime="20201115 22:00:14.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.009" endtime="20201115 22:00:14.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.005" endtime="20201115 22:00:14.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.616" endtime="20201115 22:00:14.031"></status>
</kw>
<msg timestamp="20201115 22:00:14.031" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.040" endtime="20201115 22:00:14.083"></status>
</kw>
<msg timestamp="20201115 22:00:14.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.038" endtime="20201115 22:00:14.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.084" endtime="20201115 22:00:14.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.087" endtime="20201115 22:00:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.036" endtime="20201115 22:00:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.034" endtime="20201115 22:00:14.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.097" endtime="20201115 22:00:14.391"></status>
</kw>
<msg timestamp="20201115 22:00:14.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.095" endtime="20201115 22:00:14.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.400" endtime="20201115 22:00:14.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.418" endtime="20201115 22:00:14.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.093" endtime="20201115 22:00:14.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.091" endtime="20201115 22:00:14.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.432" level="INFO">${RESULT} = [{'time': 0.021532528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.022224306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.425" endtime="20201115 22:00:14.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.449" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.434" endtime="20201115 22:00:14.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.453" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.452" endtime="20201115 22:00:14.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.456" level="INFO">VALUE: [2.568099999999962e-05, 2.568099999999962e-05, 2.558300000000263e-05, 2.565300000000048e-05, 2.568099999999962e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5680000000000147e-05, 2.566700000000005e-05, 2.5651999999997538e-05, 2.568099999999962e-05, 2.5665999999997108e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.565199999999407e-05, 2.5666000000000577e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.5652000000001007e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5652000000001007e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.562500000000134e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.563900000000091e-05, 2.5652000000001007e-05, 2.5652000000001007e-05, 2.562500000000134e-05, 2.568099999999962e-05, 2.565300000000048e-05, 2.5693999999999717e-05, 2.565300000000048e-05, 2.5652000000001007e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.454" endtime="20201115 22:00:14.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.450" endtime="20201115 22:00:14.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.459" endtime="20201115 22:00:14.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.462" endtime="20201115 22:00:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.461" endtime="20201115 22:00:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.457" endtime="20201115 22:00:14.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.032" endtime="20201115 22:00:14.483"></status>
</kw>
<msg timestamp="20201115 22:00:14.483" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.492" endtime="20201115 22:00:14.535"></status>
</kw>
<msg timestamp="20201115 22:00:14.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.490" endtime="20201115 22:00:14.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.537" endtime="20201115 22:00:14.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.539" endtime="20201115 22:00:14.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.488" endtime="20201115 22:00:14.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.486" endtime="20201115 22:00:14.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.550" endtime="20201115 22:00:14.834"></status>
</kw>
<msg timestamp="20201115 22:00:14.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:14.549" endtime="20201115 22:00:14.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:14.838" endtime="20201115 22:00:14.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.846" endtime="20201115 22:00:14.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.546" endtime="20201115 22:00:14.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.544" endtime="20201115 22:00:14.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.852" level="INFO">${RESULT} = [{'time': 0.0220945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.022784847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:14.849" endtime="20201115 22:00:14.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.865" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.853" endtime="20201115 22:00:14.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.870" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.869" endtime="20201115 22:00:14.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.872" level="INFO">VALUE: [2.566700000000005e-05, 2.5707999999999287e-05, 2.563899999999744e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5665999999997108e-05, 2.565300000000048e-05, 2.5666000000000577e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.5666000000000577e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.5666000000000577e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.568099999999962e-05, 2.568099999999962e-05, 2.5652000000001007e-05, 2.568099999999962e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5638000000001437e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5680000000000147e-05, 2.5652000000001007e-05, 2.5652000000001007e-05, 2.566700000000005e-05, 2.563900000000091e-05, 2.5652999999993542e-05, 2.566700000000005e-05, 2.5610999999994832e-05, 2.563900000000091e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.563900000000091e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5638999999993972e-05, 2.566700000000005e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.558300000000263e-05, 2.568099999999962e-05, 2.562500000000134e-05]</msg>
<status status="PASS" starttime="20201115 22:00:14.871" endtime="20201115 22:00:14.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.866" endtime="20201115 22:00:14.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.875" endtime="20201115 22:00:14.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.879" endtime="20201115 22:00:14.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.877" endtime="20201115 22:00:14.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.874" endtime="20201115 22:00:14.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.484" endtime="20201115 22:00:14.899"></status>
</kw>
<msg timestamp="20201115 22:00:14.900" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.909" endtime="20201115 22:00:14.951"></status>
</kw>
<msg timestamp="20201115 22:00:14.952" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.907" endtime="20201115 22:00:14.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.953" endtime="20201115 22:00:14.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.955" endtime="20201115 22:00:14.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.905" endtime="20201115 22:00:14.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.902" endtime="20201115 22:00:14.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.965" endtime="20201115 22:00:15.264"></status>
</kw>
<msg timestamp="20201115 22:00:15.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.964" endtime="20201115 22:00:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.268" endtime="20201115 22:00:15.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.276" endtime="20201115 22:00:15.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.961" endtime="20201115 22:00:15.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.960" endtime="20201115 22:00:15.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.282" level="INFO">${RESULT} = [{'time': 0.021934722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5680000000000147e-05, 'source_diff': 2.5680000000000147e-05}, {'time': 0.022627167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:15.279" endtime="20201115 22:00:15.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.296" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.283" endtime="20201115 22:00:15.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.300" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:15.299" endtime="20201115 22:00:15.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.303" level="INFO">VALUE: [2.5680000000000147e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5624999999997872e-05, 2.5666000000000577e-05, 2.5652000000001007e-05, 2.5665999999997108e-05, 2.5693999999999717e-05, 2.563900000000091e-05, 2.563899999999744e-05, 2.565300000000048e-05, 2.563900000000091e-05, 2.566700000000005e-05, 2.569499999999919e-05, 2.5679999999993208e-05, 2.563900000000091e-05, 2.562500000000134e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.5652999999993542e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.568099999999962e-05, 2.5666000000000577e-05, 2.55970000000022e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.5624999999994402e-05, 2.565300000000048e-05, 2.568099999999962e-05, 2.5666000000000577e-05, 2.5666000000000577e-05, 2.5680000000000147e-05, 2.5652000000001007e-05, 2.568099999999962e-05, 2.565300000000048e-05, 2.5666000000000577e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5666000000000577e-05, 2.5652000000001007e-05, 2.566700000000005e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.301" endtime="20201115 22:00:15.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.297" endtime="20201115 22:00:15.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.306" endtime="20201115 22:00:15.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.310" endtime="20201115 22:00:15.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.308" endtime="20201115 22:00:15.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.304" endtime="20201115 22:00:15.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.900" endtime="20201115 22:00:15.330"></status>
</kw>
<msg timestamp="20201115 22:00:15.330" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.339" endtime="20201115 22:00:15.382"></status>
</kw>
<msg timestamp="20201115 22:00:15.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.338" endtime="20201115 22:00:15.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.385" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.383" endtime="20201115 22:00:15.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.386" endtime="20201115 22:00:15.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.335" endtime="20201115 22:00:15.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.333" endtime="20201115 22:00:15.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.396" endtime="20201115 22:00:15.680"></status>
</kw>
<msg timestamp="20201115 22:00:15.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02154675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.394" endtime="20201115 22:00:15.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02154675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:15.684" endtime="20201115 22:00:15.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.692" endtime="20201115 22:00:15.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.392" endtime="20201115 22:00:15.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.390" endtime="20201115 22:00:15.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.699" level="INFO">${RESULT} = [{'time': 0.021572431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.022272056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.695" endtime="20201115 22:00:15.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.700" endtime="20201115 22:00:15.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.716" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:15.715" endtime="20201115 22:00:15.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.719" level="INFO">VALUE: [2.568099999999962e-05, 2.565299999999701e-05, 2.565299999999701e-05, 2.5750000000001466e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.568100000000309e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5652000000001007e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.566700000000005e-05, 2.565199999999407e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.5666000000000577e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.561100000000177e-05, 2.5598000000001675e-05, 2.562500000000134e-05, 2.566700000000005e-05, 2.5652000000001007e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5680000000000147e-05, 2.566599999999364e-05, 2.5666000000000577e-05, 2.5680000000000147e-05, 2.563900000000091e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5652000000001007e-05, 2.5652999999993542e-05, 2.565300000000048e-05, 2.5666000000000577e-05, 2.566700000000005e-05, 2.568099999999962e-05, 2.563900000000091e-05, 2.5680000000000147e-05, 2.5666999999993112e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.566700000000005e-05]</msg>
<status status="PASS" starttime="20201115 22:00:15.717" endtime="20201115 22:00:15.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.713" endtime="20201115 22:00:15.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.722" endtime="20201115 22:00:15.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.726" endtime="20201115 22:00:15.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.724" endtime="20201115 22:00:15.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.721" endtime="20201115 22:00:15.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.331" endtime="20201115 22:00:15.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.614" endtime="20201115 22:00:15.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.613" endtime="20201115 22:00:15.747"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.749" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.757" endtime="20201115 22:00:15.803"></status>
</kw>
<msg timestamp="20201115 22:00:15.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.756" endtime="20201115 22:00:15.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.805" endtime="20201115 22:00:15.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.807" endtime="20201115 22:00:15.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.753" endtime="20201115 22:00:15.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.751" endtime="20201115 22:00:15.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.816" endtime="20201115 22:00:16.101"></status>
</kw>
<msg timestamp="20201115 22:00:16.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023935583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023961972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.815" endtime="20201115 22:00:16.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023935583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023961972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.105" endtime="20201115 22:00:16.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.113" endtime="20201115 22:00:16.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.812" endtime="20201115 22:00:16.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.810" endtime="20201115 22:00:16.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.120" level="INFO">${RESULT} = [{'time': 0.023961972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.638900000000166e-05, 'source_diff': 2.638900000000166e-05}, {'time': 0.024708972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.117" endtime="20201115 22:00:16.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.133" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.121" endtime="20201115 22:00:16.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.137" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.136" endtime="20201115 22:00:16.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.140" level="INFO">VALUE: [2.638900000000166e-05, 2.640299999999776e-05, 2.640299999999776e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6360999999999052e-05, 2.64170000000008e-05, 2.6402000000001757e-05, 2.640299999999776e-05, 2.6401999999998288e-05, 2.6485999999999177e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.640300000000123e-05, 2.6402999999994292e-05, 2.6430000000000897e-05, 2.6416000000001327e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6388000000002187e-05, 2.64170000000008e-05, 2.6402000000001757e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.643100000000037e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.6402000000001757e-05, 2.6416000000001327e-05, 2.6388999999994722e-05, 2.6499999999998747e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.6444000000000467e-05, 2.640199999999482e-05, 2.64170000000008e-05, 2.638900000000166e-05, 2.64170000000008e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.139" endtime="20201115 22:00:16.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.134" endtime="20201115 22:00:16.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.143" endtime="20201115 22:00:16.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.147" endtime="20201115 22:00:16.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.145" endtime="20201115 22:00:16.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.142" endtime="20201115 22:00:16.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.749" endtime="20201115 22:00:16.168"></status>
</kw>
<msg timestamp="20201115 22:00:16.168" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.176" endtime="20201115 22:00:16.222"></status>
</kw>
<msg timestamp="20201115 22:00:16.223" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.175" endtime="20201115 22:00:16.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.225" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.224" endtime="20201115 22:00:16.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.226" endtime="20201115 22:00:16.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.172" endtime="20201115 22:00:16.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.170" endtime="20201115 22:00:16.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.237" endtime="20201115 22:00:16.523"></status>
</kw>
<msg timestamp="20201115 22:00:16.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.235" endtime="20201115 22:00:16.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.527" endtime="20201115 22:00:16.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.535" endtime="20201115 22:00:16.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.233" endtime="20201115 22:00:16.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.231" endtime="20201115 22:00:16.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.542" level="INFO">${RESULT} = [{'time': 0.021718653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.022480333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:16.539" endtime="20201115 22:00:16.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.555" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.543" endtime="20201115 22:00:16.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.560" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.559" endtime="20201115 22:00:16.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.562" level="INFO">VALUE: [2.64170000000008e-05, 2.6416000000001327e-05, 2.638899999999819e-05, 2.6416000000001327e-05, 2.644499999999994e-05, 2.640299999999776e-05, 2.640299999999776e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.641699999999733e-05, 2.638900000000166e-05, 2.6360999999999052e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.6388999999994722e-05, 2.638900000000166e-05, 2.6430000000000897e-05, 2.6388999999994722e-05, 2.644499999999994e-05, 2.640300000000123e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.6388999999994722e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.64170000000008e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.637500000000209e-05, 2.64170000000008e-05, 2.637500000000209e-05, 2.6402000000001757e-05, 2.6402999999994292e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6388999999994722e-05, 2.6402000000001757e-05, 2.64170000000008e-05, 2.645899999999951e-05, 2.64170000000008e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6374999999995152e-05, 2.64170000000008e-05, 2.6402000000001757e-05, 2.641599999999439e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.561" endtime="20201115 22:00:16.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.556" endtime="20201115 22:00:16.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.565" endtime="20201115 22:00:16.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.569" endtime="20201115 22:00:16.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.567" endtime="20201115 22:00:16.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.564" endtime="20201115 22:00:16.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.168" endtime="20201115 22:00:16.589"></status>
</kw>
<msg timestamp="20201115 22:00:16.590" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.598" endtime="20201115 22:00:16.644"></status>
</kw>
<msg timestamp="20201115 22:00:16.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.597" endtime="20201115 22:00:16.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.645" endtime="20201115 22:00:16.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.648" endtime="20201115 22:00:16.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.594" endtime="20201115 22:00:16.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.592" endtime="20201115 22:00:16.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.658" endtime="20201115 22:00:16.956"></status>
</kw>
<msg timestamp="20201115 22:00:16.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.656" endtime="20201115 22:00:16.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.960" endtime="20201115 22:00:16.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.968" endtime="20201115 22:00:16.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.654" endtime="20201115 22:00:16.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.652" endtime="20201115 22:00:16.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.975" level="INFO">${RESULT} = [{'time': 0.021605278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.64309999999969e-05, 'source_diff': 2.64309999999969e-05}, {'time': 0.022365736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:16.971" endtime="20201115 22:00:16.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.994" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.982" endtime="20201115 22:00:16.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.998" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.997" endtime="20201115 22:00:16.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.001" level="INFO">VALUE: [2.64309999999969e-05, 2.6430000000000897e-05, 2.6416000000001327e-05, 2.640300000000123e-05, 2.640299999999776e-05, 2.64170000000008e-05, 2.6401999999998288e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6360999999999052e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.6458000000000037e-05, 2.6347999999995486e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.637500000000209e-05, 2.640300000000123e-05, 2.6402000000001757e-05, 2.643100000000037e-05, 2.6402999999994292e-05, 2.640199999999482e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.6430000000000897e-05, 2.636100000000252e-05, 2.638900000000166e-05, 2.64170000000008e-05, 2.633300000000338e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.641599999999439e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.6416999999993862e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.636100000000252e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.641599999999439e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.640300000000123e-05]</msg>
<status status="PASS" starttime="20201115 22:00:16.999" endtime="20201115 22:00:17.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.995" endtime="20201115 22:00:17.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.004" endtime="20201115 22:00:17.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.007" endtime="20201115 22:00:17.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.006" endtime="20201115 22:00:17.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.002" endtime="20201115 22:00:17.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.590" endtime="20201115 22:00:17.028"></status>
</kw>
<msg timestamp="20201115 22:00:17.028" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.037" endtime="20201115 22:00:17.082"></status>
</kw>
<msg timestamp="20201115 22:00:17.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.035" endtime="20201115 22:00:17.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.084" endtime="20201115 22:00:17.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.086" endtime="20201115 22:00:17.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.033" endtime="20201115 22:00:17.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.031" endtime="20201115 22:00:17.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.096" endtime="20201115 22:00:17.381"></status>
</kw>
<msg timestamp="20201115 22:00:17.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.095" endtime="20201115 22:00:17.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.385" endtime="20201115 22:00:17.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.394" endtime="20201115 22:00:17.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.092" endtime="20201115 22:00:17.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.091" endtime="20201115 22:00:17.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.400" level="INFO">${RESULT} = [{'time': 0.021635264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.022391986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:17.397" endtime="20201115 22:00:17.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.413" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.401" endtime="20201115 22:00:17.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.418" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:17.417" endtime="20201115 22:00:17.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.420" level="INFO">VALUE: [2.64170000000008e-05, 2.64170000000008e-05, 2.643100000000037e-05, 2.6347999999998956e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.6472000000003076e-05, 2.641699999999733e-05, 2.6401999999998288e-05, 2.638899999999819e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.6332999999996443e-05, 2.640300000000123e-05, 2.6430000000000897e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6458000000000037e-05, 2.6402999999994292e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.6361999999995056e-05, 2.6402999999994292e-05, 2.640199999999482e-05, 2.6416999999993862e-05, 2.644499999999994e-05, 2.6402000000001757e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.638900000000166e-05, 2.6332999999996443e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.638900000000166e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.636100000000252e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.419" endtime="20201115 22:00:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.414" endtime="20201115 22:00:17.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.423" endtime="20201115 22:00:17.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.427" endtime="20201115 22:00:17.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.425" endtime="20201115 22:00:17.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.422" endtime="20201115 22:00:17.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.029" endtime="20201115 22:00:17.448"></status>
</kw>
<msg timestamp="20201115 22:00:17.448" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.456" endtime="20201115 22:00:17.502"></status>
</kw>
<msg timestamp="20201115 22:00:17.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.455" endtime="20201115 22:00:17.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.503" endtime="20201115 22:00:17.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.506" endtime="20201115 22:00:17.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.452" endtime="20201115 22:00:17.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.450" endtime="20201115 22:00:17.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.516" endtime="20201115 22:00:17.801"></status>
</kw>
<msg timestamp="20201115 22:00:17.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696403, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:17.514" endtime="20201115 22:00:17.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696403, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:17.806" endtime="20201115 22:00:17.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.814" endtime="20201115 22:00:17.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.512" endtime="20201115 22:00:17.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.510" endtime="20201115 22:00:17.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.820" level="INFO">${RESULT} = [{'time': 0.021696403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.640300000000123e-05, 'source_diff': 2.640300000000123e-05}, {'time': 0.022449292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.817" endtime="20201115 22:00:17.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.833" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.821" endtime="20201115 22:00:17.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.838" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:17.837" endtime="20201115 22:00:17.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.840" level="INFO">VALUE: [2.640300000000123e-05, 2.640299999999776e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.638900000000166e-05, 2.640300000000123e-05, 2.6402000000001757e-05, 2.6416000000001327e-05, 2.6485999999999177e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.638899999999819e-05, 2.6374999999998622e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6402999999994292e-05, 2.640300000000123e-05, 2.638900000000166e-05, 2.6402000000001757e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6319999999996346e-05, 2.633300000000338e-05, 2.6388000000002187e-05, 2.6374999999995152e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.64170000000008e-05, 2.640300000000123e-05, 2.643100000000037e-05, 2.6416000000001327e-05, 2.64170000000008e-05, 2.6402000000001757e-05, 2.640300000000123e-05, 2.6416000000001327e-05, 2.640300000000123e-05, 2.644499999999994e-05, 2.6402000000001757e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.645899999999951e-05, 2.6416999999993862e-05, 2.6430000000000897e-05, 2.6416000000001327e-05, 2.6388000000002187e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.6471999999999607e-05, 2.640300000000123e-05]</msg>
<status status="PASS" starttime="20201115 22:00:17.839" endtime="20201115 22:00:17.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.834" endtime="20201115 22:00:17.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.843" endtime="20201115 22:00:17.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.847" endtime="20201115 22:00:17.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.845" endtime="20201115 22:00:17.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.842" endtime="20201115 22:00:17.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.448" endtime="20201115 22:00:17.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.748" endtime="20201115 22:00:17.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.747" endtime="20201115 22:00:17.868"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.870" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.879" endtime="20201115 22:00:17.929"></status>
</kw>
<msg timestamp="20201115 22:00:17.929" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.877" endtime="20201115 22:00:17.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.932" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.930" endtime="20201115 22:00:17.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.933" endtime="20201115 22:00:17.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.875" endtime="20201115 22:00:17.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.873" endtime="20201115 22:00:17.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.942" endtime="20201115 22:00:18.237"></status>
</kw>
<msg timestamp="20201115 22:00:18.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025585722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025612903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.941" endtime="20201115 22:00:18.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025585722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025612903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.246" endtime="20201115 22:00:18.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.263" endtime="20201115 22:00:18.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.938" endtime="20201115 22:00:18.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.936" endtime="20201115 22:00:18.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.278" level="INFO">${RESULT} = [{'time': 0.025612903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.718099999999765e-05, 'source_diff': 2.718099999999765e-05}, {'time': 0.026417639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.270" endtime="20201115 22:00:18.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.292" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.279" endtime="20201115 22:00:18.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.296" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.295" endtime="20201115 22:00:18.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.299" level="INFO">VALUE: [2.718099999999765e-05, 2.715299999999851e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7097000000000232e-05, 2.715299999999851e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.712500000000284e-05, 2.711100000000327e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.7194000000001217e-05, 2.712500000000284e-05, 2.708300000000413e-05, 2.7124999999995902e-05, 2.7180000000001647e-05, 2.713900000000241e-05, 2.716700000000155e-05, 2.718100000000112e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.708300000000413e-05, 2.713900000000241e-05, 2.7124999999995902e-05, 2.716700000000155e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.7138999999995472e-05, 2.715199999999557e-05, 2.712500000000284e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.7152000000002507e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.7138999999995472e-05, 2.7138999999995472e-05, 2.7194000000001217e-05, 2.7137999999996e-05, 2.7152000000002507e-05, 2.715300000000198e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.297" endtime="20201115 22:00:18.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.293" endtime="20201115 22:00:18.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.302" endtime="20201115 22:00:18.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.305" endtime="20201115 22:00:18.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.304" endtime="20201115 22:00:18.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.300" endtime="20201115 22:00:18.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.871" endtime="20201115 22:00:18.326"></status>
</kw>
<msg timestamp="20201115 22:00:18.326" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.335" endtime="20201115 22:00:18.383"></status>
</kw>
<msg timestamp="20201115 22:00:18.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.333" endtime="20201115 22:00:18.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.384" endtime="20201115 22:00:18.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.387" endtime="20201115 22:00:18.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.331" endtime="20201115 22:00:18.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.329" endtime="20201115 22:00:18.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.397" endtime="20201115 22:00:18.682"></status>
</kw>
<msg timestamp="20201115 22:00:18.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.396" endtime="20201115 22:00:18.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.686" endtime="20201115 22:00:18.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.694" endtime="20201115 22:00:18.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.393" endtime="20201115 22:00:18.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.391" endtime="20201115 22:00:18.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.701" level="INFO">${RESULT} = [{'time': 0.021634958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7165999999998608e-05, 'source_diff': 2.7165999999998608e-05}, {'time': 0.022449181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.697" endtime="20201115 22:00:18.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.714" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.702" endtime="20201115 22:00:18.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.720" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.718" endtime="20201115 22:00:18.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.723" level="INFO">VALUE: [2.7165999999998608e-05, 2.7138999999998942e-05, 2.712500000000284e-05, 2.7180000000001647e-05, 2.719500000000069e-05, 2.715299999999851e-05, 2.7152000000002507e-05, 2.720900000000026e-05, 2.716699999999808e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.716699999999808e-05, 2.7166999999994612e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.7152999999995042e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.7138999999995472e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.715199999999557e-05, 2.716700000000155e-05, 2.7166000000002077e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.715199999999557e-05, 2.715300000000198e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.7124999999995902e-05, 2.7152000000002507e-05, 2.7152999999995042e-05, 2.7180000000001647e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.718100000000112e-05, 2.7180000000001647e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.7208000000000787e-05, 2.7152000000002507e-05, 2.716700000000155e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.721" endtime="20201115 22:00:18.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.715" endtime="20201115 22:00:18.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.727" endtime="20201115 22:00:18.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.731" endtime="20201115 22:00:18.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.729" endtime="20201115 22:00:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.725" endtime="20201115 22:00:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.327" endtime="20201115 22:00:18.753"></status>
</kw>
<msg timestamp="20201115 22:00:18.753" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.764" endtime="20201115 22:00:18.813"></status>
</kw>
<msg timestamp="20201115 22:00:18.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.762" endtime="20201115 22:00:18.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.816" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.814" endtime="20201115 22:00:18.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.817" endtime="20201115 22:00:18.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.759" endtime="20201115 22:00:18.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.756" endtime="20201115 22:00:18.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.827" endtime="20201115 22:00:19.126"></status>
</kw>
<msg timestamp="20201115 22:00:19.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025052542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.826" endtime="20201115 22:00:19.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025052542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.130" endtime="20201115 22:00:19.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.138" endtime="20201115 22:00:19.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.823" endtime="20201115 22:00:19.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.822" endtime="20201115 22:00:19.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.144" level="INFO">${RESULT} = [{'time': 0.025079694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7151999999999038e-05, 'source_diff': 2.7151999999999038e-05}, {'time': 0.02588425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:19.141" endtime="20201115 22:00:19.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.158" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.145" endtime="20201115 22:00:19.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.162" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:19.161" endtime="20201115 22:00:19.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.164" level="INFO">VALUE: [2.7151999999999038e-05, 2.7194000000001217e-05, 2.715299999999851e-05, 2.718100000000112e-05, 2.7138999999998942e-05, 2.7138999999998942e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.711100000000327e-05, 2.713900000000241e-05, 2.7180000000001647e-05, 2.712500000000284e-05, 2.7152999999995042e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.712500000000284e-05, 2.713900000000241e-05, 2.7152999999995042e-05, 2.722299999999983e-05, 2.7222000000000357e-05, 2.7166999999994612e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.7222000000000357e-05, 2.7166000000002077e-05, 2.716700000000155e-05, 2.7152999999995042e-05, 2.7152999999995042e-05, 2.7124999999995902e-05, 2.7152999999995042e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.716599999999514e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.716700000000155e-05, 2.7138999999995472e-05, 2.7194000000001217e-05, 2.715300000000198e-05, 2.7180000000001647e-05, 2.7180000000001647e-05, 2.7208000000000787e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.163" endtime="20201115 22:00:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.158" endtime="20201115 22:00:19.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.168" endtime="20201115 22:00:19.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.171" endtime="20201115 22:00:19.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.169" endtime="20201115 22:00:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.166" endtime="20201115 22:00:19.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.754" endtime="20201115 22:00:19.192"></status>
</kw>
<msg timestamp="20201115 22:00:19.192" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.201" endtime="20201115 22:00:19.249"></status>
</kw>
<msg timestamp="20201115 22:00:19.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.200" endtime="20201115 22:00:19.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.251" endtime="20201115 22:00:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.254" endtime="20201115 22:00:19.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.197" endtime="20201115 22:00:19.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.195" endtime="20201115 22:00:19.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.264" endtime="20201115 22:00:19.549"></status>
</kw>
<msg timestamp="20201115 22:00:19.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02213275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:19.262" endtime="20201115 22:00:19.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02213275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:19.553" endtime="20201115 22:00:19.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.561" endtime="20201115 22:00:19.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.260" endtime="20201115 22:00:19.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.258" endtime="20201115 22:00:19.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.568" level="INFO">${RESULT} = [{'time': 0.022159889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7138999999998942e-05, 'source_diff': 2.7138999999998942e-05}, {'time': 0.022977375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.565" endtime="20201115 22:00:19.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.581" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.569" endtime="20201115 22:00:19.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.585" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:19.584" endtime="20201115 22:00:19.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.588" level="INFO">VALUE: [2.7138999999998942e-05, 2.715300000000198e-05, 2.7151999999999038e-05, 2.7165999999998608e-05, 2.713900000000241e-05, 2.7138999999998942e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.7124999999999372e-05, 2.7152000000002507e-05, 2.718099999999765e-05, 2.715299999999851e-05, 2.713900000000241e-05, 2.7166000000002077e-05, 2.715199999999557e-05, 2.7152999999995042e-05, 2.7096999999996763e-05, 2.712500000000284e-05, 2.715199999999557e-05, 2.7138999999995472e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.715300000000198e-05, 2.7137999999996e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.713900000000241e-05, 2.7166000000002077e-05, 2.7138999999995472e-05, 2.713900000000241e-05, 2.7152999999995042e-05, 2.7222000000000357e-05, 2.7152999999995042e-05, 2.7110999999996332e-05, 2.712500000000284e-05, 2.716700000000155e-05, 2.712500000000284e-05, 2.7152999999995042e-05, 2.7096999999996763e-05, 2.713900000000241e-05, 2.7152999999995042e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.7152999999995042e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.586" endtime="20201115 22:00:19.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.582" endtime="20201115 22:00:19.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.591" endtime="20201115 22:00:19.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.595" endtime="20201115 22:00:19.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.593" endtime="20201115 22:00:19.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.589" endtime="20201115 22:00:19.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.193" endtime="20201115 22:00:19.615"></status>
</kw>
<msg timestamp="20201115 22:00:19.616" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.624" endtime="20201115 22:00:19.673"></status>
</kw>
<msg timestamp="20201115 22:00:19.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.623" endtime="20201115 22:00:19.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.676" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.674" endtime="20201115 22:00:19.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.677" endtime="20201115 22:00:19.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.620" endtime="20201115 22:00:19.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.618" endtime="20201115 22:00:19.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.687" endtime="20201115 22:00:19.972"></status>
</kw>
<msg timestamp="20201115 22:00:19.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.686" endtime="20201115 22:00:19.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021658417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.976" endtime="20201115 22:00:19.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.984" endtime="20201115 22:00:19.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.683" endtime="20201115 22:00:19.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.682" endtime="20201115 22:00:19.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.991" level="INFO">${RESULT} = [{'time': 0.021685556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.713900000000241e-05, 'source_diff': 2.713900000000241e-05}, {'time': 0.022489153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:19.987" endtime="20201115 22:00:19.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.004" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.992" endtime="20201115 22:00:20.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.008" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:20.007" endtime="20201115 22:00:20.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.011" level="INFO">VALUE: [2.713900000000241e-05, 2.7084000000000136e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.713900000000241e-05, 2.7138000000002938e-05, 2.716700000000155e-05, 2.715299999999851e-05, 2.713900000000241e-05, 2.7124999999999372e-05, 2.713900000000241e-05, 2.716700000000155e-05, 2.712500000000284e-05, 2.7096999999996763e-05, 2.7180000000001647e-05, 2.712500000000284e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.7152000000002507e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.7124999999995902e-05, 2.7152000000002507e-05, 2.715300000000198e-05, 2.7152999999995042e-05, 2.720900000000026e-05, 2.716599999999514e-05, 2.713900000000241e-05, 2.7138999999995472e-05, 2.7222000000000357e-05, 2.7166000000002077e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.7138999999995472e-05, 2.7137999999996e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.7166000000002077e-05, 2.7166999999994612e-05, 2.7194000000001217e-05, 2.716700000000155e-05, 2.7208000000000787e-05, 2.7180000000001647e-05, 2.715300000000198e-05, 2.720900000000026e-05, 2.720900000000026e-05, 2.712500000000284e-05, 2.716700000000155e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.009" endtime="20201115 22:00:20.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.005" endtime="20201115 22:00:20.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.014" endtime="20201115 22:00:20.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.018" endtime="20201115 22:00:20.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.016" endtime="20201115 22:00:20.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.012" endtime="20201115 22:00:20.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.616" endtime="20201115 22:00:20.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.869" endtime="20201115 22:00:20.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.868" endtime="20201115 22:00:20.039"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.041" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.049" endtime="20201115 22:00:20.101"></status>
</kw>
<msg timestamp="20201115 22:00:20.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.048" endtime="20201115 22:00:20.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.102" endtime="20201115 22:00:20.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.105" endtime="20201115 22:00:20.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.045" endtime="20201115 22:00:20.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.043" endtime="20201115 22:00:20.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.113" endtime="20201115 22:00:20.398"></status>
</kw>
<msg timestamp="20201115 22:00:20.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023949958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.112" endtime="20201115 22:00:20.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023949958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.402" endtime="20201115 22:00:20.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.410" endtime="20201115 22:00:20.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.109" endtime="20201115 22:00:20.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.108" endtime="20201115 22:00:20.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.416" level="INFO">${RESULT} = [{'time': 0.023977833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.024836722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.413" endtime="20201115 22:00:20.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.429" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.417" endtime="20201115 22:00:20.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.434" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.433" endtime="20201115 22:00:20.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.437" level="INFO">VALUE: [2.7875000000000122e-05, 2.7875000000000122e-05, 2.7958000000001537e-05, 2.7901999999999788e-05, 2.7832999999997943e-05, 2.7860999999997083e-05, 2.7875000000000122e-05, 2.7901999999999788e-05, 2.7833000000001412e-05, 2.7888000000003688e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.7916999999995362e-05, 2.7874999999996652e-05, 2.787500000000359e-05, 2.7888999999996222e-05, 2.791599999999589e-05, 2.7902000000003258e-05, 2.7805999999998277e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7805000000005742e-05, 2.790300000000273e-05, 2.7972000000001107e-05, 2.79170000000023e-05, 2.7930000000002397e-05, 2.790300000000273e-05, 2.7832999999997943e-05, 2.7888999999996222e-05, 2.790199999999632e-05, 2.7860999999997083e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.7902000000003258e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.7972000000001107e-05, 2.7902000000003258e-05, 2.790300000000273e-05, 2.7874999999996652e-05, 2.7888999999996222e-05, 2.7902999999995792e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.7888999999989283e-05, 2.7902999999995792e-05, 2.790300000000967e-05, 2.788900000000316e-05, 2.79170000000023e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.435" endtime="20201115 22:00:20.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.430" endtime="20201115 22:00:20.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.440" endtime="20201115 22:00:20.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.443" endtime="20201115 22:00:20.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.442" endtime="20201115 22:00:20.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.438" endtime="20201115 22:00:20.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.041" endtime="20201115 22:00:20.464"></status>
</kw>
<msg timestamp="20201115 22:00:20.464" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.473" endtime="20201115 22:00:20.525"></status>
</kw>
<msg timestamp="20201115 22:00:20.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.471" endtime="20201115 22:00:20.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.528" endtime="20201115 22:00:20.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.533" endtime="20201115 22:00:20.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.469" endtime="20201115 22:00:20.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.467" endtime="20201115 22:00:20.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.553" endtime="20201115 22:00:20.845"></status>
</kw>
<msg timestamp="20201115 22:00:20.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.550" endtime="20201115 22:00:20.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.849" endtime="20201115 22:00:20.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.857" endtime="20201115 22:00:20.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.545" endtime="20201115 22:00:20.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.541" endtime="20201115 22:00:20.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.864" level="INFO">${RESULT} = [{'time': 0.021720708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7901999999999788e-05, 'source_diff': 2.7901999999999788e-05}, {'time': 0.022583958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.860" endtime="20201115 22:00:20.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.877" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.865" endtime="20201115 22:00:20.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.882" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.881" endtime="20201115 22:00:20.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.884" level="INFO">VALUE: [2.7901999999999788e-05, 2.7861000000000552e-05, 2.7902999999999262e-05, 2.79309999999984e-05, 2.790300000000273e-05, 2.7888999999999692e-05, 2.7901999999999788e-05, 2.788799999999675e-05, 2.7832999999997943e-05, 2.7888999999999692e-05, 2.7929999999998928e-05, 2.7902999999999262e-05, 2.7902999999995792e-05, 2.7874999999996652e-05, 2.790199999999632e-05, 2.79170000000023e-05, 2.791599999999589e-05, 2.7846999999997513e-05, 2.7888999999996222e-05, 2.790199999999632e-05, 2.7888999999996222e-05, 2.787500000000359e-05, 2.788900000000316e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7916000000002827e-05, 2.79170000000023e-05, 2.790199999999632e-05, 2.7874999999996652e-05, 2.79170000000023e-05, 2.790300000000273e-05, 2.786100000000402e-05, 2.7958000000001537e-05, 2.790199999999632e-05, 2.7916000000002827e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.7930000000002397e-05, 2.790199999999632e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.794500000000144e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.788900000000316e-05, 2.790199999999632e-05, 2.7902999999995792e-05, 2.7888999999989283e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.883" endtime="20201115 22:00:20.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.878" endtime="20201115 22:00:20.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.887" endtime="20201115 22:00:20.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.890" endtime="20201115 22:00:20.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.889" endtime="20201115 22:00:20.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.885" endtime="20201115 22:00:20.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.465" endtime="20201115 22:00:20.911"></status>
</kw>
<msg timestamp="20201115 22:00:20.911" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.920" endtime="20201115 22:00:20.971"></status>
</kw>
<msg timestamp="20201115 22:00:20.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.919" endtime="20201115 22:00:20.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.973" endtime="20201115 22:00:20.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.975" endtime="20201115 22:00:20.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.916" endtime="20201115 22:00:20.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.914" endtime="20201115 22:00:20.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.985" endtime="20201115 22:00:21.271"></status>
</kw>
<msg timestamp="20201115 22:00:21.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.984" endtime="20201115 22:00:21.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.275" endtime="20201115 22:00:21.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.283" endtime="20201115 22:00:21.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.981" endtime="20201115 22:00:21.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.979" endtime="20201115 22:00:21.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.290" level="INFO">${RESULT} = [{'time': 0.021644917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.022512, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:21.286" endtime="20201115 22:00:21.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.304" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.292" endtime="20201115 22:00:21.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.309" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:21.308" endtime="20201115 22:00:21.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.311" level="INFO">VALUE: [2.7875000000000122e-05, 2.79170000000023e-05, 2.7901999999999788e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.7862000000000026e-05, 2.7875000000000122e-05, 2.7846999999997513e-05, 2.7860999999997083e-05, 2.786100000000402e-05, 2.7916000000002827e-05, 2.7888999999996222e-05, 2.7874999999996652e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7916000000002827e-05, 2.7916999999995362e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.786100000000402e-05, 2.790300000000273e-05, 2.787500000000359e-05, 2.788900000000316e-05, 2.787500000000359e-05, 2.790300000000273e-05, 2.7930000000002397e-05, 2.7874999999996652e-05, 2.788799999999675e-05, 2.79170000000023e-05, 2.787500000000359e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.7902999999995792e-05, 2.7957999999994598e-05, 2.7916000000002827e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.784700000000445e-05, 2.795900000000101e-05, 2.7916000000002827e-05, 2.788900000000316e-05, 2.786100000000402e-05, 2.7888999999989283e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.310" endtime="20201115 22:00:21.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.305" endtime="20201115 22:00:21.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.314" endtime="20201115 22:00:21.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.318" endtime="20201115 22:00:21.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.316" endtime="20201115 22:00:21.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.313" endtime="20201115 22:00:21.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.912" endtime="20201115 22:00:21.339"></status>
</kw>
<msg timestamp="20201115 22:00:21.339" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.348" endtime="20201115 22:00:21.400"></status>
</kw>
<msg timestamp="20201115 22:00:21.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.347" endtime="20201115 22:00:21.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.401" endtime="20201115 22:00:21.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.404" endtime="20201115 22:00:21.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.344" endtime="20201115 22:00:21.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.342" endtime="20201115 22:00:21.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.414" endtime="20201115 22:00:21.699"></status>
</kw>
<msg timestamp="20201115 22:00:21.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.413" endtime="20201115 22:00:21.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.703" endtime="20201115 22:00:21.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.711" endtime="20201115 22:00:21.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.410" endtime="20201115 22:00:21.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.409" endtime="20201115 22:00:21.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.718" level="INFO">${RESULT} = [{'time': 0.022916375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7902999999999262e-05, 'source_diff': 2.7902999999999262e-05}, {'time': 0.023775958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.714" endtime="20201115 22:00:21.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.731" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.719" endtime="20201115 22:00:21.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.735" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:21.734" endtime="20201115 22:00:21.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.738" level="INFO">VALUE: [2.7902999999999262e-05, 2.7861000000000552e-05, 2.795900000000101e-05, 2.7875000000000122e-05, 2.791699999999883e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.791699999999883e-05, 2.791699999999883e-05, 2.788900000000316e-05, 2.7958000000001537e-05, 2.788900000000316e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.7846999999997513e-05, 2.7862000000003495e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.7916999999995362e-05, 2.79170000000023e-05, 2.7916999999995362e-05, 2.7888999999996222e-05, 2.79170000000023e-05, 2.7888000000003688e-05, 2.7874999999996652e-05, 2.786100000000402e-05, 2.791599999999589e-05, 2.788900000000316e-05, 2.7874999999996652e-05, 2.7916999999995362e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.7972000000001107e-05, 2.790300000000273e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.7874999999996652e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.794500000000144e-05, 2.7874999999996652e-05, 2.7916000000002827e-05, 2.787500000001053e-05, 2.788900000000316e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.736" endtime="20201115 22:00:21.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.732" endtime="20201115 22:00:21.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.741" endtime="20201115 22:00:21.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.744" endtime="20201115 22:00:21.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.743" endtime="20201115 22:00:21.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.739" endtime="20201115 22:00:21.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.340" endtime="20201115 22:00:21.765"></status>
</kw>
<msg timestamp="20201115 22:00:21.765" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.774" endtime="20201115 22:00:21.825"></status>
</kw>
<msg timestamp="20201115 22:00:21.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.772" endtime="20201115 22:00:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.826" endtime="20201115 22:00:21.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.829" endtime="20201115 22:00:21.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.770" endtime="20201115 22:00:21.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.768" endtime="20201115 22:00:21.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.839" endtime="20201115 22:00:22.138"></status>
</kw>
<msg timestamp="20201115 22:00:22.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.837" endtime="20201115 22:00:22.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.148" endtime="20201115 22:00:22.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.157" endtime="20201115 22:00:22.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.835" endtime="20201115 22:00:22.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.833" endtime="20201115 22:00:22.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.163" level="INFO">${RESULT} = [{'time': 0.021690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.022557764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.160" endtime="20201115 22:00:22.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.176" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.164" endtime="20201115 22:00:22.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.181" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:22.180" endtime="20201115 22:00:22.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.183" level="INFO">VALUE: [2.7861000000000552e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7847000000000982e-05, 2.7902999999999262e-05, 2.7861000000000552e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7916000000002827e-05, 2.7846999999997513e-05, 2.791699999999883e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.7888999999996222e-05, 2.791599999999589e-05, 2.792999999999546e-05, 2.790300000000273e-05, 2.7916999999995362e-05, 2.79170000000023e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.7902000000003258e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.7958000000001537e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.7888999999996222e-05, 2.790199999999632e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.790300000000273e-05, 2.791599999999589e-05, 2.7902000000003258e-05, 2.793100000000187e-05, 2.788900000000316e-05, 2.7832999999997943e-05, 2.7916000000002827e-05, 2.7902999999995792e-05, 2.7944000000001967e-05, 2.7902999999995792e-05, 2.7888999999996222e-05, 2.7832999999997943e-05, 2.793100000000187e-05, 2.797300000000058e-05, 2.790300000000967e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.182" endtime="20201115 22:00:22.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.177" endtime="20201115 22:00:22.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.186" endtime="20201115 22:00:22.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.190" endtime="20201115 22:00:22.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.188" endtime="20201115 22:00:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.185" endtime="20201115 22:00:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.766" endtime="20201115 22:00:22.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.040" endtime="20201115 22:00:22.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.039" endtime="20201115 22:00:22.211"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.213" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.222" endtime="20201115 22:00:22.276"></status>
</kw>
<msg timestamp="20201115 22:00:22.276" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.220" endtime="20201115 22:00:22.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.279" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.277" endtime="20201115 22:00:22.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.280" endtime="20201115 22:00:22.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.218" endtime="20201115 22:00:22.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.215" endtime="20201115 22:00:22.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.289" endtime="20201115 22:00:22.578"></status>
</kw>
<msg timestamp="20201115 22:00:22.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:22.288" endtime="20201115 22:00:22.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0239615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:22.582" endtime="20201115 22:00:22.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.590" endtime="20201115 22:00:22.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.285" endtime="20201115 22:00:22.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.283" endtime="20201115 22:00:22.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.597" level="INFO">${RESULT} = [{'time': 0.0239615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8653000000000012e-05, 'source_diff': 2.8653000000000012e-05}, {'time': 0.024881278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:22.593" endtime="20201115 22:00:22.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.610" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.598" endtime="20201115 22:00:22.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.614" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.613" endtime="20201115 22:00:22.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.617" level="INFO">VALUE: [2.8653000000000012e-05, 2.8653000000000012e-05, 2.8653000000000012e-05, 2.8666000000000108e-05, 2.8610999999997833e-05, 2.8653000000000012e-05, 2.868099999999915e-05, 2.8625000000000872e-05, 2.863900000000391e-05, 2.8666999999996112e-05, 2.866599999999664e-05, 2.8624999999997403e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8624999999997403e-05, 2.8554999999999553e-05, 2.8568999999999123e-05, 2.863900000000391e-05, 2.8624999999997403e-05, 2.866700000000305e-05, 2.8652999999996542e-05, 2.8596999999998263e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.8624999999997403e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.8638000000004438e-05, 2.8624999999997403e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.862500000000434e-05, 2.863900000000391e-05, 2.865300000000348e-05, 2.8652999999996542e-05, 2.8652999999996542e-05, 2.865199999999707e-05, 2.863900000000391e-05, 2.865300000000348e-05, 2.865199999999707e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.862500000000434e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.615" endtime="20201115 22:00:22.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.611" endtime="20201115 22:00:22.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.620" endtime="20201115 22:00:22.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.623" endtime="20201115 22:00:22.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.622" endtime="20201115 22:00:22.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.618" endtime="20201115 22:00:22.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.214" endtime="20201115 22:00:22.644"></status>
</kw>
<msg timestamp="20201115 22:00:22.644" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.653" endtime="20201115 22:00:22.707"></status>
</kw>
<msg timestamp="20201115 22:00:22.707" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.651" endtime="20201115 22:00:22.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.710" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.708" endtime="20201115 22:00:22.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.711" endtime="20201115 22:00:22.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.649" endtime="20201115 22:00:22.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.647" endtime="20201115 22:00:22.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.721" endtime="20201115 22:00:23.015"></status>
</kw>
<msg timestamp="20201115 22:00:23.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.720" endtime="20201115 22:00:23.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.019" endtime="20201115 22:00:23.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.027" endtime="20201115 22:00:23.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.717" endtime="20201115 22:00:23.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.715" endtime="20201115 22:00:23.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.034" level="INFO">${RESULT} = [{'time': 0.021848736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8653000000000012e-05, 'source_diff': 2.8653000000000012e-05}, {'time': 0.022774083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.030" endtime="20201115 22:00:23.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.047" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.035" endtime="20201115 22:00:23.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.051" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:23.050" endtime="20201115 22:00:23.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.054" level="INFO">VALUE: [2.8653000000000012e-05, 2.8639000000000442e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.8610999999997833e-05, 2.8653000000000012e-05, 2.8582999999998693e-05, 2.8639000000000442e-05, 2.8611000000001302e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.86379999999975e-05, 2.8694999999995252e-05, 2.8610999999997833e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8582999999998693e-05, 2.866700000000305e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8569999999998597e-05, 2.8652999999996542e-05, 2.8652000000004008e-05, 2.8652000000004008e-05, 2.8680000000003147e-05, 2.865199999999707e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.8611999999997306e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.863900000000391e-05, 2.8624999999997403e-05, 2.8652000000004008e-05, 2.865300000000348e-05, 2.8652000000004008e-05, 2.865300000000348e-05, 2.862500000000434e-05, 2.8638999999996972e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.052" endtime="20201115 22:00:23.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.048" endtime="20201115 22:00:23.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.057" endtime="20201115 22:00:23.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.060" endtime="20201115 22:00:23.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.059" endtime="20201115 22:00:23.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.055" endtime="20201115 22:00:23.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.645" endtime="20201115 22:00:23.081"></status>
</kw>
<msg timestamp="20201115 22:00:23.081" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.090" endtime="20201115 22:00:23.144"></status>
</kw>
<msg timestamp="20201115 22:00:23.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.089" endtime="20201115 22:00:23.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.147" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.146" endtime="20201115 22:00:23.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.148" endtime="20201115 22:00:23.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.086" endtime="20201115 22:00:23.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.084" endtime="20201115 22:00:23.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.159" endtime="20201115 22:00:23.449"></status>
</kw>
<msg timestamp="20201115 22:00:23.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.157" endtime="20201115 22:00:23.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.453" endtime="20201115 22:00:23.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.461" endtime="20201115 22:00:23.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.155" endtime="20201115 22:00:23.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.153" endtime="20201115 22:00:23.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.468" level="INFO">${RESULT} = [{'time': 0.022212806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.023133917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.465" endtime="20201115 22:00:23.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.481" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.469" endtime="20201115 22:00:23.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.486" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:23.485" endtime="20201115 22:00:23.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.488" level="INFO">VALUE: [2.8639000000000442e-05, 2.8666999999999582e-05, 2.8666000000000108e-05, 2.8611000000001302e-05, 2.8625000000000872e-05, 2.8611000000001302e-05, 2.8653000000000012e-05, 2.8652000000000538e-05, 2.8666999999999582e-05, 2.866700000000305e-05, 2.8652999999996542e-05, 2.861100000000477e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8610999999997833e-05, 2.8652999999996542e-05, 2.8583999999998166e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8666000000003578e-05, 2.866700000000305e-05, 2.8638999999996972e-05, 2.8624999999997403e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.865300000000348e-05, 2.865199999999707e-05, 2.865300000000348e-05, 2.8624999999997403e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8624999999997403e-05, 2.8652999999996542e-05, 2.8652000000004008e-05, 2.8652999999996542e-05, 2.8624999999997403e-05, 2.869500000000219e-05, 2.866700000000305e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.866599999999664e-05, 2.8666999999996112e-05, 2.865199999999013e-05, 2.8638999999996972e-05, 2.8666999999996112e-05, 2.865300000000348e-05, 2.8638999999996972e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.487" endtime="20201115 22:00:23.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.482" endtime="20201115 22:00:23.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.491" endtime="20201115 22:00:23.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.494" endtime="20201115 22:00:23.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.493" endtime="20201115 22:00:23.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.489" endtime="20201115 22:00:23.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.082" endtime="20201115 22:00:23.515"></status>
</kw>
<msg timestamp="20201115 22:00:23.516" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.524" endtime="20201115 22:00:23.578"></status>
</kw>
<msg timestamp="20201115 22:00:23.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.523" endtime="20201115 22:00:23.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.580" endtime="20201115 22:00:23.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.582" endtime="20201115 22:00:23.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.520" endtime="20201115 22:00:23.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.518" endtime="20201115 22:00:23.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.592" endtime="20201115 22:00:23.892"></status>
</kw>
<msg timestamp="20201115 22:00:23.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.590" endtime="20201115 22:00:23.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.895" endtime="20201115 22:00:23.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.903" endtime="20201115 22:00:23.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.588" endtime="20201115 22:00:23.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.586" endtime="20201115 22:00:23.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.910" level="INFO">${RESULT} = [{'time': 0.022045403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.022973639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.907" endtime="20201115 22:00:23.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.923" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.911" endtime="20201115 22:00:23.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.928" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:23.927" endtime="20201115 22:00:23.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.930" level="INFO">VALUE: [2.8639000000000442e-05, 2.868099999999915e-05, 2.8653000000000012e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.8639000000000442e-05, 2.8666000000000108e-05, 2.8639000000000442e-05, 2.8652000000000538e-05, 2.8639000000000442e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8596999999998263e-05, 2.8582999999998693e-05, 2.8652000000004008e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.863900000000391e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.863900000000391e-05, 2.866700000000305e-05, 2.866700000000305e-05, 2.865300000000348e-05, 2.8652000000004008e-05, 2.8652999999996542e-05, 2.8652000000004008e-05, 2.862500000000434e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.866599999999664e-05, 2.862500000000434e-05, 2.8638999999996972e-05, 2.865199999999013e-05, 2.8666999999996112e-05, 2.8624999999990464e-05, 2.865300000000348e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.929" endtime="20201115 22:00:23.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.924" endtime="20201115 22:00:23.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.934" endtime="20201115 22:00:23.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.937" endtime="20201115 22:00:23.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.936" endtime="20201115 22:00:23.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.932" endtime="20201115 22:00:23.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.516" endtime="20201115 22:00:23.958"></status>
</kw>
<msg timestamp="20201115 22:00:23.958" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.967" endtime="20201115 22:00:24.021"></status>
</kw>
<msg timestamp="20201115 22:00:24.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.965" endtime="20201115 22:00:24.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.022" endtime="20201115 22:00:24.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.025" endtime="20201115 22:00:24.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.963" endtime="20201115 22:00:24.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.961" endtime="20201115 22:00:24.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.035" endtime="20201115 22:00:24.315"></status>
</kw>
<msg timestamp="20201115 22:00:24.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.033" endtime="20201115 22:00:24.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.319" endtime="20201115 22:00:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.327" endtime="20201115 22:00:24.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.031" endtime="20201115 22:00:24.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.029" endtime="20201115 22:00:24.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.334" level="INFO">${RESULT} = [{'time': 0.021845194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.86379999999975e-05, 'source_diff': 2.86379999999975e-05}, {'time': 0.022772319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:24.331" endtime="20201115 22:00:24.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.347" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.335" endtime="20201115 22:00:24.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.352" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:24.351" endtime="20201115 22:00:24.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.354" level="INFO">VALUE: [2.86379999999975e-05, 2.86379999999975e-05, 2.8680000000003147e-05, 2.8624999999997403e-05, 2.8625000000000872e-05, 2.8653000000000012e-05, 2.8652000000000538e-05, 2.8666999999999582e-05, 2.8653000000000012e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.863900000000391e-05, 2.8624999999997403e-05, 2.8652999999996542e-05, 2.862500000000434e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.8624999999997403e-05, 2.863900000000391e-05, 2.8638999999996972e-05, 2.8652000000004008e-05, 2.865300000000348e-05, 2.8610999999997833e-05, 2.869399999999578e-05, 2.86379999999975e-05, 2.8638999999996972e-05, 2.8624999999997403e-05, 2.8582999999998693e-05, 2.862500000000434e-05, 2.863900000000391e-05, 2.865199999999707e-05, 2.8638999999996972e-05, 2.865199999999707e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.865199999999707e-05, 2.8652999999996542e-05, 2.8624999999997403e-05, 2.863900000000391e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.8624999999990464e-05, 2.862500000000434e-05, 2.8638999999996972e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.353" endtime="20201115 22:00:24.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.348" endtime="20201115 22:00:24.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.358" endtime="20201115 22:00:24.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.361" endtime="20201115 22:00:24.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.360" endtime="20201115 22:00:24.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.356" endtime="20201115 22:00:24.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.959" endtime="20201115 22:00:24.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.212" endtime="20201115 22:00:24.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.211" endtime="20201115 22:00:24.382"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.385" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.393" endtime="20201115 22:00:24.450"></status>
</kw>
<msg timestamp="20201115 22:00:24.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.392" endtime="20201115 22:00:24.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.451" endtime="20201115 22:00:24.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.454" endtime="20201115 22:00:24.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.389" endtime="20201115 22:00:24.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.387" endtime="20201115 22:00:24.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.469" endtime="20201115 22:00:24.762"></status>
</kw>
<msg timestamp="20201115 22:00:24.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024261792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.465" endtime="20201115 22:00:24.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024261792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024291167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.766" endtime="20201115 22:00:24.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.774" endtime="20201115 22:00:24.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.460" endtime="20201115 22:00:24.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.457" endtime="20201115 22:00:24.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.781" level="INFO">${RESULT} = [{'time': 0.024291167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9374999999998153e-05, 'source_diff': 2.9374999999998153e-05}, {'time': 0.025270542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.777" endtime="20201115 22:00:24.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.794" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.782" endtime="20201115 22:00:24.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.798" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.797" endtime="20201115 22:00:24.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.801" level="INFO">VALUE: [2.9374999999998153e-05, 2.9389000000001192e-05, 2.9388999999997723e-05, 2.9443999999999998e-05, 2.940199999999782e-05, 2.9374999999998153e-05, 2.9388999999997723e-05, 2.9417000000000332e-05, 2.940300000000423e-05, 2.9388999999997723e-05, 2.940199999999782e-05, 2.9388999999997723e-05, 2.940300000000423e-05, 2.9402999999997292e-05, 2.940300000000423e-05, 2.9388999999997723e-05, 2.9388999999997723e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.9332999999999443e-05, 2.9346999999999013e-05, 2.937500000000509e-05, 2.9319999999999347e-05, 2.9388999999997723e-05, 2.9388000000005188e-05, 2.9374999999998153e-05, 2.940199999999782e-05, 2.9388999999997723e-05, 2.9374999999998153e-05, 2.9402999999997292e-05, 2.9374999999998153e-05, 2.9346999999999013e-05, 2.938900000000466e-05, 2.937500000000509e-05, 2.940199999999782e-05, 2.938900000000466e-05, 2.940300000000423e-05, 2.941599999999739e-05, 2.9388999999997723e-05, 2.9402999999997292e-05, 2.9388999999990784e-05, 2.9458000000009976e-05, 2.9374999999998153e-05, 2.9374999999998153e-05, 2.9402999999997292e-05, 2.9333999999991978e-05, 2.944500000000294e-05, 2.94170000000038e-05, 2.9374999999998153e-05, 2.9388999999990784e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.800" endtime="20201115 22:00:24.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.795" endtime="20201115 22:00:24.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.805" endtime="20201115 22:00:24.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.808" endtime="20201115 22:00:24.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.806" endtime="20201115 22:00:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.803" endtime="20201115 22:00:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.385" endtime="20201115 22:00:24.829"></status>
</kw>
<msg timestamp="20201115 22:00:24.829" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.838" endtime="20201115 22:00:24.894"></status>
</kw>
<msg timestamp="20201115 22:00:24.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.836" endtime="20201115 22:00:24.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.896" endtime="20201115 22:00:24.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.898" endtime="20201115 22:00:24.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.833" endtime="20201115 22:00:24.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.831" endtime="20201115 22:00:24.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.909" endtime="20201115 22:00:25.193"></status>
</kw>
<msg timestamp="20201115 22:00:25.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.908" endtime="20201115 22:00:25.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.197" endtime="20201115 22:00:25.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.205" endtime="20201115 22:00:25.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.905" endtime="20201115 22:00:25.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.903" endtime="20201115 22:00:25.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.212" level="INFO">${RESULT} = [{'time': 0.021789972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.022761972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.209" endtime="20201115 22:00:25.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.225" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.213" endtime="20201115 22:00:25.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.230" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:25.229" endtime="20201115 22:00:25.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.232" level="INFO">VALUE: [2.9389000000001192e-05, 2.9374999999998153e-05, 2.9389000000001192e-05, 2.9375000000001622e-05, 2.9374999999998153e-05, 2.9333999999998916e-05, 2.9374999999998153e-05, 2.9403000000000762e-05, 2.9417000000000332e-05, 2.9375000000001622e-05, 2.9332999999999443e-05, 2.9430999999996432e-05, 2.9388999999997723e-05, 2.940199999999782e-05, 2.9374999999998153e-05, 2.9402999999997292e-05, 2.937500000000509e-05, 2.937500000000509e-05, 2.9374999999998153e-05, 2.9388999999997723e-05, 2.9402999999997292e-05, 2.9346999999999013e-05, 2.9388999999997723e-05, 2.9388999999997723e-05, 2.938900000000466e-05, 2.9374999999998153e-05, 2.9416999999996862e-05, 2.938900000000466e-05, 2.937500000000509e-05, 2.937500000000509e-05, 2.938900000000466e-05, 2.9360999999998583e-05, 2.9402999999997292e-05, 2.9402999999997292e-05, 2.9402999999997292e-05, 2.9374999999998153e-05, 2.940300000000423e-05, 2.938799999999825e-05, 2.9402000000004758e-05, 2.940199999999782e-05, 2.9402999999997292e-05, 2.9402999999997292e-05, 2.9402999999997292e-05, 2.9360999999991644e-05, 2.938900000000466e-05, 2.9402999999997292e-05, 2.9374999999998153e-05, 2.942999999999696e-05, 2.936100000000552e-05, 2.9402999999997292e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.231" endtime="20201115 22:00:25.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.226" endtime="20201115 22:00:25.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.235" endtime="20201115 22:00:25.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.239" endtime="20201115 22:00:25.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.237" endtime="20201115 22:00:25.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.234" endtime="20201115 22:00:25.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.829" endtime="20201115 22:00:25.259"></status>
</kw>
<msg timestamp="20201115 22:00:25.260" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.268" endtime="20201115 22:00:25.325"></status>
</kw>
<msg timestamp="20201115 22:00:25.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.267" endtime="20201115 22:00:25.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.327" endtime="20201115 22:00:25.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.329" endtime="20201115 22:00:25.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.264" endtime="20201115 22:00:25.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.262" endtime="20201115 22:00:25.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.339" endtime="20201115 22:00:25.624"></status>
</kw>
<msg timestamp="20201115 22:00:25.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.338" endtime="20201115 22:00:25.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.628" endtime="20201115 22:00:25.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.636" endtime="20201115 22:00:25.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.335" endtime="20201115 22:00:25.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.333" endtime="20201115 22:00:25.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.643" level="INFO">${RESULT} = [{'time': 0.021810083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.022779264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.640" endtime="20201115 22:00:25.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.656" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.644" endtime="20201115 22:00:25.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.661" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:25.660" endtime="20201115 22:00:25.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.663" level="INFO">VALUE: [2.9389000000001192e-05, 2.9346999999999013e-05, 2.9388999999997723e-05, 2.9417000000000332e-05, 2.9388999999997723e-05, 2.9402999999997292e-05, 2.9389000000001192e-05, 2.9388999999997723e-05, 2.9457999999999568e-05, 2.9402999999997292e-05, 2.9374999999998153e-05, 2.937500000000509e-05, 2.9318999999999873e-05, 2.9374999999998153e-05, 2.9319999999999347e-05, 2.9444000000003467e-05, 2.94170000000038e-05, 2.9374999999998153e-05, 2.943100000000337e-05, 2.9388999999997723e-05, 2.9332999999999443e-05, 2.9362000000004995e-05, 2.9388999999997723e-05, 2.9416000000004328e-05, 2.9472000000002607e-05, 2.940300000000423e-05, 2.940199999999782e-05, 2.9402000000004758e-05, 2.938900000000466e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.9374999999998153e-05, 2.938900000000466e-05, 2.9388999999997723e-05, 2.9374999999998153e-05, 2.943100000000337e-05, 2.94579999999961e-05, 2.937500000000509e-05, 2.9374999999998153e-05, 2.9319999999999347e-05, 2.9444000000003467e-05, 2.9374999999998153e-05, 2.9416000000004328e-05, 2.938900000000466e-05, 2.938900000000466e-05, 2.94579999999961e-05, 2.9374999999998153e-05, 2.938900000000466e-05, 2.9374999999998153e-05, 2.9402999999997292e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.662" endtime="20201115 22:00:25.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.657" endtime="20201115 22:00:25.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.666" endtime="20201115 22:00:25.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.670" endtime="20201115 22:00:25.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.668" endtime="20201115 22:00:25.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.665" endtime="20201115 22:00:25.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.260" endtime="20201115 22:00:25.691"></status>
</kw>
<msg timestamp="20201115 22:00:25.691" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.700" endtime="20201115 22:00:25.756"></status>
</kw>
<msg timestamp="20201115 22:00:25.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.698" endtime="20201115 22:00:25.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.758" endtime="20201115 22:00:25.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.760" endtime="20201115 22:00:25.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.695" endtime="20201115 22:00:25.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.693" endtime="20201115 22:00:25.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.770" endtime="20201115 22:00:26.069"></status>
</kw>
<msg timestamp="20201115 22:00:26.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.769" endtime="20201115 22:00:26.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.078" endtime="20201115 22:00:26.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.086" endtime="20201115 22:00:26.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.766" endtime="20201115 22:00:26.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.764" endtime="20201115 22:00:26.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.093" level="INFO">${RESULT} = [{'time': 0.021832097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.022807014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.090" endtime="20201115 22:00:26.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.106" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.094" endtime="20201115 22:00:26.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.111" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:26.110" endtime="20201115 22:00:26.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.113" level="INFO">VALUE: [2.9403000000000762e-05, 2.9403000000000762e-05, 2.9458000000003037e-05, 2.9417000000000332e-05, 2.9388999999997723e-05, 2.9389000000001192e-05, 2.9346999999999013e-05, 2.9403000000000762e-05, 2.9389000000001192e-05, 2.9346999999999013e-05, 2.9402000000004758e-05, 2.9332999999999443e-05, 2.9458000000003037e-05, 2.940199999999782e-05, 2.9388999999997723e-05, 2.9346999999999013e-05, 2.9402000000004758e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.9360999999998583e-05, 2.942999999999696e-05, 2.9402999999997292e-05, 2.9402000000004758e-05, 2.9374999999998153e-05, 2.9388000000005188e-05, 2.9388999999997723e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.940300000000423e-05, 2.9402999999997292e-05, 2.9388999999997723e-05, 2.9346999999999013e-05, 2.9347999999998486e-05, 2.9458000000003037e-05, 2.9374999999998153e-05, 2.9388999999997723e-05, 2.94170000000038e-05, 2.9360999999998583e-05, 2.9402999999997292e-05, 2.94170000000038e-05, 2.940300000000423e-05, 2.9430999999996432e-05, 2.938900000000466e-05, 2.940199999999782e-05, 2.9374999999998153e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.9444000000003467e-05, 2.9430000000010836e-05, 2.9360999999991644e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.112" endtime="20201115 22:00:26.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.107" endtime="20201115 22:00:26.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.116" endtime="20201115 22:00:26.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.120" endtime="20201115 22:00:26.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.118" endtime="20201115 22:00:26.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.115" endtime="20201115 22:00:26.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.691" endtime="20201115 22:00:26.141"></status>
</kw>
<msg timestamp="20201115 22:00:26.141" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.149" endtime="20201115 22:00:26.206"></status>
</kw>
<msg timestamp="20201115 22:00:26.207" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.148" endtime="20201115 22:00:26.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.208" endtime="20201115 22:00:26.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.210" endtime="20201115 22:00:26.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.145" endtime="20201115 22:00:26.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.143" endtime="20201115 22:00:26.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.220" endtime="20201115 22:00:26.505"></status>
</kw>
<msg timestamp="20201115 22:00:26.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.218" endtime="20201115 22:00:26.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.510" endtime="20201115 22:00:26.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.518" endtime="20201115 22:00:26.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.216" endtime="20201115 22:00:26.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.214" endtime="20201115 22:00:26.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.524" level="INFO">${RESULT} = [{'time': 0.021714458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.940199999999782e-05, 'source_diff': 2.940199999999782e-05}, {'time': 0.022691583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:26.521" endtime="20201115 22:00:26.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.538" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.525" endtime="20201115 22:00:26.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.542" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:26.541" endtime="20201115 22:00:26.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.544" level="INFO">VALUE: [2.940199999999782e-05, 2.9389000000001192e-05, 2.9402000000001288e-05, 2.9388999999997723e-05, 2.9346999999999013e-05, 2.9403000000000762e-05, 2.9389000000001192e-05, 2.9374999999998153e-05, 2.9403000000000762e-05, 2.9403000000000762e-05, 2.9374999999998153e-05, 2.941599999999739e-05, 2.9416000000004328e-05, 2.940300000000423e-05, 2.9360999999998583e-05, 2.9388999999997723e-05, 2.9416999999996862e-05, 2.941599999999739e-05, 2.938900000000466e-05, 2.9374999999998153e-05, 2.938900000000466e-05, 2.9402999999997292e-05, 2.940300000000423e-05, 2.9388999999997723e-05, 2.9416999999996862e-05, 2.9402999999997292e-05, 2.9388999999997723e-05, 2.9388000000005188e-05, 2.9388999999997723e-05, 2.9444999999996002e-05, 2.941599999999739e-05, 2.9374999999998153e-05, 2.9416999999996862e-05, 2.945900000000251e-05, 2.9388999999997723e-05, 2.9374999999998153e-05, 2.940300000000423e-05, 2.9388999999997723e-05, 2.94170000000038e-05, 2.9388999999997723e-05, 2.941599999999739e-05, 2.9458000000003037e-05, 2.9402999999997292e-05, 2.938900000000466e-05, 2.940199999999782e-05, 2.9374999999998153e-05, 2.9430000000010836e-05, 2.9416999999989923e-05, 2.9346999999999013e-05, 2.9374999999998153e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.543" endtime="20201115 22:00:26.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.539" endtime="20201115 22:00:26.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.548" endtime="20201115 22:00:26.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.551" endtime="20201115 22:00:26.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.549" endtime="20201115 22:00:26.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.546" endtime="20201115 22:00:26.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.141" endtime="20201115 22:00:26.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.384" endtime="20201115 22:00:26.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.383" endtime="20201115 22:00:26.572"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.574" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.583" endtime="20201115 22:00:26.644"></status>
</kw>
<msg timestamp="20201115 22:00:26.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.581" endtime="20201115 22:00:26.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.646" endtime="20201115 22:00:26.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.648" endtime="20201115 22:00:26.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.579" endtime="20201115 22:00:26.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.577" endtime="20201115 22:00:26.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.657" endtime="20201115 22:00:26.959"></status>
</kw>
<msg timestamp="20201115 22:00:26.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025606556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025636778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.656" endtime="20201115 22:00:26.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025606556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025636778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.963" endtime="20201115 22:00:26.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.971" endtime="20201115 22:00:26.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.653" endtime="20201115 22:00:26.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.652" endtime="20201115 22:00:26.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.978" level="INFO">${RESULT} = [{'time': 0.025636778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0221999999999888e-05, 'source_diff': 3.0221999999999888e-05}, {'time': 0.026670556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.974" endtime="20201115 22:00:26.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.991" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.979" endtime="20201115 22:00:26.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.996" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.995" endtime="20201115 22:00:26.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.998" level="INFO">VALUE: [3.0221999999999888e-05, 3.0125000000002372e-05, 3.0180000000001178e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0069000000000623e-05, 3.0124999999998903e-05, 3.013900000000541e-05, 3.0166999999997612e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0096999999999763e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.013900000000541e-05, 3.011100000000627e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.012500000000584e-05, 3.012500000000584e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.019399999999728e-05, 3.0124999999998903e-05, 3.015199999999857e-05, 3.0138999999998473e-05, 3.0152999999991104e-05, 3.0152000000005508e-05, 3.0138999999998473e-05, 3.0194999999996752e-05, 3.0137999999999e-05, 3.0083999999999667e-05, 3.013900000001235e-05, 3.0166999999997612e-05, 3.0137999999999e-05, 3.0138999999998473e-05, 3.0180999999990243e-05, 3.0137999999999e-05, 3.0138999999998473e-05, 3.022199999999642e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.997" endtime="20201115 22:00:26.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.992" endtime="20201115 22:00:26.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.001" endtime="20201115 22:00:27.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.005" endtime="20201115 22:00:27.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.003" endtime="20201115 22:00:27.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.000" endtime="20201115 22:00:27.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.575" endtime="20201115 22:00:27.025"></status>
</kw>
<msg timestamp="20201115 22:00:27.026" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.035" endtime="20201115 22:00:27.094"></status>
</kw>
<msg timestamp="20201115 22:00:27.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.033" endtime="20201115 22:00:27.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.096" endtime="20201115 22:00:27.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.099" endtime="20201115 22:00:27.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.030" endtime="20201115 22:00:27.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.028" endtime="20201115 22:00:27.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.109" endtime="20201115 22:00:27.394"></status>
</kw>
<msg timestamp="20201115 22:00:27.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.107" endtime="20201115 22:00:27.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.398" endtime="20201115 22:00:27.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.406" endtime="20201115 22:00:27.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.105" endtime="20201115 22:00:27.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.103" endtime="20201115 22:00:27.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.413" level="INFO">${RESULT} = [{'time': 0.021944458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.015199999999857e-05, 'source_diff': 3.015199999999857e-05}, {'time': 0.022981611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:27.410" endtime="20201115 22:00:27.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.427" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.414" endtime="20201115 22:00:27.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.432" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:27.431" endtime="20201115 22:00:27.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.434" level="INFO">VALUE: [3.015199999999857e-05, 3.0166999999997612e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0153000000001512e-05, 3.0125000000002372e-05, 3.0180999999997182e-05, 3.0139000000001942e-05, 3.0138999999998473e-05, 3.0139000000001942e-05, 3.020799999999685e-05, 3.019399999999728e-05, 3.016700000000455e-05, 3.0138999999998473e-05, 3.0166999999997612e-05, 3.019399999999728e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.016700000000455e-05, 3.0096999999999763e-05, 3.019399999999728e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.011100000000627e-05, 3.0166999999997612e-05, 3.0152999999998042e-05, 3.013900000000541e-05, 3.017999999999771e-05, 3.0152999999998042e-05, 3.013900000000541e-05, 3.013900000000541e-05, 3.015300000000498e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0137999999999e-05, 3.013900000000541e-05, 3.0152999999998042e-05, 3.0110999999999333e-05, 3.0152999999991104e-05, 3.0137999999999e-05, 3.0138999999998473e-05, 3.016599999999814e-05, 3.0083000000000193e-05, 3.0137999999999e-05, 3.0083000000000193e-05, 3.012500000000584e-05, 3.0138999999998473e-05, 3.0124999999991964e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.433" endtime="20201115 22:00:27.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.428" endtime="20201115 22:00:27.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.437" endtime="20201115 22:00:27.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.441" endtime="20201115 22:00:27.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.439" endtime="20201115 22:00:27.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.436" endtime="20201115 22:00:27.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.026" endtime="20201115 22:00:27.462"></status>
</kw>
<msg timestamp="20201115 22:00:27.462" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.475" endtime="20201115 22:00:27.535"></status>
</kw>
<msg timestamp="20201115 22:00:27.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.469" endtime="20201115 22:00:27.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.536" endtime="20201115 22:00:27.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.539" endtime="20201115 22:00:27.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.467" endtime="20201115 22:00:27.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.464" endtime="20201115 22:00:27.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.549" endtime="20201115 22:00:27.834"></status>
</kw>
<msg timestamp="20201115 22:00:27.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026253722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026283875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.547" endtime="20201115 22:00:27.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026253722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026283875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.838" endtime="20201115 22:00:27.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.846" endtime="20201115 22:00:27.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.545" endtime="20201115 22:00:27.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.543" endtime="20201115 22:00:27.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.852" level="INFO">${RESULT} = [{'time': 0.026283875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0153000000001512e-05, 'source_diff': 3.0153000000001512e-05}, {'time': 0.027326319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.849" endtime="20201115 22:00:27.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.866" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.853" endtime="20201115 22:00:27.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.870" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:27.869" endtime="20201115 22:00:27.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.873" level="INFO">VALUE: [3.0153000000001512e-05, 3.013800000000247e-05, 3.0167000000001082e-05, 3.017999999999771e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.013900000000541e-05, 3.013900000000541e-05, 3.013900000000541e-05, 3.0110999999999333e-05, 3.013900000000541e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0137999999999e-05, 3.015199999999857e-05, 3.0070000000000097e-05, 3.012500000000584e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.012500000000584e-05, 3.013900000000541e-05, 3.0152999999998042e-05, 3.0124999999998903e-05, 3.0083000000000193e-05, 3.0166999999997612e-05, 3.013900000000541e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0096999999999763e-05, 3.019500000000369e-05, 3.0166999999997612e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.015300000000498e-05, 3.0152999999991104e-05, 3.0152999999991104e-05, 3.0096999999992824e-05, 3.0124999999991964e-05, 3.0097000000006702e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0056000000000527e-05, 3.015300000000498e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.871" endtime="20201115 22:00:27.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.867" endtime="20201115 22:00:27.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.876" endtime="20201115 22:00:27.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.879" endtime="20201115 22:00:27.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.878" endtime="20201115 22:00:27.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.874" endtime="20201115 22:00:27.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.462" endtime="20201115 22:00:27.901"></status>
</kw>
<msg timestamp="20201115 22:00:27.901" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.910" endtime="20201115 22:00:27.969"></status>
</kw>
<msg timestamp="20201115 22:00:27.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.908" endtime="20201115 22:00:27.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.971" endtime="20201115 22:00:27.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.973" endtime="20201115 22:00:27.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.906" endtime="20201115 22:00:27.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.903" endtime="20201115 22:00:27.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.983" endtime="20201115 22:00:28.269"></status>
</kw>
<msg timestamp="20201115 22:00:28.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.982" endtime="20201115 22:00:28.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.273" endtime="20201115 22:00:28.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.281" endtime="20201115 22:00:28.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.979" endtime="20201115 22:00:28.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.978" endtime="20201115 22:00:28.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.288" level="INFO">${RESULT} = [{'time': 0.022417611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139000000001942e-05, 'source_diff': 3.0139000000001942e-05}, {'time': 0.023451083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.285" endtime="20201115 22:00:28.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.302" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.289" endtime="20201115 22:00:28.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.306" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:28.305" endtime="20201115 22:00:28.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.309" level="INFO">VALUE: [3.0139000000001942e-05, 3.0139000000001942e-05, 3.0153000000001512e-05, 3.0139000000001942e-05, 3.0139000000001942e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.015199999999857e-05, 3.0152999999998042e-05, 3.011100000000627e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.013900000000541e-05, 3.0110999999999333e-05, 3.015300000000498e-05, 3.0110999999999333e-05, 3.018100000000412e-05, 3.013900000000541e-05, 3.015300000000498e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.012500000000584e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0124999999998903e-05, 3.015199999999857e-05, 3.0124999999998903e-05, 3.013900000000541e-05, 3.012500000000584e-05, 3.0138999999998473e-05, 3.016599999999814e-05, 3.0138999999998473e-05, 3.0152999999998042e-05, 3.0111999999998806e-05, 3.0138999999998473e-05, 3.013900000000541e-05, 3.0124999999998903e-05, 3.0152999999998042e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0166999999997612e-05, 3.0124999999991964e-05, 3.0068999999993684e-05, 3.0124999999991964e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0137999999999e-05, 3.015199999999163e-05, 3.0138999999998473e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.307" endtime="20201115 22:00:28.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.303" endtime="20201115 22:00:28.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.312" endtime="20201115 22:00:28.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.316" endtime="20201115 22:00:28.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.314" endtime="20201115 22:00:28.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.311" endtime="20201115 22:00:28.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.901" endtime="20201115 22:00:28.337"></status>
</kw>
<msg timestamp="20201115 22:00:28.337" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.346" endtime="20201115 22:00:28.405"></status>
</kw>
<msg timestamp="20201115 22:00:28.406" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.344" endtime="20201115 22:00:28.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.408" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.407" endtime="20201115 22:00:28.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.409" endtime="20201115 22:00:28.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.341" endtime="20201115 22:00:28.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.339" endtime="20201115 22:00:28.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.420" endtime="20201115 22:00:28.706"></status>
</kw>
<msg timestamp="20201115 22:00:28.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.419" endtime="20201115 22:00:28.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.710" endtime="20201115 22:00:28.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.718" endtime="20201115 22:00:28.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.416" endtime="20201115 22:00:28.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.414" endtime="20201115 22:00:28.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.725" level="INFO">${RESULT} = [{'time': 0.021960139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083000000000193e-05, 'source_diff': 3.0083000000000193e-05}, {'time': 0.022999722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.721" endtime="20201115 22:00:28.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.738" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.726" endtime="20201115 22:00:28.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.743" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:28.742" endtime="20201115 22:00:28.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.745" level="INFO">VALUE: [3.0083000000000193e-05, 3.0139000000001942e-05, 3.019399999999728e-05, 3.0124999999998903e-05, 3.013800000000247e-05, 3.0139000000001942e-05, 3.015199999999857e-05, 3.0138999999998473e-05, 3.0069999999996627e-05, 3.0138999999998473e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0138999999998473e-05, 3.012500000000584e-05, 3.012500000000584e-05, 3.0138999999998473e-05, 3.0138999999998473e-05, 3.0083000000000193e-05, 3.019399999999728e-05, 3.0166000000005078e-05, 3.011100000000627e-05, 3.0124999999998903e-05, 3.0124999999998903e-05, 3.0208000000003787e-05, 3.013900000000541e-05, 3.0138999999998473e-05, 3.0110999999999333e-05, 3.0138999999998473e-05, 3.0152000000005508e-05, 3.016700000000455e-05, 3.0137999999999e-05, 3.0138999999998473e-05, 3.015199999999857e-05, 3.018100000000412e-05, 3.0138999999998473e-05, 3.0069999999993158e-05, 3.0083000000000193e-05, 3.0152999999998042e-05, 3.017999999999771e-05, 3.018100000000412e-05, 3.012500000000584e-05, 3.0110999999999333e-05, 3.0152000000005508e-05, 3.012500000000584e-05, 3.0083000000000193e-05, 3.0138999999998473e-05, 3.015300000000498e-05, 3.016599999999814e-05, 3.0110999999999333e-05, 3.015199999999163e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.744" endtime="20201115 22:00:28.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.739" endtime="20201115 22:00:28.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.749" endtime="20201115 22:00:28.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.752" endtime="20201115 22:00:28.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.751" endtime="20201115 22:00:28.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.747" endtime="20201115 22:00:28.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.337" endtime="20201115 22:00:28.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.573" endtime="20201115 22:00:28.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.572" endtime="20201115 22:00:28.773"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.776" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.784" endtime="20201115 22:00:28.847"></status>
</kw>
<msg timestamp="20201115 22:00:28.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.783" endtime="20201115 22:00:28.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.849" endtime="20201115 22:00:28.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.851" endtime="20201115 22:00:28.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.780" endtime="20201115 22:00:28.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.778" endtime="20201115 22:00:28.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.860" endtime="20201115 22:00:29.165"></status>
</kw>
<msg timestamp="20201115 22:00:29.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.859" endtime="20201115 22:00:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.169" endtime="20201115 22:00:29.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.177" endtime="20201115 22:00:29.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.856" endtime="20201115 22:00:29.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.854" endtime="20201115 22:00:29.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.184" level="INFO">${RESULT} = [{'time': 0.024344986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.090299999999879e-05, 'source_diff': 3.090299999999879e-05}, {'time': 0.025429194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.180" endtime="20201115 22:00:29.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.197" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.185" endtime="20201115 22:00:29.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.202" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:29.201" endtime="20201115 22:00:29.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.205" level="INFO">VALUE: [3.090299999999879e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.093000000000193e-05, 3.090199999999932e-05, 3.094500000000444e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.0804999999994864e-05, 3.090199999999932e-05, 3.088899999999922e-05, 3.088799999999975e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.083300000000094e-05, 3.084700000000051e-05, 3.088899999999922e-05, 3.084700000000051e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.090199999999932e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.082000000000085e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.091699999999836e-05, 3.091699999999836e-05, 3.087499999999965e-05, 3.091599999999889e-05, 3.087499999999965e-05, 3.0888999999992284e-05, 3.093099999999793e-05, 3.087499999999965e-05, 3.088900000000616e-05, 3.091600000000583e-05, 3.087500000001353e-05, 3.091600000000583e-05, 3.0888999999992284e-05, 3.090299999999879e-05, 3.079200000000171e-05, 3.0888999999992284e-05, 3.087499999999965e-05, 3.087500000001353e-05, 3.084700000000051e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.203" endtime="20201115 22:00:29.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.198" endtime="20201115 22:00:29.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.208" endtime="20201115 22:00:29.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.211" endtime="20201115 22:00:29.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.210" endtime="20201115 22:00:29.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.206" endtime="20201115 22:00:29.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.776" endtime="20201115 22:00:29.232"></status>
</kw>
<msg timestamp="20201115 22:00:29.232" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.241" endtime="20201115 22:00:29.304"></status>
</kw>
<msg timestamp="20201115 22:00:29.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.240" endtime="20201115 22:00:29.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.305" endtime="20201115 22:00:29.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.308" endtime="20201115 22:00:29.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.237" endtime="20201115 22:00:29.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.235" endtime="20201115 22:00:29.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.318" endtime="20201115 22:00:29.603"></status>
</kw>
<msg timestamp="20201115 22:00:29.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.316" endtime="20201115 22:00:29.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.607" endtime="20201115 22:00:29.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.615" endtime="20201115 22:00:29.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.314" endtime="20201115 22:00:29.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.312" endtime="20201115 22:00:29.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.622" level="INFO">${RESULT} = [{'time': 0.022052583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.087499999999965e-05, 'source_diff': 3.087499999999965e-05}, {'time': 0.023151819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:29.619" endtime="20201115 22:00:29.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.635" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.623" endtime="20201115 22:00:29.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.640" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:29.639" endtime="20201115 22:00:29.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.643" level="INFO">VALUE: [3.087499999999965e-05, 3.090199999999932e-05, 3.094500000000097e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.090300000000226e-05, 3.09310000000014e-05, 3.088899999999922e-05, 3.09310000000014e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.083400000000042e-05, 3.090299999999879e-05, 3.090199999999932e-05, 3.086100000000008e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.092999999999846e-05, 3.091699999999836e-05, 3.088899999999922e-05, 3.091699999999836e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.093099999999793e-05, 3.087499999999965e-05, 3.081900000000137e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.09170000000053e-05, 3.087500000000659e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.094399999999803e-05, 3.086100000000008e-05, 3.0916999999991424e-05, 3.090299999999879e-05, 3.086100000000702e-05, 3.087499999999965e-05, 3.083300000000788e-05, 3.090299999999879e-05, 3.095899999999707e-05, 3.0916999999991424e-05, 3.0888999999992284e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.090199999999932e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.641" endtime="20201115 22:00:29.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.636" endtime="20201115 22:00:29.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.646" endtime="20201115 22:00:29.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.649" endtime="20201115 22:00:29.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.648" endtime="20201115 22:00:29.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.644" endtime="20201115 22:00:29.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.233" endtime="20201115 22:00:29.670"></status>
</kw>
<msg timestamp="20201115 22:00:29.670" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.679" endtime="20201115 22:00:29.742"></status>
</kw>
<msg timestamp="20201115 22:00:29.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.678" endtime="20201115 22:00:29.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.745" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.743" endtime="20201115 22:00:29.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.746" endtime="20201115 22:00:29.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.675" endtime="20201115 22:00:29.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.673" endtime="20201115 22:00:29.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.756" endtime="20201115 22:00:30.041"></status>
</kw>
<msg timestamp="20201115 22:00:30.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.754" endtime="20201115 22:00:30.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.045" endtime="20201115 22:00:30.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.053" endtime="20201115 22:00:30.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.752" endtime="20201115 22:00:30.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.750" endtime="20201115 22:00:30.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.060" level="INFO">${RESULT} = [{'time': 0.022145694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.084700000000051e-05, 'source_diff': 3.084700000000051e-05}, {'time': 0.023247181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.056" endtime="20201115 22:00:30.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.073" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.061" endtime="20201115 22:00:30.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.078" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:30.077" endtime="20201115 22:00:30.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.081" level="INFO">VALUE: [3.084700000000051e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.091599999999889e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.088899999999922e-05, 3.086100000000008e-05, 3.088899999999922e-05, 3.093100000000487e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.090199999999932e-05, 3.087500000000659e-05, 3.082000000000085e-05, 3.083400000000042e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.081900000000137e-05, 3.088899999999922e-05, 3.091600000000583e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.084700000000051e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.091699999999836e-05, 3.087499999999965e-05, 3.0847999999999987e-05, 3.088800000000669e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.084700000000051e-05, 3.090199999999932e-05, 3.088799999999281e-05, 3.0888999999992284e-05, 3.0888999999992284e-05, 3.090299999999879e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.079" endtime="20201115 22:00:30.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.074" endtime="20201115 22:00:30.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.084" endtime="20201115 22:00:30.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.087" endtime="20201115 22:00:30.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.086" endtime="20201115 22:00:30.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.082" endtime="20201115 22:00:30.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.671" endtime="20201115 22:00:30.108"></status>
</kw>
<msg timestamp="20201115 22:00:30.108" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.117" endtime="20201115 22:00:30.180"></status>
</kw>
<msg timestamp="20201115 22:00:30.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.116" endtime="20201115 22:00:30.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.181" endtime="20201115 22:00:30.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.184" endtime="20201115 22:00:30.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.113" endtime="20201115 22:00:30.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.111" endtime="20201115 22:00:30.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.195" endtime="20201115 22:00:30.481"></status>
</kw>
<msg timestamp="20201115 22:00:30.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.193" endtime="20201115 22:00:30.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.485" endtime="20201115 22:00:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.494" endtime="20201115 22:00:30.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.191" endtime="20201115 22:00:30.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.189" endtime="20201115 22:00:30.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.500" level="INFO">${RESULT} = [{'time': 0.022101222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.088899999999922e-05, 'source_diff': 3.088899999999922e-05}, {'time': 0.023200806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:30.497" endtime="20201115 22:00:30.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.514" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.501" endtime="20201115 22:00:30.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.518" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:30.517" endtime="20201115 22:00:30.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.521" level="INFO">VALUE: [3.088899999999922e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.090199999999932e-05, 3.088799999999975e-05, 3.083300000000094e-05, 3.09440000000015e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.088799999999975e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.083300000000094e-05, 3.086100000000008e-05, 3.088799999999975e-05, 3.08050000000018e-05, 3.090299999999879e-05, 3.088899999999922e-05, 3.0847999999999987e-05, 3.088899999999922e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.09579999999976e-05, 3.088799999999975e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.090199999999932e-05, 3.088799999999975e-05, 3.088899999999922e-05, 3.087500000000659e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.092999999999846e-05, 3.087499999999965e-05, 3.095899999999707e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.09020000000132e-05, 3.081900000000137e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.0888999999992284e-05, 3.087499999999965e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.520" endtime="20201115 22:00:30.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.515" endtime="20201115 22:00:30.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.524" endtime="20201115 22:00:30.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.528" endtime="20201115 22:00:30.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.526" endtime="20201115 22:00:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.522" endtime="20201115 22:00:30.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.109" endtime="20201115 22:00:30.548"></status>
</kw>
<msg timestamp="20201115 22:00:30.549" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.558" endtime="20201115 22:00:30.621"></status>
</kw>
<msg timestamp="20201115 22:00:30.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.556" endtime="20201115 22:00:30.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.622" endtime="20201115 22:00:30.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.625" endtime="20201115 22:00:30.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.553" endtime="20201115 22:00:30.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.551" endtime="20201115 22:00:30.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.635" endtime="20201115 22:00:30.921"></status>
</kw>
<msg timestamp="20201115 22:00:30.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.633" endtime="20201115 22:00:30.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.925" endtime="20201115 22:00:30.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.933" endtime="20201115 22:00:30.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.630" endtime="20201115 22:00:30.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.629" endtime="20201115 22:00:30.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.940" level="INFO">${RESULT} = [{'time': 0.022556625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.088899999999922e-05, 'source_diff': 3.088899999999922e-05}, {'time': 0.02366025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:30.937" endtime="20201115 22:00:30.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.953" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.941" endtime="20201115 22:00:30.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.958" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:30.957" endtime="20201115 22:00:30.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.960" level="INFO">VALUE: [3.088899999999922e-05, 3.088899999999922e-05, 3.090299999999879e-05, 3.088899999999922e-05, 3.086100000000008e-05, 3.088899999999922e-05, 3.090300000000226e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.090299999999879e-05, 3.088899999999922e-05, 3.091699999999836e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.087500000000659e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.092999999999846e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.090199999999932e-05, 3.0818999999994434e-05, 3.090299999999879e-05, 3.090199999999932e-05, 3.0861999999999556e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.090299999999879e-05, 3.092999999999846e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.090299999999879e-05, 3.087499999999965e-05, 3.088900000000616e-05, 3.09170000000053e-05, 3.088900000000616e-05, 3.087499999999965e-05, 3.0888999999992284e-05, 3.0860999999993144e-05, 3.0888999999992284e-05, 3.0888999999992284e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.959" endtime="20201115 22:00:30.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.954" endtime="20201115 22:00:30.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.963" endtime="20201115 22:00:30.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.967" endtime="20201115 22:00:30.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.965" endtime="20201115 22:00:30.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.962" endtime="20201115 22:00:30.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.549" endtime="20201115 22:00:30.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.775" endtime="20201115 22:00:30.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.774" endtime="20201115 22:00:30.988"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.990" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.999" endtime="20201115 22:00:31.064"></status>
</kw>
<msg timestamp="20201115 22:00:31.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.997" endtime="20201115 22:00:31.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.066" endtime="20201115 22:00:31.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.069" endtime="20201115 22:00:31.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.995" endtime="20201115 22:00:31.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.993" endtime="20201115 22:00:31.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.079" endtime="20201115 22:00:31.383"></status>
</kw>
<msg timestamp="20201115 22:00:31.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.076" endtime="20201115 22:00:31.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.387" endtime="20201115 22:00:31.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.395" endtime="20201115 22:00:31.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.074" endtime="20201115 22:00:31.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.072" endtime="20201115 22:00:31.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.402" level="INFO">${RESULT} = [{'time': 0.024467028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.162499999999693e-05, 'source_diff': 3.162499999999693e-05}, {'time': 0.025622528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.398" endtime="20201115 22:00:31.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.415" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.403" endtime="20201115 22:00:31.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.420" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:31.418" endtime="20201115 22:00:31.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.422" level="INFO">VALUE: [3.162499999999693e-05, 3.162499999999693e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.1624999999993464e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.165200000000007e-05, 3.16250000000004e-05, 3.168099999999868e-05, 3.159700000000126e-05, 3.163899999999997e-05, 3.154200000000246e-05, 3.159700000000126e-05, 3.165200000000007e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.165299999999954e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.168099999999868e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.1624999999993464e-05, 3.16250000000004e-05, 3.165200000000007e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.1624999999993464e-05, 3.162500000000734e-05, 3.1652999999992604e-05, 3.16380000000005e-05, 3.170800000000529e-05, 3.163899999999997e-05, 3.166699999999911e-05, 3.1624999999993464e-05, 3.163899999999997e-05, 3.1554999999988675e-05, 3.1652999999992604e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.168100000000562e-05, 3.162500000000734e-05, 3.165199999999313e-05, 3.165300000000648e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.421" endtime="20201115 22:00:31.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.416" endtime="20201115 22:00:31.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.425" endtime="20201115 22:00:31.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.428" endtime="20201115 22:00:31.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.427" endtime="20201115 22:00:31.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.423" endtime="20201115 22:00:31.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.991" endtime="20201115 22:00:31.449"></status>
</kw>
<msg timestamp="20201115 22:00:31.449" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.458" endtime="20201115 22:00:31.524"></status>
</kw>
<msg timestamp="20201115 22:00:31.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.457" endtime="20201115 22:00:31.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.525" endtime="20201115 22:00:31.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.528" endtime="20201115 22:00:31.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.454" endtime="20201115 22:00:31.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.452" endtime="20201115 22:00:31.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.538" endtime="20201115 22:00:31.825"></status>
</kw>
<msg timestamp="20201115 22:00:31.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.537" endtime="20201115 22:00:31.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.829" endtime="20201115 22:00:31.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.837" endtime="20201115 22:00:31.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.534" endtime="20201115 22:00:31.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.532" endtime="20201115 22:00:31.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.844" level="INFO">${RESULT} = [{'time': 0.021940694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.161100000000083e-05, 'source_diff': 3.161100000000083e-05}, {'time': 0.023094639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:31.840" endtime="20201115 22:00:31.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.857" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.845" endtime="20201115 22:00:31.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.861" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:31.860" endtime="20201115 22:00:31.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.864" level="INFO">VALUE: [3.161100000000083e-05, 3.161100000000083e-05, 3.166599999999964e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.168099999999868e-05, 3.158400000000117e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.158300000000169e-05, 3.169400000000572e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.156900000000212e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.165200000000007e-05, 3.165200000000007e-05, 3.1610999999993894e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.1612000000000307e-05, 3.16250000000004e-05, 3.1554999999995614e-05, 3.1624999999993464e-05, 3.162500000000734e-05, 3.166699999999911e-05, 3.1652999999992604e-05, 3.158300000000169e-05, 3.1624999999993464e-05, 3.165199999999313e-05, 3.162500000000734e-05, 3.162500000000734e-05, 3.1624999999993464e-05, 3.165199999999313e-05, 3.163899999999997e-05, 3.165199999999313e-05, 3.163899999999997e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.863" endtime="20201115 22:00:31.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.858" endtime="20201115 22:00:31.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.867" endtime="20201115 22:00:31.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.870" endtime="20201115 22:00:31.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.869" endtime="20201115 22:00:31.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.865" endtime="20201115 22:00:31.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.450" endtime="20201115 22:00:31.891"></status>
</kw>
<msg timestamp="20201115 22:00:31.891" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.901" endtime="20201115 22:00:31.967"></status>
</kw>
<msg timestamp="20201115 22:00:31.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.899" endtime="20201115 22:00:31.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.968" endtime="20201115 22:00:31.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.971" endtime="20201115 22:00:31.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.896" endtime="20201115 22:00:31.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.894" endtime="20201115 22:00:31.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.981" endtime="20201115 22:00:32.266"></status>
</kw>
<msg timestamp="20201115 22:00:32.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.980" endtime="20201115 22:00:32.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.271" endtime="20201115 22:00:32.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.279" endtime="20201115 22:00:32.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.977" endtime="20201115 22:00:32.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.976" endtime="20201115 22:00:32.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.285" level="INFO">${RESULT} = [{'time': 0.022646208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.161100000000083e-05, 'source_diff': 3.161100000000083e-05}, {'time': 0.023796958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.282" endtime="20201115 22:00:32.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.299" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.286" endtime="20201115 22:00:32.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.303" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:32.302" endtime="20201115 22:00:32.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.306" level="INFO">VALUE: [3.161100000000083e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.158300000000169e-05, 3.16250000000004e-05, 3.165200000000007e-05, 3.163899999999997e-05, 3.1610999999993894e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.165299999999954e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.165299999999954e-05, 3.165299999999954e-05, 3.165200000000007e-05, 3.159700000000126e-05, 3.16250000000004e-05, 3.158400000000117e-05, 3.166699999999911e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.159700000000126e-05, 3.1624999999993464e-05, 3.1624999999993464e-05, 3.1652999999992604e-05, 3.166699999999911e-05, 3.163899999999997e-05, 3.158300000000169e-05, 3.161100000000083e-05, 3.1624999999993464e-05, 3.166699999999911e-05, 3.158300000000169e-05, 3.1624999999993464e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.168000000000615e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.305" endtime="20201115 22:00:32.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.300" endtime="20201115 22:00:32.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.309" endtime="20201115 22:00:32.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.313" endtime="20201115 22:00:32.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.311" endtime="20201115 22:00:32.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.307" endtime="20201115 22:00:32.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.892" endtime="20201115 22:00:32.333"></status>
</kw>
<msg timestamp="20201115 22:00:32.334" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.343" endtime="20201115 22:00:32.408"></status>
</kw>
<msg timestamp="20201115 22:00:32.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.341" endtime="20201115 22:00:32.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.410" endtime="20201115 22:00:32.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.412" endtime="20201115 22:00:32.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.339" endtime="20201115 22:00:32.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.336" endtime="20201115 22:00:32.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.422" endtime="20201115 22:00:32.714"></status>
</kw>
<msg timestamp="20201115 22:00:32.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02260525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:32.421" endtime="20201115 22:00:32.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02260525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:32.718" endtime="20201115 22:00:32.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.726" endtime="20201115 22:00:32.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.418" endtime="20201115 22:00:32.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.417" endtime="20201115 22:00:32.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.733" level="INFO">${RESULT} = [{'time': 0.022636861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.161100000000083e-05, 'source_diff': 3.161100000000083e-05}, {'time': 0.023784389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:32.730" endtime="20201115 22:00:32.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.746" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.734" endtime="20201115 22:00:32.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.751" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:32.750" endtime="20201115 22:00:32.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.753" level="INFO">VALUE: [3.161100000000083e-05, 3.16250000000004e-05, 3.162499999999693e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.166599999999964e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.155600000000203e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.159700000000126e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.166700000000605e-05, 3.1624999999993464e-05, 3.16250000000004e-05, 3.165200000000007e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.167999999999921e-05, 3.163899999999997e-05, 3.167999999999921e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.155500000000255e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.16380000000005e-05, 3.165300000000648e-05, 3.165300000000648e-05, 3.163899999999997e-05, 3.162500000000734e-05, 3.163899999999997e-05, 3.165199999999313e-05, 3.1624999999993464e-05, 3.161100000000083e-05, 3.165300000000648e-05, 3.163899999999997e-05, 3.1652999999992604e-05, 3.163899999999997e-05, 3.170800000000529e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.752" endtime="20201115 22:00:32.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.747" endtime="20201115 22:00:32.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.756" endtime="20201115 22:00:32.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.765" endtime="20201115 22:00:32.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.763" endtime="20201115 22:00:32.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.755" endtime="20201115 22:00:32.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.334" endtime="20201115 22:00:32.785"></status>
</kw>
<msg timestamp="20201115 22:00:32.786" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.795" endtime="20201115 22:00:32.860"></status>
</kw>
<msg timestamp="20201115 22:00:32.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.793" endtime="20201115 22:00:32.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.862" endtime="20201115 22:00:32.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.864" endtime="20201115 22:00:32.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.790" endtime="20201115 22:00:32.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.788" endtime="20201115 22:00:32.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.874" endtime="20201115 22:00:33.160"></status>
</kw>
<msg timestamp="20201115 22:00:33.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.873" endtime="20201115 22:00:33.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.164" endtime="20201115 22:00:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.172" endtime="20201115 22:00:33.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.870" endtime="20201115 22:00:33.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.869" endtime="20201115 22:00:33.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.179" level="INFO">${RESULT} = [{'time': 0.022164264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.163899999999997e-05, 'source_diff': 3.163899999999997e-05}, {'time': 0.023312208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.176" endtime="20201115 22:00:33.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.192" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.180" endtime="20201115 22:00:33.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.197" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:33.196" endtime="20201115 22:00:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.200" level="INFO">VALUE: [3.163899999999997e-05, 3.170800000000182e-05, 3.163899999999997e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.1554999999999084e-05, 3.161100000000083e-05, 3.1554999999995614e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.166699999999911e-05, 3.16250000000004e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.161100000000083e-05, 3.170899999999782e-05, 3.165299999999954e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.168100000000562e-05, 3.16250000000004e-05, 3.165299999999954e-05, 3.163899999999997e-05, 3.168000000000615e-05, 3.16380000000005e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.1596999999994324e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.16380000000005e-05, 3.162500000000734e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.1624999999993464e-05, 3.163899999999997e-05, 3.165199999999313e-05, 3.165300000000648e-05, 3.161100000000083e-05, 3.1624999999993464e-05, 3.1652999999992604e-05, 3.165300000000648e-05, 3.1652999999992604e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.198" endtime="20201115 22:00:33.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.193" endtime="20201115 22:00:33.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.203" endtime="20201115 22:00:33.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.206" endtime="20201115 22:00:33.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.205" endtime="20201115 22:00:33.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.201" endtime="20201115 22:00:33.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.786" endtime="20201115 22:00:33.227"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.989" endtime="20201115 22:00:33.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.988" endtime="20201115 22:00:33.228"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.230" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.239" endtime="20201115 22:00:33.307"></status>
</kw>
<msg timestamp="20201115 22:00:33.308" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.237" endtime="20201115 22:00:33.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.309" endtime="20201115 22:00:33.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.312" endtime="20201115 22:00:33.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.235" endtime="20201115 22:00:33.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.233" endtime="20201115 22:00:33.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.321" endtime="20201115 22:00:33.623"></status>
</kw>
<msg timestamp="20201115 22:00:33.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024464153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.319" endtime="20201115 22:00:33.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024464153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.627" endtime="20201115 22:00:33.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.635" endtime="20201115 22:00:33.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.316" endtime="20201115 22:00:33.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.315" endtime="20201115 22:00:33.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.642" level="INFO">${RESULT} = [{'time': 0.024464153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.238899999999725e-05, 'source_diff': 3.238899999999725e-05}, {'time': 0.025674083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.638" endtime="20201115 22:00:33.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.655" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.643" endtime="20201115 22:00:33.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.660" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:33.659" endtime="20201115 22:00:33.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.663" level="INFO">VALUE: [3.238899999999725e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.240200000000082e-05, 3.2374999999997683e-05, 3.230600000000278e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.241699999999986e-05, 3.238900000000072e-05, 3.240200000000082e-05, 3.236100000000158e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.2360999999994644e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2362000000001057e-05, 3.237500000000115e-05, 3.2360999999994644e-05, 3.2388999999993784e-05, 3.238800000000125e-05, 3.237500000000115e-05, 3.242999999999996e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.24170000000068e-05, 3.2332999999995504e-05, 3.237500000000115e-05, 3.238900000000766e-05, 3.2374999999987275e-05, 3.237500000000115e-05, 3.2388999999993784e-05, 3.2334000000008856e-05, 3.237500000000115e-05, 3.238800000000819e-05, 3.238900000000766e-05, 3.2388999999993784e-05, 3.243099999999943e-05, 3.2416999999992924e-05, 3.237500000000115e-05, 3.238900000000766e-05, 3.2304999999996364e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.661" endtime="20201115 22:00:33.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.656" endtime="20201115 22:00:33.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.666" endtime="20201115 22:00:33.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.669" endtime="20201115 22:00:33.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.668" endtime="20201115 22:00:33.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.664" endtime="20201115 22:00:33.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.231" endtime="20201115 22:00:33.690"></status>
</kw>
<msg timestamp="20201115 22:00:33.690" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.699" endtime="20201115 22:00:33.768"></status>
</kw>
<msg timestamp="20201115 22:00:33.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.698" endtime="20201115 22:00:33.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.769" endtime="20201115 22:00:33.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.772" endtime="20201115 22:00:33.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.695" endtime="20201115 22:00:33.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.693" endtime="20201115 22:00:33.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.783" endtime="20201115 22:00:34.070"></status>
</kw>
<msg timestamp="20201115 22:00:34.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.781" endtime="20201115 22:00:34.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.074" endtime="20201115 22:00:34.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.082" endtime="20201115 22:00:34.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.779" endtime="20201115 22:00:34.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.777" endtime="20201115 22:00:34.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.088" level="INFO">${RESULT} = [{'time': 0.022259903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.238900000000072e-05, 'source_diff': 3.238900000000072e-05}, {'time': 0.023476403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:34.085" endtime="20201115 22:00:34.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.144" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.089" endtime="20201115 22:00:34.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.149" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:34.148" endtime="20201115 22:00:34.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.151" level="INFO">VALUE: [3.238900000000072e-05, 3.236100000000158e-05, 3.238800000000125e-05, 3.240200000000082e-05, 3.2360999999998113e-05, 3.241600000000039e-05, 3.237500000000115e-05, 3.238800000000125e-05, 3.236100000000158e-05, 3.241600000000039e-05, 3.238900000000072e-05, 3.241699999999986e-05, 3.238900000000072e-05, 3.238800000000125e-05, 3.240200000000082e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2332999999995504e-05, 3.242999999999996e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2388999999993784e-05, 3.2360999999994644e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.240199999999388e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.2360999999994644e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2332999999995504e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.236199999999412e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.244400000000647e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.150" endtime="20201115 22:00:34.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.145" endtime="20201115 22:00:34.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.155" endtime="20201115 22:00:34.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.158" endtime="20201115 22:00:34.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.157" endtime="20201115 22:00:34.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.153" endtime="20201115 22:00:34.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.691" endtime="20201115 22:00:34.179"></status>
</kw>
<msg timestamp="20201115 22:00:34.179" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.188" endtime="20201115 22:00:34.257"></status>
</kw>
<msg timestamp="20201115 22:00:34.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.187" endtime="20201115 22:00:34.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.258" endtime="20201115 22:00:34.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.261" endtime="20201115 22:00:34.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.184" endtime="20201115 22:00:34.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.182" endtime="20201115 22:00:34.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.270" endtime="20201115 22:00:34.556"></status>
</kw>
<msg timestamp="20201115 22:00:34.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.268" endtime="20201115 22:00:34.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.561" endtime="20201115 22:00:34.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.569" endtime="20201115 22:00:34.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.266" endtime="20201115 22:00:34.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.264" endtime="20201115 22:00:34.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.575" level="INFO">${RESULT} = [{'time': 0.022053514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2360999999998113e-05, 'source_diff': 3.2360999999998113e-05}, {'time': 0.023272042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.572" endtime="20201115 22:00:34.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.589" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.577" endtime="20201115 22:00:34.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.594" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:34.593" endtime="20201115 22:00:34.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.596" level="INFO">VALUE: [3.2360999999998113e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.238899999999725e-05, 3.2374999999997683e-05, 3.236100000000158e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.234700000000201e-05, 3.238900000000072e-05, 3.2388999999993784e-05, 3.238900000000072e-05, 3.236100000000158e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.231900000000287e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.229199999999627e-05, 3.236100000000158e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2346999999995074e-05, 3.2444999999999e-05, 3.2374999999994214e-05, 3.2388999999993784e-05, 3.238900000000072e-05, 3.230600000000278e-05, 3.2360999999994644e-05, 3.237500000000115e-05, 3.2362000000007995e-05, 3.237500000000115e-05, 3.238900000000766e-05, 3.238799999999431e-05, 3.231999999998847e-05, 3.24579999999991e-05, 3.2360999999994644e-05, 3.242999999999996e-05, 3.238799999999431e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.2444999999992064e-05, 3.237500000000115e-05, 3.238900000000766e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.595" endtime="20201115 22:00:34.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.590" endtime="20201115 22:00:34.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.599" endtime="20201115 22:00:34.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.602" endtime="20201115 22:00:34.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.601" endtime="20201115 22:00:34.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.597" endtime="20201115 22:00:34.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.180" endtime="20201115 22:00:34.623"></status>
</kw>
<msg timestamp="20201115 22:00:34.623" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.632" endtime="20201115 22:00:34.701"></status>
</kw>
<msg timestamp="20201115 22:00:34.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.631" endtime="20201115 22:00:34.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.702" endtime="20201115 22:00:34.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.704" endtime="20201115 22:00:34.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.628" endtime="20201115 22:00:34.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.626" endtime="20201115 22:00:34.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.713" endtime="20201115 22:00:35.008"></status>
</kw>
<msg timestamp="20201115 22:00:35.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.712" endtime="20201115 22:00:35.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.017" endtime="20201115 22:00:35.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.035" endtime="20201115 22:00:35.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.709" endtime="20201115 22:00:35.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.708" endtime="20201115 22:00:35.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.049" level="INFO">${RESULT} = [{'time': 0.021846153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.237500000000115e-05, 'source_diff': 3.237500000000115e-05}, {'time': 0.023052125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.042" endtime="20201115 22:00:35.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.073" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.051" endtime="20201115 22:00:35.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.078" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:35.077" endtime="20201115 22:00:35.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.080" level="INFO">VALUE: [3.237500000000115e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.240200000000082e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.236100000000158e-05, 3.2360999999998113e-05, 3.243099999999943e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2444999999999e-05, 3.237500000000115e-05, 3.2388999999993784e-05, 3.237500000000115e-05, 3.238800000000125e-05, 3.238799999999431e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.241699999999986e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2346999999995074e-05, 3.244399999999953e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.238799999999431e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.240200000000082e-05, 3.238900000000072e-05, 3.234800000000149e-05, 3.231999999999541e-05, 3.238900000000072e-05, 3.233399999999498e-05, 3.236100000000852e-05, 3.237500000000115e-05, 3.240200000000082e-05, 3.238900000000766e-05, 3.24170000000068e-05, 3.238900000000766e-05, 3.237500000000115e-05, 3.244500000000594e-05, 3.245899999999857e-05, 3.237500000000115e-05, 3.243099999999943e-05, 3.240200000000082e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.238900000000766e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.079" endtime="20201115 22:00:35.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.074" endtime="20201115 22:00:35.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.083" endtime="20201115 22:00:35.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.087" endtime="20201115 22:00:35.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.085" endtime="20201115 22:00:35.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.082" endtime="20201115 22:00:35.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.624" endtime="20201115 22:00:35.107"></status>
</kw>
<msg timestamp="20201115 22:00:35.108" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.116" endtime="20201115 22:00:35.185"></status>
</kw>
<msg timestamp="20201115 22:00:35.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.115" endtime="20201115 22:00:35.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.186" endtime="20201115 22:00:35.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.189" endtime="20201115 22:00:35.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.112" endtime="20201115 22:00:35.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.110" endtime="20201115 22:00:35.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.198" endtime="20201115 22:00:35.484"></status>
</kw>
<msg timestamp="20201115 22:00:35.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.196" endtime="20201115 22:00:35.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.489" endtime="20201115 22:00:35.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.497" endtime="20201115 22:00:35.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.194" endtime="20201115 22:00:35.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.192" endtime="20201115 22:00:35.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.503" level="INFO">${RESULT} = [{'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.234799999999802e-05, 'source_diff': 3.234799999999802e-05}, {'time': 0.023028667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:35.500" endtime="20201115 22:00:35.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.516" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.504" endtime="20201115 22:00:35.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.521" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:35.520" endtime="20201115 22:00:35.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.523" level="INFO">VALUE: [3.234799999999802e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.238899999999725e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.229200000000321e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.241600000000039e-05, 3.2374999999994214e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.243099999999943e-05, 3.234799999999455e-05, 3.238800000000125e-05, 3.237500000000115e-05, 3.236199999999412e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999987275e-05, 3.2374999999987275e-05, 3.238900000000766e-05, 3.240300000000029e-05, 3.2374999999987275e-05, 3.238900000000766e-05, 3.237500000000115e-05, 3.241599999999345e-05, 3.2388999999993784e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.2360999999994644e-05, 3.2402999999986415e-05, 3.234700000000201e-05, 3.238900000000766e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.522" endtime="20201115 22:00:35.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.517" endtime="20201115 22:00:35.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.526" endtime="20201115 22:00:35.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.530" endtime="20201115 22:00:35.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.528" endtime="20201115 22:00:35.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.525" endtime="20201115 22:00:35.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.108" endtime="20201115 22:00:35.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.229" endtime="20201115 22:00:35.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.228" endtime="20201115 22:00:35.551"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.553" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.562" endtime="20201115 22:00:35.634"></status>
</kw>
<msg timestamp="20201115 22:00:35.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.560" endtime="20201115 22:00:35.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.635" endtime="20201115 22:00:35.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.638" endtime="20201115 22:00:35.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.557" endtime="20201115 22:00:35.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.555" endtime="20201115 22:00:35.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.647" endtime="20201115 22:00:35.947"></status>
</kw>
<msg timestamp="20201115 22:00:35.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.645" endtime="20201115 22:00:35.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024705014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024738139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.951" endtime="20201115 22:00:35.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.959" endtime="20201115 22:00:35.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.643" endtime="20201115 22:00:35.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.641" endtime="20201115 22:00:35.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.966" level="INFO">${RESULT} = [{'time': 0.024738139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3124999999998433e-05, 'source_diff': 3.3124999999998433e-05}, {'time': 0.026005764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.962" endtime="20201115 22:00:35.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.979" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.967" endtime="20201115 22:00:35.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.983" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:35.982" endtime="20201115 22:00:35.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.985" level="INFO">VALUE: [3.3124999999998433e-05, 3.313900000000147e-05, 3.316699999999714e-05, 3.3055000000000584e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.315300000000104e-05, 3.311100000000233e-05, 3.31659999999942e-05, 3.3138999999994534e-05, 3.313900000000147e-05, 3.309800000000224e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.3138999999994534e-05, 3.315300000000104e-05, 3.318100000000018e-05, 3.309700000000276e-05, 3.311200000000181e-05, 3.308300000000319e-05, 3.313900000000147e-05, 3.316700000000061e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.3138999999994534e-05, 3.3110999999995394e-05, 3.311199999998793e-05, 3.315200000000851e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.3180999999993244e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.308300000000319e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.313900000000147e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.984" endtime="20201115 22:00:35.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.979" endtime="20201115 22:00:35.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.989" endtime="20201115 22:00:35.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.992" endtime="20201115 22:00:36.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.990" endtime="20201115 22:00:36.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.987" endtime="20201115 22:00:36.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.553" endtime="20201115 22:00:36.013"></status>
</kw>
<msg timestamp="20201115 22:00:36.013" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.022" endtime="20201115 22:00:36.093"></status>
</kw>
<msg timestamp="20201115 22:00:36.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.020" endtime="20201115 22:00:36.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.095" endtime="20201115 22:00:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.098" endtime="20201115 22:00:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.018" endtime="20201115 22:00:36.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.015" endtime="20201115 22:00:36.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.106" endtime="20201115 22:00:36.393"></status>
</kw>
<msg timestamp="20201115 22:00:36.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.105" endtime="20201115 22:00:36.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.398" endtime="20201115 22:00:36.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.406" endtime="20201115 22:00:36.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.102" endtime="20201115 22:00:36.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.101" endtime="20201115 22:00:36.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.412" level="INFO">${RESULT} = [{'time': 0.021975583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3096999999999294e-05, 'source_diff': 3.3096999999999294e-05}, {'time': 0.023251833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.409" endtime="20201115 22:00:36.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.425" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.413" endtime="20201115 22:00:36.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.430" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:36.429" endtime="20201115 22:00:36.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.432" level="INFO">VALUE: [3.3096999999999294e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3110999999998864e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.3110999999995394e-05, 3.3138999999994534e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.320899999999932e-05, 3.3096999999995824e-05, 3.3054999999997114e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3152999999994104e-05, 3.316700000000061e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.318100000000712e-05, 3.3124999999994964e-05, 3.312500000000884e-05, 3.3096999999995824e-05, 3.3124999999994964e-05, 3.313900000000147e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.431" endtime="20201115 22:00:36.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.426" endtime="20201115 22:00:36.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.435" endtime="20201115 22:00:36.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.439" endtime="20201115 22:00:36.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.437" endtime="20201115 22:00:36.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.434" endtime="20201115 22:00:36.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.013" endtime="20201115 22:00:36.459"></status>
</kw>
<msg timestamp="20201115 22:00:36.460" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.469" endtime="20201115 22:00:36.541"></status>
</kw>
<msg timestamp="20201115 22:00:36.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.467" endtime="20201115 22:00:36.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.543" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.542" endtime="20201115 22:00:36.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.544" endtime="20201115 22:00:36.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.464" endtime="20201115 22:00:36.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.462" endtime="20201115 22:00:36.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.553" endtime="20201115 22:00:36.851"></status>
</kw>
<msg timestamp="20201115 22:00:36.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.552" endtime="20201115 22:00:36.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.856" endtime="20201115 22:00:36.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.864" endtime="20201115 22:00:36.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.549" endtime="20201115 22:00:36.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.548" endtime="20201115 22:00:36.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.870" level="INFO">${RESULT} = [{'time': 0.022411889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.31250000000019e-05, 'source_diff': 3.31250000000019e-05}, {'time': 0.023696583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:36.867" endtime="20201115 22:00:36.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.883" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.871" endtime="20201115 22:00:36.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.888" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:36.886" endtime="20201115 22:00:36.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.890" level="INFO">VALUE: [3.31250000000019e-05, 3.3110999999998864e-05, 3.315300000000104e-05, 3.318100000000018e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.316700000000061e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.322199999999942e-05, 3.317999999999377e-05, 3.313900000000147e-05, 3.3138999999994534e-05, 3.311200000000181e-05, 3.3138999999994534e-05, 3.316700000000061e-05, 3.311100000000233e-05, 3.3138999999994534e-05, 3.3152999999994104e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.308400000000267e-05, 3.3096999999995824e-05, 3.315300000000104e-05, 3.31250000000019e-05, 3.3138000000002e-05, 3.3096999999995824e-05, 3.312500000000884e-05, 3.30970000000097e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.312500000000884e-05, 3.316600000000114e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.3138999999987595e-05, 3.305500000000405e-05, 3.312500000000884e-05, 3.3138999999987595e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.889" endtime="20201115 22:00:36.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.884" endtime="20201115 22:00:36.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.893" endtime="20201115 22:00:36.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.896" endtime="20201115 22:00:36.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.895" endtime="20201115 22:00:36.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.891" endtime="20201115 22:00:36.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.460" endtime="20201115 22:00:36.917"></status>
</kw>
<msg timestamp="20201115 22:00:36.918" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.926" endtime="20201115 22:00:36.998"></status>
</kw>
<msg timestamp="20201115 22:00:36.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.925" endtime="20201115 22:00:36.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.000" endtime="20201115 22:00:37.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.002" endtime="20201115 22:00:37.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.922" endtime="20201115 22:00:37.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.920" endtime="20201115 22:00:37.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.011" endtime="20201115 22:00:37.297"></status>
</kw>
<msg timestamp="20201115 22:00:37.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.009" endtime="20201115 22:00:37.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.301" endtime="20201115 22:00:37.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.309" endtime="20201115 22:00:37.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.007" endtime="20201115 22:00:37.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.005" endtime="20201115 22:00:37.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.316" level="INFO">${RESULT} = [{'time': 0.022290458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3069000000000154e-05, 'source_diff': 3.3069000000000154e-05}, {'time': 0.023566111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.312" endtime="20201115 22:00:37.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.328" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.316" endtime="20201115 22:00:37.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.333" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:37.332" endtime="20201115 22:00:37.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.335" level="INFO">VALUE: [3.3069000000000154e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.318100000000018e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.322299999999889e-05, 3.3124999999998433e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.3138999999994534e-05, 3.315300000000104e-05, 3.3124999999994964e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.3138999999994534e-05, 3.3096999999995824e-05, 3.3138999999994534e-05, 3.3124999999994964e-05, 3.315300000000104e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.3138000000002e-05, 3.320799999999985e-05, 3.31250000000019e-05, 3.309700000000276e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.3124999999994964e-05, 3.3096999999995824e-05, 3.3124999999994964e-05, 3.312500000000884e-05, 3.312500000000884e-05, 3.30970000000097e-05, 3.312500000000884e-05, 3.3096999999995824e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.312500000000884e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.312500000000884e-05, 3.3180999999993244e-05, 3.313900000000147e-05, 3.311100000000233e-05, 3.312500000000884e-05, 3.316600000000114e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.334" endtime="20201115 22:00:37.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.329" endtime="20201115 22:00:37.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.338" endtime="20201115 22:00:37.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.342" endtime="20201115 22:00:37.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.341" endtime="20201115 22:00:37.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.337" endtime="20201115 22:00:37.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.918" endtime="20201115 22:00:37.363"></status>
</kw>
<msg timestamp="20201115 22:00:37.363" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.372" endtime="20201115 22:00:37.444"></status>
</kw>
<msg timestamp="20201115 22:00:37.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.370" endtime="20201115 22:00:37.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.447" endtime="20201115 22:00:37.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.452" endtime="20201115 22:00:37.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.368" endtime="20201115 22:00:37.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.366" endtime="20201115 22:00:37.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.471" endtime="20201115 22:00:37.764"></status>
</kw>
<msg timestamp="20201115 22:00:37.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.468" endtime="20201115 22:00:37.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.768" endtime="20201115 22:00:37.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.776" endtime="20201115 22:00:37.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.462" endtime="20201115 22:00:37.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.459" endtime="20201115 22:00:37.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.783" level="INFO">${RESULT} = [{'time': 0.021880222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.320799999999985e-05, 'source_diff': 3.320799999999985e-05}, {'time': 0.023147111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:37.779" endtime="20201115 22:00:37.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.796" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.784" endtime="20201115 22:00:37.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.800" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:37.799" endtime="20201115 22:00:37.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.802" level="INFO">VALUE: [3.320799999999985e-05, 3.31250000000019e-05, 3.3138999999998e-05, 3.3082999999999724e-05, 3.3138000000002e-05, 3.3096999999999294e-05, 3.31519999999981e-05, 3.3124999999998433e-05, 3.3110999999995394e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.308400000000267e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.316700000000061e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.313799999999506e-05, 3.31250000000019e-05, 3.311100000000233e-05, 3.306999999999616e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.319400000000028e-05, 3.315300000000104e-05, 3.311100000000233e-05, 3.31250000000019e-05, 3.309700000000276e-05, 3.311100000000233e-05, 3.318100000000712e-05, 3.3124999999994964e-05, 3.311200000000181e-05, 3.312500000000884e-05, 3.3138000000002e-05, 3.311100000000233e-05, 3.3096999999995824e-05, 3.3124999999994964e-05, 3.311199999998793e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.311200000000181e-05, 3.311100000000233e-05, 3.3124999999994964e-05, 3.3124999999994964e-05, 3.311100000000233e-05, 3.3124999999994964e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.801" endtime="20201115 22:00:37.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.796" endtime="20201115 22:00:37.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.811" endtime="20201115 22:00:37.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.814" endtime="20201115 22:00:37.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.812" endtime="20201115 22:00:37.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.809" endtime="20201115 22:00:37.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.364" endtime="20201115 22:00:37.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.552" endtime="20201115 22:00:37.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.551" endtime="20201115 22:00:37.835"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.837" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.846" endtime="20201115 22:00:37.921"></status>
</kw>
<msg timestamp="20201115 22:00:37.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.844" endtime="20201115 22:00:37.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.922" endtime="20201115 22:00:37.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.924" endtime="20201115 22:00:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.842" endtime="20201115 22:00:37.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.840" endtime="20201115 22:00:37.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.933" endtime="20201115 22:00:38.222"></status>
</kw>
<msg timestamp="20201115 22:00:38.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.932" endtime="20201115 22:00:38.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024125944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.231" endtime="20201115 22:00:38.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.249" endtime="20201115 22:00:38.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.929" endtime="20201115 22:00:38.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.928" endtime="20201115 22:00:38.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.263" level="INFO">${RESULT} = [{'time': 0.024125944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.390199999999885e-05, 'source_diff': 3.390199999999885e-05}, {'time': 0.025468514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:38.256" endtime="20201115 22:00:38.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.293" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.265" endtime="20201115 22:00:38.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.302" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.300" endtime="20201115 22:00:38.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.308" level="INFO">VALUE: [3.390199999999885e-05, 3.388900000000222e-05, 3.3860999999999614e-05, 3.3888999999998753e-05, 3.388799999999928e-05, 3.3860999999999614e-05, 3.387500000000265e-05, 3.384700000000351e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.3832999999997004e-05, 3.386100000000308e-05, 3.383400000000342e-05, 3.3805000000004803e-05, 3.393100000000093e-05, 3.3888999999995284e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.394399999999409e-05, 3.381999999999691e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.386100000000308e-05, 3.3874999999995714e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.390300000000179e-05, 3.390200000000232e-05, 3.3874999999988775e-05, 3.390300000000179e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.386199999999562e-05, 3.387500000000265e-05, 3.3888999999995284e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.3874999999988775e-05, 3.388900000000916e-05, 3.3860999999996144e-05, 3.387500000000265e-05, 3.386199999999562e-05, 3.3860999999996144e-05, 3.3888999999995284e-05, 3.3888999999995284e-05, 3.387500000000265e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.304" endtime="20201115 22:00:38.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.295" endtime="20201115 22:00:38.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.314" endtime="20201115 22:00:38.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.320" endtime="20201115 22:00:38.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.318" endtime="20201115 22:00:38.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.311" endtime="20201115 22:00:38.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.838" endtime="20201115 22:00:38.341"></status>
</kw>
<msg timestamp="20201115 22:00:38.341" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.350" endtime="20201115 22:00:38.425"></status>
</kw>
<msg timestamp="20201115 22:00:38.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.348" endtime="20201115 22:00:38.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.427" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.426" endtime="20201115 22:00:38.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.429" endtime="20201115 22:00:38.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.346" endtime="20201115 22:00:38.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.344" endtime="20201115 22:00:38.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.437" endtime="20201115 22:00:38.723"></status>
</kw>
<msg timestamp="20201115 22:00:38.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.436" endtime="20201115 22:00:38.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.727" endtime="20201115 22:00:38.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.735" endtime="20201115 22:00:38.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.433" endtime="20201115 22:00:38.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.432" endtime="20201115 22:00:38.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.742" level="INFO">${RESULT} = [{'time': 0.021845639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.39450000000005e-05, 'source_diff': 3.39450000000005e-05}, {'time': 0.023181542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:38.739" endtime="20201115 22:00:38.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.755" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.743" endtime="20201115 22:00:38.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.760" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:38.759" endtime="20201115 22:00:38.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.762" level="INFO">VALUE: [3.39450000000005e-05, 3.3874999999999184e-05, 3.3860999999999614e-05, 3.388800000000275e-05, 3.395900000000007e-05, 3.3888999999998753e-05, 3.3860999999999614e-05, 3.390300000000179e-05, 3.3874999999995714e-05, 3.3874999999995714e-05, 3.388799999999581e-05, 3.3902999999994854e-05, 3.3860999999996144e-05, 3.3846999999996574e-05, 3.388900000000222e-05, 3.390200000000232e-05, 3.388900000000222e-05, 3.3874999999995714e-05, 3.390300000000179e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.3804999999997865e-05, 3.383399999999648e-05, 3.387500000000265e-05, 3.3902999999994854e-05, 3.390200000000232e-05, 3.3888999999995284e-05, 3.388900000000222e-05, 3.3874999999995714e-05, 3.3874999999995714e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.381900000000437e-05, 3.3874999999988775e-05, 3.387500000000265e-05, 3.3888999999995284e-05, 3.390200000000232e-05, 3.3888999999995284e-05, 3.3834000000010356e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.3860999999996144e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.390200000000232e-05, 3.388900000000916e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.761" endtime="20201115 22:00:38.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.756" endtime="20201115 22:00:38.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.765" endtime="20201115 22:00:38.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.769" endtime="20201115 22:00:38.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.767" endtime="20201115 22:00:38.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.764" endtime="20201115 22:00:38.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.342" endtime="20201115 22:00:38.789"></status>
</kw>
<msg timestamp="20201115 22:00:38.790" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.798" endtime="20201115 22:00:38.873"></status>
</kw>
<msg timestamp="20201115 22:00:38.874" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.797" endtime="20201115 22:00:38.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.875" endtime="20201115 22:00:38.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.877" endtime="20201115 22:00:38.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.794" endtime="20201115 22:00:38.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.792" endtime="20201115 22:00:38.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.886" endtime="20201115 22:00:39.184"></status>
</kw>
<msg timestamp="20201115 22:00:39.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:38.884" endtime="20201115 22:00:39.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:39.188" endtime="20201115 22:00:39.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.196" endtime="20201115 22:00:39.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.882" endtime="20201115 22:00:39.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.880" endtime="20201115 22:00:39.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.202" level="INFO">${RESULT} = [{'time': 0.021852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.391699999999789e-05, 'source_diff': 3.391699999999789e-05}, {'time': 0.023188472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:39.199" endtime="20201115 22:00:39.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.216" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.204" endtime="20201115 22:00:39.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.220" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:39.219" endtime="20201115 22:00:39.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.223" level="INFO">VALUE: [3.391699999999789e-05, 3.387500000000265e-05, 3.390299999999832e-05, 3.382000000000038e-05, 3.387500000000265e-05, 3.3888999999998753e-05, 3.388900000000222e-05, 3.3860999999999614e-05, 3.384799999999605e-05, 3.3888999999995284e-05, 3.3860999999996144e-05, 3.386100000000308e-05, 3.390300000000179e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.386100000000308e-05, 3.388900000000222e-05, 3.388900000000222e-05, 3.388900000000222e-05, 3.390300000000179e-05, 3.386100000000308e-05, 3.388799999999581e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.388900000000222e-05, 3.380599999999734e-05, 3.3916999999994424e-05, 3.3874999999995714e-05, 3.387500000000265e-05, 3.3846999999996574e-05, 3.387500000000265e-05, 3.39170000000083e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.3944999999993564e-05, 3.387500000000265e-05, 3.3888999999995284e-05, 3.390300000000179e-05, 3.3874999999988775e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.3834000000010356e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.386100000001002e-05, 3.3888999999995284e-05, 3.388800000000969e-05, 3.387500000000265e-05, 3.390300000000179e-05, 3.387500000000265e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.221" endtime="20201115 22:00:39.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.217" endtime="20201115 22:00:39.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.226" endtime="20201115 22:00:39.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.229" endtime="20201115 22:00:39.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.228" endtime="20201115 22:00:39.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.224" endtime="20201115 22:00:39.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.790" endtime="20201115 22:00:39.250"></status>
</kw>
<msg timestamp="20201115 22:00:39.250" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.259" endtime="20201115 22:00:39.333"></status>
</kw>
<msg timestamp="20201115 22:00:39.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.257" endtime="20201115 22:00:39.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.336" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.335" endtime="20201115 22:00:39.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.338" endtime="20201115 22:00:39.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.255" endtime="20201115 22:00:39.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.252" endtime="20201115 22:00:39.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.346" endtime="20201115 22:00:39.633"></status>
</kw>
<msg timestamp="20201115 22:00:39.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.345" endtime="20201115 22:00:39.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.637" endtime="20201115 22:00:39.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.646" endtime="20201115 22:00:39.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.342" endtime="20201115 22:00:39.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.341" endtime="20201115 22:00:39.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.653" level="INFO">${RESULT} = [{'time': 0.021955222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3860999999999614e-05, 'source_diff': 3.3860999999999614e-05}, {'time': 0.023300194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.649" endtime="20201115 22:00:39.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.666" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.654" endtime="20201115 22:00:39.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.670" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:39.669" endtime="20201115 22:00:39.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.673" level="INFO">VALUE: [3.3860999999999614e-05, 3.388799999999928e-05, 3.3860999999999614e-05, 3.3860999999999614e-05, 3.3874999999999184e-05, 3.3874999999999184e-05, 3.3888999999998753e-05, 3.3902999999994854e-05, 3.39580000000006e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.381900000000437e-05, 3.386100000000308e-05, 3.388800000000275e-05, 3.3916999999994424e-05, 3.388900000000222e-05, 3.387500000000265e-05, 3.393000000000146e-05, 3.3790999999998295e-05, 3.3916999999994424e-05, 3.3874999999995714e-05, 3.388900000000222e-05, 3.390300000000179e-05, 3.3874999999995714e-05, 3.388799999999581e-05, 3.3860999999996144e-05, 3.388900000000222e-05, 3.386100000000308e-05, 3.3888999999995284e-05, 3.3888999999995284e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.3874999999988775e-05, 3.3874999999988775e-05, 3.384799999998911e-05, 3.3874999999988775e-05, 3.380500000001174e-05, 3.3888999999995284e-05, 3.393000000000146e-05, 3.387500000000265e-05, 3.384700000000351e-05, 3.379200000000471e-05, 3.39170000000083e-05, 3.3888999999995284e-05, 3.388900000000916e-05, 3.3888999999995284e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.671" endtime="20201115 22:00:39.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.667" endtime="20201115 22:00:39.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.676" endtime="20201115 22:00:39.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.679" endtime="20201115 22:00:39.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.677" endtime="20201115 22:00:39.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.674" endtime="20201115 22:00:39.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.251" endtime="20201115 22:00:39.700"></status>
</kw>
<msg timestamp="20201115 22:00:39.700" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.709" endtime="20201115 22:00:39.783"></status>
</kw>
<msg timestamp="20201115 22:00:39.784" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.707" endtime="20201115 22:00:39.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.785" endtime="20201115 22:00:39.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.787" endtime="20201115 22:00:39.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.705" endtime="20201115 22:00:39.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.702" endtime="20201115 22:00:39.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.796" endtime="20201115 22:00:40.095"></status>
</kw>
<msg timestamp="20201115 22:00:40.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:39.795" endtime="20201115 22:00:40.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:40.100" endtime="20201115 22:00:40.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.108" endtime="20201115 22:00:40.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.792" endtime="20201115 22:00:40.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.790" endtime="20201115 22:00:40.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.115" level="INFO">${RESULT} = [{'time': 0.02192375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3888999999998753e-05, 'source_diff': 3.3888999999998753e-05}, {'time': 0.023251667, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:40.111" endtime="20201115 22:00:40.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.128" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.116" endtime="20201115 22:00:40.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.132" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:40.131" endtime="20201115 22:00:40.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.134" level="INFO">VALUE: [3.3888999999998753e-05, 3.390300000000179e-05, 3.3847000000000044e-05, 3.388799999999928e-05, 3.382000000000038e-05, 3.3860999999999614e-05, 3.3888999999998753e-05, 3.3874999999999184e-05, 3.381900000000437e-05, 3.390199999999538e-05, 3.383300000000394e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.3874999999995714e-05, 3.387500000000265e-05, 3.3902999999994854e-05, 3.393100000000093e-05, 3.3888999999995284e-05, 3.390300000000179e-05, 3.388900000000222e-05, 3.386100000000308e-05, 3.3874999999995714e-05, 3.388800000000275e-05, 3.3888999999995284e-05, 3.3888999999995284e-05, 3.390300000000179e-05, 3.390200000000232e-05, 3.388900000000222e-05, 3.3888999999995284e-05, 3.3888999999995284e-05, 3.39580000000006e-05, 3.393100000000093e-05, 3.387500000000265e-05, 3.393000000000146e-05, 3.3846999999989635e-05, 3.395900000000007e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.395900000000007e-05, 3.387500000000265e-05, 3.384700000000351e-05, 3.390200000000232e-05, 3.3860999999996144e-05, 3.394399999999409e-05, 3.3902999999987915e-05, 3.3888999999995284e-05, 3.387500000000265e-05, 3.3846999999989635e-05, 3.387500000000265e-05, 3.390300000000179e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.133" endtime="20201115 22:00:40.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.129" endtime="20201115 22:00:40.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.138" endtime="20201115 22:00:40.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.141" endtime="20201115 22:00:40.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.139" endtime="20201115 22:00:40.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.136" endtime="20201115 22:00:40.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.700" endtime="20201115 22:00:40.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.836" endtime="20201115 22:00:40.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.835" endtime="20201115 22:00:40.162"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.164" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.173" endtime="20201115 22:00:40.251"></status>
</kw>
<msg timestamp="20201115 22:00:40.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.171" endtime="20201115 22:00:40.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.252" endtime="20201115 22:00:40.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.255" endtime="20201115 22:00:40.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.169" endtime="20201115 22:00:40.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.167" endtime="20201115 22:00:40.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.264" endtime="20201115 22:00:40.551"></status>
</kw>
<msg timestamp="20201115 22:00:40.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.262" endtime="20201115 22:00:40.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024217347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024251986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.555" endtime="20201115 22:00:40.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.563" endtime="20201115 22:00:40.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.260" endtime="20201115 22:00:40.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.258" endtime="20201115 22:00:40.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.570" level="INFO">${RESULT} = [{'time': 0.024251986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4638999999999504e-05, 'source_diff': 3.4638999999999504e-05}, {'time': 0.025655639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.566" endtime="20201115 22:00:40.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.583" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.571" endtime="20201115 22:00:40.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.587" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:40.586" endtime="20201115 22:00:40.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.590" level="INFO">VALUE: [3.4638999999999504e-05, 3.4597000000000794e-05, 3.4611000000000364e-05, 3.4624999999999934e-05, 3.4611000000000364e-05, 3.4624999999999934e-05, 3.4624999999996464e-05, 3.461100000000383e-05, 3.4610999999996894e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.4610999999996894e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.4596999999997324e-05, 3.466600000000264e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.4638999999996034e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.465300000000948e-05, 3.462500000001034e-05, 3.461100000000383e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.461200000000331e-05, 3.4624999999996464e-05, 3.458400000000417e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4596999999997324e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4652999999995604e-05, 3.4568999999998185e-05, 3.4596999999997324e-05, 3.4624999999996464e-05, 3.469400000000178e-05, 3.463900000000297e-05, 3.4610999999989955e-05, 3.463900000000297e-05, 3.463900000000297e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.588" endtime="20201115 22:00:40.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.584" endtime="20201115 22:00:40.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.593" endtime="20201115 22:00:40.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.596" endtime="20201115 22:00:40.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.595" endtime="20201115 22:00:40.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.591" endtime="20201115 22:00:40.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.165" endtime="20201115 22:00:40.617"></status>
</kw>
<msg timestamp="20201115 22:00:40.617" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.626" endtime="20201115 22:00:40.705"></status>
</kw>
<msg timestamp="20201115 22:00:40.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.624" endtime="20201115 22:00:40.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.708" endtime="20201115 22:00:40.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.714" endtime="20201115 22:00:40.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.622" endtime="20201115 22:00:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.620" endtime="20201115 22:00:40.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.732" endtime="20201115 22:00:41.032"></status>
</kw>
<msg timestamp="20201115 22:00:41.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.729" endtime="20201115 22:00:41.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.036" endtime="20201115 22:00:41.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.044" endtime="20201115 22:00:41.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.724" endtime="20201115 22:00:41.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.720" endtime="20201115 22:00:41.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.051" level="INFO">${RESULT} = [{'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.465300000000254e-05, 'source_diff': 3.465300000000254e-05}, {'time': 0.02336375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:41.047" endtime="20201115 22:00:41.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.063" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.051" endtime="20201115 22:00:41.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.068" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:41.067" endtime="20201115 22:00:41.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.070" level="INFO">VALUE: [3.465300000000254e-05, 3.4624999999999934e-05, 3.4624999999999934e-05, 3.4624999999999934e-05, 3.4597000000000794e-05, 3.4624999999999934e-05, 3.461199999999984e-05, 3.4610999999996894e-05, 3.46250000000034e-05, 3.463900000000297e-05, 3.4582999999997754e-05, 3.4569000000005123e-05, 3.459800000000374e-05, 3.465300000000254e-05, 3.463900000000297e-05, 3.4610999999996894e-05, 3.4666999999995174e-05, 3.46250000000034e-05, 3.4652999999995604e-05, 3.463900000000297e-05, 3.4638999999996034e-05, 3.46250000000034e-05, 3.4582999999997754e-05, 3.465300000000254e-05, 3.4652999999995604e-05, 3.461100000000383e-05, 3.463900000000297e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.467999999999527e-05, 3.4598000000010676e-05, 3.4624999999996464e-05, 3.462500000001034e-05, 3.463900000000297e-05, 3.4638999999989095e-05, 3.461100000000383e-05, 3.4624999999996464e-05, 3.467999999999527e-05, 3.4638999999989095e-05, 3.455599999999115e-05, 3.4596999999997324e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.458399999999029e-05, 3.461100000000383e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.069" endtime="20201115 22:00:41.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.064" endtime="20201115 22:00:41.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.073" endtime="20201115 22:00:41.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.077" endtime="20201115 22:00:41.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.075" endtime="20201115 22:00:41.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.072" endtime="20201115 22:00:41.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.618" endtime="20201115 22:00:41.098"></status>
</kw>
<msg timestamp="20201115 22:00:41.098" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.107" endtime="20201115 22:00:41.185"></status>
</kw>
<msg timestamp="20201115 22:00:41.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.105" endtime="20201115 22:00:41.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.186" endtime="20201115 22:00:41.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.189" endtime="20201115 22:00:41.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.102" endtime="20201115 22:00:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.100" endtime="20201115 22:00:41.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.198" endtime="20201115 22:00:41.485"></status>
</kw>
<msg timestamp="20201115 22:00:41.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.196" endtime="20201115 22:00:41.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.490" endtime="20201115 22:00:41.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.498" endtime="20201115 22:00:41.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.194" endtime="20201115 22:00:41.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.192" endtime="20201115 22:00:41.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.504" level="INFO">${RESULT} = [{'time': 0.022542792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4624999999999934e-05, 'source_diff': 3.4624999999999934e-05}, {'time': 0.023934736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.501" endtime="20201115 22:00:41.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.517" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.505" endtime="20201115 22:00:41.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.522" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:41.521" endtime="20201115 22:00:41.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.524" level="INFO">VALUE: [3.4624999999999934e-05, 3.468000000000221e-05, 3.466700000000211e-05, 3.45840000000007e-05, 3.4611000000000364e-05, 3.4611000000000364e-05, 3.463800000000003e-05, 3.463900000000297e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4610999999996894e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.4582999999997754e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.4638999999996034e-05, 3.463900000000297e-05, 3.465300000000254e-05, 3.45979999999968e-05, 3.4638999999996034e-05, 3.465300000000254e-05, 3.4652999999995604e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.463900000000297e-05, 3.463900000000297e-05, 3.4596999999997324e-05, 3.4624999999996464e-05, 3.469400000000178e-05, 3.4624999999996464e-05, 3.466599999998876e-05, 3.4610999999989955e-05, 3.4624999999996464e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.463900000000297e-05, 3.461200000000331e-05, 3.4624999999996464e-05, 3.461100000000383e-05, 3.463900000000297e-05, 3.4638999999989095e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.462500000001034e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.523" endtime="20201115 22:00:41.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.518" endtime="20201115 22:00:41.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.527" endtime="20201115 22:00:41.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.530" endtime="20201115 22:00:41.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.529" endtime="20201115 22:00:41.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.525" endtime="20201115 22:00:41.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.098" endtime="20201115 22:00:41.551"></status>
</kw>
<msg timestamp="20201115 22:00:41.552" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.563" endtime="20201115 22:00:41.643"></status>
</kw>
<msg timestamp="20201115 22:00:41.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.560" endtime="20201115 22:00:41.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.649" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.646" endtime="20201115 22:00:41.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.651" endtime="20201115 22:00:41.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.556" endtime="20201115 22:00:41.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.554" endtime="20201115 22:00:41.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.670" endtime="20201115 22:00:41.965"></status>
</kw>
<msg timestamp="20201115 22:00:41.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02654775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026582472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:41.667" endtime="20201115 22:00:41.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02654775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026582472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:41.969" endtime="20201115 22:00:41.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.977" endtime="20201115 22:00:41.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.661" endtime="20201115 22:00:41.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.658" endtime="20201115 22:00:41.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.984" level="INFO">${RESULT} = [{'time': 0.026582472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472200000000092e-05, 'source_diff': 3.472200000000092e-05}, {'time': 0.027974222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:41.981" endtime="20201115 22:00:41.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.997" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.985" endtime="20201115 22:00:41.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.001" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:42.000" endtime="20201115 22:00:42.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.004" level="INFO">VALUE: [3.472200000000092e-05, 3.4624999999999934e-05, 3.4624999999999934e-05, 3.4624999999999934e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.4555000000005553e-05, 3.4638999999996034e-05, 3.4652999999995604e-05, 3.46250000000034e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.459700000000426e-05, 3.465300000000254e-05, 3.463900000000297e-05, 3.4582999999997754e-05, 3.463900000000297e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4652999999995604e-05, 3.46250000000034e-05, 3.469399999999484e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.46250000000034e-05, 3.466700000000211e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.461100000000383e-05, 3.4624999999996464e-05, 3.466700000000211e-05, 3.4624999999996464e-05, 3.4596999999997324e-05, 3.4610999999989955e-05, 3.4582999999990816e-05, 3.4596999999997324e-05, 3.4624999999996464e-05, 3.465199999999613e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.4610999999989955e-05, 3.4638999999989095e-05, 3.4638999999989095e-05, 3.4624999999996464e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.458300000000469e-05, 3.463900000000297e-05, 3.462500000001034e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.003" endtime="20201115 22:00:42.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.998" endtime="20201115 22:00:42.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.007" endtime="20201115 22:00:42.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.011" endtime="20201115 22:00:42.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.009" endtime="20201115 22:00:42.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.005" endtime="20201115 22:00:42.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.552" endtime="20201115 22:00:42.032"></status>
</kw>
<msg timestamp="20201115 22:00:42.032" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.040" endtime="20201115 22:00:42.118"></status>
</kw>
<msg timestamp="20201115 22:00:42.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.039" endtime="20201115 22:00:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.120" endtime="20201115 22:00:42.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.122" endtime="20201115 22:00:42.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.036" endtime="20201115 22:00:42.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.034" endtime="20201115 22:00:42.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.131" endtime="20201115 22:00:42.417"></status>
</kw>
<msg timestamp="20201115 22:00:42.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.129" endtime="20201115 22:00:42.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.421" endtime="20201115 22:00:42.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.429" endtime="20201115 22:00:42.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.127" endtime="20201115 22:00:42.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.125" endtime="20201115 22:00:42.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.436" level="INFO">${RESULT} = [{'time': 0.021896681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.461199999999984e-05, 'source_diff': 3.461199999999984e-05}, {'time': 0.023305556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:42.432" endtime="20201115 22:00:42.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.449" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.437" endtime="20201115 22:00:42.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.453" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:42.452" endtime="20201115 22:00:42.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.455" level="INFO">VALUE: [3.461199999999984e-05, 3.463900000000297e-05, 3.4638999999999504e-05, 3.4611000000000364e-05, 3.463900000000297e-05, 3.4624999999999934e-05, 3.463900000000297e-05, 3.46250000000034e-05, 3.465200000000307e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.45700000000046e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.4596999999997324e-05, 3.4568999999998185e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.4652999999995604e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.458399999999723e-05, 3.461100000000383e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.461100000000383e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.465199999999613e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.4666999999988235e-05, 3.462500000001034e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.463900000000297e-05, 3.4624999999996464e-05, 3.463799999998962e-05, 3.462500000001034e-05, 3.463900000000297e-05, 3.461100000000383e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.4610999999989955e-05, 3.4610999999989955e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.454" endtime="20201115 22:00:42.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.449" endtime="20201115 22:00:42.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.459" endtime="20201115 22:00:42.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.462" endtime="20201115 22:00:42.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.461" endtime="20201115 22:00:42.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.457" endtime="20201115 22:00:42.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.032" endtime="20201115 22:00:42.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.163" endtime="20201115 22:00:42.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.162" endtime="20201115 22:00:42.487"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.491" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.509" endtime="20201115 22:00:42.592"></status>
</kw>
<msg timestamp="20201115 22:00:42.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.506" endtime="20201115 22:00:42.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.598" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.595" endtime="20201115 22:00:42.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.601" endtime="20201115 22:00:42.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.501" endtime="20201115 22:00:42.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.496" endtime="20201115 22:00:42.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.619" endtime="20201115 22:00:42.913"></status>
</kw>
<msg timestamp="20201115 22:00:42.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:42.616" endtime="20201115 22:00:42.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040750375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:42.917" endtime="20201115 22:00:42.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.925" endtime="20201115 22:00:42.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.611" endtime="20201115 22:00:42.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.607" endtime="20201115 22:00:42.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.932" level="INFO">${RESULT} = [{'time': 0.040750375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5374999999997214e-05, 'source_diff': 3.5374999999997214e-05}, {'time': 0.042221236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.929" endtime="20201115 22:00:42.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.945" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.933" endtime="20201115 22:00:42.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.950" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:42.949" endtime="20201115 22:00:42.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.956" level="INFO">VALUE: [3.5374999999997214e-05, 3.533300000000544e-05, 3.5318999999998935e-05, 3.544400000000253e-05, 3.538900000000372e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.538900000000372e-05, 3.5318999999998935e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.534700000000501e-05, 3.5388999999996784e-05, 3.5388999999996784e-05, 3.542999999998908e-05, 3.5346999999991136e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.538799999999731e-05, 3.5388999999996784e-05, 3.544399999999559e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.536100000001152e-05, 3.538799999999731e-05, 3.538900000001066e-05, 3.537500000000415e-05, 3.5374999999990275e-05, 3.540300000000329e-05, 3.5332999999998504e-05, 3.5360999999997644e-05, 3.540300000000329e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.538799999999731e-05, 3.5388999999996784e-05, 3.5388999999996784e-05, 3.540300000000329e-05, 3.5374999999990275e-05, 3.537500000000415e-05, 3.5346999999991136e-05, 3.534700000000501e-05, 3.5388999999996784e-05, 3.536199999999712e-05, 3.537500000000415e-05, 3.541599999999645e-05, 3.5388999999996784e-05, 3.537500000000415e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.951" endtime="20201115 22:00:42.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.946" endtime="20201115 22:00:42.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.959" endtime="20201115 22:00:42.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.963" endtime="20201115 22:00:42.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.961" endtime="20201115 22:00:42.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.958" endtime="20201115 22:00:42.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.492" endtime="20201115 22:00:42.984"></status>
</kw>
<msg timestamp="20201115 22:00:42.984" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.993" endtime="20201115 22:00:43.074"></status>
</kw>
<msg timestamp="20201115 22:00:43.074" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.991" endtime="20201115 22:00:43.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.075" endtime="20201115 22:00:43.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.078" endtime="20201115 22:00:43.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.988" endtime="20201115 22:00:43.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.986" endtime="20201115 22:00:43.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.086" endtime="20201115 22:00:43.373"></status>
</kw>
<msg timestamp="20201115 22:00:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.085" endtime="20201115 22:00:43.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.378" endtime="20201115 22:00:43.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.385" endtime="20201115 22:00:43.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.082" endtime="20201115 22:00:43.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.081" endtime="20201115 22:00:43.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.392" level="INFO">${RESULT} = [{'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5374999999997214e-05, 'source_diff': 3.5374999999997214e-05}, {'time': 0.023488083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:43.389" endtime="20201115 22:00:43.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.415" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.393" endtime="20201115 22:00:43.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.424" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:43.422" endtime="20201115 22:00:43.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.429" level="INFO">VALUE: [3.5374999999997214e-05, 3.5361000000001114e-05, 3.5361000000001114e-05, 3.5375000000000684e-05, 3.5375000000000684e-05, 3.5374999999997214e-05, 3.536200000000059e-05, 3.5374999999997214e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.538900000000372e-05, 3.537500000000415e-05, 3.534700000000501e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.5445000000002e-05, 3.540300000000329e-05, 3.538799999999731e-05, 3.5388999999996784e-05, 3.541700000000286e-05, 3.541700000000286e-05, 3.537500000000415e-05, 3.540300000000329e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.538799999999731e-05, 3.538900000001066e-05, 3.531999999999147e-05, 3.540300000000329e-05, 3.5388999999996784e-05, 3.540300000000329e-05, 3.536100000001152e-05, 3.5388999999996784e-05, 3.5388999999996784e-05, 3.5319000000005873e-05, 3.5360999999997644e-05, 3.5374999999990275e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.538900000001066e-05, 3.5388999999996784e-05, 3.534700000000501e-05, 3.538900000001066e-05, 3.5360999999997644e-05, 3.530599999999884e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.5374999999990275e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.427" endtime="20201115 22:00:43.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.417" endtime="20201115 22:00:43.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.436" endtime="20201115 22:00:43.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.443" endtime="20201115 22:00:43.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.440" endtime="20201115 22:00:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.433" endtime="20201115 22:00:43.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.984" endtime="20201115 22:00:43.467"></status>
</kw>
<msg timestamp="20201115 22:00:43.468" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.486" endtime="20201115 22:00:43.568"></status>
</kw>
<msg timestamp="20201115 22:00:43.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.483" endtime="20201115 22:00:43.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.571" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.570" endtime="20201115 22:00:43.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.572" endtime="20201115 22:00:43.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.477" endtime="20201115 22:00:43.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.473" endtime="20201115 22:00:43.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.581" endtime="20201115 22:00:43.870"></status>
</kw>
<msg timestamp="20201115 22:00:43.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036106556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036141917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.580" endtime="20201115 22:00:43.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036106556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036141917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.874" endtime="20201115 22:00:43.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.882" endtime="20201115 22:00:43.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.577" endtime="20201115 22:00:43.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.575" endtime="20201115 22:00:43.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.889" level="INFO">${RESULT} = [{'time': 0.036141917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.536100000000458e-05, 'source_diff': 3.536100000000458e-05}, {'time': 0.037605653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.885" endtime="20201115 22:00:43.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.902" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.890" endtime="20201115 22:00:43.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.907" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:43.906" endtime="20201115 22:00:43.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.909" level="INFO">VALUE: [3.536100000000458e-05, 3.538900000000372e-05, 3.531999999999841e-05, 3.5360999999997644e-05, 3.5374999999997214e-05, 3.5388999999996784e-05, 3.5360999999997644e-05, 3.538900000000372e-05, 3.536199999999712e-05, 3.5388999999996784e-05, 3.5402999999996354e-05, 3.5346999999998074e-05, 3.534800000000449e-05, 3.54580000000021e-05, 3.538799999999731e-05, 3.538900000000372e-05, 3.538900000000372e-05, 3.540199999999688e-05, 3.534799999999755e-05, 3.538900000001066e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.544500000000894e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.540300000000329e-05, 3.538900000001066e-05, 3.534700000000501e-05, 3.534800000000449e-05, 3.5388999999996784e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5332999999998504e-05, 3.536100000001152e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.542999999998908e-05, 3.5319000000005873e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5374999999990275e-05, 3.540200000000382e-05, 3.5388999999996784e-05, 3.534700000000501e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.908" endtime="20201115 22:00:43.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.903" endtime="20201115 22:00:43.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.912" endtime="20201115 22:00:43.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.915" endtime="20201115 22:00:43.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.914" endtime="20201115 22:00:43.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.911" endtime="20201115 22:00:43.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.469" endtime="20201115 22:00:43.936"></status>
</kw>
<msg timestamp="20201115 22:00:43.936" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.945" endtime="20201115 22:00:44.026"></status>
</kw>
<msg timestamp="20201115 22:00:44.027" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.943" endtime="20201115 22:00:44.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.028" endtime="20201115 22:00:44.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.030" endtime="20201115 22:00:44.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.941" endtime="20201115 22:00:44.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.939" endtime="20201115 22:00:44.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.039" endtime="20201115 22:00:44.338"></status>
</kw>
<msg timestamp="20201115 22:00:44.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.037" endtime="20201115 22:00:44.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.342" endtime="20201115 22:00:44.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.350" endtime="20201115 22:00:44.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.035" endtime="20201115 22:00:44.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.033" endtime="20201115 22:00:44.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.357" level="INFO">${RESULT} = [{'time': 0.021913319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5361000000001114e-05, 'source_diff': 3.5361000000001114e-05}, {'time': 0.023369069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:44.353" endtime="20201115 22:00:44.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.370" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.358" endtime="20201115 22:00:44.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.374" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:44.373" endtime="20201115 22:00:44.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.377" level="INFO">VALUE: [3.5361000000001114e-05, 3.5375000000000684e-05, 3.5389000000000254e-05, 3.5389000000000254e-05, 3.536199999999712e-05, 3.5389000000000254e-05, 3.5402999999999823e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.5346999999998074e-05, 3.5374999999997214e-05, 3.537500000000415e-05, 3.5346999999998074e-05, 3.5360999999997644e-05, 3.534799999999755e-05, 3.536100000000458e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.540199999999688e-05, 3.5346999999998074e-05, 3.5374999999997214e-05, 3.5374999999997214e-05, 3.5360999999997644e-05, 3.5374999999997214e-05, 3.537500000000415e-05, 3.537500000000415e-05, 3.5402999999996354e-05, 3.537500000000415e-05, 3.536199999999712e-05, 3.5374999999990275e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.530599999999884e-05, 3.537500000000415e-05, 3.544399999999559e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5374999999990275e-05, 3.5388999999996784e-05, 3.5360999999997644e-05, 3.536100000001152e-05, 3.5388999999996784e-05, 3.5374999999990275e-05, 3.537500000000415e-05, 3.543100000000243e-05, 3.5388999999996784e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.5332999999998504e-05, 3.5360999999997644e-05]</msg>
<status status="PASS" starttime="20201115 22:00:44.375" endtime="20201115 22:00:44.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.371" endtime="20201115 22:00:44.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.380" endtime="20201115 22:00:44.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.383" endtime="20201115 22:00:44.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.382" endtime="20201115 22:00:44.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.378" endtime="20201115 22:00:44.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.937" endtime="20201115 22:00:44.404"></status>
</kw>
<msg timestamp="20201115 22:00:44.404" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.413" endtime="20201115 22:00:44.494"></status>
</kw>
<msg timestamp="20201115 22:00:44.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.411" endtime="20201115 22:00:44.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.495" endtime="20201115 22:00:44.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.498" endtime="20201115 22:00:44.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.409" endtime="20201115 22:00:44.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.407" endtime="20201115 22:00:44.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.507" endtime="20201115 22:00:44.793"></status>
</kw>
<msg timestamp="20201115 22:00:44.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.505" endtime="20201115 22:00:44.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.798" endtime="20201115 22:00:44.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.806" endtime="20201115 22:00:44.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.503" endtime="20201115 22:00:44.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.501" endtime="20201115 22:00:44.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.813" level="INFO">${RESULT} = [{'time': 0.021961681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.536200000000059e-05, 'source_diff': 3.536200000000059e-05}, {'time': 0.023427972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.809" endtime="20201115 22:00:44.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.826" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.814" endtime="20201115 22:00:44.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.830" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:44.829" endtime="20201115 22:00:44.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.832" level="INFO">VALUE: [3.536200000000059e-05, 3.5388999999996784e-05, 3.543099999999896e-05, 3.5361000000001114e-05, 3.5346999999998074e-05, 3.5389000000000254e-05, 3.5389000000000254e-05, 3.5318999999998935e-05, 3.5346999999998074e-05, 3.5346999999998074e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.540300000000329e-05, 3.5290999999999795e-05, 3.5374999999997214e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.5374999999997214e-05, 3.536100000000458e-05, 3.531999999999841e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.5360999999997644e-05, 3.540199999999688e-05, 3.5360999999997644e-05, 3.5388999999996784e-05, 3.537500000000415e-05, 3.534700000000501e-05, 3.538900000001066e-05, 3.537500000000415e-05, 3.5374999999990275e-05, 3.537500000000415e-05, 3.531999999999147e-05, 3.537500000000415e-05, 3.5374999999990275e-05, 3.5360999999997644e-05, 3.5362000000010996e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.5360999999997644e-05, 3.5360999999997644e-05, 3.537500000000415e-05, 3.5388999999996784e-05, 3.5360999999997644e-05, 3.538900000001066e-05, 3.5346999999991136e-05]</msg>
<status status="PASS" starttime="20201115 22:00:44.831" endtime="20201115 22:00:44.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.826" endtime="20201115 22:00:44.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.835" endtime="20201115 22:00:44.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.839" endtime="20201115 22:00:44.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.837" endtime="20201115 22:00:44.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.834" endtime="20201115 22:00:44.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.405" endtime="20201115 22:00:44.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.489" endtime="20201115 22:00:44.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.488" endtime="20201115 22:00:44.860"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.862" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.871" endtime="20201115 22:00:44.955"></status>
</kw>
<msg timestamp="20201115 22:00:44.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.869" endtime="20201115 22:00:44.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.957" endtime="20201115 22:00:44.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.959" endtime="20201115 22:00:44.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.867" endtime="20201115 22:00:44.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.865" endtime="20201115 22:00:44.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.968" endtime="20201115 22:00:45.273"></status>
</kw>
<msg timestamp="20201115 22:00:45.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.967" endtime="20201115 22:00:45.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.277" endtime="20201115 22:00:45.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.285" endtime="20201115 22:00:45.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.964" endtime="20201115 22:00:45.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.963" endtime="20201115 22:00:45.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.292" level="INFO">${RESULT} = [{'time': 0.024372847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6110999999998394e-05, 'source_diff': 3.6110999999998394e-05}, {'time': 0.025902153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.288" endtime="20201115 22:00:45.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.305" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.293" endtime="20201115 22:00:45.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.309" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.308" endtime="20201115 22:00:45.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.312" level="INFO">VALUE: [3.6110999999998394e-05, 3.6139000000001004e-05, 3.6097000000002294e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.61250000000049e-05, 3.6124999999997964e-05, 3.613900000000447e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.608399999999873e-05, 3.6096999999998824e-05, 3.61250000000049e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6152999999997104e-05, 3.6124999999997964e-05, 3.611199999999787e-05, 3.61250000000049e-05, 3.6096999999998824e-05, 3.6110999999991455e-05, 3.612500000001184e-05, 3.6124999999997964e-05, 3.616700000000361e-05, 3.6124999999997964e-05, 3.613900000000447e-05, 3.6110999999991455e-05, 3.6068999999999685e-05, 3.611100000000533e-05, 3.608400000000567e-05, 3.6082999999992316e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6110999999991455e-05, 3.6054999999993176e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.60979999999983e-05, 3.6110999999991455e-05, 3.6055000000007054e-05, 3.611200000000481e-05, 3.6124999999997964e-05, 3.611100000000533e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.310" endtime="20201115 22:00:45.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.306" endtime="20201115 22:00:45.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.315" endtime="20201115 22:00:45.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.318" endtime="20201115 22:00:45.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.317" endtime="20201115 22:00:45.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.313" endtime="20201115 22:00:45.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.863" endtime="20201115 22:00:45.339"></status>
</kw>
<msg timestamp="20201115 22:00:45.339" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.348" endtime="20201115 22:00:45.432"></status>
</kw>
<msg timestamp="20201115 22:00:45.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.346" endtime="20201115 22:00:45.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.434" endtime="20201115 22:00:45.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.436" endtime="20201115 22:00:45.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.344" endtime="20201115 22:00:45.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.342" endtime="20201115 22:00:45.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.445" endtime="20201115 22:00:45.734"></status>
</kw>
<msg timestamp="20201115 22:00:45.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.444" endtime="20201115 22:00:45.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.738" endtime="20201115 22:00:45.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.746" endtime="20201115 22:00:45.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.441" endtime="20201115 22:00:45.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.440" endtime="20201115 22:00:45.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.753" level="INFO">${RESULT} = [{'time': 0.021972819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.613800000000153e-05, 'source_diff': 3.613800000000153e-05}, {'time': 0.023495903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.749" endtime="20201115 22:00:45.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.766" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.754" endtime="20201115 22:00:45.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.771" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:45.770" endtime="20201115 22:00:45.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.773" level="INFO">VALUE: [3.613800000000153e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.61520000000011e-05, 3.6138999999997534e-05, 3.6111000000001864e-05, 3.6125000000001434e-05, 3.611100000000533e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.615300000000404e-05, 3.6124999999997964e-05, 3.61250000000049e-05, 3.6138999999997534e-05, 3.6110999999998394e-05, 3.618000000000371e-05, 3.611100000000533e-05, 3.6068999999999685e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6083000000006193e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6180999999996244e-05, 3.61250000000049e-05, 3.60979999999983e-05, 3.615199999999763e-05, 3.611199999999093e-05, 3.6180999999996244e-05, 3.6110999999991455e-05, 3.6124999999997964e-05, 3.612500000001184e-05, 3.6096999999998824e-05, 3.613900000000447e-05, 3.6110999999991455e-05, 3.6124999999997964e-05, 3.6110999999991455e-05, 3.6138999999990595e-05, 3.613900000000447e-05, 3.6124999999997964e-05, 3.611100000000533e-05, 3.611100000000533e-05, 3.611100000000533e-05, 3.6110999999991455e-05, 3.611100000000533e-05, 3.6180999999996244e-05, 3.613900000000447e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.772" endtime="20201115 22:00:45.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.767" endtime="20201115 22:00:45.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.777" endtime="20201115 22:00:45.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.780" endtime="20201115 22:00:45.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.779" endtime="20201115 22:00:45.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.775" endtime="20201115 22:00:45.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.340" endtime="20201115 22:00:45.801"></status>
</kw>
<msg timestamp="20201115 22:00:45.801" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.810" endtime="20201115 22:00:45.895"></status>
</kw>
<msg timestamp="20201115 22:00:45.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.808" endtime="20201115 22:00:45.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.898" endtime="20201115 22:00:45.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.903" endtime="20201115 22:00:45.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.806" endtime="20201115 22:00:45.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.803" endtime="20201115 22:00:45.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.922" endtime="20201115 22:00:46.221"></status>
</kw>
<msg timestamp="20201115 22:00:46.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.919" endtime="20201115 22:00:46.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.225" endtime="20201115 22:00:46.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.233" endtime="20201115 22:00:46.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.913" endtime="20201115 22:00:46.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.910" endtime="20201115 22:00:46.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.240" level="INFO">${RESULT} = [{'time': 0.022569986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6139000000001004e-05, 'source_diff': 3.6139000000001004e-05}, {'time': 0.024086444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.237" endtime="20201115 22:00:46.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.253" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.241" endtime="20201115 22:00:46.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.258" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:46.256" endtime="20201115 22:00:46.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.260" level="INFO">VALUE: [3.6139000000001004e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.619500000000275e-05, 3.613800000000153e-05, 3.6125000000001434e-05, 3.6152999999997104e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.61250000000049e-05, 3.6096999999998824e-05, 3.613900000000447e-05, 3.61250000000049e-05, 3.61250000000049e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.602800000000045e-05, 3.6124999999997964e-05, 3.61250000000049e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.616700000000361e-05, 3.612500000001184e-05, 3.6110999999991455e-05, 3.6110999999991455e-05, 3.6110999999991455e-05, 3.619400000000328e-05, 3.611100000000533e-05, 3.618100000001012e-05, 3.60979999999983e-05, 3.6110999999991455e-05, 3.611100000000533e-05, 3.6096999999998824e-05, 3.611100000000533e-05, 3.6124999999997964e-05, 3.606999999999916e-05, 3.6068999999999685e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.615199999999763e-05, 3.611100000000533e-05, 3.612500000001184e-05, 3.613900000000447e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.259" endtime="20201115 22:00:46.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.254" endtime="20201115 22:00:46.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.263" endtime="20201115 22:00:46.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.266" endtime="20201115 22:00:46.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.265" endtime="20201115 22:00:46.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.261" endtime="20201115 22:00:46.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.801" endtime="20201115 22:00:46.287"></status>
</kw>
<msg timestamp="20201115 22:00:46.288" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.296" endtime="20201115 22:00:46.381"></status>
</kw>
<msg timestamp="20201115 22:00:46.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.295" endtime="20201115 22:00:46.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.382" endtime="20201115 22:00:46.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.384" endtime="20201115 22:00:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.292" endtime="20201115 22:00:46.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.290" endtime="20201115 22:00:46.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.393" endtime="20201115 22:00:46.680"></status>
</kw>
<msg timestamp="20201115 22:00:46.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.392" endtime="20201115 22:00:46.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.684" endtime="20201115 22:00:46.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.692" endtime="20201115 22:00:46.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.389" endtime="20201115 22:00:46.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.388" endtime="20201115 22:00:46.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.699" level="INFO">${RESULT} = [{'time': 0.022609861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6138999999997534e-05, 'source_diff': 3.6138999999997534e-05}, {'time': 0.024130861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.695" endtime="20201115 22:00:46.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.700" endtime="20201115 22:00:46.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.716" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:46.715" endtime="20201115 22:00:46.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.719" level="INFO">VALUE: [3.6138999999997534e-05, 3.6125000000001434e-05, 3.6139000000001004e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6068999999999685e-05, 3.6124999999997964e-05, 3.604200000000002e-05, 3.613799999999806e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.6096999999998824e-05, 3.611199999999787e-05, 3.6124999999997964e-05, 3.6166999999996674e-05, 3.609700000000576e-05, 3.609700000000576e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.6124999999997964e-05, 3.61250000000049e-05, 3.61250000000049e-05, 3.6110999999998394e-05, 3.609700000000576e-05, 3.6110999999998394e-05, 3.6110999999991455e-05, 3.60970000000127e-05, 3.611100000000533e-05, 3.6096999999998824e-05, 3.6068999999999685e-05, 3.6138000000005e-05, 3.6096999999998824e-05, 3.6138999999990595e-05, 3.6054999999993176e-05, 3.6096999999998824e-05, 3.6138999999990595e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.611100000000533e-05, 3.613900000000447e-05, 3.6110999999991455e-05, 3.6152999999997104e-05, 3.613799999999112e-05, 3.6124999999997964e-05, 3.611100000000533e-05, 3.6124999999997964e-05, 3.616600000000414e-05, 3.6124999999997964e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.717" endtime="20201115 22:00:46.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.713" endtime="20201115 22:00:46.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.722" endtime="20201115 22:00:46.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.726" endtime="20201115 22:00:46.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.724" endtime="20201115 22:00:46.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.721" endtime="20201115 22:00:46.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.288" endtime="20201115 22:00:46.749"></status>
</kw>
<msg timestamp="20201115 22:00:46.750" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.768" endtime="20201115 22:00:46.854"></status>
</kw>
<msg timestamp="20201115 22:00:46.855" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.764" endtime="20201115 22:00:46.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.857" endtime="20201115 22:00:46.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.862" endtime="20201115 22:00:46.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.759" endtime="20201115 22:00:46.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.755" endtime="20201115 22:00:46.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.881" endtime="20201115 22:00:47.176"></status>
</kw>
<msg timestamp="20201115 22:00:47.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035808528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035844708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.878" endtime="20201115 22:00:47.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035808528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035844708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.181" endtime="20201115 22:00:47.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.189" endtime="20201115 22:00:47.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.873" endtime="20201115 22:00:47.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.869" endtime="20201115 22:00:47.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.195" level="INFO">${RESULT} = [{'time': 0.035844708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.618000000000371e-05, 'source_diff': 3.618000000000371e-05}, {'time': 0.037364181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:47.192" endtime="20201115 22:00:47.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.208" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.196" endtime="20201115 22:00:47.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.213" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:47.212" endtime="20201115 22:00:47.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.215" level="INFO">VALUE: [3.618000000000371e-05, 3.61250000000049e-05, 3.6138999999997534e-05, 3.6138999999997534e-05, 3.611200000000481e-05, 3.6110999999998394e-05, 3.6180999999996244e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.618100000000318e-05, 3.612500000001184e-05, 3.6055000000007054e-05, 3.6124999999997964e-05, 3.6138999999990595e-05, 3.6138999999990595e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.612500000001184e-05, 3.6124999999997964e-05, 3.612500000001184e-05, 3.6096999999998824e-05, 3.6110999999991455e-05, 3.6124999999997964e-05, 3.611100000000533e-05, 3.6110999999991455e-05, 3.6110999999991455e-05, 3.612500000001184e-05, 3.613900000000447e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.617999999999677e-05, 3.6110999999991455e-05, 3.60979999999983e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6138000000005e-05, 3.6138999999990595e-05, 3.6152999999997104e-05, 3.6166999999989735e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.214" endtime="20201115 22:00:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.209" endtime="20201115 22:00:47.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.219" endtime="20201115 22:00:47.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.222" endtime="20201115 22:00:47.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.220" endtime="20201115 22:00:47.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.217" endtime="20201115 22:00:47.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.751" endtime="20201115 22:00:47.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.861" endtime="20201115 22:00:47.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.860" endtime="20201115 22:00:47.243"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.230" endtime="20201115 22:00:47.243"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.248" endtime="20201115 22:00:47.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.246" endtime="20201115 22:00:47.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.245" endtime="20201115 22:00:47.268"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:53.163" endtime="20201115 22:00:47.269" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.277" endtime="20201115 22:00:47.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.276" endtime="20201115 22:00:47.298"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.311" endtime="20201115 22:00:47.323"></status>
</kw>
<msg timestamp="20201115 22:00:47.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.309" endtime="20201115 22:00:47.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.325" endtime="20201115 22:00:47.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:47.327" endtime="20201115 22:00:47.330"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:47.306" endtime="20201115 22:00:47.330"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:47.304" endtime="20201115 22:00:47.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.303" endtime="20201115 22:00:47.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:47.335" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:47.334" endtime="20201115 22:00:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.332" endtime="20201115 22:00:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.302" endtime="20201115 22:00:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.301" endtime="20201115 22:00:47.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.336" endtime="20201115 22:00:47.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.300" endtime="20201115 22:00:47.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.298" endtime="20201115 22:00:47.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.275" endtime="20201115 22:00:47.339"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.343" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.352" endtime="20201115 22:00:47.370"></status>
</kw>
<msg timestamp="20201115 22:00:47.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.350" endtime="20201115 22:00:47.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.372" endtime="20201115 22:00:47.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.374" endtime="20201115 22:00:47.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.348" endtime="20201115 22:00:47.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.345" endtime="20201115 22:00:47.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.383" endtime="20201115 22:00:47.668"></status>
</kw>
<msg timestamp="20201115 22:00:47.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066661889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066684736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.382" endtime="20201115 22:00:47.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066661889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066684736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.672" endtime="20201115 22:00:47.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.680" endtime="20201115 22:00:47.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.379" endtime="20201115 22:00:47.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.377" endtime="20201115 22:00:47.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.688" level="INFO">${RESULT} = [{'time': 0.066684736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2846999999992512e-05, 'source_diff': 2.2846999999992512e-05}, {'time': 0.066890722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.685" endtime="20201115 22:00:47.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.701" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.689" endtime="20201115 22:00:47.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.705" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.704" endtime="20201115 22:00:47.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.708" level="INFO">VALUE: [2.2846999999992512e-05, 2.2722000000002796e-05, 2.2721999999988918e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2778000000001075e-05, 2.268099999999662e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.27369999999949e-05, 2.2707999999996287e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2763999999994566e-05, 2.2735999999995427e-05, 2.272300000000227e-05, 2.27770000000016e-05, 2.2735999999995427e-05, 2.2750000000001935e-05, 2.280500000000074e-05, 2.2735999999995427e-05, 2.2707999999996287e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.2736000000009304e-05, 2.2735999999995427e-05, 2.2750000000001935e-05, 2.2722000000002796e-05, 2.2792000000007584e-05, 2.2721999999988918e-05, 2.2736000000009304e-05, 2.269500000000313e-05, 2.2750000000001935e-05, 2.266700000000399e-05, 2.2722000000002796e-05, 2.2736000000009304e-05, 2.2721999999988918e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.272300000000227e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2750000000001935e-05, 2.2736000000009304e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.706" endtime="20201115 22:00:47.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.702" endtime="20201115 22:00:47.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.711" endtime="20201115 22:00:47.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.714" endtime="20201115 22:00:47.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.713" endtime="20201115 22:00:47.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.709" endtime="20201115 22:00:47.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.343" endtime="20201115 22:00:47.735"></status>
</kw>
<msg timestamp="20201115 22:00:47.735" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.744" endtime="20201115 22:00:47.762"></status>
</kw>
<msg timestamp="20201115 22:00:47.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.743" endtime="20201115 22:00:47.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.764" endtime="20201115 22:00:47.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.766" endtime="20201115 22:00:47.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.740" endtime="20201115 22:00:47.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.738" endtime="20201115 22:00:47.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.775" endtime="20201115 22:00:48.061"></status>
</kw>
<msg timestamp="20201115 22:00:48.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:47.774" endtime="20201115 22:00:48.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02174275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:48.065" endtime="20201115 22:00:48.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.073" endtime="20201115 22:00:48.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.771" endtime="20201115 22:00:48.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.769" endtime="20201115 22:00:48.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.080" level="INFO">${RESULT} = [{'time': 0.02174275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.284700000000292e-05, 'source_diff': 2.284700000000292e-05}, {'time': 0.021936264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:48.076" endtime="20201115 22:00:48.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.093" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.081" endtime="20201115 22:00:48.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.097" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.096" endtime="20201115 22:00:48.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.100" level="INFO">VALUE: [2.284700000000292e-05, 2.266700000000052e-05, 2.2708000000003226e-05, 2.2735999999998896e-05, 2.270899999999923e-05, 2.2736000000002365e-05, 2.2735999999998896e-05, 2.27229999999988e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.2750000000001935e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.273699999999837e-05, 2.2736000000002365e-05, 2.2736000000002365e-05, 2.2722000000002796e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2694000000000186e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.27090000000027e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.2804999999997272e-05, 2.269499999999966e-05, 2.2749999999998466e-05, 2.268100000000009e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.2750000000001935e-05, 2.2722000000002796e-05, 2.27229999999988e-05, 2.2750000000001935e-05, 2.272300000000227e-05, 2.2736000000002365e-05, 2.280500000000074e-05, 2.2735999999998896e-05, 2.2763999999998036e-05, 2.2750000000001935e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.098" endtime="20201115 22:00:48.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.094" endtime="20201115 22:00:48.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.108" endtime="20201115 22:00:48.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.111" endtime="20201115 22:00:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.110" endtime="20201115 22:00:48.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.106" endtime="20201115 22:00:48.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.736" endtime="20201115 22:00:48.132"></status>
</kw>
<msg timestamp="20201115 22:00:48.132" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.141" endtime="20201115 22:00:48.159"></status>
</kw>
<msg timestamp="20201115 22:00:48.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.139" endtime="20201115 22:00:48.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.160" endtime="20201115 22:00:48.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.163" endtime="20201115 22:00:48.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.137" endtime="20201115 22:00:48.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.135" endtime="20201115 22:00:48.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.172" endtime="20201115 22:00:48.457"></status>
</kw>
<msg timestamp="20201115 22:00:48.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.170" endtime="20201115 22:00:48.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021683778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.461" endtime="20201115 22:00:48.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.469" endtime="20201115 22:00:48.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.167" endtime="20201115 22:00:48.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.166" endtime="20201115 22:00:48.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.476" level="INFO">${RESULT} = [{'time': 0.021683778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.286100000000249e-05, 'source_diff': 2.286100000000249e-05}, {'time': 0.021872333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:48.472" endtime="20201115 22:00:48.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.490" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.477" endtime="20201115 22:00:48.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.495" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.494" endtime="20201115 22:00:48.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.497" level="INFO">VALUE: [2.286100000000249e-05, 2.2721999999999326e-05, 2.2792000000000645e-05, 2.266699999999705e-05, 2.27229999999988e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.2707999999999756e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2736000000002365e-05, 2.27229999999988e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2749999999998466e-05, 2.272300000000227e-05, 2.273699999999837e-05, 2.2735999999998896e-05, 2.2750000000001935e-05, 2.27229999999988e-05, 2.2749999999998466e-05, 2.2736000000002365e-05, 2.2806000000000215e-05, 2.2750000000001935e-05, 2.2666000000001046e-05, 2.270899999999923e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.270899999999923e-05, 2.2721999999999326e-05, 2.27090000000027e-05, 2.273699999999837e-05, 2.2749999999998466e-05, 2.272300000000227e-05, 2.2749999999998466e-05, 2.2736000000002365e-05, 2.2750000000001935e-05, 2.2721999999999326e-05, 2.2694000000000186e-05, 2.2736000000002365e-05, 2.269499999999619e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.496" endtime="20201115 22:00:48.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.491" endtime="20201115 22:00:48.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.501" endtime="20201115 22:00:48.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.504" endtime="20201115 22:00:48.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.503" endtime="20201115 22:00:48.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.499" endtime="20201115 22:00:48.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.133" endtime="20201115 22:00:48.525"></status>
</kw>
<msg timestamp="20201115 22:00:48.525" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.534" endtime="20201115 22:00:48.552"></status>
</kw>
<msg timestamp="20201115 22:00:48.552" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.532" endtime="20201115 22:00:48.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.553" endtime="20201115 22:00:48.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.556" endtime="20201115 22:00:48.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.530" endtime="20201115 22:00:48.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.528" endtime="20201115 22:00:48.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.565" endtime="20201115 22:00:48.851"></status>
</kw>
<msg timestamp="20201115 22:00:48.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:48.563" endtime="20201115 22:00:48.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:48.855" endtime="20201115 22:00:48.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.864" endtime="20201115 22:00:48.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.561" endtime="20201115 22:00:48.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.559" endtime="20201115 22:00:48.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.870" level="INFO">${RESULT} = [{'time': 0.02177475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.021980139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:48.867" endtime="20201115 22:00:48.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.883" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.871" endtime="20201115 22:00:48.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.888" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.887" endtime="20201115 22:00:48.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.890" level="INFO">VALUE: [2.286099999999902e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.2736000000002365e-05, 2.2736000000002365e-05, 2.273699999999837e-05, 2.2750000000001935e-05, 2.2736000000002365e-05, 2.270899999999923e-05, 2.2707999999999756e-05, 2.2736000000002365e-05, 2.2749999999998466e-05, 2.2750000000001935e-05, 2.2750000000001935e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.2736000000002365e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.273700000000184e-05, 2.2736000000002365e-05, 2.2750000000001935e-05, 2.273699999999837e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.273700000000184e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2736000000002365e-05, 2.265300000000095e-05, 2.2722000000002796e-05, 2.273700000000184e-05, 2.2721999999999326e-05, 2.270899999999923e-05, 2.27229999999988e-05, 2.2750000000001935e-05, 2.27229999999988e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.2750000000001935e-05, 2.272299999999533e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.889" endtime="20201115 22:00:48.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.884" endtime="20201115 22:00:48.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.894" endtime="20201115 22:00:48.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.897" endtime="20201115 22:00:48.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.896" endtime="20201115 22:00:48.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.892" endtime="20201115 22:00:48.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.526" endtime="20201115 22:00:48.918"></status>
</kw>
<msg timestamp="20201115 22:00:48.918" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.927" endtime="20201115 22:00:48.945"></status>
</kw>
<msg timestamp="20201115 22:00:48.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.925" endtime="20201115 22:00:48.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.946" endtime="20201115 22:00:48.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.949" endtime="20201115 22:00:48.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.923" endtime="20201115 22:00:48.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.921" endtime="20201115 22:00:48.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.958" endtime="20201115 22:00:49.244"></status>
</kw>
<msg timestamp="20201115 22:00:49.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.956" endtime="20201115 22:00:49.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.249" endtime="20201115 22:00:49.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.257" endtime="20201115 22:00:49.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.954" endtime="20201115 22:00:49.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.952" endtime="20201115 22:00:49.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.263" level="INFO">${RESULT} = [{'time': 0.021768889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.021975208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:49.260" endtime="20201115 22:00:49.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.276" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.264" endtime="20201115 22:00:49.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.281" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.280" endtime="20201115 22:00:49.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.283" level="INFO">VALUE: [2.286099999999902e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.27229999999988e-05, 2.2735999999998896e-05, 2.2750000000001935e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.27229999999988e-05, 2.2736000000002365e-05, 2.2735999999998896e-05, 2.2750000000001935e-05, 2.2750000000001935e-05, 2.2750000000001935e-05, 2.2735999999998896e-05, 2.2736000000002365e-05, 2.2722000000002796e-05, 2.27229999999988e-05, 2.2722000000002796e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2749999999998466e-05, 2.2776999999998132e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.27229999999988e-05, 2.2735999999998896e-05, 2.27229999999988e-05, 2.2736000000002365e-05, 2.2735999999998896e-05, 2.2736000000002365e-05, 2.2735999999998896e-05, 2.2722000000002796e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2736000000002365e-05, 2.266700000000052e-05, 2.2735999999998896e-05, 2.273699999999837e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.273699999999837e-05, 2.2735999999998896e-05, 2.272299999999533e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.282" endtime="20201115 22:00:49.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.277" endtime="20201115 22:00:49.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.287" endtime="20201115 22:00:49.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.290" endtime="20201115 22:00:49.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.289" endtime="20201115 22:00:49.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.285" endtime="20201115 22:00:49.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.919" endtime="20201115 22:00:49.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.342" endtime="20201115 22:00:49.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.341" endtime="20201115 22:00:49.312"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.314" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.322" endtime="20201115 22:00:49.343"></status>
</kw>
<msg timestamp="20201115 22:00:49.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.321" endtime="20201115 22:00:49.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.344" endtime="20201115 22:00:49.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.347" endtime="20201115 22:00:49.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.318" endtime="20201115 22:00:49.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.316" endtime="20201115 22:00:49.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.356" endtime="20201115 22:00:49.641"></status>
</kw>
<msg timestamp="20201115 22:00:49.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023950333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023985444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.354" endtime="20201115 22:00:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023950333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023985444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.646" endtime="20201115 22:00:49.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.654" endtime="20201115 22:00:49.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.352" endtime="20201115 22:00:49.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.350" endtime="20201115 22:00:49.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.660" level="INFO">${RESULT} = [{'time': 0.023985444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5111000000000864e-05, 'source_diff': 3.5111000000000864e-05}, {'time': 0.024240083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.657" endtime="20201115 22:00:49.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.673" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.661" endtime="20201115 22:00:49.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.678" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.677" endtime="20201115 22:00:49.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.681" level="INFO">VALUE: [3.5111000000000864e-05, 3.5110999999997394e-05, 3.5111000000000864e-05, 3.5069000000002154e-05, 3.5054999999999115e-05, 3.506999999999816e-05, 3.5055000000002584e-05, 3.5026999999999975e-05, 3.5068999999998685e-05, 3.5083000000001724e-05, 3.5125000000000434e-05, 3.506999999999816e-05, 3.5068999999998685e-05, 3.507000000000163e-05, 3.506999999999816e-05, 3.505600000000206e-05, 3.5054999999999115e-05, 3.50840000000012e-05, 3.507000000000163e-05, 3.505599999999859e-05, 3.5069000000002154e-05, 3.5097000000001294e-05, 3.5054999999999115e-05, 3.50840000000012e-05, 3.5097000000001294e-05, 3.505600000000206e-05, 3.5069000000002154e-05, 3.5054999999999115e-05, 3.5139000000000004e-05, 3.5068999999998685e-05, 3.5068999999998685e-05, 3.5026999999999975e-05, 3.5096999999997824e-05, 3.5055000000006054e-05, 3.5040999999999545e-05, 3.504199999999902e-05, 3.5054999999999115e-05, 3.505599999999859e-05, 3.508300000000519e-05, 3.5068999999998685e-05, 3.5096999999997824e-05, 3.500000000000031e-05, 3.5054999999999115e-05, 3.506999999999816e-05, 3.5054999999999115e-05, 3.5068999999998685e-05, 3.506999999999816e-05, 3.5082999999998254e-05, 3.505599999999859e-05, 3.5054999999999115e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.679" endtime="20201115 22:00:49.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.674" endtime="20201115 22:00:49.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.684" endtime="20201115 22:00:49.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.687" endtime="20201115 22:00:49.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.686" endtime="20201115 22:00:49.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.682" endtime="20201115 22:00:49.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.314" endtime="20201115 22:00:49.708"></status>
</kw>
<msg timestamp="20201115 22:00:49.708" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.717" endtime="20201115 22:00:49.737"></status>
</kw>
<msg timestamp="20201115 22:00:49.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.715" endtime="20201115 22:00:49.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.740" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.739" endtime="20201115 22:00:49.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.741" endtime="20201115 22:00:49.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.713" endtime="20201115 22:00:49.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.711" endtime="20201115 22:00:49.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.750" endtime="20201115 22:00:50.038"></status>
</kw>
<msg timestamp="20201115 22:00:50.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:49.749" endtime="20201115 22:00:50.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:50.042" endtime="20201115 22:00:50.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.050" endtime="20201115 22:00:50.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.746" endtime="20201115 22:00:50.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.745" endtime="20201115 22:00:50.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.057" level="INFO">${RESULT} = [{'time': 0.021695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5152999999999573e-05, 'source_diff': 3.5152999999999573e-05}, {'time': 0.021937097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:50.053" endtime="20201115 22:00:50.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.071" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.058" endtime="20201115 22:00:50.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.076" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.075" endtime="20201115 22:00:50.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.078" level="INFO">VALUE: [3.5152999999999573e-05, 3.5068999999998685e-05, 3.508399999999773e-05, 3.5097000000001294e-05, 3.505599999999859e-05, 3.506999999999816e-05, 3.5097000000001294e-05, 3.5054999999999115e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.5069000000002154e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.5125000000000434e-05, 3.5068999999998685e-05, 3.5054999999999115e-05, 3.5083000000001724e-05, 3.505599999999859e-05, 3.507000000000163e-05, 3.5111000000000864e-05, 3.5054999999999115e-05, 3.504199999999902e-05, 3.502799999999945e-05, 3.5054999999999115e-05, 3.5054999999999115e-05, 3.5069000000002154e-05, 3.5055000000002584e-05, 3.502799999999945e-05, 3.501399999999988e-05, 3.5055000000002584e-05, 3.5069000000002154e-05, 3.5111000000000864e-05, 3.505600000000206e-05, 3.507000000000163e-05, 3.506999999999816e-05, 3.507000000000163e-05, 3.5069000000002154e-05, 3.5054999999999115e-05, 3.505600000000206e-05, 3.5068999999998685e-05, 3.508399999999773e-05, 3.5054999999999115e-05, 3.508300000000519e-05, 3.5054999999999115e-05, 3.505599999999859e-05, 3.505600000000553e-05, 3.5055000000006054e-05, 3.5054999999999115e-05, 3.49859999999938e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.077" endtime="20201115 22:00:50.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.072" endtime="20201115 22:00:50.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.081" endtime="20201115 22:00:50.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.085" endtime="20201115 22:00:50.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.083" endtime="20201115 22:00:50.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.080" endtime="20201115 22:00:50.105"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.709" endtime="20201115 22:00:50.105"></status>
</kw>
<msg timestamp="20201115 22:00:50.106" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.114" endtime="20201115 22:00:50.135"></status>
</kw>
<msg timestamp="20201115 22:00:50.135" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.113" endtime="20201115 22:00:50.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.136" endtime="20201115 22:00:50.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.139" endtime="20201115 22:00:50.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.110" endtime="20201115 22:00:50.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.108" endtime="20201115 22:00:50.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.148" endtime="20201115 22:00:50.433"></status>
</kw>
<msg timestamp="20201115 22:00:50.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.146" endtime="20201115 22:00:50.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.437" endtime="20201115 22:00:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.446" endtime="20201115 22:00:50.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.144" endtime="20201115 22:00:50.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.142" endtime="20201115 22:00:50.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.452" level="INFO">${RESULT} = [{'time': 0.021723083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5111000000000864e-05, 'source_diff': 3.5111000000000864e-05}, {'time': 0.021960181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:50.449" endtime="20201115 22:00:50.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.466" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.454" endtime="20201115 22:00:50.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.470" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.469" endtime="20201115 22:00:50.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.473" level="INFO">VALUE: [3.5111000000000864e-05, 3.504199999999902e-05, 3.5054999999999115e-05, 3.499999999999684e-05, 3.504200000000249e-05, 3.500000000000031e-05, 3.5069000000002154e-05, 3.5054999999999115e-05, 3.5068999999998685e-05, 3.5110999999997394e-05, 3.504199999999902e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.5054999999999115e-05, 3.502799999999945e-05, 3.5026999999999975e-05, 3.505599999999859e-05, 3.505600000000206e-05, 3.504200000000249e-05, 3.5054999999999115e-05, 3.505600000000206e-05, 3.505599999999859e-05, 3.505600000000206e-05, 3.5069000000002154e-05, 3.504199999999902e-05, 3.505599999999859e-05, 3.5026999999999975e-05, 3.505599999999859e-05, 3.5068999999998685e-05, 3.505600000000206e-05, 3.505600000000206e-05, 3.5040999999999545e-05, 3.5069000000002154e-05, 3.5068999999998685e-05, 3.505600000000206e-05, 3.5083000000001724e-05, 3.505599999999859e-05, 3.5054999999999115e-05, 3.504200000000249e-05, 3.505599999999859e-05, 3.5068999999998685e-05, 3.50700000000051e-05, 3.5124999999996964e-05, 3.5054999999999115e-05, 3.506999999999816e-05, 3.5054999999999115e-05, 3.5096999999997824e-05, 3.5054999999999115e-05, 3.505599999999859e-05, 3.5068999999998685e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.471" endtime="20201115 22:00:50.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.467" endtime="20201115 22:00:50.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.476" endtime="20201115 22:00:50.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.479" endtime="20201115 22:00:50.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.478" endtime="20201115 22:00:50.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.474" endtime="20201115 22:00:50.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.106" endtime="20201115 22:00:50.500"></status>
</kw>
<msg timestamp="20201115 22:00:50.500" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.509" endtime="20201115 22:00:50.529"></status>
</kw>
<msg timestamp="20201115 22:00:50.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.507" endtime="20201115 22:00:50.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.531" endtime="20201115 22:00:50.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.533" endtime="20201115 22:00:50.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.505" endtime="20201115 22:00:50.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.503" endtime="20201115 22:00:50.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.542" endtime="20201115 22:00:50.827"></status>
</kw>
<msg timestamp="20201115 22:00:50.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.541" endtime="20201115 22:00:50.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021690417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.831" endtime="20201115 22:00:50.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.839" endtime="20201115 22:00:50.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.538" endtime="20201115 22:00:50.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.536" endtime="20201115 22:00:50.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.846" level="INFO">${RESULT} = [{'time': 0.021690417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.509800000000077e-05, 'source_diff': 3.509800000000077e-05}, {'time': 0.021933514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:50.843" endtime="20201115 22:00:50.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.859" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.847" endtime="20201115 22:00:50.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.864" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.863" endtime="20201115 22:00:50.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.867" level="INFO">VALUE: [3.509800000000077e-05, 3.5111000000000864e-05, 3.505600000000206e-05, 3.505600000000206e-05, 3.5125000000000434e-05, 3.505599999999859e-05, 3.5082999999998254e-05, 3.5068999999998685e-05, 3.5069000000002154e-05, 3.5054999999999115e-05, 3.5068999999998685e-05, 3.5069000000002154e-05, 3.507000000000163e-05, 3.5068999999998685e-05, 3.5054999999999115e-05, 3.5082999999998254e-05, 3.5069000000002154e-05, 3.5069000000002154e-05, 3.5068999999998685e-05, 3.5054999999999115e-05, 3.5026999999999975e-05, 3.507000000000163e-05, 3.505599999999859e-05, 3.504199999999902e-05, 3.5068999999998685e-05, 3.5097000000001294e-05, 3.5040999999999545e-05, 3.504199999999902e-05, 3.504199999999902e-05, 3.506999999999816e-05, 3.506999999999816e-05, 3.5096999999997824e-05, 3.504200000000249e-05, 3.5096999999997824e-05, 3.5083000000001724e-05, 3.5125000000000434e-05, 3.5139000000000004e-05, 3.5068999999998685e-05, 3.502799999999945e-05, 3.504199999999902e-05, 3.5124999999996964e-05, 3.5082999999998254e-05, 3.5069000000005623e-05, 3.509700000000476e-05, 3.500000000000031e-05, 3.505599999999859e-05, 3.504199999999902e-05, 3.504200000000596e-05, 3.5040999999999545e-05, 3.504199999999902e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.865" endtime="20201115 22:00:50.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.860" endtime="20201115 22:00:50.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.870" endtime="20201115 22:00:50.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.874" endtime="20201115 22:00:50.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.872" endtime="20201115 22:00:50.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.869" endtime="20201115 22:00:50.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.501" endtime="20201115 22:00:50.894"></status>
</kw>
<msg timestamp="20201115 22:00:50.895" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.903" endtime="20201115 22:00:50.924"></status>
</kw>
<msg timestamp="20201115 22:00:50.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.902" endtime="20201115 22:00:50.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.927" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.925" endtime="20201115 22:00:50.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.928" endtime="20201115 22:00:50.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.899" endtime="20201115 22:00:50.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.897" endtime="20201115 22:00:50.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.937" endtime="20201115 22:00:51.222"></status>
</kw>
<msg timestamp="20201115 22:00:51.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.935" endtime="20201115 22:00:51.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.227" endtime="20201115 22:00:51.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.235" endtime="20201115 22:00:51.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.933" endtime="20201115 22:00:51.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.931" endtime="20201115 22:00:51.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.241" level="INFO">${RESULT} = [{'time': 0.021873625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5152999999999573e-05, 'source_diff': 3.5152999999999573e-05}, {'time': 0.022126278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.238" endtime="20201115 22:00:51.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.255" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.242" endtime="20201115 22:00:51.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.259" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.258" endtime="20201115 22:00:51.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.261" level="INFO">VALUE: [3.5152999999999573e-05, 3.505599999999859e-05, 3.504199999999902e-05, 3.5054999999999115e-05, 3.5040999999999545e-05, 3.5054999999999115e-05, 3.505600000000206e-05, 3.5055000000002584e-05, 3.501399999999988e-05, 3.502799999999945e-05, 3.5082999999998254e-05, 3.505600000000206e-05, 3.5068999999998685e-05, 3.505600000000206e-05, 3.507000000000163e-05, 3.501399999999988e-05, 3.506999999999816e-05, 3.5096999999997824e-05, 3.505600000000206e-05, 3.506999999999816e-05, 3.504199999999902e-05, 3.5054999999999115e-05, 3.505600000000206e-05, 3.5069000000002154e-05, 3.5096999999997824e-05, 3.507000000000163e-05, 3.5083000000001724e-05, 3.5097000000001294e-05, 3.507000000000163e-05, 3.5096999999997824e-05, 3.505600000000206e-05, 3.5054999999999115e-05, 3.504200000000249e-05, 3.5054999999999115e-05, 3.5097000000001294e-05, 3.5068999999998685e-05, 3.505599999999859e-05, 3.502799999999945e-05, 3.506999999999816e-05, 3.5055000000006054e-05, 3.5040999999999545e-05, 3.5054999999999115e-05, 3.50700000000051e-05, 3.5069000000005623e-05, 3.500000000000031e-05, 3.5055000000006054e-05, 3.506999999999816e-05, 3.5068999999998685e-05, 3.5110999999997394e-05, 3.506999999999816e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.260" endtime="20201115 22:00:51.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.255" endtime="20201115 22:00:51.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.265" endtime="20201115 22:00:51.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.268" endtime="20201115 22:00:51.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.266" endtime="20201115 22:00:51.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.263" endtime="20201115 22:00:51.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.895" endtime="20201115 22:00:51.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.313" endtime="20201115 22:00:51.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.312" endtime="20201115 22:00:51.289"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.291" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.300" endtime="20201115 22:00:51.323"></status>
</kw>
<msg timestamp="20201115 22:00:51.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.298" endtime="20201115 22:00:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.324" endtime="20201115 22:00:51.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.327" endtime="20201115 22:00:51.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.296" endtime="20201115 22:00:51.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.294" endtime="20201115 22:00:51.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.336" endtime="20201115 22:00:51.622"></status>
</kw>
<msg timestamp="20201115 22:00:51.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024074639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.335" endtime="20201115 22:00:51.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024074639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024110444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.626" endtime="20201115 22:00:51.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.634" endtime="20201115 22:00:51.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.332" endtime="20201115 22:00:51.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.330" endtime="20201115 22:00:51.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.641" level="INFO">${RESULT} = [{'time': 0.024110444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5805000000003334e-05, 'source_diff': 3.5805000000003334e-05}, {'time': 0.024407972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.638" endtime="20201115 22:00:51.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.655" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.642" endtime="20201115 22:00:51.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.660" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.659" endtime="20201115 22:00:51.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.662" level="INFO">VALUE: [3.5805000000003334e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.572200000000192e-05, 3.572199999999845e-05, 3.573600000000149e-05, 3.574999999999759e-05, 3.573599999999802e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.5791000000000295e-05, 3.573600000000149e-05, 3.576399999999716e-05, 3.575000000000106e-05, 3.574999999999759e-05, 3.579199999999977e-05, 3.5762999999997686e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.572200000000192e-05, 3.576400000000063e-05, 3.574999999999412e-05, 3.5680999999995744e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.572300000000139e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573599999999455e-05, 3.576400000000063e-05, 3.5777000000000725e-05, 3.574999999999412e-05, 3.572200000000192e-05, 3.570900000000182e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.661" endtime="20201115 22:00:51.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.656" endtime="20201115 22:00:51.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.665" endtime="20201115 22:00:51.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.669" endtime="20201115 22:00:51.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.667" endtime="20201115 22:00:51.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.664" endtime="20201115 22:00:51.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.292" endtime="20201115 22:00:51.689"></status>
</kw>
<msg timestamp="20201115 22:00:51.690" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.698" endtime="20201115 22:00:51.721"></status>
</kw>
<msg timestamp="20201115 22:00:51.722" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.697" endtime="20201115 22:00:51.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.723" endtime="20201115 22:00:51.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.725" endtime="20201115 22:00:51.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.694" endtime="20201115 22:00:51.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.692" endtime="20201115 22:00:51.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.734" endtime="20201115 22:00:52.021"></status>
</kw>
<msg timestamp="20201115 22:00:52.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.733" endtime="20201115 22:00:52.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.025" endtime="20201115 22:00:52.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.033" endtime="20201115 22:00:52.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.730" endtime="20201115 22:00:52.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.729" endtime="20201115 22:00:52.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.040" level="INFO">${RESULT} = [{'time': 0.021713069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5763000000001155e-05, 'source_diff': 3.5763000000001155e-05}, {'time': 0.022016931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.037" endtime="20201115 22:00:52.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.053" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.041" endtime="20201115 22:00:52.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.057" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.056" endtime="20201115 22:00:52.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.060" level="INFO">VALUE: [3.5763000000001155e-05, 3.581999999999891e-05, 3.570799999999888e-05, 3.568100000000268e-05, 3.573600000000149e-05, 3.572300000000139e-05, 3.575000000000106e-05, 3.576399999999716e-05, 3.574999999999759e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.573599999999802e-05, 3.579199999999977e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.576400000000063e-05, 3.570899999999835e-05, 3.575000000000106e-05, 3.574999999999759e-05, 3.574999999999759e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.570899999999835e-05, 3.579199999999977e-05, 3.574999999999759e-05, 3.570800000000235e-05, 3.576400000000063e-05, 3.573700000000096e-05, 3.5763000000001155e-05, 3.575000000000106e-05, 3.574999999999412e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.572300000000139e-05, 3.573600000000149e-05, 3.572199999999498e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.573600000000149e-05, 3.572199999999498e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.058" endtime="20201115 22:00:52.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.054" endtime="20201115 22:00:52.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.063" endtime="20201115 22:00:52.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.066" endtime="20201115 22:00:52.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.065" endtime="20201115 22:00:52.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.061" endtime="20201115 22:00:52.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.690" endtime="20201115 22:00:52.087"></status>
</kw>
<msg timestamp="20201115 22:00:52.087" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.096" endtime="20201115 22:00:52.119"></status>
</kw>
<msg timestamp="20201115 22:00:52.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.094" endtime="20201115 22:00:52.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.121" endtime="20201115 22:00:52.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.123" endtime="20201115 22:00:52.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.092" endtime="20201115 22:00:52.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.090" endtime="20201115 22:00:52.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.132" endtime="20201115 22:00:52.419"></status>
</kw>
<msg timestamp="20201115 22:00:52.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.130" endtime="20201115 22:00:52.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.423" endtime="20201115 22:00:52.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.431" endtime="20201115 22:00:52.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.128" endtime="20201115 22:00:52.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.126" endtime="20201115 22:00:52.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.438" level="INFO">${RESULT} = [{'time': 0.022281333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5804999999999865e-05, 'source_diff': 3.5804999999999865e-05}, {'time': 0.022584778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.434" endtime="20201115 22:00:52.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.451" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.439" endtime="20201115 22:00:52.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.455" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.454" endtime="20201115 22:00:52.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.458" level="INFO">VALUE: [3.5804999999999865e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.574999999999759e-05, 3.570900000000182e-05, 3.569399999999931e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.572299999999792e-05, 3.572300000000139e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.574999999999759e-05, 3.573700000000096e-05, 3.570899999999835e-05, 3.573600000000149e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.574999999999759e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.567999999999974e-05, 3.573599999999802e-05, 3.573599999999455e-05, 3.580599999999934e-05, 3.579200000000671e-05, 3.572200000000192e-05, 3.572199999999498e-05, 3.566700000000311e-05, 3.579199999999977e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.569500000000225e-05, 3.582000000000585e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573599999999455e-05, 3.574999999999412e-05, 3.575000000000106e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.456" endtime="20201115 22:00:52.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.452" endtime="20201115 22:00:52.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.461" endtime="20201115 22:00:52.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.464" endtime="20201115 22:00:52.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.462" endtime="20201115 22:00:52.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.459" endtime="20201115 22:00:52.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.088" endtime="20201115 22:00:52.485"></status>
</kw>
<msg timestamp="20201115 22:00:52.485" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.494" endtime="20201115 22:00:52.517"></status>
</kw>
<msg timestamp="20201115 22:00:52.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.492" endtime="20201115 22:00:52.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.518" endtime="20201115 22:00:52.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.521" endtime="20201115 22:00:52.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.490" endtime="20201115 22:00:52.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.488" endtime="20201115 22:00:52.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.530" endtime="20201115 22:00:52.817"></status>
</kw>
<msg timestamp="20201115 22:00:52.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.528" endtime="20201115 22:00:52.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.821" endtime="20201115 22:00:52.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.829" endtime="20201115 22:00:52.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.525" endtime="20201115 22:00:52.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.524" endtime="20201115 22:00:52.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.836" level="INFO">${RESULT} = [{'time': 0.022118042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.580599999999934e-05, 'source_diff': 3.580599999999934e-05}, {'time': 0.022415903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:52.832" endtime="20201115 22:00:52.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.848" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.837" endtime="20201115 22:00:52.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.853" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.852" endtime="20201115 22:00:52.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.855" level="INFO">VALUE: [3.580599999999934e-05, 3.57780000000002e-05, 3.573600000000149e-05, 3.573600000000149e-05, 3.570799999999888e-05, 3.579199999999977e-05, 3.576399999999716e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.5791000000000295e-05, 3.569500000000225e-05, 3.574999999999759e-05, 3.576400000000063e-05, 3.570899999999835e-05, 3.573599999999802e-05, 3.576399999999716e-05, 3.577799999999673e-05, 3.572200000000192e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.574999999999759e-05, 3.579199999999977e-05, 3.573599999999802e-05, 3.573599999999802e-05, 3.575000000000106e-05, 3.572199999999845e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.579199999999977e-05, 3.573600000000149e-05, 3.566600000000017e-05, 3.572199999999498e-05, 3.574999999999412e-05, 3.5763000000001155e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.5804999999999865e-05, 3.575000000000106e-05, 3.574999999999412e-05, 3.572300000000139e-05, 3.573600000000149e-05, 3.573600000000149e-05, 3.5791000000000295e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.576400000000063e-05, 3.572200000000192e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.854" endtime="20201115 22:00:52.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.849" endtime="20201115 22:00:52.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.859" endtime="20201115 22:00:52.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.862" endtime="20201115 22:00:52.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.861" endtime="20201115 22:00:52.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.857" endtime="20201115 22:00:52.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.486" endtime="20201115 22:00:52.883"></status>
</kw>
<msg timestamp="20201115 22:00:52.884" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.893" endtime="20201115 22:00:52.916"></status>
</kw>
<msg timestamp="20201115 22:00:52.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.891" endtime="20201115 22:00:52.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.918" endtime="20201115 22:00:52.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.920" endtime="20201115 22:00:52.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.889" endtime="20201115 22:00:52.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.886" endtime="20201115 22:00:52.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.929" endtime="20201115 22:00:53.215"></status>
</kw>
<msg timestamp="20201115 22:00:53.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.928" endtime="20201115 22:00:53.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.219" endtime="20201115 22:00:53.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.227" endtime="20201115 22:00:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.925" endtime="20201115 22:00:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.923" endtime="20201115 22:00:53.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.234" level="INFO">${RESULT} = [{'time': 0.023157625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.580600000000281e-05, 'source_diff': 3.580600000000281e-05}, {'time': 0.023457347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:53.231" endtime="20201115 22:00:53.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.248" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.235" endtime="20201115 22:00:53.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.253" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.252" endtime="20201115 22:00:53.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.255" level="INFO">VALUE: [3.580600000000281e-05, 3.575000000000106e-05, 3.572200000000192e-05, 3.573599999999802e-05, 3.575000000000106e-05, 3.576399999999716e-05, 3.573600000000149e-05, 3.574999999999759e-05, 3.5777000000000725e-05, 3.575000000000106e-05, 3.573700000000096e-05, 3.575000000000106e-05, 3.573699999999749e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.573599999999802e-05, 3.573600000000149e-05, 3.568099999999921e-05, 3.576400000000063e-05, 3.574999999999759e-05, 3.574999999999759e-05, 3.574999999999759e-05, 3.573600000000149e-05, 3.572200000000192e-05, 3.57780000000002e-05, 3.573599999999802e-05, 3.573600000000149e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.576399999999369e-05, 3.573599999999455e-05, 3.570800000000235e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.573599999999455e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.572199999999498e-05, 3.573600000000149e-05, 3.574999999999412e-05, 3.573599999999455e-05, 3.576400000000063e-05, 3.575000000000106e-05, 3.5708999999994884e-05, 3.573600000000149e-05, 3.576400000000063e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.573600000000149e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.254" endtime="20201115 22:00:53.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.249" endtime="20201115 22:00:53.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.265" endtime="20201115 22:00:53.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.268" endtime="20201115 22:00:53.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.267" endtime="20201115 22:00:53.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.263" endtime="20201115 22:00:53.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.884" endtime="20201115 22:00:53.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.290" endtime="20201115 22:00:53.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.289" endtime="20201115 22:00:53.289"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.292" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.300" endtime="20201115 22:00:53.325"></status>
</kw>
<msg timestamp="20201115 22:00:53.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.299" endtime="20201115 22:00:53.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.327" endtime="20201115 22:00:53.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.329" endtime="20201115 22:00:53.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.296" endtime="20201115 22:00:53.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.294" endtime="20201115 22:00:53.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.338" endtime="20201115 22:00:53.625"></status>
</kw>
<msg timestamp="20201115 22:00:53.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.337" endtime="20201115 22:00:53.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.629" endtime="20201115 22:00:53.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.637" endtime="20201115 22:00:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.334" endtime="20201115 22:00:53.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.333" endtime="20201115 22:00:53.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.644" level="INFO">${RESULT} = [{'time': 0.024121875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389000000001254e-05, 'source_diff': 3.6389000000001254e-05}, {'time': 0.024462875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.641" endtime="20201115 22:00:53.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.657" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.645" endtime="20201115 22:00:53.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.662" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.661" endtime="20201115 22:00:53.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.664" level="INFO">VALUE: [3.6389000000001254e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.6291000000000795e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.6360999999998644e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.626400000000113e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.631999999999941e-05, 3.6291000000000795e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.622200000000242e-05, 3.62780000000007e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.622200000000242e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6277000000001225e-05, 3.6291000000000795e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.6291000000000795e-05, 3.62780000000007e-05, 3.625000000000156e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.6332999999999505e-05, 3.6277000000001225e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.663" endtime="20201115 22:00:53.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.658" endtime="20201115 22:00:53.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.668" endtime="20201115 22:00:53.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.671" endtime="20201115 22:00:53.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.669" endtime="20201115 22:00:53.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.666" endtime="20201115 22:00:53.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.292" endtime="20201115 22:00:53.692"></status>
</kw>
<msg timestamp="20201115 22:00:53.692" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.701" endtime="20201115 22:00:53.726"></status>
</kw>
<msg timestamp="20201115 22:00:53.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.699" endtime="20201115 22:00:53.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.727" endtime="20201115 22:00:53.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.730" endtime="20201115 22:00:53.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.696" endtime="20201115 22:00:53.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.694" endtime="20201115 22:00:53.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.739" endtime="20201115 22:00:54.033"></status>
</kw>
<msg timestamp="20201115 22:00:54.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.737" endtime="20201115 22:00:54.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.042" endtime="20201115 22:00:54.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.060" endtime="20201115 22:00:54.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.735" endtime="20201115 22:00:54.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.733" endtime="20201115 22:00:54.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.074" level="INFO">${RESULT} = [{'time': 0.021793931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.634799999999855e-05, 'source_diff': 3.634799999999855e-05}, {'time': 0.022138347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.066" endtime="20201115 22:00:54.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.095" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.076" endtime="20201115 22:00:54.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.100" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.099" endtime="20201115 22:00:54.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.102" level="INFO">VALUE: [3.634799999999855e-05, 3.6318999999999935e-05, 3.627799999999723e-05, 3.626399999999766e-05, 3.623599999999852e-05, 3.62919999999968e-05, 3.6375000000001684e-05, 3.6333000000002974e-05, 3.6318999999999935e-05, 3.62780000000007e-05, 3.6361000000002114e-05, 3.62780000000007e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6291000000000795e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.6291000000000795e-05, 3.629200000000027e-05, 3.636200000000159e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.62919999999968e-05, 3.6277000000001225e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.6277000000001225e-05, 3.631999999999941e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.62780000000007e-05, 3.6374999999998214e-05, 3.6318999999999935e-05, 3.6291000000000795e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.6304999999993426e-05, 3.62780000000007e-05, 3.626400000000113e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.101" endtime="20201115 22:00:54.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.096" endtime="20201115 22:00:54.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.105" endtime="20201115 22:00:54.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.108" endtime="20201115 22:00:54.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.107" endtime="20201115 22:00:54.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.103" endtime="20201115 22:00:54.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.692" endtime="20201115 22:00:54.129"></status>
</kw>
<msg timestamp="20201115 22:00:54.129" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.138" endtime="20201115 22:00:54.163"></status>
</kw>
<msg timestamp="20201115 22:00:54.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.137" endtime="20201115 22:00:54.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.165" endtime="20201115 22:00:54.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.167" endtime="20201115 22:00:54.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.134" endtime="20201115 22:00:54.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.132" endtime="20201115 22:00:54.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.176" endtime="20201115 22:00:54.463"></status>
</kw>
<msg timestamp="20201115 22:00:54.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.175" endtime="20201115 22:00:54.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.467" endtime="20201115 22:00:54.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.475" endtime="20201115 22:00:54.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.172" endtime="20201115 22:00:54.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.170" endtime="20201115 22:00:54.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.482" level="INFO">${RESULT} = [{'time': 0.021852417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.631999999999941e-05, 'source_diff': 3.631999999999941e-05}, {'time': 0.022190958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:54.479" endtime="20201115 22:00:54.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.496" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.484" endtime="20201115 22:00:54.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.500" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.499" endtime="20201115 22:00:54.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.503" level="INFO">VALUE: [3.631999999999941e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.62919999999968e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6346999999999074e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.6347000000002544e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6346999999999074e-05, 3.629200000000027e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.624999999999809e-05, 3.6304999999996895e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6374999999998214e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.630599999999984e-05, 3.6277000000001225e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.629199999999333e-05, 3.6305000000000365e-05, 3.6291000000000795e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.62780000000007e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.6291000000000795e-05, 3.630599999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.501" endtime="20201115 22:00:54.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.497" endtime="20201115 22:00:54.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.506" endtime="20201115 22:00:54.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.509" endtime="20201115 22:00:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.508" endtime="20201115 22:00:54.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.504" endtime="20201115 22:00:54.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.130" endtime="20201115 22:00:54.530"></status>
</kw>
<msg timestamp="20201115 22:00:54.530" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.539" endtime="20201115 22:00:54.564"></status>
</kw>
<msg timestamp="20201115 22:00:54.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.537" endtime="20201115 22:00:54.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.565" endtime="20201115 22:00:54.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.568" endtime="20201115 22:00:54.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.535" endtime="20201115 22:00:54.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.533" endtime="20201115 22:00:54.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.577" endtime="20201115 22:00:54.863"></status>
</kw>
<msg timestamp="20201115 22:00:54.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.575" endtime="20201115 22:00:54.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.868" endtime="20201115 22:00:54.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.876" endtime="20201115 22:00:54.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.573" endtime="20201115 22:00:54.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.571" endtime="20201115 22:00:54.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.883" level="INFO">${RESULT} = [{'time': 0.021785861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389000000001254e-05, 'source_diff': 3.6389000000001254e-05}, {'time': 0.022132208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.879" endtime="20201115 22:00:54.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.897" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.884" endtime="20201115 22:00:54.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.901" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.900" endtime="20201115 22:00:54.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.904" level="INFO">VALUE: [3.6389000000001254e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.629200000000027e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.633400000000245e-05, 3.6318999999999935e-05, 3.6304999999996895e-05, 3.6304999999996895e-05, 3.631999999999941e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6347000000002544e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.6346999999999074e-05, 3.6332999999999505e-05, 3.6333000000006443e-05, 3.6332999999999505e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6291000000000795e-05, 3.6305000000000365e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.626400000000113e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.6291000000000795e-05, 3.6291000000000795e-05, 3.633399999999898e-05, 3.631999999999941e-05, 3.631999999999941e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.903" endtime="20201115 22:00:54.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.898" endtime="20201115 22:00:54.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.907" endtime="20201115 22:00:54.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.910" endtime="20201115 22:00:54.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.909" endtime="20201115 22:00:54.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.905" endtime="20201115 22:00:54.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.531" endtime="20201115 22:00:54.931"></status>
</kw>
<msg timestamp="20201115 22:00:54.931" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.940" endtime="20201115 22:00:54.965"></status>
</kw>
<msg timestamp="20201115 22:00:54.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.939" endtime="20201115 22:00:54.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.967" endtime="20201115 22:00:54.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.969" endtime="20201115 22:00:54.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.936" endtime="20201115 22:00:54.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.934" endtime="20201115 22:00:54.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.978" endtime="20201115 22:00:55.266"></status>
</kw>
<msg timestamp="20201115 22:00:55.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.977" endtime="20201115 22:00:55.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.270" endtime="20201115 22:00:55.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.279" endtime="20201115 22:00:55.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.974" endtime="20201115 22:00:55.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.972" endtime="20201115 22:00:55.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.285" level="INFO">${RESULT} = [{'time': 0.021909292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6375000000001684e-05, 'source_diff': 3.6375000000001684e-05}, {'time': 0.022260014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.282" endtime="20201115 22:00:55.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.298" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.286" endtime="20201115 22:00:55.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.303" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.302" endtime="20201115 22:00:55.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.305" level="INFO">VALUE: [3.6375000000001684e-05, 3.629200000000027e-05, 3.631999999999941e-05, 3.622200000000242e-05, 3.62780000000007e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6290999999997325e-05, 3.631999999999941e-05, 3.629200000000027e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.6263000000001655e-05, 3.630599999999984e-05, 3.6346999999999074e-05, 3.6305000000000365e-05, 3.6277000000001225e-05, 3.630599999999984e-05, 3.6305000000000365e-05, 3.6346999999999074e-05, 3.629200000000027e-05, 3.6277000000001225e-05, 3.629200000000027e-05, 3.6361000000002114e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.62780000000007e-05, 3.626400000000113e-05, 3.629200000000027e-05, 3.62780000000007e-05, 3.6305000000000365e-05, 3.634800000000549e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.629200000000027e-05, 3.633399999999898e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.629200000000027e-05, 3.625000000000156e-05, 3.62780000000007e-05, 3.627799999999376e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.6402999999997354e-05, 3.630599999999984e-05, 3.6374999999998214e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.304" endtime="20201115 22:00:55.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.299" endtime="20201115 22:00:55.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.308" endtime="20201115 22:00:55.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.312" endtime="20201115 22:00:55.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.310" endtime="20201115 22:00:55.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.307" endtime="20201115 22:00:55.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.932" endtime="20201115 22:00:55.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.290" endtime="20201115 22:00:55.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.290" endtime="20201115 22:00:55.333"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.335" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.343" endtime="20201115 22:00:55.371"></status>
</kw>
<msg timestamp="20201115 22:00:55.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.342" endtime="20201115 22:00:55.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.373" endtime="20201115 22:00:55.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.375" endtime="20201115 22:00:55.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.339" endtime="20201115 22:00:55.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.337" endtime="20201115 22:00:55.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.384" endtime="20201115 22:00:55.670"></status>
</kw>
<msg timestamp="20201115 22:00:55.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:55.383" endtime="20201115 22:00:55.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024020056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:55.674" endtime="20201115 22:00:55.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.682" endtime="20201115 22:00:55.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.380" endtime="20201115 22:00:55.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.379" endtime="20201115 22:00:55.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.689" level="INFO">${RESULT} = [{'time': 0.024057, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.694399999999709e-05, 'source_diff': 3.694399999999709e-05}, {'time': 0.024457583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:55.685" endtime="20201115 22:00:55.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.702" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.690" endtime="20201115 22:00:55.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.706" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.705" endtime="20201115 22:00:55.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.709" level="INFO">VALUE: [3.694399999999709e-05, 3.6875000000002184e-05, 3.6846999999999575e-05, 3.694400000000056e-05, 3.6860999999999144e-05, 3.684799999999905e-05, 3.6833000000000005e-05, 3.6874999999998714e-05, 3.6917000000000894e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6902999999997854e-05, 3.692999999999752e-05, 3.6875000000002184e-05, 3.686199999999862e-05, 3.694500000000003e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.688900000000522e-05, 3.6874999999998714e-05, 3.686100000000608e-05, 3.684799999999905e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.693100000000393e-05, 3.6958999999996134e-05, 3.6846999999999575e-05, 3.688799999999881e-05, 3.686199999999862e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.686199999999862e-05, 3.6833000000000005e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.686200000000556e-05, 3.681999999999991e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6846999999999575e-05, 3.691700000000436e-05, 3.686100000000608e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.680600000000034e-05, 3.686199999999862e-05, 3.6874999999998714e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.707" endtime="20201115 22:00:55.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.703" endtime="20201115 22:00:55.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.712" endtime="20201115 22:00:55.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.715" endtime="20201115 22:00:55.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.714" endtime="20201115 22:00:55.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.710" endtime="20201115 22:00:55.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.335" endtime="20201115 22:00:55.736"></status>
</kw>
<msg timestamp="20201115 22:00:55.736" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.745" endtime="20201115 22:00:55.772"></status>
</kw>
<msg timestamp="20201115 22:00:55.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.743" endtime="20201115 22:00:55.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.774" endtime="20201115 22:00:55.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.777" endtime="20201115 22:00:55.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.741" endtime="20201115 22:00:55.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.739" endtime="20201115 22:00:55.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.786" endtime="20201115 22:00:56.072"></status>
</kw>
<msg timestamp="20201115 22:00:56.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.784" endtime="20201115 22:00:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.076" endtime="20201115 22:00:56.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.084" endtime="20201115 22:00:56.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.782" endtime="20201115 22:00:56.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.780" endtime="20201115 22:00:56.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.091" level="INFO">${RESULT} = [{'time': 0.021794653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6931000000000463e-05, 'source_diff': 3.6931000000000463e-05}, {'time': 0.022189694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.088" endtime="20201115 22:00:56.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.104" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.092" endtime="20201115 22:00:56.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.108" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.107" endtime="20201115 22:00:56.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.111" level="INFO">VALUE: [3.6931000000000463e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.686200000000209e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6819000000000435e-05, 3.6860999999999144e-05, 3.6819000000000435e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.686199999999862e-05, 3.6875000000002184e-05, 3.684799999999905e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6903000000001324e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.679200000000077e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.687500000000565e-05, 3.6874999999998714e-05, 3.686100000000608e-05, 3.6846999999999575e-05, 3.6888999999998284e-05, 3.6874999999998714e-05, 3.692999999999752e-05, 3.687500000000565e-05, 3.687500000000565e-05, 3.6874999999998714e-05, 3.686100000000608e-05, 3.6874999999998714e-05, 3.691599999999795e-05, 3.6860999999999144e-05, 3.680600000000034e-05, 3.686100000000608e-05, 3.694399999999709e-05, 3.6916999999997424e-05, 3.684799999999905e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.687500000000565e-05, 3.6874999999998714e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.110" endtime="20201115 22:00:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.105" endtime="20201115 22:00:56.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.114" endtime="20201115 22:00:56.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.117" endtime="20201115 22:00:56.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.116" endtime="20201115 22:00:56.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.112" endtime="20201115 22:00:56.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.736" endtime="20201115 22:00:56.138"></status>
</kw>
<msg timestamp="20201115 22:00:56.138" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.147" endtime="20201115 22:00:56.175"></status>
</kw>
<msg timestamp="20201115 22:00:56.176" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.146" endtime="20201115 22:00:56.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.177" endtime="20201115 22:00:56.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.179" endtime="20201115 22:00:56.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.143" endtime="20201115 22:00:56.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.141" endtime="20201115 22:00:56.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.188" endtime="20201115 22:00:56.474"></status>
</kw>
<msg timestamp="20201115 22:00:56.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.187" endtime="20201115 22:00:56.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.478" endtime="20201115 22:00:56.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.486" endtime="20201115 22:00:56.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.184" endtime="20201115 22:00:56.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.182" endtime="20201115 22:00:56.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.493" level="INFO">${RESULT} = [{'time': 0.022296875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.694400000000056e-05, 'source_diff': 3.694400000000056e-05}, {'time': 0.022679028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:56.489" endtime="20201115 22:00:56.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.507" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.494" endtime="20201115 22:00:56.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.511" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.510" endtime="20201115 22:00:56.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.514" level="INFO">VALUE: [3.694400000000056e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.684799999999905e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.6847000000003044e-05, 3.6874999999998714e-05, 3.681999999999991e-05, 3.686199999999862e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.679200000000077e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.6861000000002614e-05, 3.6875000000002184e-05, 3.6874999999998714e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.687500000000565e-05, 3.687500000000565e-05, 3.6874999999998714e-05, 3.687500000000565e-05, 3.686100000000608e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.684799999999905e-05, 3.6860999999999144e-05, 3.683399999999948e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.687500000000565e-05, 3.6874999999998714e-05, 3.684799999999905e-05, 3.6874999999998714e-05, 3.688900000000522e-05, 3.686199999999862e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6874999999998714e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.512" endtime="20201115 22:00:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.508" endtime="20201115 22:00:56.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.517" endtime="20201115 22:00:56.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.520" endtime="20201115 22:00:56.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.519" endtime="20201115 22:00:56.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.515" endtime="20201115 22:00:56.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.139" endtime="20201115 22:00:56.541"></status>
</kw>
<msg timestamp="20201115 22:00:56.542" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.550" endtime="20201115 22:00:56.578"></status>
</kw>
<msg timestamp="20201115 22:00:56.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.549" endtime="20201115 22:00:56.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.581" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.580" endtime="20201115 22:00:56.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.582" endtime="20201115 22:00:56.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.546" endtime="20201115 22:00:56.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.544" endtime="20201115 22:00:56.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.591" endtime="20201115 22:00:56.877"></status>
</kw>
<msg timestamp="20201115 22:00:56.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.589" endtime="20201115 22:00:56.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.881" endtime="20201115 22:00:56.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.889" endtime="20201115 22:00:56.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.587" endtime="20201115 22:00:56.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.585" endtime="20201115 22:00:56.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.896" level="INFO">${RESULT} = [{'time': 0.022116181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6902999999997854e-05, 'source_diff': 3.6902999999997854e-05}, {'time': 0.022502708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.893" endtime="20201115 22:00:56.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.909" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.897" endtime="20201115 22:00:56.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.914" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.913" endtime="20201115 22:00:56.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.916" level="INFO">VALUE: [3.6902999999997854e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.6889000000001754e-05, 3.6861000000002614e-05, 3.6861000000002614e-05, 3.6805000000000865e-05, 3.6861000000002614e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.684799999999905e-05, 3.686200000000209e-05, 3.6846999999999575e-05, 3.694500000000003e-05, 3.6874999999998714e-05, 3.6833000000000005e-05, 3.6889000000001754e-05, 3.684799999999905e-05, 3.684799999999905e-05, 3.6846999999999575e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.686199999999862e-05, 3.6860999999999144e-05, 3.6888999999998284e-05, 3.6860999999999144e-05, 3.687500000000565e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.684799999999905e-05, 3.6860999999999144e-05, 3.686200000000556e-05, 3.681999999999991e-05, 3.684799999999905e-05, 3.687500000000565e-05, 3.6860999999999144e-05, 3.686100000000608e-05, 3.684799999999905e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.915" endtime="20201115 22:00:56.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.910" endtime="20201115 22:00:56.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.920" endtime="20201115 22:00:56.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.923" endtime="20201115 22:00:56.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.922" endtime="20201115 22:00:56.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.918" endtime="20201115 22:00:56.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.542" endtime="20201115 22:00:56.944"></status>
</kw>
<msg timestamp="20201115 22:00:56.944" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.954" endtime="20201115 22:00:56.982"></status>
</kw>
<msg timestamp="20201115 22:00:56.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.952" endtime="20201115 22:00:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.983" endtime="20201115 22:00:56.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.986" endtime="20201115 22:00:56.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.949" endtime="20201115 22:00:56.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.947" endtime="20201115 22:00:56.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.995" endtime="20201115 22:00:57.281"></status>
</kw>
<msg timestamp="20201115 22:00:57.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.993" endtime="20201115 22:00:57.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.285" endtime="20201115 22:00:57.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.293" endtime="20201115 22:00:57.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.991" endtime="20201115 22:00:57.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.989" endtime="20201115 22:00:57.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.300" level="INFO">${RESULT} = [{'time': 0.023133597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.694399999999709e-05, 'source_diff': 3.694399999999709e-05}, {'time': 0.023528569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.297" endtime="20201115 22:00:57.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.313" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.301" endtime="20201115 22:00:57.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.317" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.316" endtime="20201115 22:00:57.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.320" level="INFO">VALUE: [3.694399999999709e-05, 3.6874999999998714e-05, 3.6875000000002184e-05, 3.686200000000209e-05, 3.6846999999999575e-05, 3.6875000000002184e-05, 3.6861000000002614e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6931000000000463e-05, 3.6875000000002184e-05, 3.6861000000002614e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6818999999996965e-05, 3.6875000000002184e-05, 3.6874999999998714e-05, 3.6846999999999575e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.684799999999905e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6833000000000005e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.6874999999998714e-05, 3.681999999999991e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.686200000000556e-05, 3.6846999999999575e-05, 3.691599999999795e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.686100000000608e-05, 3.686199999999862e-05, 3.6902999999997854e-05, 3.6874999999998714e-05, 3.6860999999999144e-05, 3.6846999999999575e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.319" endtime="20201115 22:00:57.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.314" endtime="20201115 22:00:57.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.323" endtime="20201115 22:00:57.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.327" endtime="20201115 22:00:57.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.325" endtime="20201115 22:00:57.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.322" endtime="20201115 22:00:57.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.945" endtime="20201115 22:00:57.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.334" endtime="20201115 22:00:57.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.333" endtime="20201115 22:00:57.348"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.350" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.359" endtime="20201115 22:00:57.389"></status>
</kw>
<msg timestamp="20201115 22:00:57.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.357" endtime="20201115 22:00:57.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.391" endtime="20201115 22:00:57.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.393" endtime="20201115 22:00:57.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.355" endtime="20201115 22:00:57.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.353" endtime="20201115 22:00:57.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.402" endtime="20201115 22:00:57.700"></status>
</kw>
<msg timestamp="20201115 22:00:57.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.400" endtime="20201115 22:00:57.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024245889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.709" endtime="20201115 22:00:57.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.727" endtime="20201115 22:00:57.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.398" endtime="20201115 22:00:57.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.396" endtime="20201115 22:00:57.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.735" level="INFO">${RESULT} = [{'time': 0.024245889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.024680583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:57.731" endtime="20201115 22:00:57.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.748" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.736" endtime="20201115 22:00:57.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.752" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.751" endtime="20201115 22:00:57.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.755" level="INFO">VALUE: [3.748599999999977e-05, 3.741599999999845e-05, 3.741599999999845e-05, 3.7360999999999644e-05, 3.741599999999845e-05, 3.7431000000000964e-05, 3.741599999999845e-05, 3.7445000000000533e-05, 3.740199999999888e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7389000000002254e-05, 3.743000000000149e-05, 3.74590000000001e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7402999999998354e-05, 3.7430999999997494e-05, 3.738799999999931e-05, 3.7445000000004e-05, 3.7416999999997924e-05, 3.741599999999845e-05, 3.7445000000004e-05, 3.740300000000529e-05, 3.741599999999845e-05, 3.7388999999998784e-05, 3.7360999999999644e-05, 3.741600000000539e-05, 3.7360999999999644e-05, 3.7388999999998784e-05, 3.7445000000004e-05, 3.7430999999997494e-05, 3.7360999999999644e-05, 3.744400000000453e-05, 3.741700000000486e-05, 3.7430999999997494e-05, 3.7402999999998354e-05, 3.743000000000496e-05, 3.740300000000529e-05, 3.741600000000539e-05, 3.741700000000486e-05, 3.747200000000367e-05, 3.742999999999802e-05, 3.744399999999759e-05, 3.7416999999997924e-05, 3.741700000000486e-05, 3.740300000000529e-05, 3.7430999999997494e-05, 3.743000000000496e-05, 3.734799999999955e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.754" endtime="20201115 22:00:57.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.749" endtime="20201115 22:00:57.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.759" endtime="20201115 22:00:57.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.762" endtime="20201115 22:00:57.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.760" endtime="20201115 22:00:57.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.757" endtime="20201115 22:00:57.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.351" endtime="20201115 22:00:57.783"></status>
</kw>
<msg timestamp="20201115 22:00:57.783" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.792" endtime="20201115 22:00:57.822"></status>
</kw>
<msg timestamp="20201115 22:00:57.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.790" endtime="20201115 22:00:57.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.823" endtime="20201115 22:00:57.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.826" endtime="20201115 22:00:57.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.787" endtime="20201115 22:00:57.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.785" endtime="20201115 22:00:57.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.834" endtime="20201115 22:00:58.120"></status>
</kw>
<msg timestamp="20201115 22:00:58.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.833" endtime="20201115 22:00:58.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.124" endtime="20201115 22:00:58.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.132" endtime="20201115 22:00:58.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.830" endtime="20201115 22:00:58.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.829" endtime="20201115 22:00:58.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.139" level="INFO">${RESULT} = [{'time': 0.021903861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.749999999999934e-05, 'source_diff': 3.749999999999934e-05}, {'time': 0.022335139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.136" endtime="20201115 22:00:58.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.154" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.140" endtime="20201115 22:00:58.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.158" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.157" endtime="20201115 22:00:58.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.161" level="INFO">VALUE: [3.749999999999934e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.7416999999997924e-05, 3.7388999999998784e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.7403000000001824e-05, 3.744399999999759e-05, 3.741600000000192e-05, 3.741599999999845e-05, 3.7360999999999644e-05, 3.7389000000002254e-05, 3.7431000000000964e-05, 3.742999999999802e-05, 3.74590000000001e-05, 3.7417000000001394e-05, 3.7445000000000533e-05, 3.7389000000002254e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.743100000000443e-05, 3.7430999999997494e-05, 3.741700000000486e-05, 3.7360999999999644e-05, 3.7402999999998354e-05, 3.7374999999999214e-05, 3.738800000000625e-05, 3.743000000000496e-05, 3.74580000000041e-05, 3.744400000000453e-05, 3.740199999999888e-05, 3.741700000000486e-05, 3.7360999999999644e-05, 3.7444999999997064e-05, 3.7416999999997924e-05, 3.7388999999998784e-05, 3.7416999999997924e-05, 3.741599999999845e-05, 3.7416999999997924e-05, 3.742999999999802e-05, 3.7430999999997494e-05, 3.741599999999845e-05, 3.745900000000357e-05, 3.7416999999997924e-05, 3.741599999999845e-05, 3.7430999999997494e-05, 3.742999999999802e-05, 3.741600000000539e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.160" endtime="20201115 22:00:58.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.155" endtime="20201115 22:00:58.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.164" endtime="20201115 22:00:58.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.167" endtime="20201115 22:00:58.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.166" endtime="20201115 22:00:58.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.162" endtime="20201115 22:00:58.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.783" endtime="20201115 22:00:58.188"></status>
</kw>
<msg timestamp="20201115 22:00:58.188" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.197" endtime="20201115 22:00:58.227"></status>
</kw>
<msg timestamp="20201115 22:00:58.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.195" endtime="20201115 22:00:58.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.229" endtime="20201115 22:00:58.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.231" endtime="20201115 22:00:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.193" endtime="20201115 22:00:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.191" endtime="20201115 22:00:58.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.240" endtime="20201115 22:00:58.527"></status>
</kw>
<msg timestamp="20201115 22:00:58.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.238" endtime="20201115 22:00:58.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.531" endtime="20201115 22:00:58.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.539" endtime="20201115 22:00:58.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.236" endtime="20201115 22:00:58.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.234" endtime="20201115 22:00:58.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.550" level="INFO">${RESULT} = [{'time': 0.021877097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.74720000000002e-05, 'source_diff': 3.74720000000002e-05}, {'time': 0.022310556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:58.542" endtime="20201115 22:00:58.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.563" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.551" endtime="20201115 22:00:58.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.567" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.566" endtime="20201115 22:00:58.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.569" level="INFO">VALUE: [3.74720000000002e-05, 3.7430999999997494e-05, 3.741600000000192e-05, 3.7402999999998354e-05, 3.745799999999716e-05, 3.7431000000000964e-05, 3.740199999999888e-05, 3.7402999999998354e-05, 3.742999999999802e-05, 3.7416999999997924e-05, 3.742999999999802e-05, 3.7333000000000505e-05, 3.7403000000001824e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.744400000000106e-05, 3.7417000000001394e-05, 3.7417000000001394e-05, 3.743000000000149e-05, 3.745800000000063e-05, 3.741600000000192e-05, 3.7388999999998784e-05, 3.743000000000496e-05, 3.740300000000529e-05, 3.7444999999997064e-05, 3.741600000000539e-05, 3.7445000000004e-05, 3.743000000000496e-05, 3.741700000000486e-05, 3.743100000000443e-05, 3.7402999999998354e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.740199999999888e-05, 3.742999999999802e-05, 3.741700000000486e-05, 3.743100000000443e-05, 3.7416999999997924e-05, 3.740199999999888e-05, 3.7332999999993566e-05, 3.7347000000000075e-05, 3.741599999999845e-05, 3.742999999999802e-05, 3.7444999999997064e-05, 3.7374999999999214e-05, 3.749999999999587e-05, 3.741700000000486e-05, 3.7416999999997924e-05, 3.7444999999997064e-05, 3.740300000000529e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.568" endtime="20201115 22:00:58.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.563" endtime="20201115 22:00:58.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.573" endtime="20201115 22:00:58.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.576" endtime="20201115 22:00:58.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.574" endtime="20201115 22:00:58.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.571" endtime="20201115 22:00:58.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.189" endtime="20201115 22:00:58.597"></status>
</kw>
<msg timestamp="20201115 22:00:58.597" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.605" endtime="20201115 22:00:58.636"></status>
</kw>
<msg timestamp="20201115 22:00:58.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.604" endtime="20201115 22:00:58.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.637" endtime="20201115 22:00:58.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.640" endtime="20201115 22:00:58.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.601" endtime="20201115 22:00:58.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.599" endtime="20201115 22:00:58.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.649" endtime="20201115 22:00:58.935"></status>
</kw>
<msg timestamp="20201115 22:00:58.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.647" endtime="20201115 22:00:58.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.939" endtime="20201115 22:00:58.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.947" endtime="20201115 22:00:58.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.645" endtime="20201115 22:00:58.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.643" endtime="20201115 22:00:58.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.954" level="INFO">${RESULT} = [{'time': 0.021770083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.748599999999977e-05, 'source_diff': 3.748599999999977e-05}, {'time': 0.022207875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:58.951" endtime="20201115 22:00:58.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.967" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.955" endtime="20201115 22:00:58.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.971" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.970" endtime="20201115 22:00:58.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.974" level="INFO">VALUE: [3.748599999999977e-05, 3.7416999999997924e-05, 3.745800000000063e-05, 3.7431000000000964e-05, 3.744399999999759e-05, 3.7417000000001394e-05, 3.743000000000149e-05, 3.747199999999673e-05, 3.744400000000106e-05, 3.7445000000000533e-05, 3.7431000000000964e-05, 3.7430999999997494e-05, 3.751399999999891e-05, 3.7417000000001394e-05, 3.7402999999998354e-05, 3.740199999999888e-05, 3.7417000000001394e-05, 3.743000000000149e-05, 3.74720000000002e-05, 3.745800000000063e-05, 3.7374999999999214e-05, 3.741599999999845e-05, 3.744399999999759e-05, 3.744400000000453e-05, 3.747199999999673e-05, 3.7416999999997924e-05, 3.7430999999997494e-05, 3.7402999999998354e-05, 3.741599999999845e-05, 3.7388999999998784e-05, 3.741700000000486e-05, 3.738900000000572e-05, 3.743000000000496e-05, 3.744399999999759e-05, 3.7416999999997924e-05, 3.741599999999845e-05, 3.742999999999802e-05, 3.741599999999845e-05, 3.7430999999997494e-05, 3.744399999999759e-05, 3.7430999999997494e-05, 3.74580000000041e-05, 3.741599999999845e-05, 3.745799999999716e-05, 3.7430999999997494e-05, 3.7486999999995774e-05, 3.740300000000529e-05, 3.7444999999997064e-05, 3.741700000000486e-05, 3.742999999999802e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.973" endtime="20201115 22:00:58.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.968" endtime="20201115 22:00:58.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.978" endtime="20201115 22:00:58.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.981" endtime="20201115 22:00:59.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.980" endtime="20201115 22:00:59.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.976" endtime="20201115 22:00:59.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.597" endtime="20201115 22:00:59.002"></status>
</kw>
<msg timestamp="20201115 22:00:59.003" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.011" endtime="20201115 22:00:59.042"></status>
</kw>
<msg timestamp="20201115 22:00:59.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.010" endtime="20201115 22:00:59.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.043" endtime="20201115 22:00:59.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.045" endtime="20201115 22:00:59.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.007" endtime="20201115 22:00:59.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.005" endtime="20201115 22:00:59.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.054" endtime="20201115 22:00:59.341"></status>
</kw>
<msg timestamp="20201115 22:00:59.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.053" endtime="20201115 22:00:59.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.345" endtime="20201115 22:00:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.353" endtime="20201115 22:00:59.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.050" endtime="20201115 22:00:59.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.049" endtime="20201115 22:00:59.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.360" level="INFO">${RESULT} = [{'time': 0.022027361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.74720000000002e-05, 'source_diff': 3.74720000000002e-05}, {'time': 0.022466417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:59.357" endtime="20201115 22:00:59.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.373" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.361" endtime="20201115 22:00:59.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.377" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.376" endtime="20201115 22:00:59.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.380" level="INFO">VALUE: [3.74720000000002e-05, 3.7430999999997494e-05, 3.7430999999997494e-05, 3.748599999999977e-05, 3.741599999999845e-05, 3.745800000000063e-05, 3.7403000000001824e-05, 3.7417000000001394e-05, 3.7374999999999214e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.742999999999802e-05, 3.744400000000106e-05, 3.751399999999891e-05, 3.7416999999997924e-05, 3.7402999999998354e-05, 3.7431000000000964e-05, 3.7431000000000964e-05, 3.7417000000001394e-05, 3.7430999999997494e-05, 3.740199999999888e-05, 3.733399999999651e-05, 3.741599999999845e-05, 3.7430999999997494e-05, 3.7402999999998354e-05, 3.74859999999963e-05, 3.745799999999716e-05, 3.7472999999996204e-05, 3.74580000000041e-05, 3.7430999999997494e-05, 3.743000000000496e-05, 3.7430999999997494e-05, 3.74580000000041e-05, 3.741700000000486e-05, 3.738900000000572e-05, 3.7430999999997494e-05, 3.741599999999845e-05, 3.740199999999888e-05, 3.7430999999997494e-05, 3.7416999999997924e-05, 3.744399999999759e-05, 3.744399999999759e-05, 3.742999999999802e-05, 3.7430999999997494e-05, 3.743100000000443e-05, 3.742999999999802e-05, 3.743100000000443e-05, 3.7416999999997924e-05, 3.743100000000443e-05, 3.7402999999998354e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.379" endtime="20201115 22:00:59.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.374" endtime="20201115 22:00:59.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.383" endtime="20201115 22:00:59.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.386" endtime="20201115 22:00:59.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.385" endtime="20201115 22:00:59.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.381" endtime="20201115 22:00:59.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.003" endtime="20201115 22:00:59.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.349" endtime="20201115 22:00:59.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.348" endtime="20201115 22:00:59.407"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.410" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.418" endtime="20201115 22:00:59.451"></status>
</kw>
<msg timestamp="20201115 22:00:59.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.417" endtime="20201115 22:00:59.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.454" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.452" endtime="20201115 22:00:59.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.455" endtime="20201115 22:00:59.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.414" endtime="20201115 22:00:59.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.412" endtime="20201115 22:00:59.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.464" endtime="20201115 22:00:59.749"></status>
</kw>
<msg timestamp="20201115 22:00:59.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024120722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.463" endtime="20201115 22:00:59.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024120722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.753" endtime="20201115 22:00:59.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.761" endtime="20201115 22:00:59.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.460" endtime="20201115 22:00:59.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.458" endtime="20201115 22:00:59.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.768" level="INFO">${RESULT} = [{'time': 0.024120722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8055000000002115e-05, 'source_diff': 3.8055000000002115e-05}, {'time': 0.024619778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.764" endtime="20201115 22:00:59.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.782" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.769" endtime="20201115 22:00:59.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.787" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.786" endtime="20201115 22:00:59.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.789" level="INFO">VALUE: [3.8055000000002115e-05, 3.797199999999723e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.795800000000113e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.798699999999974e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.799999999999984e-05, 3.801399999999941e-05, 3.798600000000027e-05, 3.797300000000364e-05, 3.79859999999968e-05, 3.7958999999997134e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.798700000000321e-05, 3.798600000000374e-05, 3.8041000000002545e-05, 3.79859999999968e-05, 3.7944999999997564e-05, 3.7972999999996704e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.801399999999594e-05, 3.79580000000046e-05, 3.797200000000417e-05, 3.8040999999995606e-05, 3.79859999999968e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.799999999999637e-05, 3.798600000000374e-05, 3.797200000000417e-05, 3.797300000000364e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.79859999999968e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.795799999999766e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.788" endtime="20201115 22:00:59.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.783" endtime="20201115 22:00:59.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.792" endtime="20201115 22:00:59.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.795" endtime="20201115 22:00:59.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.794" endtime="20201115 22:00:59.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.790" endtime="20201115 22:00:59.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.410" endtime="20201115 22:00:59.816"></status>
</kw>
<msg timestamp="20201115 22:00:59.816" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.825" endtime="20201115 22:00:59.858"></status>
</kw>
<msg timestamp="20201115 22:00:59.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.824" endtime="20201115 22:00:59.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.860" endtime="20201115 22:00:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.862" endtime="20201115 22:00:59.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.821" endtime="20201115 22:00:59.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.819" endtime="20201115 22:00:59.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.871" endtime="20201115 22:01:00.158"></status>
</kw>
<msg timestamp="20201115 22:01:00.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.870" endtime="20201115 22:01:00.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.162" endtime="20201115 22:01:00.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.170" endtime="20201115 22:01:00.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.867" endtime="20201115 22:01:00.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.865" endtime="20201115 22:01:00.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.176" level="INFO">${RESULT} = [{'time': 0.021868986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.802799999999898e-05, 'source_diff': 3.802799999999898e-05}, {'time': 0.022362486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:00.173" endtime="20201115 22:01:00.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.190" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.178" endtime="20201115 22:01:00.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.194" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.193" endtime="20201115 22:01:00.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.196" level="INFO">VALUE: [3.802799999999898e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.797300000000017e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.805600000000159e-05, 3.79720000000007e-05, 3.797300000000017e-05, 3.804200000000202e-05, 3.797300000000017e-05, 3.798699999999974e-05, 3.79720000000007e-05, 3.793000000000199e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.7972999999996704e-05, 3.800000000000331e-05, 3.797200000000417e-05, 3.8026999999996036e-05, 3.798600000000374e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.79859999999968e-05, 3.797200000000417e-05, 3.797200000000417e-05, 3.7944999999997564e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.795799999999766e-05, 3.797200000000417e-05, 3.800000000000331e-05, 3.801400000000288e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.799999999999637e-05, 3.79859999999968e-05, 3.79859999999968e-05, 3.797200000000417e-05, 3.800000000000331e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.195" endtime="20201115 22:01:00.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.190" endtime="20201115 22:01:00.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.200" endtime="20201115 22:01:00.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.203" endtime="20201115 22:01:00.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.201" endtime="20201115 22:01:00.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.198" endtime="20201115 22:01:00.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.817" endtime="20201115 22:01:00.224"></status>
</kw>
<msg timestamp="20201115 22:01:00.224" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.233" endtime="20201115 22:01:00.266"></status>
</kw>
<msg timestamp="20201115 22:01:00.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.231" endtime="20201115 22:01:00.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.267" endtime="20201115 22:01:00.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.270" endtime="20201115 22:01:00.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.228" endtime="20201115 22:01:00.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.226" endtime="20201115 22:01:00.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.278" endtime="20201115 22:01:00.567"></status>
</kw>
<msg timestamp="20201115 22:01:00.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.277" endtime="20201115 22:01:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.576" endtime="20201115 22:01:00.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.594" endtime="20201115 22:01:00.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.274" endtime="20201115 22:01:00.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.273" endtime="20201115 22:01:00.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.608" level="INFO">${RESULT} = [{'time': 0.022215139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.805599999999812e-05, 'source_diff': 3.805599999999812e-05}, {'time': 0.02271025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:00.601" endtime="20201115 22:01:00.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.637" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.610" endtime="20201115 22:01:00.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.646" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.644" endtime="20201115 22:01:00.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.652" level="INFO">VALUE: [3.805599999999812e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.797199999999723e-05, 3.802799999999898e-05, 3.804200000000202e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.79720000000007e-05, 3.7917000000001894e-05, 3.799999999999984e-05, 3.792999999999852e-05, 3.798699999999974e-05, 3.798600000000027e-05, 3.798700000000321e-05, 3.801399999999594e-05, 3.797300000000364e-05, 3.795799999999766e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.79580000000046e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.795900000000407e-05, 3.7986999999996274e-05, 3.797199999999723e-05, 3.7916999999998424e-05, 3.8027000000002975e-05, 3.804199999999508e-05, 3.797199999999723e-05, 3.79859999999968e-05, 3.7972999999996704e-05, 3.797199999999723e-05, 3.800000000000331e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.802800000000245e-05, 3.798600000000374e-05, 3.797200000000417e-05, 3.802800000000245e-05, 3.795900000000407e-05, 3.799999999999637e-05, 3.791599999999895e-05, 3.798600000000374e-05, 3.800000000000331e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.649" endtime="20201115 22:01:00.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.639" endtime="20201115 22:01:00.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.658" endtime="20201115 22:01:00.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.665" endtime="20201115 22:01:00.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.662" endtime="20201115 22:01:00.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.655" endtime="20201115 22:01:00.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.224" endtime="20201115 22:01:00.687"></status>
</kw>
<msg timestamp="20201115 22:01:00.687" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.696" endtime="20201115 22:01:00.729"></status>
</kw>
<msg timestamp="20201115 22:01:00.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.694" endtime="20201115 22:01:00.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.730" endtime="20201115 22:01:00.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.732" endtime="20201115 22:01:00.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.692" endtime="20201115 22:01:00.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.690" endtime="20201115 22:01:00.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.741" endtime="20201115 22:01:01.027"></status>
</kw>
<msg timestamp="20201115 22:01:01.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.740" endtime="20201115 22:01:01.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.031" endtime="20201115 22:01:01.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.040" endtime="20201115 22:01:01.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.737" endtime="20201115 22:01:01.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.736" endtime="20201115 22:01:01.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.046" level="INFO">${RESULT} = [{'time': 0.022324889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804200000000202e-05, 'source_diff': 3.804200000000202e-05}, {'time': 0.022823069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.043" endtime="20201115 22:01:01.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.059" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.047" endtime="20201115 22:01:01.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.065" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.063" endtime="20201115 22:01:01.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.068" level="INFO">VALUE: [3.804200000000202e-05, 3.791600000000242e-05, 3.798600000000027e-05, 3.79590000000006e-05, 3.798600000000027e-05, 3.797300000000017e-05, 3.798600000000027e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.799999999999984e-05, 3.795799999999766e-05, 3.799999999999984e-05, 3.79720000000007e-05, 3.798600000000027e-05, 3.797199999999723e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.798600000000374e-05, 3.7972999999996704e-05, 3.79580000000046e-05, 3.7958999999997134e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797300000000364e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.805599999999465e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.797200000000417e-05, 3.8026999999996036e-05, 3.79859999999968e-05, 3.792999999999852e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.798600000000374e-05, 3.79859999999968e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.7986999999996274e-05, 3.79859999999968e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.066" endtime="20201115 22:01:01.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.060" endtime="20201115 22:01:01.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.072" endtime="20201115 22:01:01.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.077" endtime="20201115 22:01:01.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.075" endtime="20201115 22:01:01.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.070" endtime="20201115 22:01:01.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.688" endtime="20201115 22:01:01.100"></status>
</kw>
<msg timestamp="20201115 22:01:01.100" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.113" endtime="20201115 22:01:01.147"></status>
</kw>
<msg timestamp="20201115 22:01:01.147" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.110" endtime="20201115 22:01:01.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.148" endtime="20201115 22:01:01.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.151" endtime="20201115 22:01:01.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.107" endtime="20201115 22:01:01.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.104" endtime="20201115 22:01:01.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.160" endtime="20201115 22:01:01.463"></status>
</kw>
<msg timestamp="20201115 22:01:01.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028481319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028519306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.158" endtime="20201115 22:01:01.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028481319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028519306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.472" endtime="20201115 22:01:01.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.484" endtime="20201115 22:01:01.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.155" endtime="20201115 22:01:01.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.154" endtime="20201115 22:01:01.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.492" level="INFO">${RESULT} = [{'time': 0.028519306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.798699999999974e-05, 'source_diff': 3.798699999999974e-05}, {'time': 0.029019375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.488" endtime="20201115 22:01:01.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.506" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.492" endtime="20201115 22:01:01.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.511" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.510" endtime="20201115 22:01:01.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.513" level="INFO">VALUE: [3.798699999999974e-05, 3.795800000000113e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.798600000000027e-05, 3.79720000000007e-05, 3.800000000000331e-05, 3.7916999999998424e-05, 3.7958999999997134e-05, 3.7916999999998424e-05, 3.798600000000374e-05, 3.797300000000364e-05, 3.800000000000331e-05, 3.8041000000002545e-05, 3.79859999999968e-05, 3.794399999999809e-05, 3.800000000000331e-05, 3.79450000000045e-05, 3.7972999999996704e-05, 3.798600000000374e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.800000000000331e-05, 3.798600000000374e-05, 3.79450000000045e-05, 3.798600000000374e-05, 3.7958999999997134e-05, 3.802799999999551e-05, 3.794400000000503e-05, 3.798700000000321e-05, 3.794399999999809e-05, 3.797199999999723e-05, 3.79859999999968e-05, 3.799999999999637e-05, 3.799999999999637e-05, 3.799999999999637e-05, 3.79859999999968e-05, 3.798600000000374e-05, 3.798700000000321e-05, 3.7972999999996704e-05, 3.797200000000417e-05, 3.800000000000331e-05, 3.798600000000374e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.797199999999723e-05, 3.7972999999996704e-05, 3.797199999999723e-05, 3.792999999999852e-05, 3.795799999999766e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.512" endtime="20201115 22:01:01.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.507" endtime="20201115 22:01:01.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.517" endtime="20201115 22:01:01.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.520" endtime="20201115 22:01:01.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.519" endtime="20201115 22:01:01.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.515" endtime="20201115 22:01:01.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.101" endtime="20201115 22:01:01.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.409" endtime="20201115 22:01:01.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.408" endtime="20201115 22:01:01.541"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.543" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.552" endtime="20201115 22:01:01.588"></status>
</kw>
<msg timestamp="20201115 22:01:01.588" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.551" endtime="20201115 22:01:01.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.589" endtime="20201115 22:01:01.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.591" endtime="20201115 22:01:01.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.548" endtime="20201115 22:01:01.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.546" endtime="20201115 22:01:01.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.601" endtime="20201115 22:01:01.887"></status>
</kw>
<msg timestamp="20201115 22:01:01.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024412167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.599" endtime="20201115 22:01:01.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024412167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024450833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.891" endtime="20201115 22:01:01.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.899" endtime="20201115 22:01:01.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.596" endtime="20201115 22:01:01.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.595" endtime="20201115 22:01:01.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.906" level="INFO">${RESULT} = [{'time': 0.024450833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.866600000000317e-05, 'source_diff': 3.866600000000317e-05}, {'time': 0.024989458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:01.902" endtime="20201115 22:01:01.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.919" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.907" endtime="20201115 22:01:01.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.923" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.922" endtime="20201115 22:01:01.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.926" level="INFO">VALUE: [3.866600000000317e-05, 3.850000000000034e-05, 3.851399999999991e-05, 3.8540999999999576e-05, 3.850000000000034e-05, 3.84720000000012e-05, 3.852800000000295e-05, 3.8541000000003045e-05, 3.854199999999905e-05, 3.8554999999999146e-05, 3.850000000000034e-05, 3.8568999999998715e-05, 3.850000000000034e-05, 3.855599999999515e-05, 3.8583000000001755e-05, 3.852800000000295e-05, 3.854199999999558e-05, 3.854199999999558e-05, 3.84859999999973e-05, 3.854199999999558e-05, 3.854200000000252e-05, 3.855599999999515e-05, 3.8540999999996106e-05, 3.852800000000295e-05, 3.8583000000001755e-05, 3.855600000000209e-05, 3.850000000000381e-05, 3.850000000000381e-05, 3.8540999999996106e-05, 3.850000000000381e-05, 3.855599999999515e-05, 3.852800000000295e-05, 3.8486999999996774e-05, 3.852799999999601e-05, 3.8554999999995676e-05, 3.8611000000000895e-05, 3.850000000000381e-05, 3.854200000000252e-05, 3.8541000000003045e-05, 3.854200000000252e-05, 3.8541000000003045e-05, 3.854200000000252e-05, 3.855600000000209e-05, 3.8555000000002615e-05, 3.851399999999644e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.8569000000002185e-05, 3.851399999999644e-05, 3.851399999999644e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.924" endtime="20201115 22:01:01.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.920" endtime="20201115 22:01:01.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.929" endtime="20201115 22:01:01.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.933" endtime="20201115 22:01:01.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.931" endtime="20201115 22:01:01.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.928" endtime="20201115 22:01:01.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.544" endtime="20201115 22:01:01.954"></status>
</kw>
<msg timestamp="20201115 22:01:01.954" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.963" endtime="20201115 22:01:01.998"></status>
</kw>
<msg timestamp="20201115 22:01:01.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.961" endtime="20201115 22:01:01.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.999" endtime="20201115 22:01:02.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.002" endtime="20201115 22:01:02.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.958" endtime="20201115 22:01:02.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.956" endtime="20201115 22:01:02.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.011" endtime="20201115 22:01:02.316"></status>
</kw>
<msg timestamp="20201115 22:01:02.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.009" endtime="20201115 22:01:02.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.320" endtime="20201115 22:01:02.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.328" endtime="20201115 22:01:02.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.007" endtime="20201115 22:01:02.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.005" endtime="20201115 22:01:02.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.335" level="INFO">${RESULT} = [{'time': 0.021939722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8596999999997855e-05, 'source_diff': 3.8596999999997855e-05}, {'time': 0.022490542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:02.331" endtime="20201115 22:01:02.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.348" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.336" endtime="20201115 22:01:02.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.353" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.352" endtime="20201115 22:01:02.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.355" level="INFO">VALUE: [3.8596999999997855e-05, 3.852799999999948e-05, 3.8610999999997425e-05, 3.855599999999862e-05, 3.8527000000000006e-05, 3.8610999999997425e-05, 3.854199999999905e-05, 3.8555000000002615e-05, 3.858400000000123e-05, 3.854199999999905e-05, 3.852799999999948e-05, 3.854200000000252e-05, 3.852799999999948e-05, 3.8540999999999576e-05, 3.852799999999948e-05, 3.852799999999948e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.852800000000295e-05, 3.852800000000295e-05, 3.854200000000252e-05, 3.8610999999993956e-05, 3.848600000000424e-05, 3.851399999999644e-05, 3.8540999999996106e-05, 3.8512999999996966e-05, 3.8445000000005e-05, 3.852800000000295e-05, 3.851399999999644e-05, 3.8554999999995676e-05, 3.855599999999515e-05, 3.852800000000295e-05, 3.8527000000003475e-05, 3.852799999999601e-05, 3.8526999999996536e-05, 3.8555000000002615e-05, 3.852800000000295e-05, 3.852799999999601e-05, 3.8512999999996966e-05, 3.848700000000371e-05, 3.8541000000003045e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.861200000000037e-05, 3.857000000000166e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.8555000000002615e-05, 3.8583000000001755e-05, 3.8555000000002615e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.354" endtime="20201115 22:01:02.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.349" endtime="20201115 22:01:02.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.359" endtime="20201115 22:01:02.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.362" endtime="20201115 22:01:02.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.360" endtime="20201115 22:01:02.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.357" endtime="20201115 22:01:02.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.954" endtime="20201115 22:01:02.383"></status>
</kw>
<msg timestamp="20201115 22:01:02.383" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.392" endtime="20201115 22:01:02.427"></status>
</kw>
<msg timestamp="20201115 22:01:02.428" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.390" endtime="20201115 22:01:02.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.430" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.429" endtime="20201115 22:01:02.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.431" endtime="20201115 22:01:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.388" endtime="20201115 22:01:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.385" endtime="20201115 22:01:02.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.440" endtime="20201115 22:01:02.726"></status>
</kw>
<msg timestamp="20201115 22:01:02.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.439" endtime="20201115 22:01:02.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.730" endtime="20201115 22:01:02.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.739" endtime="20201115 22:01:02.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.436" endtime="20201115 22:01:02.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.434" endtime="20201115 22:01:02.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.745" level="INFO">${RESULT} = [{'time': 0.022061819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.863800000000056e-05, 'source_diff': 3.863800000000056e-05}, {'time': 0.022603306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:02.742" endtime="20201115 22:01:02.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.759" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.747" endtime="20201115 22:01:02.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.763" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.762" endtime="20201115 22:01:02.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.766" level="INFO">VALUE: [3.863800000000056e-05, 3.855599999999862e-05, 3.851399999999991e-05, 3.8540999999999576e-05, 3.854199999999905e-05, 3.84859999999973e-05, 3.854199999999905e-05, 3.854199999999905e-05, 3.8554999999999146e-05, 3.8540999999999576e-05, 3.8555000000002615e-05, 3.8554999999999146e-05, 3.855600000000209e-05, 3.852799999999948e-05, 3.8555000000002615e-05, 3.852799999999948e-05, 3.852799999999948e-05, 3.854200000000252e-05, 3.855600000000209e-05, 3.849999999999687e-05, 3.849999999999687e-05, 3.8555000000002615e-05, 3.84859999999973e-05, 3.851399999999644e-05, 3.854200000000252e-05, 3.847199999999773e-05, 3.854199999999558e-05, 3.8555000000002615e-05, 3.852799999999601e-05, 3.857000000000166e-05, 3.8583000000001755e-05, 3.84859999999973e-05, 3.854200000000252e-05, 3.851400000000338e-05, 3.847199999999773e-05, 3.8554999999995676e-05, 3.852799999999601e-05, 3.858400000000123e-05, 3.854200000000252e-05, 3.852800000000295e-05, 3.854199999999558e-05, 3.8583000000001755e-05, 3.852799999999601e-05, 3.854200000000252e-05, 3.8486999999996774e-05, 3.8583000000001755e-05, 3.849999999999687e-05, 3.854200000000252e-05, 3.847200000000467e-05, 3.852799999999601e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.765" endtime="20201115 22:01:02.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.760" endtime="20201115 22:01:02.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.769" endtime="20201115 22:01:02.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.773" endtime="20201115 22:01:02.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.771" endtime="20201115 22:01:02.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.767" endtime="20201115 22:01:02.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.383" endtime="20201115 22:01:02.793"></status>
</kw>
<msg timestamp="20201115 22:01:02.794" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.802" endtime="20201115 22:01:02.838"></status>
</kw>
<msg timestamp="20201115 22:01:02.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.801" endtime="20201115 22:01:02.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.839" endtime="20201115 22:01:02.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.842" endtime="20201115 22:01:02.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.798" endtime="20201115 22:01:02.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.796" endtime="20201115 22:01:02.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.851" endtime="20201115 22:01:03.137"></status>
</kw>
<msg timestamp="20201115 22:01:03.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.849" endtime="20201115 22:01:03.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.141" endtime="20201115 22:01:03.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.149" endtime="20201115 22:01:03.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.847" endtime="20201115 22:01:03.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.845" endtime="20201115 22:01:03.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.156" level="INFO">${RESULT} = [{'time': 0.022145681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8625000000000465e-05, 'source_diff': 3.8625000000000465e-05}, {'time': 0.022686944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.153" endtime="20201115 22:01:03.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.171" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.157" endtime="20201115 22:01:03.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.175" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.174" endtime="20201115 22:01:03.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.178" level="INFO">VALUE: [3.8625000000000465e-05, 3.8554999999999146e-05, 3.8554999999999146e-05, 3.8540999999999576e-05, 3.854200000000252e-05, 3.852799999999948e-05, 3.8540999999999576e-05, 3.856999999999819e-05, 3.855600000000209e-05, 3.850000000000034e-05, 3.8540999999999576e-05, 3.8583000000001755e-05, 3.8554999999999146e-05, 3.8540999999999576e-05, 3.8555000000002615e-05, 3.8554999999999146e-05, 3.852799999999948e-05, 3.8526999999996536e-05, 3.8555000000002615e-05, 3.852800000000295e-05, 3.8526999999996536e-05, 3.8555000000002615e-05, 3.8541000000003045e-05, 3.8541000000003045e-05, 3.854200000000252e-05, 3.8555000000002615e-05, 3.854199999999558e-05, 3.8527000000003475e-05, 3.852800000000295e-05, 3.8611000000000895e-05, 3.8554999999995676e-05, 3.852800000000295e-05, 3.8541000000003045e-05, 3.855600000000209e-05, 3.855599999999515e-05, 3.8541000000003045e-05, 3.854199999999558e-05, 3.8541000000003045e-05, 3.854200000000252e-05, 3.852799999999601e-05, 3.852800000000295e-05, 3.855600000000209e-05, 3.852800000000295e-05, 3.854200000000252e-05, 3.8526999999996536e-05, 3.8555000000002615e-05, 3.855600000000209e-05, 3.855600000000209e-05, 3.854199999999558e-05, 3.8554999999995676e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.176" endtime="20201115 22:01:03.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.172" endtime="20201115 22:01:03.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.181" endtime="20201115 22:01:03.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.184" endtime="20201115 22:01:03.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.183" endtime="20201115 22:01:03.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.179" endtime="20201115 22:01:03.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.794" endtime="20201115 22:01:03.205"></status>
</kw>
<msg timestamp="20201115 22:01:03.205" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.214" endtime="20201115 22:01:03.249"></status>
</kw>
<msg timestamp="20201115 22:01:03.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.213" endtime="20201115 22:01:03.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.251" endtime="20201115 22:01:03.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.253" endtime="20201115 22:01:03.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.210" endtime="20201115 22:01:03.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.208" endtime="20201115 22:01:03.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.262" endtime="20201115 22:01:03.549"></status>
</kw>
<msg timestamp="20201115 22:01:03.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.261" endtime="20201115 22:01:03.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.560" endtime="20201115 22:01:03.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.569" endtime="20201115 22:01:03.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.258" endtime="20201115 22:01:03.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.257" endtime="20201115 22:01:03.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.575" level="INFO">${RESULT} = [{'time': 0.022109458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8610999999997425e-05, 'source_diff': 3.8610999999997425e-05}, {'time': 0.022643569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.572" endtime="20201115 22:01:03.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.589" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.576" endtime="20201115 22:01:03.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.593" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.592" endtime="20201115 22:01:03.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.596" level="INFO">VALUE: [3.8610999999997425e-05, 3.8527000000000006e-05, 3.8625000000000465e-05, 3.8569000000002185e-05, 3.851399999999991e-05, 3.854199999999905e-05, 3.854199999999905e-05, 3.8555000000002615e-05, 3.8554999999999146e-05, 3.854200000000252e-05, 3.8555000000002615e-05, 3.8568999999998715e-05, 3.8540999999999576e-05, 3.852799999999948e-05, 3.854199999999905e-05, 3.8555000000002615e-05, 3.855599999999862e-05, 3.851400000000338e-05, 3.855600000000209e-05, 3.855600000000209e-05, 3.854199999999558e-05, 3.855599999999515e-05, 3.852800000000295e-05, 3.849999999999687e-05, 3.855600000000209e-05, 3.852800000000295e-05, 3.852800000000295e-05, 3.855599999999515e-05, 3.8597000000001325e-05, 3.8541000000003045e-05, 3.852800000000295e-05, 3.854200000000252e-05, 3.854200000000252e-05, 3.855600000000209e-05, 3.8583000000001755e-05, 3.8611000000000895e-05, 3.856999999999472e-05, 3.854199999999558e-05, 3.855600000000209e-05, 3.8555000000002615e-05, 3.8541000000003045e-05, 3.855600000000209e-05, 3.8541000000003045e-05, 3.8569000000002185e-05, 3.854199999999558e-05, 3.8554999999995676e-05, 3.852799999999601e-05, 3.8555000000002615e-05, 3.854200000000252e-05, 3.8554999999995676e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.594" endtime="20201115 22:01:03.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.590" endtime="20201115 22:01:03.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.599" endtime="20201115 22:01:03.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.602" endtime="20201115 22:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.601" endtime="20201115 22:01:03.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.597" endtime="20201115 22:01:03.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.206" endtime="20201115 22:01:03.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.542" endtime="20201115 22:01:03.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.542" endtime="20201115 22:01:03.623"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.626" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.634" endtime="20201115 22:01:03.672"></status>
</kw>
<msg timestamp="20201115 22:01:03.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.633" endtime="20201115 22:01:03.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.674" endtime="20201115 22:01:03.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.676" endtime="20201115 22:01:03.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.630" endtime="20201115 22:01:03.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.628" endtime="20201115 22:01:03.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.686" endtime="20201115 22:01:03.973"></status>
</kw>
<msg timestamp="20201115 22:01:03.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0244, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201115 22:01:03.684" endtime="20201115 22:01:03.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024360847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0244, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201115 22:01:03.977" endtime="20201115 22:01:03.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.985" endtime="20201115 22:01:03.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.682" endtime="20201115 22:01:03.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.680" endtime="20201115 22:01:03.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.992" level="INFO">${RESULT} = [{'time': 0.0244, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9153000000000104e-05, 'source_diff': 3.9153000000000104e-05}, {'time': 0.024987833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:03.988" endtime="20201115 22:01:03.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.005" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.993" endtime="20201115 22:01:04.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.010" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.009" endtime="20201115 22:01:04.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.012" level="INFO">VALUE: [3.9153000000000104e-05, 3.9111000000001395e-05, 3.9082999999998785e-05, 3.9097000000001825e-05, 3.9124999999997495e-05, 3.9153000000000104e-05, 3.9097000000001825e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.9083000000002255e-05, 3.9083000000002255e-05, 3.9082999999998785e-05, 3.9125000000000965e-05, 3.9054999999996176e-05, 3.90980000000013e-05, 3.9083000000002255e-05, 3.9097000000001825e-05, 3.9082999999995316e-05, 3.9083000000002255e-05, 3.9111000000001395e-05, 3.9096999999994886e-05, 3.9110999999994456e-05, 3.9083000000002255e-05, 3.9153000000000104e-05, 3.9125000000000965e-05, 3.9069000000002685e-05, 3.9110999999994456e-05, 3.9096999999994886e-05, 3.9083000000002255e-05, 3.9139000000000534e-05, 3.908399999999479e-05, 3.908400000000173e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9083000000002255e-05, 3.9111000000001395e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.908399999999479e-05, 3.911200000000087e-05, 3.9082999999995316e-05, 3.9097000000001825e-05, 3.906999999999522e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.907000000000216e-05, 3.9111000000001395e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.011" endtime="20201115 22:01:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.006" endtime="20201115 22:01:04.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.015" endtime="20201115 22:01:04.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.019" endtime="20201115 22:01:04.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.017" endtime="20201115 22:01:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.014" endtime="20201115 22:01:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.626" endtime="20201115 22:01:04.040"></status>
</kw>
<msg timestamp="20201115 22:01:04.040" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.049" endtime="20201115 22:01:04.087"></status>
</kw>
<msg timestamp="20201115 22:01:04.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.047" endtime="20201115 22:01:04.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.089" endtime="20201115 22:01:04.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.092" endtime="20201115 22:01:04.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.045" endtime="20201115 22:01:04.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.042" endtime="20201115 22:01:04.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.101" endtime="20201115 22:01:04.387"></status>
</kw>
<msg timestamp="20201115 22:01:04.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:04.099" endtime="20201115 22:01:04.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:04.392" endtime="20201115 22:01:04.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.400" endtime="20201115 22:01:04.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.097" endtime="20201115 22:01:04.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.095" endtime="20201115 22:01:04.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.406" level="INFO">${RESULT} = [{'time': 0.02272375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9166999999999674e-05, 'source_diff': 3.9166999999999674e-05}, {'time': 0.023317236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:04.403" endtime="20201115 22:01:04.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.420" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.408" endtime="20201115 22:01:04.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.424" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.423" endtime="20201115 22:01:04.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.427" level="INFO">VALUE: [3.9166999999999674e-05, 3.9097000000001825e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9111000000001395e-05, 3.9082999999998785e-05, 3.91119999999974e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9096999999998355e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.908400000000173e-05, 3.9166999999999674e-05, 3.908400000000173e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.9083000000002255e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.909799999999436e-05, 3.9110999999994456e-05, 3.90980000000013e-05, 3.9096999999994886e-05, 3.908400000000173e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9082999999995316e-05, 3.9097000000001825e-05, 3.911200000000087e-05, 3.9111000000001395e-05, 3.9096999999994886e-05, 3.9110999999994456e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9096999999994886e-05, 3.9097000000001825e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.9083000000002255e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9111000000001395e-05, 3.9125000000000965e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.425" endtime="20201115 22:01:04.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.421" endtime="20201115 22:01:04.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.430" endtime="20201115 22:01:04.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.434" endtime="20201115 22:01:04.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.432" endtime="20201115 22:01:04.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.428" endtime="20201115 22:01:04.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.040" endtime="20201115 22:01:04.454"></status>
</kw>
<msg timestamp="20201115 22:01:04.455" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.464" endtime="20201115 22:01:04.502"></status>
</kw>
<msg timestamp="20201115 22:01:04.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.462" endtime="20201115 22:01:04.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.503" endtime="20201115 22:01:04.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.506" endtime="20201115 22:01:04.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.459" endtime="20201115 22:01:04.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.457" endtime="20201115 22:01:04.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.515" endtime="20201115 22:01:04.801"></status>
</kw>
<msg timestamp="20201115 22:01:04.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.513" endtime="20201115 22:01:04.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.805" endtime="20201115 22:01:04.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.814" endtime="20201115 22:01:04.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.511" endtime="20201115 22:01:04.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.509" endtime="20201115 22:01:04.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.820" level="INFO">${RESULT} = [{'time': 0.022720139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9166999999999674e-05, 'source_diff': 3.9166999999999674e-05}, {'time': 0.023307181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:04.817" endtime="20201115 22:01:04.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.835" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.821" endtime="20201115 22:01:04.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.840" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.839" endtime="20201115 22:01:04.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.842" level="INFO">VALUE: [3.9166999999999674e-05, 3.90980000000013e-05, 3.9125000000000965e-05, 3.9124999999997495e-05, 3.902799999999998e-05, 3.9096999999998355e-05, 3.9111000000001395e-05, 3.904199999999955e-05, 3.90980000000013e-05, 3.9139000000000534e-05, 3.908400000000173e-05, 3.9097000000001825e-05, 3.9110999999997925e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.907000000000216e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9110999999994456e-05, 3.91660000000002e-05, 3.9124999999994026e-05, 3.911200000000087e-05, 3.9083000000002255e-05, 3.90980000000013e-05, 3.9096999999994886e-05, 3.9111000000001395e-05, 3.9139000000000534e-05, 3.9096999999994886e-05, 3.9083000000002255e-05, 3.9139000000000534e-05, 3.917999999999977e-05, 3.9111000000001395e-05, 3.915200000000063e-05, 3.9111000000001395e-05, 3.9041000000003545e-05, 3.919399999999934e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9139000000000534e-05, 3.902799999999651e-05, 3.9097000000001825e-05, 3.909799999999436e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.9096999999994886e-05, 3.9096999999994886e-05, 3.9097000000001825e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.841" endtime="20201115 22:01:04.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.836" endtime="20201115 22:01:04.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.845" endtime="20201115 22:01:04.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.849" endtime="20201115 22:01:04.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.847" endtime="20201115 22:01:04.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.844" endtime="20201115 22:01:04.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.455" endtime="20201115 22:01:04.870"></status>
</kw>
<msg timestamp="20201115 22:01:04.870" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.879" endtime="20201115 22:01:04.917"></status>
</kw>
<msg timestamp="20201115 22:01:04.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.877" endtime="20201115 22:01:04.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.918" endtime="20201115 22:01:04.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.921" endtime="20201115 22:01:04.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.875" endtime="20201115 22:01:04.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.873" endtime="20201115 22:01:04.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.930" endtime="20201115 22:01:05.217"></status>
</kw>
<msg timestamp="20201115 22:01:05.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.928" endtime="20201115 22:01:05.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.221" endtime="20201115 22:01:05.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.229" endtime="20201115 22:01:05.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.926" endtime="20201115 22:01:05.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.924" endtime="20201115 22:01:05.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.236" level="INFO">${RESULT} = [{'time': 0.022506208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.91660000000002e-05, 'source_diff': 3.91660000000002e-05}, {'time': 0.023108139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:05.232" endtime="20201115 22:01:05.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.249" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.237" endtime="20201115 22:01:05.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.254" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.252" endtime="20201115 22:01:05.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.256" level="INFO">VALUE: [3.91660000000002e-05, 3.9096999999998355e-05, 3.9110999999997925e-05, 3.915200000000063e-05, 3.9069000000002685e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9110999999997925e-05, 3.9096999999998355e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9153000000000104e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.902799999999651e-05, 3.908399999999479e-05, 3.9082999999995316e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.9083000000002255e-05, 3.9166999999999674e-05, 3.908400000000173e-05, 3.9153000000000104e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9096999999994886e-05, 3.9110999999994456e-05, 3.9111000000001395e-05, 3.9125000000000965e-05, 3.90980000000013e-05, 3.9152999999993165e-05, 3.908400000000173e-05, 3.9111000000001395e-05, 3.9125000000000965e-05, 3.911200000000087e-05, 3.909799999999436e-05, 3.9097000000001825e-05, 3.9082999999995316e-05, 3.908400000000173e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.9097000000001825e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.255" endtime="20201115 22:01:05.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.250" endtime="20201115 22:01:05.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.260" endtime="20201115 22:01:05.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.263" endtime="20201115 22:01:05.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.261" endtime="20201115 22:01:05.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.258" endtime="20201115 22:01:05.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.871" endtime="20201115 22:01:05.284"></status>
</kw>
<msg timestamp="20201115 22:01:05.284" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.293" endtime="20201115 22:01:05.331"></status>
</kw>
<msg timestamp="20201115 22:01:05.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.292" endtime="20201115 22:01:05.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.334" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.332" endtime="20201115 22:01:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.335" endtime="20201115 22:01:05.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.289" endtime="20201115 22:01:05.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.287" endtime="20201115 22:01:05.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.344" endtime="20201115 22:01:05.630"></status>
</kw>
<msg timestamp="20201115 22:01:05.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.342" endtime="20201115 22:01:05.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.634" endtime="20201115 22:01:05.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.643" endtime="20201115 22:01:05.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.340" endtime="20201115 22:01:05.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.338" endtime="20201115 22:01:05.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.649" level="INFO">${RESULT} = [{'time': 0.022296528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9166999999999674e-05, 'source_diff': 3.9166999999999674e-05}, {'time': 0.022898819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:05.646" endtime="20201115 22:01:05.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.663" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.650" endtime="20201115 22:01:05.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.667" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.666" endtime="20201115 22:01:05.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.670" level="INFO">VALUE: [3.9166999999999674e-05, 3.9068999999999215e-05, 3.908400000000173e-05, 3.9110999999997925e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.905599999999912e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.90980000000013e-05, 3.9124999999997495e-05, 3.9139000000000534e-05, 3.9013000000000936e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9139000000000534e-05, 3.90980000000013e-05, 3.9111000000001395e-05, 3.9111000000001395e-05, 3.911200000000087e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9096999999994886e-05, 3.9124999999994026e-05, 3.9110999999994456e-05, 3.9097000000001825e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9110999999994456e-05, 3.9110999999994456e-05, 3.9083000000002255e-05, 3.9097000000001825e-05, 3.9139000000000534e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.90980000000013e-05, 3.9111000000001395e-05, 3.9097000000001825e-05, 3.9040999999996606e-05, 3.911200000000087e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.9096999999994886e-05, 3.9111000000001395e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.668" endtime="20201115 22:01:05.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.664" endtime="20201115 22:01:05.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.673" endtime="20201115 22:01:05.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.677" endtime="20201115 22:01:05.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.675" endtime="20201115 22:01:05.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.672" endtime="20201115 22:01:05.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.285" endtime="20201115 22:01:05.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.625" endtime="20201115 22:01:05.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.624" endtime="20201115 22:01:05.698"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.700" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.709" endtime="20201115 22:01:05.750"></status>
</kw>
<msg timestamp="20201115 22:01:05.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.707" endtime="20201115 22:01:05.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.751" endtime="20201115 22:01:05.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.754" endtime="20201115 22:01:05.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.705" endtime="20201115 22:01:05.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.703" endtime="20201115 22:01:05.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.763" endtime="20201115 22:01:06.049"></status>
</kw>
<msg timestamp="20201115 22:01:06.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.761" endtime="20201115 22:01:06.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024742306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.053" endtime="20201115 22:01:06.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.061" endtime="20201115 22:01:06.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.759" endtime="20201115 22:01:06.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.757" endtime="20201115 22:01:06.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.068" level="INFO">${RESULT} = [{'time': 0.024742306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9722999999998454e-05, 'source_diff': 3.9722999999998454e-05}, {'time': 0.025385694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.065" endtime="20201115 22:01:06.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.082" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.069" endtime="20201115 22:01:06.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.086" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.085" endtime="20201115 22:01:06.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.090" level="INFO">VALUE: [3.9722999999998454e-05, 3.969399999999984e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.965200000000113e-05, 3.9610999999998425e-05, 3.968000000000027e-05, 3.9624999999997995e-05, 3.968000000000027e-05, 3.973600000000202e-05, 3.9680999999999744e-05, 3.968100000000668e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9625000000001465e-05, 3.9667000000000174e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.972199999999898e-05, 3.969399999999984e-05, 3.969399999999984e-05, 3.963799999999462e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.969399999999984e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.95980000000018e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.088" endtime="20201115 22:01:06.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.083" endtime="20201115 22:01:06.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.093" endtime="20201115 22:01:06.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.097" endtime="20201115 22:01:06.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.095" endtime="20201115 22:01:06.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.092" endtime="20201115 22:01:06.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.701" endtime="20201115 22:01:06.118"></status>
</kw>
<msg timestamp="20201115 22:01:06.118" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.127" endtime="20201115 22:01:06.168"></status>
</kw>
<msg timestamp="20201115 22:01:06.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.125" endtime="20201115 22:01:06.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.169" endtime="20201115 22:01:06.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.172" endtime="20201115 22:01:06.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.122" endtime="20201115 22:01:06.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.120" endtime="20201115 22:01:06.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.181" endtime="20201115 22:01:06.465"></status>
</kw>
<msg timestamp="20201115 22:01:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.179" endtime="20201115 22:01:06.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.469" endtime="20201115 22:01:06.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.477" endtime="20201115 22:01:06.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.176" endtime="20201115 22:01:06.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.175" endtime="20201115 22:01:06.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.484" level="INFO">${RESULT} = [{'time': 0.022416167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973600000000202e-05, 'source_diff': 3.973600000000202e-05}, {'time': 0.023063694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.481" endtime="20201115 22:01:06.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.499" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.485" endtime="20201115 22:01:06.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.504" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.503" endtime="20201115 22:01:06.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.506" level="INFO">VALUE: [3.973600000000202e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9638999999997565e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.966599999999723e-05, 3.9667000000000174e-05, 3.9681000000003214e-05, 3.9624999999997995e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.968000000000027e-05, 3.970799999999941e-05, 3.9610999999994956e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.96660000000007e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.967999999999333e-05, 3.970799999999941e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.968000000000027e-05, 3.9625000000001465e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.9694999999999314e-05, 3.970799999999941e-05, 3.969399999999984e-05, 3.968000000000027e-05, 3.9666999999993235e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.505" endtime="20201115 22:01:06.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.500" endtime="20201115 22:01:06.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.509" endtime="20201115 22:01:06.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.513" endtime="20201115 22:01:06.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.511" endtime="20201115 22:01:06.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.508" endtime="20201115 22:01:06.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.118" endtime="20201115 22:01:06.534"></status>
</kw>
<msg timestamp="20201115 22:01:06.534" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.543" endtime="20201115 22:01:06.583"></status>
</kw>
<msg timestamp="20201115 22:01:06.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.541" endtime="20201115 22:01:06.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.585" endtime="20201115 22:01:06.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.587" endtime="20201115 22:01:06.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.538" endtime="20201115 22:01:06.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.536" endtime="20201115 22:01:06.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.596" endtime="20201115 22:01:06.883"></status>
</kw>
<msg timestamp="20201115 22:01:06.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.595" endtime="20201115 22:01:06.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.887" endtime="20201115 22:01:06.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.896" endtime="20201115 22:01:06.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.592" endtime="20201115 22:01:06.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.591" endtime="20201115 22:01:06.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.903" level="INFO">${RESULT} = [{'time': 0.022252778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972200000000245e-05, 'source_diff': 3.972200000000245e-05}, {'time': 0.022892875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:06.899" endtime="20201115 22:01:06.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.916" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.904" endtime="20201115 22:01:06.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.921" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.920" endtime="20201115 22:01:06.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.923" level="INFO">VALUE: [3.972200000000245e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.9709000000002354e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9596999999998855e-05, 3.973600000000202e-05, 3.9653000000000604e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.970799999999941e-05, 3.968000000000027e-05, 3.96660000000007e-05, 3.9694999999999314e-05, 3.9694999999999314e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.966599999999376e-05, 3.963799999999462e-05, 3.9667000000000174e-05, 3.9625000000001465e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.969399999999984e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.972199999999898e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.963800000000156e-05, 3.969399999999984e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.922" endtime="20201115 22:01:06.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.917" endtime="20201115 22:01:06.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.926" endtime="20201115 22:01:06.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.930" endtime="20201115 22:01:06.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.928" endtime="20201115 22:01:06.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.924" endtime="20201115 22:01:06.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.534" endtime="20201115 22:01:06.950"></status>
</kw>
<msg timestamp="20201115 22:01:06.951" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.959" endtime="20201115 22:01:07.000"></status>
</kw>
<msg timestamp="20201115 22:01:07.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.958" endtime="20201115 22:01:07.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.002" endtime="20201115 22:01:07.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.004" endtime="20201115 22:01:07.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.955" endtime="20201115 22:01:07.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.953" endtime="20201115 22:01:07.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.013" endtime="20201115 22:01:07.300"></status>
</kw>
<msg timestamp="20201115 22:01:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.012" endtime="20201115 22:01:07.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:07.305" endtime="20201115 22:01:07.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.313" endtime="20201115 22:01:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.009" endtime="20201115 22:01:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.007" endtime="20201115 22:01:07.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.320" level="INFO">${RESULT} = [{'time': 0.022340722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972199999999898e-05, 'source_diff': 3.972199999999898e-05}, {'time': 0.022985333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.316" endtime="20201115 22:01:07.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.321" endtime="20201115 22:01:07.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.338" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.337" endtime="20201115 22:01:07.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.340" level="INFO">VALUE: [3.972199999999898e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9624999999997995e-05, 3.9680999999999744e-05, 3.9624999999997995e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9611000000001895e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9624999999994526e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.95980000000018e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.9694999999999314e-05, 3.9653000000000604e-05, 3.969399999999984e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.9638999999994096e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.96660000000007e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.339" endtime="20201115 22:01:07.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.334" endtime="20201115 22:01:07.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.343" endtime="20201115 22:01:07.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.347" endtime="20201115 22:01:07.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.345" endtime="20201115 22:01:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.342" endtime="20201115 22:01:07.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.951" endtime="20201115 22:01:07.367"></status>
</kw>
<msg timestamp="20201115 22:01:07.368" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.377" endtime="20201115 22:01:07.417"></status>
</kw>
<msg timestamp="20201115 22:01:07.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.375" endtime="20201115 22:01:07.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.419" endtime="20201115 22:01:07.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.421" endtime="20201115 22:01:07.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.372" endtime="20201115 22:01:07.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.370" endtime="20201115 22:01:07.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.430" endtime="20201115 22:01:07.717"></status>
</kw>
<msg timestamp="20201115 22:01:07.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.429" endtime="20201115 22:01:07.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.721" endtime="20201115 22:01:07.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.729" endtime="20201115 22:01:07.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.426" endtime="20201115 22:01:07.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.424" endtime="20201115 22:01:07.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.736" level="INFO">${RESULT} = [{'time': 0.022324833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973599999999855e-05, 'source_diff': 3.973599999999855e-05}, {'time': 0.022967875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:07.733" endtime="20201115 22:01:07.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.737" endtime="20201115 22:01:07.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.754" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.753" endtime="20201115 22:01:07.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.757" level="INFO">VALUE: [3.973599999999855e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.969399999999984e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9611000000001895e-05, 3.9639000000001035e-05, 3.9652999999993666e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.96660000000007e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.972199999999898e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9625000000001465e-05, 3.968000000000027e-05, 3.9625000000001465e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9624999999994526e-05, 3.9667000000000174e-05, 3.9610999999994956e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.755" endtime="20201115 22:01:07.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.751" endtime="20201115 22:01:07.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.760" endtime="20201115 22:01:07.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.763" endtime="20201115 22:01:07.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.762" endtime="20201115 22:01:07.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.758" endtime="20201115 22:01:07.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.368" endtime="20201115 22:01:07.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.699" endtime="20201115 22:01:07.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.698" endtime="20201115 22:01:07.784"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.787" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.795" endtime="20201115 22:01:07.839"></status>
</kw>
<msg timestamp="20201115 22:01:07.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.794" endtime="20201115 22:01:07.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.840" endtime="20201115 22:01:07.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.843" endtime="20201115 22:01:07.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.791" endtime="20201115 22:01:07.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.789" endtime="20201115 22:01:07.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.852" endtime="20201115 22:01:08.139"></status>
</kw>
<msg timestamp="20201115 22:01:08.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024605778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.851" endtime="20201115 22:01:08.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024605778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.143" endtime="20201115 22:01:08.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.151" endtime="20201115 22:01:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.848" endtime="20201115 22:01:08.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.846" endtime="20201115 22:01:08.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.158" level="INFO">${RESULT} = [{'time': 0.024646056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027800000000123e-05, 'source_diff': 4.027800000000123e-05}, {'time': 0.025350361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:08.154" endtime="20201115 22:01:08.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.172" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.159" endtime="20201115 22:01:08.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.177" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.176" endtime="20201115 22:01:08.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.180" level="INFO">VALUE: [4.027800000000123e-05, 4.024999999999862e-05, 4.023599999999905e-05, 4.019400000000034e-05, 4.0194999999999814e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.019399999999687e-05, 4.0236999999998524e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.019400000000034e-05, 4.025000000000556e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.0181000000000244e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.026399999999819e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.027799999999776e-05, 4.023600000000599e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.019400000000034e-05, 4.019400000000034e-05, 4.024999999999862e-05, 4.0194999999999814e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.0194999999999814e-05, 4.0222999999998954e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.024999999999862e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.178" endtime="20201115 22:01:08.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.173" endtime="20201115 22:01:08.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.183" endtime="20201115 22:01:08.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.186" endtime="20201115 22:01:08.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.185" endtime="20201115 22:01:08.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.181" endtime="20201115 22:01:08.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.787" endtime="20201115 22:01:08.207"></status>
</kw>
<msg timestamp="20201115 22:01:08.207" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.216" endtime="20201115 22:01:08.259"></status>
</kw>
<msg timestamp="20201115 22:01:08.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.214" endtime="20201115 22:01:08.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.261" endtime="20201115 22:01:08.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.264" endtime="20201115 22:01:08.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.212" endtime="20201115 22:01:08.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.210" endtime="20201115 22:01:08.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.273" endtime="20201115 22:01:08.559"></status>
</kw>
<msg timestamp="20201115 22:01:08.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:08.271" endtime="20201115 22:01:08.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:08.563" endtime="20201115 22:01:08.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.572" endtime="20201115 22:01:08.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.269" endtime="20201115 22:01:08.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.267" endtime="20201115 22:01:08.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.578" level="INFO">${RESULT} = [{'time': 0.022401042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02920000000008e-05, 'source_diff': 4.02920000000008e-05}, {'time': 0.023098375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:08.575" endtime="20201115 22:01:08.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.592" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.579" endtime="20201115 22:01:08.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.596" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.595" endtime="20201115 22:01:08.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.599" level="INFO">VALUE: [4.02920000000008e-05, 4.023600000000252e-05, 4.022199999999948e-05, 4.025000000000209e-05, 4.022199999999948e-05, 4.019400000000034e-05, 4.027800000000123e-05, 4.023600000000252e-05, 4.0153000000001104e-05, 4.024999999999862e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.0236999999998524e-05, 4.022199999999948e-05, 4.0194999999999814e-05, 4.020799999999991e-05, 4.0222999999998954e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.01660000000012e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.0290999999997856e-05, 4.023600000000599e-05, 4.023599999999905e-05, 4.0236999999998524e-05, 4.0236999999998524e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.0181000000000244e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.027799999999776e-05, 4.022199999999948e-05, 4.024999999999862e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.0262999999998716e-05, 4.026399999999819e-05, 4.022199999999948e-05, 4.024999999999862e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.022199999999948e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.597" endtime="20201115 22:01:08.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.592" endtime="20201115 22:01:08.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.602" endtime="20201115 22:01:08.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.605" endtime="20201115 22:01:08.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.604" endtime="20201115 22:01:08.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.600" endtime="20201115 22:01:08.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.208" endtime="20201115 22:01:08.626"></status>
</kw>
<msg timestamp="20201115 22:01:08.626" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.639" endtime="20201115 22:01:08.683"></status>
</kw>
<msg timestamp="20201115 22:01:08.683" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.638" endtime="20201115 22:01:08.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.684" endtime="20201115 22:01:08.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.687" endtime="20201115 22:01:08.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.635" endtime="20201115 22:01:08.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.629" endtime="20201115 22:01:08.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.696" endtime="20201115 22:01:08.983"></status>
</kw>
<msg timestamp="20201115 22:01:08.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026614458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02665475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:08.694" endtime="20201115 22:01:08.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026614458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02665475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:08.987" endtime="20201115 22:01:08.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.995" endtime="20201115 22:01:08.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.692" endtime="20201115 22:01:08.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.690" endtime="20201115 22:01:08.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.002" level="INFO">${RESULT} = [{'time': 0.02665475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02920000000008e-05, 'source_diff': 4.02920000000008e-05}, {'time': 0.027345375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:08.998" endtime="20201115 22:01:09.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.015" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.003" endtime="20201115 22:01:09.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.020" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.018" endtime="20201115 22:01:09.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.022" level="INFO">VALUE: [4.02920000000008e-05, 4.023600000000252e-05, 4.0222999999998954e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.0181000000000244e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.026399999999819e-05, 4.0194999999999814e-05, 4.024999999999862e-05, 4.0194999999999814e-05, 4.029200000000427e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.024999999999862e-05, 4.022199999999948e-05, 4.0208999999999384e-05, 4.023599999999905e-05, 4.026400000000513e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.027799999999776e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.024999999999862e-05, 4.0236999999998524e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.022200000000642e-05, 4.027799999999776e-05, 4.024999999999862e-05, 4.020799999999991e-05, 4.023599999999905e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.021" endtime="20201115 22:01:09.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.016" endtime="20201115 22:01:09.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.025" endtime="20201115 22:01:09.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.029" endtime="20201115 22:01:09.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.027" endtime="20201115 22:01:09.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.023" endtime="20201115 22:01:09.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.627" endtime="20201115 22:01:09.050"></status>
</kw>
<msg timestamp="20201115 22:01:09.050" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.059" endtime="20201115 22:01:09.102"></status>
</kw>
<msg timestamp="20201115 22:01:09.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.057" endtime="20201115 22:01:09.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.104" endtime="20201115 22:01:09.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.106" endtime="20201115 22:01:09.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.055" endtime="20201115 22:01:09.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.053" endtime="20201115 22:01:09.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.115" endtime="20201115 22:01:09.402"></status>
</kw>
<msg timestamp="20201115 22:01:09.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:09.114" endtime="20201115 22:01:09.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:09.406" endtime="20201115 22:01:09.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.414" endtime="20201115 22:01:09.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.111" endtime="20201115 22:01:09.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.110" endtime="20201115 22:01:09.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.421" level="INFO">${RESULT} = [{'time': 0.0224195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.029199999999733e-05, 'source_diff': 4.029199999999733e-05}, {'time': 0.023118889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:09.417" endtime="20201115 22:01:09.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.434" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.422" endtime="20201115 22:01:09.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.439" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.438" endtime="20201115 22:01:09.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.441" level="INFO">VALUE: [4.029199999999733e-05, 4.020799999999991e-05, 4.023600000000252e-05, 4.024999999999862e-05, 4.022199999999948e-05, 4.027800000000123e-05, 4.022199999999948e-05, 4.0236999999998524e-05, 4.022200000000295e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.019400000000034e-05, 4.023599999999905e-05, 4.0236999999998524e-05, 4.0222999999998954e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.023599999999905e-05, 4.024999999999862e-05, 4.0194999999999814e-05, 4.020799999999991e-05, 4.019400000000034e-05, 4.0222999999998954e-05, 4.027799999999776e-05, 4.022199999999948e-05, 4.022200000000642e-05, 4.0194999999999814e-05, 4.023600000000599e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.022200000000642e-05, 4.022199999999948e-05, 4.023600000000599e-05, 4.023599999999905e-05, 4.029199999999733e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.023600000000599e-05, 4.023599999999905e-05, 4.026400000000513e-05, 4.024999999999862e-05, 4.027799999999776e-05, 4.023599999999905e-05, 4.0222999999998954e-05, 4.020799999999991e-05, 4.023599999999905e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.440" endtime="20201115 22:01:09.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.435" endtime="20201115 22:01:09.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.445" endtime="20201115 22:01:09.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.448" endtime="20201115 22:01:09.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.447" endtime="20201115 22:01:09.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.443" endtime="20201115 22:01:09.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.051" endtime="20201115 22:01:09.469"></status>
</kw>
<msg timestamp="20201115 22:01:09.469" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.478" endtime="20201115 22:01:09.521"></status>
</kw>
<msg timestamp="20201115 22:01:09.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.476" endtime="20201115 22:01:09.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.523" endtime="20201115 22:01:09.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.525" endtime="20201115 22:01:09.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.474" endtime="20201115 22:01:09.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.472" endtime="20201115 22:01:09.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.534" endtime="20201115 22:01:09.822"></status>
</kw>
<msg timestamp="20201115 22:01:09.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02227425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:09.533" endtime="20201115 22:01:09.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02227425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:09.826" endtime="20201115 22:01:09.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.834" endtime="20201115 22:01:09.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.530" endtime="20201115 22:01:09.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.529" endtime="20201115 22:01:09.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.841" level="INFO">${RESULT} = [{'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0319000000000466e-05, 'source_diff': 4.0319000000000466e-05}, {'time': 0.023009875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.837" endtime="20201115 22:01:09.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.855" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.842" endtime="20201115 22:01:09.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.860" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.859" endtime="20201115 22:01:09.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.862" level="INFO">VALUE: [4.0319000000000466e-05, 4.023599999999905e-05, 4.018000000000077e-05, 4.0237000000001993e-05, 4.022199999999948e-05, 4.026399999999819e-05, 4.023600000000252e-05, 4.020799999999991e-05, 4.023600000000252e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.0263000000002186e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.0222999999998954e-05, 4.025000000000556e-05, 4.024999999999862e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.023600000000599e-05, 4.022199999999948e-05, 4.023600000000599e-05, 4.0236999999998524e-05, 4.022300000000589e-05, 4.023599999999905e-05, 4.018000000000077e-05, 4.023599999999905e-05, 4.0181000000000244e-05, 4.027799999999776e-05, 4.022199999999948e-05, 4.0304999999997426e-05, 4.024999999999862e-05, 4.0208999999999384e-05, 4.024999999999862e-05, 4.022200000000642e-05, 4.019500000000675e-05, 4.0208999999999384e-05, 4.023599999999905e-05, 4.01660000000012e-05, 4.0222999999998954e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.023599999999905e-05, 4.025000000000556e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.024999999999862e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.861" endtime="20201115 22:01:09.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.856" endtime="20201115 22:01:09.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.866" endtime="20201115 22:01:09.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.869" endtime="20201115 22:01:09.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.868" endtime="20201115 22:01:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.864" endtime="20201115 22:01:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.470" endtime="20201115 22:01:09.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.786" endtime="20201115 22:01:09.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.785" endtime="20201115 22:01:09.891"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.893" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.902" endtime="20201115 22:01:09.948"></status>
</kw>
<msg timestamp="20201115 22:01:09.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.900" endtime="20201115 22:01:09.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.951" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.949" endtime="20201115 22:01:09.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.952" endtime="20201115 22:01:09.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.898" endtime="20201115 22:01:09.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.895" endtime="20201115 22:01:09.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.961" endtime="20201115 22:01:10.248"></status>
</kw>
<msg timestamp="20201115 22:01:10.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024665583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.959" endtime="20201115 22:01:10.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024665583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.252" endtime="20201115 22:01:10.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.260" endtime="20201115 22:01:10.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.957" endtime="20201115 22:01:10.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.955" endtime="20201115 22:01:10.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.267" level="INFO">${RESULT} = [{'time': 0.024706444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0860999999999675e-05, 'source_diff': 4.0860999999999675e-05}, {'time': 0.025450958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.264" endtime="20201115 22:01:10.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.280" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.268" endtime="20201115 22:01:10.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.285" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.284" endtime="20201115 22:01:10.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.288" level="INFO">VALUE: [4.0860999999999675e-05, 4.0790999999998356e-05, 4.079199999999783e-05, 4.076400000000216e-05, 4.077799999999826e-05, 4.079199999999783e-05, 4.0805000000001396e-05, 4.07920000000013e-05, 4.0776999999998786e-05, 4.077799999999826e-05, 4.0846999999996636e-05, 4.079199999999783e-05, 4.0805000000004865e-05, 4.080600000000434e-05, 4.08059999999974e-05, 4.07780000000052e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.077799999999826e-05, 4.0804999999997926e-05, 4.077799999999826e-05, 4.0790999999998356e-05, 4.0790999999998356e-05, 4.077799999999826e-05, 4.076400000000563e-05, 4.077799999999826e-05, 4.079199999999783e-05, 4.080600000000434e-05, 4.0818999999997496e-05, 4.073599999999955e-05, 4.0790999999998356e-05, 4.0790999999998356e-05, 4.0805000000004865e-05, 4.080600000000434e-05, 4.083399999999654e-05, 4.0804999999997926e-05, 4.0804999999997926e-05, 4.081999999999697e-05, 4.08059999999974e-05, 4.08059999999974e-05, 4.077799999999826e-05, 4.0804999999997926e-05, 4.0847000000003575e-05, 4.08059999999974e-05, 4.0791000000005295e-05, 4.072199999999998e-05, 4.079199999999783e-05, 4.0776999999998786e-05, 4.0805000000004865e-05, 4.077799999999826e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.286" endtime="20201115 22:01:10.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.281" endtime="20201115 22:01:10.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.291" endtime="20201115 22:01:10.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.295" endtime="20201115 22:01:10.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.293" endtime="20201115 22:01:10.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.289" endtime="20201115 22:01:10.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.893" endtime="20201115 22:01:10.315"></status>
</kw>
<msg timestamp="20201115 22:01:10.316" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.324" endtime="20201115 22:01:10.370"></status>
</kw>
<msg timestamp="20201115 22:01:10.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.323" endtime="20201115 22:01:10.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.372" endtime="20201115 22:01:10.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.374" endtime="20201115 22:01:10.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.320" endtime="20201115 22:01:10.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.318" endtime="20201115 22:01:10.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.383" endtime="20201115 22:01:10.670"></status>
</kw>
<msg timestamp="20201115 22:01:10.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.382" endtime="20201115 22:01:10.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.674" endtime="20201115 22:01:10.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.683" endtime="20201115 22:01:10.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.379" endtime="20201115 22:01:10.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.378" endtime="20201115 22:01:10.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.689" level="INFO">${RESULT} = [{'time': 0.022373056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0916999999997955e-05, 'source_diff': 4.0916999999997955e-05}, {'time': 0.023121181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.686" endtime="20201115 22:01:10.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.704" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.690" endtime="20201115 22:01:10.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.709" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.708" endtime="20201115 22:01:10.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.712" level="INFO">VALUE: [4.0916999999997955e-05, 4.077800000000173e-05, 4.07920000000013e-05, 4.077800000000173e-05, 4.07920000000013e-05, 4.07920000000013e-05, 4.076399999999869e-05, 4.083400000000001e-05, 4.076399999999869e-05, 4.073600000000302e-05, 4.07920000000013e-05, 4.0776999999998786e-05, 4.083399999999654e-05, 4.07780000000052e-05, 4.073599999999955e-05, 4.080600000000434e-05, 4.0804999999997926e-05, 4.076400000000563e-05, 4.0832999999997066e-05, 4.079200000000477e-05, 4.0818999999997496e-05, 4.079200000000477e-05, 4.079199999999783e-05, 4.079200000000477e-05, 4.0861000000003145e-05, 4.0833000000004005e-05, 4.076399999999869e-05, 4.079199999999783e-05, 4.074999999999912e-05, 4.08059999999974e-05, 4.0804999999997926e-05, 4.079199999999783e-05, 4.0708999999999884e-05, 4.0790999999998356e-05, 4.0790999999998356e-05, 4.0790999999998356e-05, 4.0804999999997926e-05, 4.0804999999997926e-05, 4.074999999999912e-05, 4.072199999999998e-05, 4.079199999999783e-05, 4.07780000000052e-05, 4.075000000000606e-05, 4.074999999999912e-05, 4.074999999999912e-05, 4.0819000000004435e-05, 4.072199999999998e-05, 4.076400000000563e-05, 4.0722999999999454e-05, 4.07780000000052e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.710" endtime="20201115 22:01:10.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.705" endtime="20201115 22:01:10.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.715" endtime="20201115 22:01:10.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.718" endtime="20201115 22:01:10.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.717" endtime="20201115 22:01:10.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.713" endtime="20201115 22:01:10.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.316" endtime="20201115 22:01:10.739"></status>
</kw>
<msg timestamp="20201115 22:01:10.739" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.748" endtime="20201115 22:01:10.794"></status>
</kw>
<msg timestamp="20201115 22:01:10.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.747" endtime="20201115 22:01:10.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.796" endtime="20201115 22:01:10.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.798" endtime="20201115 22:01:10.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.744" endtime="20201115 22:01:10.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.742" endtime="20201115 22:01:10.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.807" endtime="20201115 22:01:11.094"></status>
</kw>
<msg timestamp="20201115 22:01:11.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.806" endtime="20201115 22:01:11.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.098" endtime="20201115 22:01:11.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.106" endtime="20201115 22:01:11.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.803" endtime="20201115 22:01:11.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.802" endtime="20201115 22:01:11.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.113" level="INFO">${RESULT} = [{'time': 0.022347694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0860999999999675e-05, 'source_diff': 4.0860999999999675e-05}, {'time': 0.023099306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.110" endtime="20201115 22:01:11.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.127" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.115" endtime="20201115 22:01:11.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.131" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.130" endtime="20201115 22:01:11.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.134" level="INFO">VALUE: [4.0860999999999675e-05, 4.077800000000173e-05, 4.076400000000216e-05, 4.076399999999869e-05, 4.077799999999826e-05, 4.0790999999998356e-05, 4.082000000000044e-05, 4.0791000000001826e-05, 4.076400000000216e-05, 4.080600000000087e-05, 4.0790999999998356e-05, 4.077800000000173e-05, 4.076399999999869e-05, 4.0804999999997926e-05, 4.079199999999783e-05, 4.0818999999997496e-05, 4.074999999999912e-05, 4.077799999999826e-05, 4.077799999999826e-05, 4.0804999999997926e-05, 4.0791000000005295e-05, 4.0805000000004865e-05, 4.0804999999997926e-05, 4.079200000000477e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.079199999999783e-05, 4.079199999999783e-05, 4.079200000000477e-05, 4.080600000000434e-05, 4.079199999999783e-05, 4.0776999999998786e-05, 4.0777000000005725e-05, 4.0847000000003575e-05, 4.0805000000004865e-05, 4.079199999999783e-05, 4.070800000000041e-05, 4.077799999999826e-05, 4.079200000000477e-05, 4.07780000000052e-05, 4.077799999999826e-05, 4.077799999999826e-05, 4.0762999999999217e-05, 4.077799999999826e-05, 4.08059999999974e-05, 4.0790999999998356e-05, 4.077799999999826e-05, 4.086200000000262e-05, 4.07780000000052e-05, 4.07780000000052e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.133" endtime="20201115 22:01:11.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.128" endtime="20201115 22:01:11.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.137" endtime="20201115 22:01:11.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.141" endtime="20201115 22:01:11.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.139" endtime="20201115 22:01:11.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.135" endtime="20201115 22:01:11.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.740" endtime="20201115 22:01:11.162"></status>
</kw>
<msg timestamp="20201115 22:01:11.162" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.171" endtime="20201115 22:01:11.217"></status>
</kw>
<msg timestamp="20201115 22:01:11.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.170" endtime="20201115 22:01:11.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.219" endtime="20201115 22:01:11.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.221" endtime="20201115 22:01:11.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.167" endtime="20201115 22:01:11.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.165" endtime="20201115 22:01:11.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.230" endtime="20201115 22:01:11.516"></status>
</kw>
<msg timestamp="20201115 22:01:11.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.229" endtime="20201115 22:01:11.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.520" endtime="20201115 22:01:11.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.529" endtime="20201115 22:01:11.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.226" endtime="20201115 22:01:11.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.224" endtime="20201115 22:01:11.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.536" level="INFO">${RESULT} = [{'time': 0.023246139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0847000000000105e-05, 'source_diff': 4.0847000000000105e-05}, {'time': 0.023999083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.532" endtime="20201115 22:01:11.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.550" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.537" endtime="20201115 22:01:11.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.555" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.554" endtime="20201115 22:01:11.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.557" level="INFO">VALUE: [4.0847000000000105e-05, 4.0805000000001396e-05, 4.08059999999974e-05, 4.0832999999997066e-05, 4.0819000000000966e-05, 4.0860999999999675e-05, 4.07920000000013e-05, 4.080600000000087e-05, 4.077799999999826e-05, 4.076399999999869e-05, 4.07920000000013e-05, 4.0860999999996206e-05, 4.079199999999783e-05, 4.081999999999697e-05, 4.0875000000002715e-05, 4.0790999999998356e-05, 4.0861000000003145e-05, 4.077799999999826e-05, 4.079199999999783e-05, 4.07780000000052e-05, 4.079200000000477e-05, 4.07780000000052e-05, 4.079200000000477e-05, 4.076400000000563e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.07780000000052e-05, 4.0861000000003145e-05, 4.077799999999826e-05, 4.076399999999869e-05, 4.0846999999996636e-05, 4.076400000000563e-05, 4.079199999999783e-05, 4.079200000000477e-05, 4.079199999999783e-05, 4.080600000000434e-05, 4.0790999999998356e-05, 4.080600000000434e-05, 4.076399999999869e-05, 4.080600000000434e-05, 4.079199999999783e-05, 4.077799999999826e-05, 4.080600000000434e-05, 4.0790999999998356e-05, 4.073599999999955e-05, 4.07780000000052e-05, 4.079199999999783e-05, 4.077799999999826e-05, 4.081999999999697e-05, 4.076399999999869e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.556" endtime="20201115 22:01:11.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.551" endtime="20201115 22:01:11.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.560" endtime="20201115 22:01:11.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.564" endtime="20201115 22:01:11.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.562" endtime="20201115 22:01:11.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.559" endtime="20201115 22:01:11.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.162" endtime="20201115 22:01:11.585"></status>
</kw>
<msg timestamp="20201115 22:01:11.585" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.594" endtime="20201115 22:01:11.640"></status>
</kw>
<msg timestamp="20201115 22:01:11.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.592" endtime="20201115 22:01:11.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.641" endtime="20201115 22:01:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.643" endtime="20201115 22:01:11.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.590" endtime="20201115 22:01:11.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.587" endtime="20201115 22:01:11.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.653" endtime="20201115 22:01:11.939"></status>
</kw>
<msg timestamp="20201115 22:01:11.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.651" endtime="20201115 22:01:11.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.944" endtime="20201115 22:01:11.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.952" endtime="20201115 22:01:11.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.649" endtime="20201115 22:01:11.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.647" endtime="20201115 22:01:11.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.959" level="INFO">${RESULT} = [{'time': 0.022164986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0847000000000105e-05, 'source_diff': 4.0847000000000105e-05}, {'time': 0.022911583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.955" endtime="20201115 22:01:11.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.972" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.960" endtime="20201115 22:01:11.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.976" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.975" endtime="20201115 22:01:11.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.979" level="INFO">VALUE: [4.0847000000000105e-05, 4.076399999999869e-05, 4.076400000000216e-05, 4.077799999999826e-05, 4.0777000000002256e-05, 4.076399999999869e-05, 4.076399999999869e-05, 4.070800000000041e-05, 4.077800000000173e-05, 4.0819000000000966e-05, 4.076399999999869e-05, 4.077799999999826e-05, 4.077800000000173e-05, 4.079199999999783e-05, 4.079199999999783e-05, 4.079199999999783e-05, 4.079199999999783e-05, 4.079200000000477e-05, 4.077799999999826e-05, 4.079200000000477e-05, 4.077799999999826e-05, 4.07780000000052e-05, 4.0805000000004865e-05, 4.076399999999869e-05, 4.077799999999826e-05, 4.079200000000477e-05, 4.077799999999826e-05, 4.0819000000004435e-05, 4.0790999999998356e-05, 4.076399999999869e-05, 4.073599999999955e-05, 4.077799999999826e-05, 4.076399999999869e-05, 4.079200000000477e-05, 4.079199999999783e-05, 4.0790999999998356e-05, 4.077799999999826e-05, 4.0804999999997926e-05, 4.07780000000052e-05, 4.079200000000477e-05, 4.0860999999996206e-05, 4.0819000000004435e-05, 4.0847000000003575e-05, 4.0776999999998786e-05, 4.0776999999998786e-05, 4.08059999999974e-05, 4.079199999999783e-05, 4.0790999999998356e-05, 4.080600000000434e-05, 4.0790999999998356e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.978" endtime="20201115 22:01:11.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.973" endtime="20201115 22:01:11.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.982" endtime="20201115 22:01:11.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.985" endtime="20201115 22:01:12.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.984" endtime="20201115 22:01:12.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.980" endtime="20201115 22:01:12.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.585" endtime="20201115 22:01:12.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.892" endtime="20201115 22:01:12.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.891" endtime="20201115 22:01:12.007"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.009" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.018" endtime="20201115 22:01:12.067"></status>
</kw>
<msg timestamp="20201115 22:01:12.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.016" endtime="20201115 22:01:12.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.068" endtime="20201115 22:01:12.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.071" endtime="20201115 22:01:12.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.014" endtime="20201115 22:01:12.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.011" endtime="20201115 22:01:12.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.080" endtime="20201115 22:01:12.366"></status>
</kw>
<msg timestamp="20201115 22:01:12.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024925972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.079" endtime="20201115 22:01:12.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024925972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.371" endtime="20201115 22:01:12.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.379" endtime="20201115 22:01:12.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.076" endtime="20201115 22:01:12.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.074" endtime="20201115 22:01:12.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.386" level="INFO">${RESULT} = [{'time': 0.024925972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.145800000000116e-05, 'source_diff': 4.145800000000116e-05}, {'time': 0.025724167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:12.382" endtime="20201115 22:01:12.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.399" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.387" endtime="20201115 22:01:12.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.403" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.402" endtime="20201115 22:01:12.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.406" level="INFO">VALUE: [4.145800000000116e-05, 4.131999999999747e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.127799999999876e-05, 4.1361000000000175e-05, 4.1361000000003645e-05, 4.143000000000202e-05, 4.1333000000004505e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4.1360999999996706e-05, 4.1346999999997136e-05, 4.136200000000312e-05, 4.134800000000355e-05, 4.1360999999996706e-05, 4.1332999999997566e-05, 4.1347000000004075e-05, 4.1332999999997566e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1304999999998426e-05, 4.1361000000003645e-05, 4.1276999999999286e-05, 4.1346999999997136e-05, 4.134800000000355e-05, 4.134799999999661e-05, 4.1361000000003645e-05, 4.1347000000004075e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.133399999999704e-05, 4.134800000000355e-05, 4.132000000000441e-05, 4.1431000000001494e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.1333000000004505e-05, 4.1332999999997566e-05, 4.1360999999996706e-05, 4.1360999999996706e-05, 4.1361000000003645e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.1374999999996276e-05, 4.134799999999661e-05, 4.1346999999997136e-05, 4.1346999999997136e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.404" endtime="20201115 22:01:12.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.400" endtime="20201115 22:01:12.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.409" endtime="20201115 22:01:12.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.412" endtime="20201115 22:01:12.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.411" endtime="20201115 22:01:12.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.407" endtime="20201115 22:01:12.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.010" endtime="20201115 22:01:12.433"></status>
</kw>
<msg timestamp="20201115 22:01:12.433" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.442" endtime="20201115 22:01:12.491"></status>
</kw>
<msg timestamp="20201115 22:01:12.491" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.441" endtime="20201115 22:01:12.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.494" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.492" endtime="20201115 22:01:12.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.495" endtime="20201115 22:01:12.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.438" endtime="20201115 22:01:12.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.436" endtime="20201115 22:01:12.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.504" endtime="20201115 22:01:12.791"></status>
</kw>
<msg timestamp="20201115 22:01:12.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.503" endtime="20201115 22:01:12.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022269889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.795" endtime="20201115 22:01:12.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.803" endtime="20201115 22:01:12.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.500" endtime="20201115 22:01:12.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.499" endtime="20201115 22:01:12.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.810" level="INFO">${RESULT} = [{'time': 0.022269889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1403000000002355e-05, 'source_diff': 4.1403000000002355e-05}, {'time': 0.023070792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:12.806" endtime="20201115 22:01:12.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.823" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.811" endtime="20201115 22:01:12.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.828" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.827" endtime="20201115 22:01:12.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.830" level="INFO">VALUE: [4.1403000000002355e-05, 4.134800000000008e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1277000000002756e-05, 4.1431000000001494e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.134800000000355e-05, 4.1375000000003215e-05, 4.1346999999997136e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4.1360999999996706e-05, 4.12780000000057e-05, 4.1304999999998426e-05, 4.1361000000003645e-05, 4.1332999999997566e-05, 4.133399999999704e-05, 4.1332999999997566e-05, 4.1361000000003645e-05, 4.133399999999704e-05, 4.1360999999996706e-05, 4.1360999999996706e-05, 4.1375000000003215e-05, 4.134800000000355e-05, 4.131999999999747e-05, 4.1346999999997136e-05, 4.1346999999997136e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.1361000000003645e-05, 4.1375000000003215e-05, 4.1276999999999286e-05, 4.1360999999996706e-05, 4.1319000000004935e-05, 4.134800000000355e-05, 4.1360999999996706e-05, 4.1360999999996706e-05, 4.131999999999747e-05, 4.1332999999997566e-05, 4.1332999999997566e-05, 4.136200000000312e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.829" endtime="20201115 22:01:12.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.824" endtime="20201115 22:01:12.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.833" endtime="20201115 22:01:12.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.837" endtime="20201115 22:01:12.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.835" endtime="20201115 22:01:12.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.832" endtime="20201115 22:01:12.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.434" endtime="20201115 22:01:12.858"></status>
</kw>
<msg timestamp="20201115 22:01:12.858" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.867" endtime="20201115 22:01:12.916"></status>
</kw>
<msg timestamp="20201115 22:01:12.916" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.866" endtime="20201115 22:01:12.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.919" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.918" endtime="20201115 22:01:12.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.920" endtime="20201115 22:01:12.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.862" endtime="20201115 22:01:12.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.860" endtime="20201115 22:01:12.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.929" endtime="20201115 22:01:13.215"></status>
</kw>
<msg timestamp="20201115 22:01:13.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.928" endtime="20201115 22:01:13.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.219" endtime="20201115 22:01:13.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.227" endtime="20201115 22:01:13.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.925" endtime="20201115 22:01:13.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.923" endtime="20201115 22:01:13.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.234" level="INFO">${RESULT} = [{'time': 0.022949694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.141599999999898e-05, 'source_diff': 4.141599999999898e-05}, {'time': 0.023752306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:13.231" endtime="20201115 22:01:13.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.249" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.235" endtime="20201115 22:01:13.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.253" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.252" endtime="20201115 22:01:13.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.256" level="INFO">VALUE: [4.141599999999898e-05, 4.136199999999965e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.133400000000051e-05, 4.136199999999965e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.140199999999941e-05, 4.1347000000004075e-05, 4.138799999999637e-05, 4.1389000000002785e-05, 4.1360999999996706e-05, 4.1319000000004935e-05, 4.1347000000004075e-05, 4.133399999999704e-05, 4.134799999999661e-05, 4.1361000000003645e-05, 4.1347000000004075e-05, 4.1304999999998426e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1361000000003645e-05, 4.1374999999996276e-05, 4.134799999999661e-05, 4.1347000000004075e-05, 4.129199999999833e-05, 4.1417000000001924e-05, 4.133400000000398e-05, 4.13059999999979e-05, 4.1374999999996276e-05, 4.131999999999747e-05, 4.140199999999594e-05, 4.134800000000355e-05, 4.1360999999996706e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1374999999996276e-05, 4.1347000000004075e-05, 4.1375000000003215e-05, 4.1375000000003215e-05, 4.1360999999996706e-05, 4.129199999999833e-05, 4.133399999999704e-05, 4.1347000000004075e-05, 4.1346999999997136e-05, 4.134800000000355e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.254" endtime="20201115 22:01:13.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.250" endtime="20201115 22:01:13.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.259" endtime="20201115 22:01:13.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.262" endtime="20201115 22:01:13.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.261" endtime="20201115 22:01:13.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.257" endtime="20201115 22:01:13.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.858" endtime="20201115 22:01:13.283"></status>
</kw>
<msg timestamp="20201115 22:01:13.284" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.293" endtime="20201115 22:01:13.341"></status>
</kw>
<msg timestamp="20201115 22:01:13.342" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.291" endtime="20201115 22:01:13.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.343" endtime="20201115 22:01:13.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.345" endtime="20201115 22:01:13.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.289" endtime="20201115 22:01:13.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.286" endtime="20201115 22:01:13.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.354" endtime="20201115 22:01:13.640"></status>
</kw>
<msg timestamp="20201115 22:01:13.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.353" endtime="20201115 22:01:13.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.645" endtime="20201115 22:01:13.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.653" endtime="20201115 22:01:13.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.350" endtime="20201115 22:01:13.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.349" endtime="20201115 22:01:13.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.659" level="INFO">${RESULT} = [{'time': 0.022796097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.143000000000202e-05, 'source_diff': 4.143000000000202e-05}, {'time': 0.02361275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:13.656" endtime="20201115 22:01:13.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.673" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.660" endtime="20201115 22:01:13.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.677" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.676" endtime="20201115 22:01:13.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.680" level="INFO">VALUE: [4.143000000000202e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1360999999996706e-05, 4.1361000000000175e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1416999999998455e-05, 4.1361000000003645e-05, 4.1375000000003215e-05, 4.127799999999876e-05, 4.1360999999996706e-05, 4.1389000000002785e-05, 4.1403000000002355e-05, 4.1374999999996276e-05, 4.136199999999618e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.1403000000002355e-05, 4.1360999999996706e-05, 4.1332999999997566e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.143000000000202e-05, 4.1333000000004505e-05, 4.1361000000003645e-05, 4.1347000000004075e-05, 4.1290999999998856e-05, 4.1389000000002785e-05, 4.1332999999997566e-05, 4.134799999999661e-05, 4.144400000000159e-05, 4.1361000000003645e-05, 4.134799999999661e-05, 4.1333000000004505e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.1360999999996706e-05, 4.1360999999996706e-05, 4.1346999999997136e-05, 4.1346999999997136e-05, 4.1346999999997136e-05, 4.1361000000003645e-05, 4.1361000000003645e-05, 4.130600000000484e-05, 4.1318999999997996e-05, 4.140200000000288e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.678" endtime="20201115 22:01:13.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.674" endtime="20201115 22:01:13.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.688" endtime="20201115 22:01:13.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.691" endtime="20201115 22:01:13.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.690" endtime="20201115 22:01:13.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.686" endtime="20201115 22:01:13.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.284" endtime="20201115 22:01:13.712"></status>
</kw>
<msg timestamp="20201115 22:01:13.712" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.721" endtime="20201115 22:01:13.770"></status>
</kw>
<msg timestamp="20201115 22:01:13.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.720" endtime="20201115 22:01:13.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.772" endtime="20201115 22:01:13.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.774" endtime="20201115 22:01:13.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.717" endtime="20201115 22:01:13.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.715" endtime="20201115 22:01:13.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.783" endtime="20201115 22:01:14.069"></status>
</kw>
<msg timestamp="20201115 22:01:14.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.781" endtime="20201115 22:01:14.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.073" endtime="20201115 22:01:14.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.081" endtime="20201115 22:01:14.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.779" endtime="20201115 22:01:14.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.777" endtime="20201115 22:01:14.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.088" level="INFO">${RESULT} = [{'time': 0.022405958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1388999999999315e-05, 'source_diff': 4.1388999999999315e-05}, {'time': 0.023215208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:14.084" endtime="20201115 22:01:14.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.101" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.089" endtime="20201115 22:01:14.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.106" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.105" endtime="20201115 22:01:14.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.108" level="INFO">VALUE: [4.1388999999999315e-05, 4.141600000000245e-05, 4.1346999999997136e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1360999999996706e-05, 4.129199999999833e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.136200000000312e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.1346999999997136e-05, 4.1333000000004505e-05, 4.134799999999661e-05, 4.130600000000484e-05, 4.1346999999997136e-05, 4.1347000000004075e-05, 4.1346999999997136e-05, 4.1360999999996706e-05, 4.1347000000004075e-05, 4.1361000000003645e-05, 4.1347000000004075e-05, 4.1332999999997566e-05, 4.1290999999998856e-05, 4.1332999999997566e-05, 4.134800000000355e-05, 4.1360999999996706e-05, 4.1361000000003645e-05, 4.1361000000003645e-05, 4.1431000000001494e-05, 4.1360999999996706e-05, 4.1402999999995416e-05, 4.1346999999997136e-05, 4.1417000000001924e-05, 4.1361000000003645e-05, 4.134800000000355e-05, 4.1360999999996706e-05, 4.1361000000003645e-05, 4.134800000000355e-05, 4.1388999999995846e-05, 4.1360999999996706e-05, 4.136200000000312e-05, 4.1291000000005795e-05, 4.1361000000003645e-05, 4.1332999999997566e-05, 4.1360999999996706e-05, 4.133400000000398e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.107" endtime="20201115 22:01:14.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.102" endtime="20201115 22:01:14.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.112" endtime="20201115 22:01:14.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.115" endtime="20201115 22:01:14.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.114" endtime="20201115 22:01:14.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.110" endtime="20201115 22:01:14.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.713" endtime="20201115 22:01:14.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.008" endtime="20201115 22:01:14.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.007" endtime="20201115 22:01:14.136"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.139" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.147" endtime="20201115 22:01:14.199"></status>
</kw>
<msg timestamp="20201115 22:01:14.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.146" endtime="20201115 22:01:14.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.201" endtime="20201115 22:01:14.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.203" endtime="20201115 22:01:14.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.143" endtime="20201115 22:01:14.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.141" endtime="20201115 22:01:14.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.213" endtime="20201115 22:01:14.500"></status>
</kw>
<msg timestamp="20201115 22:01:14.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02479625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:14.212" endtime="20201115 22:01:14.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024754278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02479625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:14.504" endtime="20201115 22:01:14.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.512" endtime="20201115 22:01:14.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.209" endtime="20201115 22:01:14.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.207" endtime="20201115 22:01:14.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.519" level="INFO">${RESULT} = [{'time': 0.02479625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197199999999776e-05, 'source_diff': 4.197199999999776e-05}, {'time': 0.025654875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:14.516" endtime="20201115 22:01:14.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.532" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.520" endtime="20201115 22:01:14.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.537" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.536" endtime="20201115 22:01:14.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.540" level="INFO">VALUE: [4.197199999999776e-05, 4.1916999999998955e-05, 4.1875000000000245e-05, 4.1902999999999385e-05, 4.191599999999948e-05, 4.1959000000001134e-05, 4.192999999999905e-05, 4.192999999999905e-05, 4.1930999999995056e-05, 4.1916999999995486e-05, 4.191600000000295e-05, 4.190200000000338e-05, 4.19860000000008e-05, 4.190199999999644e-05, 4.200000000000037e-05, 4.193000000000252e-05, 4.191600000000295e-05, 4.191599999999601e-05, 4.1917000000002425e-05, 4.190199999999644e-05, 4.191600000000295e-05, 4.194400000000209e-05, 4.1874999999996776e-05, 4.1889000000003285e-05, 4.1903000000002855e-05, 4.191600000000295e-05, 4.1917000000002425e-05, 4.1903000000002855e-05, 4.1903000000002855e-05, 4.1889000000003285e-05, 4.188799999999687e-05, 4.1917000000002425e-05, 4.1847000000004575e-05, 4.191599999999601e-05, 4.190199999999644e-05, 4.191600000000295e-05, 4.1902999999995916e-05, 4.191599999999601e-05, 4.1888999999996346e-05, 4.1888999999996346e-05, 4.191599999999601e-05, 4.1903000000002855e-05, 4.1889000000003285e-05, 4.1917000000002425e-05, 4.192999999999558e-05, 4.190199999999644e-05, 4.1889000000003285e-05, 4.1902999999995916e-05, 4.191600000000295e-05, 4.1889000000003285e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.538" endtime="20201115 22:01:14.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.533" endtime="20201115 22:01:14.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.543" endtime="20201115 22:01:14.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.546" endtime="20201115 22:01:14.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.545" endtime="20201115 22:01:14.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.541" endtime="20201115 22:01:14.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.139" endtime="20201115 22:01:14.567"></status>
</kw>
<msg timestamp="20201115 22:01:14.567" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.576" endtime="20201115 22:01:14.628"></status>
</kw>
<msg timestamp="20201115 22:01:14.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.575" endtime="20201115 22:01:14.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.629" endtime="20201115 22:01:14.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.632" endtime="20201115 22:01:14.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.572" endtime="20201115 22:01:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.570" endtime="20201115 22:01:14.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.641" endtime="20201115 22:01:14.927"></status>
</kw>
<msg timestamp="20201115 22:01:14.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.640" endtime="20201115 22:01:14.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.931" endtime="20201115 22:01:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.939" endtime="20201115 22:01:14.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.637" endtime="20201115 22:01:14.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.635" endtime="20201115 22:01:14.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.946" level="INFO">${RESULT} = [{'time': 0.022523111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197199999999776e-05, 'source_diff': 4.197199999999776e-05}, {'time': 0.023379486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.942" endtime="20201115 22:01:14.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.960" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.946" endtime="20201115 22:01:14.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.965" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.964" endtime="20201115 22:01:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.968" level="INFO">VALUE: [4.197199999999776e-05, 4.1903000000002855e-05, 4.1930999999998525e-05, 4.195800000000166e-05, 4.191599999999948e-05, 4.1916999999998955e-05, 4.190199999999991e-05, 4.1889000000003285e-05, 4.1889000000003285e-05, 4.1916999999998955e-05, 4.1916999999998955e-05, 4.1846999999997636e-05, 4.1903000000002855e-05, 4.190199999999644e-05, 4.1875000000003715e-05, 4.190199999999644e-05, 4.1916999999995486e-05, 4.1917000000002425e-05, 4.192999999999558e-05, 4.1917000000002425e-05, 4.1916999999995486e-05, 4.190200000000338e-05, 4.1917000000002425e-05, 4.191600000000295e-05, 4.1917000000002425e-05, 4.1902999999995916e-05, 4.191600000000295e-05, 4.192999999999558e-05, 4.1917000000002425e-05, 4.191600000000295e-05, 4.1902999999995916e-05, 4.1902999999995916e-05, 4.193000000000252e-05, 4.190200000000338e-05, 4.190200000000338e-05, 4.1917000000002425e-05, 4.1916999999995486e-05, 4.1903000000002855e-05, 4.190200000000338e-05, 4.188799999999687e-05, 4.195800000000166e-05, 4.1930999999995056e-05, 4.1959000000001134e-05, 4.1902999999995916e-05, 4.1902999999995916e-05, 4.1917000000002425e-05, 4.1888999999996346e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.191699999998855e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.966" endtime="20201115 22:01:14.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.961" endtime="20201115 22:01:14.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.971" endtime="20201115 22:01:14.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.974" endtime="20201115 22:01:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.973" endtime="20201115 22:01:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.969" endtime="20201115 22:01:14.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.568" endtime="20201115 22:01:14.995"></status>
</kw>
<msg timestamp="20201115 22:01:14.995" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.004" endtime="20201115 22:01:15.056"></status>
</kw>
<msg timestamp="20201115 22:01:15.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.003" endtime="20201115 22:01:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.057" endtime="20201115 22:01:15.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.060" endtime="20201115 22:01:15.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.000" endtime="20201115 22:01:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.998" endtime="20201115 22:01:15.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.069" endtime="20201115 22:01:15.355"></status>
</kw>
<msg timestamp="20201115 22:01:15.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.067" endtime="20201115 22:01:15.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.359" endtime="20201115 22:01:15.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.367" endtime="20201115 22:01:15.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.065" endtime="20201115 22:01:15.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.063" endtime="20201115 22:01:15.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.375" level="INFO">${RESULT} = [{'time': 0.022383722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.19860000000008e-05, 'source_diff': 4.19860000000008e-05}, {'time': 0.023250375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:15.371" endtime="20201115 22:01:15.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.388" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.376" endtime="20201115 22:01:15.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.393" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.392" endtime="20201115 22:01:15.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.395" level="INFO">VALUE: [4.19860000000008e-05, 4.1888999999999815e-05, 4.1888999999999815e-05, 4.193000000000252e-05, 4.191599999999948e-05, 4.1902999999999385e-05, 4.1888999999999815e-05, 4.195800000000166e-05, 4.195800000000166e-05, 4.194399999999862e-05, 4.1973000000000704e-05, 4.1903000000002855e-05, 4.1903000000002855e-05, 4.19860000000008e-05, 4.1902999999995916e-05, 4.1930999999995056e-05, 4.191599999999601e-05, 4.1903000000002855e-05, 4.190200000000338e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.191599999999601e-05, 4.1917000000002425e-05, 4.1916999999995486e-05, 4.1902999999995916e-05, 4.1889000000003285e-05, 4.1931000000001994e-05, 4.1931000000001994e-05, 4.1903000000002855e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.1958999999994195e-05, 4.191599999999601e-05, 4.1916999999995486e-05, 4.1860999999997206e-05, 4.194400000000209e-05, 4.1903000000002855e-05, 4.1902999999995916e-05, 4.1917000000002425e-05, 4.1903000000002855e-05, 4.1903000000002855e-05, 4.1930999999995056e-05, 4.1917000000002425e-05, 4.1917000000002425e-05, 4.1875000000003715e-05, 4.1916999999995486e-05, 4.1888999999996346e-05, 4.188899999998941e-05, 4.191699999998855e-05, 4.1903000000009794e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.394" endtime="20201115 22:01:15.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.389" endtime="20201115 22:01:15.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.398" endtime="20201115 22:01:15.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.402" endtime="20201115 22:01:15.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.400" endtime="20201115 22:01:15.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.396" endtime="20201115 22:01:15.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.996" endtime="20201115 22:01:15.422"></status>
</kw>
<msg timestamp="20201115 22:01:15.423" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.431" endtime="20201115 22:01:15.483"></status>
</kw>
<msg timestamp="20201115 22:01:15.483" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.430" endtime="20201115 22:01:15.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.484" endtime="20201115 22:01:15.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.487" endtime="20201115 22:01:15.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.427" endtime="20201115 22:01:15.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.425" endtime="20201115 22:01:15.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.496" endtime="20201115 22:01:15.782"></status>
</kw>
<msg timestamp="20201115 22:01:15.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:15.494" endtime="20201115 22:01:15.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:15.786" endtime="20201115 22:01:15.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.795" endtime="20201115 22:01:15.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.492" endtime="20201115 22:01:15.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.490" endtime="20201115 22:01:15.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.802" level="INFO">${RESULT} = [{'time': 0.02236175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197200000000123e-05, 'source_diff': 4.197200000000123e-05}, {'time': 0.023216986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:15.798" endtime="20201115 22:01:15.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.815" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.803" endtime="20201115 22:01:15.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.819" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.818" endtime="20201115 22:01:15.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.822" level="INFO">VALUE: [4.197200000000123e-05, 4.1916999999998955e-05, 4.191599999999948e-05, 4.194400000000209e-05, 4.198599999999733e-05, 4.1917000000002425e-05, 4.191599999999948e-05, 4.1902999999999385e-05, 4.191599999999948e-05, 4.1903000000002855e-05, 4.1888999999999815e-05, 4.1931000000001994e-05, 4.1917000000002425e-05, 4.190199999999644e-05, 4.192999999999558e-05, 4.1931000000001994e-05, 4.1917000000002425e-05, 4.1931000000001994e-05, 4.191600000000295e-05, 4.1903000000002855e-05, 4.192999999999558e-05, 4.1917000000002425e-05, 4.193000000000252e-05, 4.1917000000002425e-05, 4.1902999999995916e-05, 4.191600000000295e-05, 4.191600000000295e-05, 4.1889000000003285e-05, 4.1903000000002855e-05, 4.195799999999472e-05, 4.1916999999995486e-05, 4.191600000000295e-05, 4.192999999999558e-05, 4.1861000000004145e-05, 4.1874999999996776e-05, 4.1916999999995486e-05, 4.195800000000166e-05, 4.1931000000001994e-05, 4.190199999999644e-05, 4.193000000000252e-05, 4.1903000000002855e-05, 4.1917000000002425e-05, 4.1902999999995916e-05, 4.1930999999995056e-05, 4.19860000000008e-05, 4.1945000000001564e-05, 4.1945000000001564e-05, 4.191600000000295e-05, 4.1930999999995056e-05, 4.188800000000381e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.820" endtime="20201115 22:01:15.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.816" endtime="20201115 22:01:15.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.825" endtime="20201115 22:01:15.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.828" endtime="20201115 22:01:15.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.827" endtime="20201115 22:01:15.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.823" endtime="20201115 22:01:15.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.423" endtime="20201115 22:01:15.849"></status>
</kw>
<msg timestamp="20201115 22:01:15.849" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.858" endtime="20201115 22:01:15.910"></status>
</kw>
<msg timestamp="20201115 22:01:15.910" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.857" endtime="20201115 22:01:15.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.911" endtime="20201115 22:01:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.914" endtime="20201115 22:01:15.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.854" endtime="20201115 22:01:15.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.852" endtime="20201115 22:01:15.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.923" endtime="20201115 22:01:16.208"></status>
</kw>
<msg timestamp="20201115 22:01:16.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.921" endtime="20201115 22:01:16.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.213" endtime="20201115 22:01:16.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.221" endtime="20201115 22:01:16.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.919" endtime="20201115 22:01:16.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.917" endtime="20201115 22:01:16.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.228" level="INFO">${RESULT} = [{'time': 0.022404403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197200000000123e-05, 'source_diff': 4.197200000000123e-05}, {'time': 0.023274292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.225" endtime="20201115 22:01:16.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.242" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.229" endtime="20201115 22:01:16.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.246" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.245" endtime="20201115 22:01:16.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.249" level="INFO">VALUE: [4.197200000000123e-05, 4.1902999999999385e-05, 4.191600000000295e-05, 4.194400000000209e-05, 4.1931000000001994e-05, 4.1846999999997636e-05, 4.191600000000295e-05, 4.190199999999991e-05, 4.191599999999948e-05, 4.1916999999998955e-05, 4.1916999999998955e-05, 4.1902999999995916e-05, 4.190200000000338e-05, 4.1903000000002855e-05, 4.1944999999994625e-05, 4.1917000000002425e-05, 4.191600000000295e-05, 4.200000000000037e-05, 4.1931000000001994e-05, 4.190200000000338e-05, 4.190199999999644e-05, 4.1931000000001994e-05, 4.1916999999995486e-05, 4.188800000000381e-05, 4.1903000000002855e-05, 4.1916999999995486e-05, 4.1916999999995486e-05, 4.1931000000001994e-05, 4.1916999999995486e-05, 4.1916999999995486e-05, 4.1931000000001994e-05, 4.1902999999995916e-05, 4.1903000000002855e-05, 4.1902999999995916e-05, 4.1903000000002855e-05, 4.1931000000001994e-05, 4.192999999999558e-05, 4.188800000000381e-05, 4.1931000000001994e-05, 4.193000000000252e-05, 4.1916999999995486e-05, 4.1944999999994625e-05, 4.1875000000003715e-05, 4.1902999999995916e-05, 4.1861000000004145e-05, 4.1916999999995486e-05, 4.190200000000338e-05, 4.1902999999995916e-05, 4.1903000000009794e-05, 4.1846999999997636e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.248" endtime="20201115 22:01:16.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.243" endtime="20201115 22:01:16.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.252" endtime="20201115 22:01:16.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.256" endtime="20201115 22:01:16.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.254" endtime="20201115 22:01:16.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.250" endtime="20201115 22:01:16.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.850" endtime="20201115 22:01:16.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.138" endtime="20201115 22:01:16.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.137" endtime="20201115 22:01:16.277"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.279" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.288" endtime="20201115 22:01:16.342"></status>
</kw>
<msg timestamp="20201115 22:01:16.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.286" endtime="20201115 22:01:16.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.345" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.344" endtime="20201115 22:01:16.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.346" endtime="20201115 22:01:16.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.284" endtime="20201115 22:01:16.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.282" endtime="20201115 22:01:16.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.356" endtime="20201115 22:01:16.645"></status>
</kw>
<msg timestamp="20201115 22:01:16.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02489925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:16.354" endtime="20201115 22:01:16.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02489925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:16.649" endtime="20201115 22:01:16.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.657" endtime="20201115 22:01:16.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.352" endtime="20201115 22:01:16.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.350" endtime="20201115 22:01:16.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.664" level="INFO">${RESULT} = [{'time': 0.024941778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.252800000000001e-05, 'source_diff': 4.252800000000001e-05}, {'time': 0.025865444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:16.660" endtime="20201115 22:01:16.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.678" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.665" endtime="20201115 22:01:16.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.683" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.682" endtime="20201115 22:01:16.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.685" level="INFO">VALUE: [4.252800000000001e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.245799999999869e-05, 4.2445000000002064e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.245800000000216e-05, 4.244400000000259e-05, 4.2473000000001204e-05, 4.2458999999994695e-05, 4.24860000000013e-05, 4.245800000000216e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.244399999999565e-05, 4.245799999999522e-05, 4.2445000000002064e-05, 4.244399999999565e-05, 4.2487000000000774e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.2445000000002064e-05, 4.24860000000013e-05, 4.2458999999994695e-05, 4.247199999999479e-05, 4.247200000000173e-05, 4.248599999999436e-05, 4.2458999999994695e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.248599999999436e-05, 4.2458999999994695e-05, 4.2403000000003355e-05, 4.2445000000002064e-05, 4.245799999999522e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.241600000000345e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.251400000000738e-05, 4.245799999999522e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.684" endtime="20201115 22:01:16.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.679" endtime="20201115 22:01:16.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.688" endtime="20201115 22:01:16.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.692" endtime="20201115 22:01:16.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.690" endtime="20201115 22:01:16.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.687" endtime="20201115 22:01:16.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.280" endtime="20201115 22:01:16.713"></status>
</kw>
<msg timestamp="20201115 22:01:16.713" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.722" endtime="20201115 22:01:16.776"></status>
</kw>
<msg timestamp="20201115 22:01:16.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.720" endtime="20201115 22:01:16.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.778" endtime="20201115 22:01:16.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.781" endtime="20201115 22:01:16.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.718" endtime="20201115 22:01:16.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.715" endtime="20201115 22:01:16.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.790" endtime="20201115 22:01:17.077"></status>
</kw>
<msg timestamp="20201115 22:01:17.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.788" endtime="20201115 22:01:17.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.082" endtime="20201115 22:01:17.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.090" endtime="20201115 22:01:17.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.785" endtime="20201115 22:01:17.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.784" endtime="20201115 22:01:17.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.096" level="INFO">${RESULT} = [{'time': 0.022407486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.252800000000001e-05, 'source_diff': 4.252800000000001e-05}, {'time': 0.023325306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:17.093" endtime="20201115 22:01:17.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.110" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.097" endtime="20201115 22:01:17.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.114" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.113" endtime="20201115 22:01:17.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.117" level="INFO">VALUE: [4.252800000000001e-05, 4.2473000000001204e-05, 4.2431000000002494e-05, 4.247199999999826e-05, 4.248599999999783e-05, 4.24860000000013e-05, 4.251400000000044e-05, 4.248599999999783e-05, 4.245799999999869e-05, 4.250000000000087e-05, 4.245800000000216e-05, 4.2402999999996416e-05, 4.24860000000013e-05, 4.244400000000259e-05, 4.247200000000173e-05, 4.245800000000216e-05, 4.244400000000259e-05, 4.247200000000173e-05, 4.247199999999479e-05, 4.247200000000173e-05, 4.244399999999565e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.247199999999479e-05, 4.252800000000001e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.250000000000087e-05, 4.2473000000001204e-05, 4.251400000000044e-05, 4.2459000000001634e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.2459000000001634e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.2416999999995986e-05, 4.247199999999479e-05, 4.2473000000001204e-05, 4.248599999999436e-05, 4.2472999999987326e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.2458999999994695e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.115" endtime="20201115 22:01:17.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.111" endtime="20201115 22:01:17.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.120" endtime="20201115 22:01:17.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.123" endtime="20201115 22:01:17.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.122" endtime="20201115 22:01:17.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.118" endtime="20201115 22:01:17.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.713" endtime="20201115 22:01:17.144"></status>
</kw>
<msg timestamp="20201115 22:01:17.144" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.154" endtime="20201115 22:01:17.208"></status>
</kw>
<msg timestamp="20201115 22:01:17.208" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.152" endtime="20201115 22:01:17.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.209" endtime="20201115 22:01:17.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.212" endtime="20201115 22:01:17.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.149" endtime="20201115 22:01:17.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.147" endtime="20201115 22:01:17.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.221" endtime="20201115 22:01:17.502"></status>
</kw>
<msg timestamp="20201115 22:01:17.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.219" endtime="20201115 22:01:17.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.507" endtime="20201115 22:01:17.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.515" endtime="20201115 22:01:17.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.217" endtime="20201115 22:01:17.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.215" endtime="20201115 22:01:17.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.521" level="INFO">${RESULT} = [{'time': 0.022838417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.252800000000001e-05, 'source_diff': 4.252800000000001e-05}, {'time': 0.023749, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:17.518" endtime="20201115 22:01:17.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.535" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.522" endtime="20201115 22:01:17.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.539" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.538" endtime="20201115 22:01:17.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.542" level="INFO">VALUE: [4.252800000000001e-05, 4.244399999999912e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.2416999999999455e-05, 4.247200000000173e-05, 4.247199999999826e-05, 4.2444999999998595e-05, 4.2444999999998595e-05, 4.250000000000087e-05, 4.250000000000087e-05, 4.248599999999436e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.245799999999522e-05, 4.2459000000001634e-05, 4.250000000000087e-05, 4.2473000000001204e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.247199999999479e-05, 4.247199999999479e-05, 4.2473000000001204e-05, 4.248599999999436e-05, 4.245800000000216e-05, 4.2459000000001634e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.245800000000216e-05, 4.2459000000001634e-05, 4.247199999999479e-05, 4.247199999999479e-05, 4.2458999999994695e-05, 4.251400000000044e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.244400000000259e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.248599999999436e-05, 4.245800000000216e-05, 4.248600000000824e-05, 4.245799999999522e-05, 4.248600000000824e-05, 4.2445000000002064e-05, 4.2473000000001204e-05, 4.247200000000173e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.540" endtime="20201115 22:01:17.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.536" endtime="20201115 22:01:17.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.545" endtime="20201115 22:01:17.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.548" endtime="20201115 22:01:17.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.547" endtime="20201115 22:01:17.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.543" endtime="20201115 22:01:17.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.145" endtime="20201115 22:01:17.569"></status>
</kw>
<msg timestamp="20201115 22:01:17.570" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.579" endtime="20201115 22:01:17.633"></status>
</kw>
<msg timestamp="20201115 22:01:17.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.577" endtime="20201115 22:01:17.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.634" endtime="20201115 22:01:17.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.637" endtime="20201115 22:01:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.574" endtime="20201115 22:01:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.572" endtime="20201115 22:01:17.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.646" endtime="20201115 22:01:17.946"></status>
</kw>
<msg timestamp="20201115 22:01:17.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.644" endtime="20201115 22:01:17.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.955" endtime="20201115 22:01:17.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.973" endtime="20201115 22:01:17.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.642" endtime="20201115 22:01:17.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.640" endtime="20201115 22:01:17.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.988" level="INFO">${RESULT} = [{'time': 0.022551111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2568999999999246e-05, 'source_diff': 4.2568999999999246e-05}, {'time': 0.023475097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.980" endtime="20201115 22:01:17.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.002" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.990" endtime="20201115 22:01:18.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.006" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.005" endtime="20201115 22:01:18.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.009" level="INFO">VALUE: [4.2568999999999246e-05, 4.245799999999869e-05, 4.24860000000013e-05, 4.2458999999998165e-05, 4.247199999999826e-05, 4.245799999999869e-05, 4.2527000000000537e-05, 4.2445000000002064e-05, 4.24860000000013e-05, 4.251400000000044e-05, 4.24860000000013e-05, 4.2458999999994695e-05, 4.248599999999436e-05, 4.2444999999995126e-05, 4.247200000000173e-05, 4.2445000000002064e-05, 4.245800000000216e-05, 4.248599999999436e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.247199999999479e-05, 4.245800000000216e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.248599999999436e-05, 4.247199999999479e-05, 4.254199999999958e-05, 4.24860000000013e-05, 4.2459000000001634e-05, 4.252800000000001e-05, 4.245799999999522e-05, 4.247199999999479e-05, 4.2472999999994265e-05, 4.245800000000216e-05, 4.2473000000001204e-05, 4.2417000000002925e-05, 4.24860000000013e-05, 4.2445000000002064e-05, 4.2459000000001634e-05, 4.245799999999522e-05, 4.245799999999522e-05, 4.250000000000087e-05, 4.245799999999522e-05, 4.2459000000001634e-05, 4.248599999999436e-05, 4.248599999999436e-05, 4.2473000000001204e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.2473000000001204e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.008" endtime="20201115 22:01:18.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.003" endtime="20201115 22:01:18.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.013" endtime="20201115 22:01:18.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.016" endtime="20201115 22:01:18.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.014" endtime="20201115 22:01:18.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.011" endtime="20201115 22:01:18.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.570" endtime="20201115 22:01:18.037"></status>
</kw>
<msg timestamp="20201115 22:01:18.037" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.046" endtime="20201115 22:01:18.100"></status>
</kw>
<msg timestamp="20201115 22:01:18.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.044" endtime="20201115 22:01:18.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.102" endtime="20201115 22:01:18.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.104" endtime="20201115 22:01:18.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.042" endtime="20201115 22:01:18.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.040" endtime="20201115 22:01:18.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.113" endtime="20201115 22:01:18.402"></status>
</kw>
<msg timestamp="20201115 22:01:18.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.112" endtime="20201115 22:01:18.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.406" endtime="20201115 22:01:18.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.414" endtime="20201115 22:01:18.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.109" endtime="20201115 22:01:18.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.107" endtime="20201115 22:01:18.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.421" level="INFO">${RESULT} = [{'time': 0.022391917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2459000000001634e-05, 'source_diff': 4.2459000000001634e-05}, {'time': 0.023310069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:18.417" endtime="20201115 22:01:18.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.435" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.422" endtime="20201115 22:01:18.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.440" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.439" endtime="20201115 22:01:18.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.442" level="INFO">VALUE: [4.2459000000001634e-05, 4.241599999999998e-05, 4.2459000000001634e-05, 4.247200000000173e-05, 4.2430999999999025e-05, 4.2473000000001204e-05, 4.247200000000173e-05, 4.250000000000087e-05, 4.24860000000013e-05, 4.240200000000041e-05, 4.247199999999479e-05, 4.247200000000173e-05, 4.245799999999522e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.24860000000013e-05, 4.252800000000001e-05, 4.2416999999995986e-05, 4.245799999999522e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.248599999999436e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.2473000000001204e-05, 4.247200000000173e-05, 4.2431000000002494e-05, 4.245799999999522e-05, 4.245800000000216e-05, 4.2445000000002064e-05, 4.247200000000173e-05, 4.2444999999995126e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.247199999999479e-05, 4.2527000000000537e-05, 4.245800000000216e-05, 4.2417000000002925e-05, 4.2459000000001634e-05, 4.241600000000345e-05, 4.254200000000652e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.2473000000001204e-05, 4.247200000000173e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.441" endtime="20201115 22:01:18.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.436" endtime="20201115 22:01:18.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.446" endtime="20201115 22:01:18.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.450" endtime="20201115 22:01:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.448" endtime="20201115 22:01:18.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.444" endtime="20201115 22:01:18.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.038" endtime="20201115 22:01:18.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.278" endtime="20201115 22:01:18.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.277" endtime="20201115 22:01:18.471"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.473" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.482" endtime="20201115 22:01:18.539"></status>
</kw>
<msg timestamp="20201115 22:01:18.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.480" endtime="20201115 22:01:18.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.542" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.540" endtime="20201115 22:01:18.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.543" endtime="20201115 22:01:18.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.478" endtime="20201115 22:01:18.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.475" endtime="20201115 22:01:18.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.552" endtime="20201115 22:01:18.859"></status>
</kw>
<msg timestamp="20201115 22:01:18.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024749042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.550" endtime="20201115 22:01:18.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024749042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.863" endtime="20201115 22:01:18.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.871" endtime="20201115 22:01:18.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.548" endtime="20201115 22:01:18.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.546" endtime="20201115 22:01:18.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.878" level="INFO">${RESULT} = [{'time': 0.024792139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3097000000002356e-05, 'source_diff': 4.3097000000002356e-05}, {'time': 0.025769, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:18.874" endtime="20201115 22:01:18.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.891" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.879" endtime="20201115 22:01:18.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.895" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.894" endtime="20201115 22:01:18.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.903" level="INFO">VALUE: [4.3097000000002356e-05, 4.301400000000094e-05, 4.301399999999747e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.302700000000104e-05, 4.302800000000051e-05, 4.2959000000002134e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.300000000000137e-05, 4.311199999999793e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.3068999999999746e-05, 4.300000000000137e-05, 4.3041000000000607e-05, 4.304200000000008e-05, 4.301400000000094e-05, 4.301400000000094e-05, 4.29860000000018e-05, 4.300000000000137e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.3111000000005395e-05, 4.3041000000000607e-05, 4.3041000000000607e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.297200000000223e-05, 4.304200000000702e-05, 4.302800000000051e-05, 4.304199999999314e-05, 4.300000000000137e-05, 4.301400000000788e-05, 4.300000000000137e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.302700000000104e-05, 4.304199999999314e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.896" endtime="20201115 22:01:18.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.892" endtime="20201115 22:01:18.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.906" endtime="20201115 22:01:18.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.910" endtime="20201115 22:01:18.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.908" endtime="20201115 22:01:18.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.904" endtime="20201115 22:01:18.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.473" endtime="20201115 22:01:18.930"></status>
</kw>
<msg timestamp="20201115 22:01:18.931" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.939" endtime="20201115 22:01:18.997"></status>
</kw>
<msg timestamp="20201115 22:01:18.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.938" endtime="20201115 22:01:18.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.998" endtime="20201115 22:01:19.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.001" endtime="20201115 22:01:19.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.935" endtime="20201115 22:01:19.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.933" endtime="20201115 22:01:19.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.010" endtime="20201115 22:01:19.297"></status>
</kw>
<msg timestamp="20201115 22:01:19.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.008" endtime="20201115 22:01:19.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.301" endtime="20201115 22:01:19.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.309" endtime="20201115 22:01:19.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.006" endtime="20201115 22:01:19.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.004" endtime="20201115 22:01:19.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.316" level="INFO">${RESULT} = [{'time': 0.022341611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3082999999999316e-05, 'source_diff': 4.3082999999999316e-05}, {'time': 0.023318167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.312" endtime="20201115 22:01:19.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.329" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.316" endtime="20201115 22:01:19.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.334" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.333" endtime="20201115 22:01:19.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.336" level="INFO">VALUE: [4.3082999999999316e-05, 4.2959000000002134e-05, 4.301399999999747e-05, 4.29860000000018e-05, 4.3041000000000607e-05, 4.3055000000000176e-05, 4.304200000000008e-05, 4.301400000000094e-05, 4.302699999999757e-05, 4.298599999999833e-05, 4.302800000000051e-05, 4.305599999999965e-05, 4.299999999999443e-05, 4.306999999999922e-05, 4.301300000000147e-05, 4.301400000000094e-05, 4.305599999999965e-05, 4.304200000000008e-05, 4.2959000000002134e-05, 4.305599999999965e-05, 4.304099999999367e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.3055000000000176e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.298599999999486e-05, 4.302800000000051e-05, 4.2972999999994765e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.302700000000104e-05, 4.2945000000002564e-05, 4.3055000000000176e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.3055000000000176e-05, 4.304199999999314e-05, 4.304200000000702e-05, 4.3041000000007545e-05, 4.302800000000051e-05, 4.304200000000702e-05, 4.304199999999314e-05, 4.302800000000051e-05, 4.302700000000104e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.335" endtime="20201115 22:01:19.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.330" endtime="20201115 22:01:19.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.339" endtime="20201115 22:01:19.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.343" endtime="20201115 22:01:19.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.341" endtime="20201115 22:01:19.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.338" endtime="20201115 22:01:19.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.931" endtime="20201115 22:01:19.363"></status>
</kw>
<msg timestamp="20201115 22:01:19.364" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.375" endtime="20201115 22:01:19.432"></status>
</kw>
<msg timestamp="20201115 22:01:19.433" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.373" endtime="20201115 22:01:19.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.434" endtime="20201115 22:01:19.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.437" endtime="20201115 22:01:19.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.370" endtime="20201115 22:01:19.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.366" endtime="20201115 22:01:19.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.446" endtime="20201115 22:01:19.731"></status>
</kw>
<msg timestamp="20201115 22:01:19.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024898264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.444" endtime="20201115 22:01:19.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024898264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024941361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.735" endtime="20201115 22:01:19.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.743" endtime="20201115 22:01:19.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.442" endtime="20201115 22:01:19.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.440" endtime="20201115 22:01:19.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.750" level="INFO">${RESULT} = [{'time': 0.024941361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3096999999998886e-05, 'source_diff': 4.3096999999998886e-05}, {'time': 0.025906694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.747" endtime="20201115 22:01:19.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.764" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.752" endtime="20201115 22:01:19.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.768" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.767" endtime="20201115 22:01:19.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.771" level="INFO">VALUE: [4.3096999999998886e-05, 4.301300000000147e-05, 4.302700000000104e-05, 4.3055000000000176e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.3069000000006685e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.302799999999357e-05, 4.300000000000137e-05, 4.305599999999965e-05, 4.306999999999922e-05, 4.302800000000051e-05, 4.298599999999486e-05, 4.3055000000000176e-05, 4.3041000000000607e-05, 4.302800000000051e-05, 4.304099999999367e-05, 4.302800000000051e-05, 4.3041000000000607e-05, 4.29860000000018e-05, 4.299999999999443e-05, 4.301400000000094e-05, 4.295800000000266e-05, 4.3055000000000176e-05, 4.305599999999965e-05, 4.304200000000008e-05, 4.3055000000000176e-05, 4.300000000000137e-05, 4.302800000000051e-05, 4.300000000000137e-05, 4.3055000000000176e-05, 4.302799999999357e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.3055000000000176e-05, 4.302700000000104e-05, 4.304199999999314e-05, 4.3055000000000176e-05, 4.301400000000788e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.3013999999994e-05, 4.304200000000702e-05, 4.302800000000051e-05, 4.304199999999314e-05, 4.302700000000104e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.769" endtime="20201115 22:01:19.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.765" endtime="20201115 22:01:19.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.774" endtime="20201115 22:01:19.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.777" endtime="20201115 22:01:19.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.776" endtime="20201115 22:01:19.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.772" endtime="20201115 22:01:19.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.364" endtime="20201115 22:01:19.798"></status>
</kw>
<msg timestamp="20201115 22:01:19.799" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.807" endtime="20201115 22:01:19.865"></status>
</kw>
<msg timestamp="20201115 22:01:19.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.806" endtime="20201115 22:01:19.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.866" endtime="20201115 22:01:19.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.869" endtime="20201115 22:01:19.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.803" endtime="20201115 22:01:19.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.801" endtime="20201115 22:01:19.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.878" endtime="20201115 22:01:20.165"></status>
</kw>
<msg timestamp="20201115 22:01:20.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.876" endtime="20201115 22:01:20.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.169" endtime="20201115 22:01:20.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.178" endtime="20201115 22:01:20.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.874" endtime="20201115 22:01:20.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.872" endtime="20201115 22:01:20.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.184" level="INFO">${RESULT} = [{'time': 0.022508514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304200000000008e-05, 'source_diff': 4.304200000000008e-05}, {'time': 0.023490667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.181" endtime="20201115 22:01:20.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.199" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.185" endtime="20201115 22:01:20.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.203" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.202" endtime="20201115 22:01:20.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.206" level="INFO">VALUE: [4.304200000000008e-05, 4.302800000000051e-05, 4.302700000000104e-05, 4.3068999999999746e-05, 4.302799999999704e-05, 4.302700000000104e-05, 4.3012999999998e-05, 4.302800000000051e-05, 4.305599999999965e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.305599999999965e-05, 4.305599999999965e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.305599999999965e-05, 4.3041000000000607e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.3041000000000607e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.3041000000000607e-05, 4.305599999999965e-05, 4.3068999999999746e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.3013999999994e-05, 4.302800000000051e-05, 4.305599999999965e-05, 4.304200000000008e-05, 4.3041000000000607e-05, 4.299999999999443e-05, 4.305599999999965e-05, 4.304199999999314e-05, 4.3055000000000176e-05, 4.302800000000051e-05, 4.300000000000137e-05, 4.3041000000007545e-05, 4.298599999999486e-05, 4.302700000000104e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.205" endtime="20201115 22:01:20.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.200" endtime="20201115 22:01:20.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.209" endtime="20201115 22:01:20.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.213" endtime="20201115 22:01:20.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.211" endtime="20201115 22:01:20.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.208" endtime="20201115 22:01:20.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.799" endtime="20201115 22:01:20.233"></status>
</kw>
<msg timestamp="20201115 22:01:20.233" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.242" endtime="20201115 22:01:20.300"></status>
</kw>
<msg timestamp="20201115 22:01:20.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.241" endtime="20201115 22:01:20.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.301" endtime="20201115 22:01:20.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.304" endtime="20201115 22:01:20.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.238" endtime="20201115 22:01:20.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.236" endtime="20201115 22:01:20.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.313" endtime="20201115 22:01:20.600"></status>
</kw>
<msg timestamp="20201115 22:01:20.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.311" endtime="20201115 22:01:20.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.605" endtime="20201115 22:01:20.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.613" endtime="20201115 22:01:20.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.309" endtime="20201115 22:01:20.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.307" endtime="20201115 22:01:20.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.620" level="INFO">${RESULT} = [{'time': 0.022469819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3055000000000176e-05, 'source_diff': 4.3055000000000176e-05}, {'time': 0.023453875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:20.616" endtime="20201115 22:01:20.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.633" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.621" endtime="20201115 22:01:20.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.637" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.636" endtime="20201115 22:01:20.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.640" level="INFO">VALUE: [4.3055000000000176e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.301399999999747e-05, 4.297200000000223e-05, 4.3055000000000176e-05, 4.3055000000000176e-05, 4.3012999999998e-05, 4.3041000000000607e-05, 4.302799999999704e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.301400000000094e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.297200000000223e-05, 4.302700000000104e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.302799999999357e-05, 4.302800000000051e-05, 4.302700000000104e-05, 4.306999999999922e-05, 4.301400000000094e-05, 4.305599999999965e-05, 4.302800000000051e-05, 4.3055000000000176e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.3041000000000607e-05, 4.29860000000018e-05, 4.304200000000008e-05, 4.305599999999965e-05, 4.3041000000000607e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.304200000000008e-05, 4.304200000000008e-05, 4.3041000000000607e-05, 4.301400000000094e-05, 4.298600000000874e-05, 4.302800000000051e-05, 4.302800000000051e-05, 4.299999999998749e-05, 4.298599999999486e-05, 4.302700000000104e-05, 4.302800000000051e-05, 4.302800000000051e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.638" endtime="20201115 22:01:20.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.634" endtime="20201115 22:01:20.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.643" endtime="20201115 22:01:20.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.646" endtime="20201115 22:01:20.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.645" endtime="20201115 22:01:20.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.641" endtime="20201115 22:01:20.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.234" endtime="20201115 22:01:20.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.472" endtime="20201115 22:01:20.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.471" endtime="20201115 22:01:20.668"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.670" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.679" endtime="20201115 22:01:20.739"></status>
</kw>
<msg timestamp="20201115 22:01:20.739" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.677" endtime="20201115 22:01:20.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.740" endtime="20201115 22:01:20.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.743" endtime="20201115 22:01:20.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.674" endtime="20201115 22:01:20.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.672" endtime="20201115 22:01:20.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.752" endtime="20201115 22:01:21.060"></status>
</kw>
<msg timestamp="20201115 22:01:21.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024915514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.751" endtime="20201115 22:01:21.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024871861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024915514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.064" endtime="20201115 22:01:21.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.072" endtime="20201115 22:01:21.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.748" endtime="20201115 22:01:21.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.746" endtime="20201115 22:01:21.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.079" level="INFO">${RESULT} = [{'time': 0.024915514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3653000000001135e-05, 'source_diff': 4.3653000000001135e-05}, {'time': 0.025951889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:21.075" endtime="20201115 22:01:21.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.092" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.080" endtime="20201115 22:01:21.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.097" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.096" endtime="20201115 22:01:21.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.099" level="INFO">VALUE: [4.3653000000001135e-05, 4.355600000000015e-05, 4.359799999999886e-05, 4.3611000000002426e-05, 4.356999999999972e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.359799999999886e-05, 4.358399999999929e-05, 4.3597000000006325e-05, 4.359799999999886e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3624999999998526e-05, 4.358399999999929e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.356999999999972e-05, 4.3582999999999816e-05, 4.355600000000015e-05, 4.356999999999972e-05, 4.3569000000000246e-05, 4.3596999999999386e-05, 4.355499999999374e-05, 4.3610999999998956e-05, 4.3597000000006325e-05, 4.358399999999929e-05, 4.3610999999998956e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.3610999999998956e-05, 4.361199999999843e-05, 4.3596999999999386e-05, 4.3597000000006325e-05, 4.3638999999998096e-05, 4.358399999999929e-05, 4.365200000000513e-05, 4.35980000000058e-05, 4.3625000000005465e-05, 4.3610999999998956e-05, 4.356899999999331e-05, 4.3610999999998956e-05, 4.3653000000004605e-05, 4.363799999999862e-05, 4.359699999999245e-05, 4.3597000000006325e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.098" endtime="20201115 22:01:21.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.093" endtime="20201115 22:01:21.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.102" endtime="20201115 22:01:21.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.106" endtime="20201115 22:01:21.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.104" endtime="20201115 22:01:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.101" endtime="20201115 22:01:21.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.670" endtime="20201115 22:01:21.126"></status>
</kw>
<msg timestamp="20201115 22:01:21.127" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.136" endtime="20201115 22:01:21.196"></status>
</kw>
<msg timestamp="20201115 22:01:21.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.134" endtime="20201115 22:01:21.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.197" endtime="20201115 22:01:21.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.200" endtime="20201115 22:01:21.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.131" endtime="20201115 22:01:21.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.129" endtime="20201115 22:01:21.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.209" endtime="20201115 22:01:21.496"></status>
</kw>
<msg timestamp="20201115 22:01:21.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.208" endtime="20201115 22:01:21.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.500" endtime="20201115 22:01:21.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.509" endtime="20201115 22:01:21.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.205" endtime="20201115 22:01:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.203" endtime="20201115 22:01:21.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.515" level="INFO">${RESULT} = [{'time': 0.022489097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3638999999998096e-05, 'source_diff': 4.3638999999998096e-05}, {'time': 0.023526903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:21.512" endtime="20201115 22:01:21.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.529" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.516" endtime="20201115 22:01:21.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.533" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.532" endtime="20201115 22:01:21.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.536" level="INFO">VALUE: [4.3638999999998096e-05, 4.358399999999929e-05, 4.3597000000002856e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.356999999999972e-05, 4.359799999999886e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.359799999999886e-05, 4.3610999999998956e-05, 4.3569000000000246e-05, 4.3610999999998956e-05, 4.3611000000005895e-05, 4.3582999999999816e-05, 4.3541000000001107e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.358399999999929e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.365199999999819e-05, 4.3624999999998526e-05, 4.3610999999998956e-05, 4.356999999999972e-05, 4.3611000000005895e-05, 4.359799999999886e-05, 4.358399999999929e-05, 4.3596999999999386e-05, 4.3624999999998526e-05, 4.35980000000058e-05, 4.355600000000015e-05, 4.3596999999999386e-05, 4.3624999999998526e-05, 4.3611000000005895e-05, 4.359799999999886e-05, 4.3582999999999816e-05, 4.3597000000006325e-05, 4.35980000000058e-05, 4.3569000000007185e-05, 4.3625000000005465e-05, 4.3582999999999816e-05, 4.3597000000006325e-05, 4.3582999999999816e-05, 4.3610999999998956e-05, 4.3597000000006325e-05, 4.35139999999945e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.534" endtime="20201115 22:01:21.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.529" endtime="20201115 22:01:21.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.539" endtime="20201115 22:01:21.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.542" endtime="20201115 22:01:21.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.541" endtime="20201115 22:01:21.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.537" endtime="20201115 22:01:21.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.127" endtime="20201115 22:01:21.563"></status>
</kw>
<msg timestamp="20201115 22:01:21.563" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.573" endtime="20201115 22:01:21.633"></status>
</kw>
<msg timestamp="20201115 22:01:21.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.571" endtime="20201115 22:01:21.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.634" endtime="20201115 22:01:21.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.637" endtime="20201115 22:01:21.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.568" endtime="20201115 22:01:21.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.566" endtime="20201115 22:01:21.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.646" endtime="20201115 22:01:21.932"></status>
</kw>
<msg timestamp="20201115 22:01:21.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.644" endtime="20201115 22:01:21.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.937" endtime="20201115 22:01:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.945" endtime="20201115 22:01:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.642" endtime="20201115 22:01:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.640" endtime="20201115 22:01:21.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.952" level="INFO">${RESULT} = [{'time': 0.023122222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.370799999999994e-05, 'source_diff': 4.370799999999994e-05}, {'time': 0.024150306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:21.948" endtime="20201115 22:01:21.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.966" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.952" endtime="20201115 22:01:21.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.971" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.970" endtime="20201115 22:01:21.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.973" level="INFO">VALUE: [4.370799999999994e-05, 4.358399999999929e-05, 4.3610999999998956e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.3597000000002856e-05, 4.359799999999886e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.3596999999999386e-05, 4.3583000000006755e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3638999999998096e-05, 4.352800000000101e-05, 4.3569000000000246e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.356999999999972e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.3652999999997666e-05, 4.359799999999886e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.35980000000058e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.361200000001231e-05, 4.3582999999999816e-05, 4.358399999999929e-05, 4.3569000000007185e-05, 4.356899999999331e-05, 4.359699999999245e-05, 4.356999999999278e-05, 4.359699999999245e-05, 4.3625000000005465e-05, 4.3653000000004605e-05, 4.3597000000006325e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.972" endtime="20201115 22:01:21.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.967" endtime="20201115 22:01:21.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.976" endtime="20201115 22:01:21.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.980" endtime="20201115 22:01:21.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.978" endtime="20201115 22:01:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.975" endtime="20201115 22:01:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.564" endtime="20201115 22:01:22.001"></status>
</kw>
<msg timestamp="20201115 22:01:22.001" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.010" endtime="20201115 22:01:22.070"></status>
</kw>
<msg timestamp="20201115 22:01:22.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.008" endtime="20201115 22:01:22.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.071" endtime="20201115 22:01:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.074" endtime="20201115 22:01:22.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.006" endtime="20201115 22:01:22.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.004" endtime="20201115 22:01:22.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.083" endtime="20201115 22:01:22.369"></status>
</kw>
<msg timestamp="20201115 22:01:22.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.082" endtime="20201115 22:01:22.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.373" endtime="20201115 22:01:22.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.381" endtime="20201115 22:01:22.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.079" endtime="20201115 22:01:22.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.077" endtime="20201115 22:01:22.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.388" level="INFO">${RESULT} = [{'time': 0.022871972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3653000000001135e-05, 'source_diff': 4.3653000000001135e-05}, {'time': 0.023904278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:22.384" endtime="20201115 22:01:22.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.401" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.389" endtime="20201115 22:01:22.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.406" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.405" endtime="20201115 22:01:22.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.408" level="INFO">VALUE: [4.3653000000001135e-05, 4.358400000000276e-05, 4.359799999999886e-05, 4.355499999999721e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.359799999999886e-05, 4.3596999999999386e-05, 4.359799999999886e-05, 4.3582999999999816e-05, 4.352800000000101e-05, 4.3596999999999386e-05, 4.358399999999929e-05, 4.356999999999972e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.355600000000015e-05, 4.3597000000006325e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.358400000000623e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.359799999999886e-05, 4.3596999999999386e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.359699999999245e-05, 4.3653000000004605e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.3597000000006325e-05, 4.350000000000187e-05, 4.352800000000101e-05, 4.3582999999999816e-05, 4.359699999999245e-05, 4.359699999999245e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.407" endtime="20201115 22:01:22.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.402" endtime="20201115 22:01:22.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.412" endtime="20201115 22:01:22.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.415" endtime="20201115 22:01:22.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.414" endtime="20201115 22:01:22.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.410" endtime="20201115 22:01:22.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.002" endtime="20201115 22:01:22.436"></status>
</kw>
<msg timestamp="20201115 22:01:22.436" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.445" endtime="20201115 22:01:22.505"></status>
</kw>
<msg timestamp="20201115 22:01:22.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.444" endtime="20201115 22:01:22.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.507" endtime="20201115 22:01:22.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.509" endtime="20201115 22:01:22.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.441" endtime="20201115 22:01:22.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.439" endtime="20201115 22:01:22.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.518" endtime="20201115 22:01:22.804"></status>
</kw>
<msg timestamp="20201115 22:01:22.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.517" endtime="20201115 22:01:22.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.808" endtime="20201115 22:01:22.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.816" endtime="20201115 22:01:22.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.514" endtime="20201115 22:01:22.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.512" endtime="20201115 22:01:22.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.823" level="INFO">${RESULT} = [{'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3596999999999386e-05, 'source_diff': 4.3596999999999386e-05}, {'time': 0.023439806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:22.820" endtime="20201115 22:01:22.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.836" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.824" endtime="20201115 22:01:22.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.841" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.840" endtime="20201115 22:01:22.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.844" level="INFO">VALUE: [4.3596999999999386e-05, 4.359799999999886e-05, 4.359800000000233e-05, 4.3597000000002856e-05, 4.36120000000019e-05, 4.3596999999999386e-05, 4.352800000000101e-05, 4.3610999999998956e-05, 4.358399999999929e-05, 4.3596999999999386e-05, 4.3611000000005895e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3569000000000246e-05, 4.3597000000006325e-05, 4.3611000000005895e-05, 4.3596999999999386e-05, 4.3611000000005895e-05, 4.3596999999999386e-05, 4.3639000000005035e-05, 4.359799999999886e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.354099999999417e-05, 4.3610999999998956e-05, 4.3596999999999386e-05, 4.358399999999929e-05, 4.35980000000058e-05, 4.3610999999998956e-05, 4.3582999999999816e-05, 4.3625000000005465e-05, 4.3652999999997666e-05, 4.3653000000004605e-05, 4.355600000000015e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.352800000000101e-05, 4.3652999999997666e-05, 4.3597000000006325e-05, 4.3582999999999816e-05, 4.357000000000666e-05, 4.359699999999245e-05, 4.3597000000006325e-05, 4.3597000000006325e-05, 4.3653000000004605e-05, 4.3610999999998956e-05, 4.359799999999192e-05, 4.3582999999999816e-05, 4.3582999999999816e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.842" endtime="20201115 22:01:22.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.837" endtime="20201115 22:01:22.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.847" endtime="20201115 22:01:22.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.851" endtime="20201115 22:01:22.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.849" endtime="20201115 22:01:22.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.845" endtime="20201115 22:01:22.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.437" endtime="20201115 22:01:22.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.669" endtime="20201115 22:01:22.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.668" endtime="20201115 22:01:22.872"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.874" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.883" endtime="20201115 22:01:22.946"></status>
</kw>
<msg timestamp="20201115 22:01:22.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.881" endtime="20201115 22:01:22.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.947" endtime="20201115 22:01:22.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.950" endtime="20201115 22:01:22.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.879" endtime="20201115 22:01:22.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.877" endtime="20201115 22:01:22.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.959" endtime="20201115 22:01:23.263"></status>
</kw>
<msg timestamp="20201115 22:01:23.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.957" endtime="20201115 22:01:23.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024901972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.267" endtime="20201115 22:01:23.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.275" endtime="20201115 22:01:23.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.955" endtime="20201115 22:01:23.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.953" endtime="20201115 22:01:23.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.282" level="INFO">${RESULT} = [{'time': 0.024901972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.420800000000044e-05, 'source_diff': 4.420800000000044e-05}, {'time': 0.026002861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.279" endtime="20201115 22:01:23.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.296" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.283" endtime="20201115 22:01:23.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.300" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.299" endtime="20201115 22:01:23.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.303" level="INFO">VALUE: [4.420800000000044e-05, 4.417999999999783e-05, 4.4124999999999026e-05, 4.4153000000001635e-05, 4.4153000000001635e-05, 4.422200000000001e-05, 4.4166999999997736e-05, 4.417999999999783e-05, 4.4153000000005105e-05, 4.422199999999654e-05, 4.4180999999997306e-05, 4.4167000000004675e-05, 4.423600000000305e-05, 4.416599999999826e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4153000000005105e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.4166999999997736e-05, 4.4167000000004675e-05, 4.4083000000000316e-05, 4.4166999999997736e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4096999999999886e-05, 4.4152999999998166e-05, 4.416599999999826e-05, 4.416599999999826e-05, 4.416599999999826e-05, 4.4138999999998596e-05, 4.4083000000000316e-05, 4.41939999999974e-05, 4.4138999999998596e-05, 4.4125000000005965e-05, 4.4110999999999456e-05, 4.4153000000005105e-05, 4.4153000000005105e-05, 4.4166999999997736e-05, 4.4153000000005105e-05, 4.4181000000004245e-05, 4.4194999999996876e-05, 4.4166999999997736e-05, 4.4153000000005105e-05, 4.412499999999209e-05, 4.415299999999123e-05, 4.415200000000563e-05, 4.412499999999209e-05, 4.4138999999998596e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.301" endtime="20201115 22:01:23.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.296" endtime="20201115 22:01:23.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.306" endtime="20201115 22:01:23.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.310" endtime="20201115 22:01:23.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.308" endtime="20201115 22:01:23.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.305" endtime="20201115 22:01:23.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.875" endtime="20201115 22:01:23.331"></status>
</kw>
<msg timestamp="20201115 22:01:23.331" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.341" endtime="20201115 22:01:23.404"></status>
</kw>
<msg timestamp="20201115 22:01:23.405" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.339" endtime="20201115 22:01:23.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.406" endtime="20201115 22:01:23.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.408" endtime="20201115 22:01:23.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.336" endtime="20201115 22:01:23.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.334" endtime="20201115 22:01:23.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.417" endtime="20201115 22:01:23.703"></status>
</kw>
<msg timestamp="20201115 22:01:23.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.416" endtime="20201115 22:01:23.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023853208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023897431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.707" endtime="20201115 22:01:23.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.715" endtime="20201115 22:01:23.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.413" endtime="20201115 22:01:23.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.411" endtime="20201115 22:01:23.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.722" level="INFO">${RESULT} = [{'time': 0.023897431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4222999999999485e-05, 'source_diff': 4.4222999999999485e-05}, {'time': 0.024982722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:23.718" endtime="20201115 22:01:23.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.737" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.723" endtime="20201115 22:01:23.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.742" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.741" endtime="20201115 22:01:23.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.744" level="INFO">VALUE: [4.4222999999999485e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4153000000001635e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.419400000000434e-05, 4.4208999999996446e-05, 4.413799999999912e-05, 4.4083000000000316e-05, 4.4152999999998166e-05, 4.4124999999999026e-05, 4.4153000000005105e-05, 4.4152999999998166e-05, 4.4167000000004675e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4166999999997736e-05, 4.4152999999998166e-05, 4.4167000000004675e-05, 4.418000000000477e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.41939999999974e-05, 4.4153000000005105e-05, 4.413799999999912e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4083000000000316e-05, 4.4138999999998596e-05, 4.415199999999869e-05, 4.4083000000000316e-05, 4.4153000000005105e-05, 4.4167000000011614e-05, 4.41939999999974e-05, 4.4166999999997736e-05, 4.4083000000000316e-05, 4.4153000000005105e-05, 4.415299999999123e-05, 4.4166999999997736e-05, 4.40980000000063e-05, 4.415299999999123e-05, 4.4153000000005105e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.416599999999826e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.743" endtime="20201115 22:01:23.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.738" endtime="20201115 22:01:23.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.747" endtime="20201115 22:01:23.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.751" endtime="20201115 22:01:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.749" endtime="20201115 22:01:23.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.746" endtime="20201115 22:01:23.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.332" endtime="20201115 22:01:23.771"></status>
</kw>
<msg timestamp="20201115 22:01:23.772" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.780" endtime="20201115 22:01:23.843"></status>
</kw>
<msg timestamp="20201115 22:01:23.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.779" endtime="20201115 22:01:23.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.845" endtime="20201115 22:01:23.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.847" endtime="20201115 22:01:23.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.776" endtime="20201115 22:01:23.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.774" endtime="20201115 22:01:23.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.856" endtime="20201115 22:01:24.143"></status>
</kw>
<msg timestamp="20201115 22:01:24.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:23.855" endtime="20201115 22:01:24.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:24.148" endtime="20201115 22:01:24.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.156" endtime="20201115 22:01:24.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.852" endtime="20201115 22:01:24.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.851" endtime="20201115 22:01:24.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.167" level="INFO">${RESULT} = [{'time': 0.022486764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.426399999999872e-05, 'source_diff': 4.426399999999872e-05}, {'time': 0.023582597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.159" endtime="20201115 22:01:24.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.180" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.168" endtime="20201115 22:01:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.185" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.184" endtime="20201115 22:01:24.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.187" level="INFO">VALUE: [4.426399999999872e-05, 4.4153000000001635e-05, 4.415200000000216e-05, 4.4152999999998166e-05, 4.4153000000001635e-05, 4.4167000000001205e-05, 4.4110999999999456e-05, 4.4110999999999456e-05, 4.4125000000002496e-05, 4.41939999999974e-05, 4.4180999999997306e-05, 4.4152999999998166e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4096999999999886e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4110999999999456e-05, 4.4124999999999026e-05, 4.41660000000052e-05, 4.4195000000003815e-05, 4.416599999999826e-05, 4.4152999999998166e-05, 4.4194999999996876e-05, 4.4167000000004675e-05, 4.4166999999997736e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.415199999999869e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4153000000005105e-05, 4.4151999999991753e-05, 4.4125000000005965e-05, 4.416599999999826e-05, 4.416599999999826e-05, 4.4097000000006825e-05, 4.416599999999826e-05, 4.4138999999998596e-05, 4.4153000000005105e-05, 4.4167000000011614e-05, 4.4153000000005105e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.415299999999123e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.186" endtime="20201115 22:01:24.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.181" endtime="20201115 22:01:24.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.190" endtime="20201115 22:01:24.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.194" endtime="20201115 22:01:24.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.192" endtime="20201115 22:01:24.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.189" endtime="20201115 22:01:24.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.772" endtime="20201115 22:01:24.214"></status>
</kw>
<msg timestamp="20201115 22:01:24.215" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.223" endtime="20201115 22:01:24.286"></status>
</kw>
<msg timestamp="20201115 22:01:24.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.222" endtime="20201115 22:01:24.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.288" endtime="20201115 22:01:24.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.291" endtime="20201115 22:01:24.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.219" endtime="20201115 22:01:24.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.217" endtime="20201115 22:01:24.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.300" endtime="20201115 22:01:24.586"></status>
</kw>
<msg timestamp="20201115 22:01:24.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.298" endtime="20201115 22:01:24.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.590" endtime="20201115 22:01:24.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.598" endtime="20201115 22:01:24.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.295" endtime="20201115 22:01:24.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.294" endtime="20201115 22:01:24.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.605" level="INFO">${RESULT} = [{'time': 0.022482986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.419400000000087e-05, 'source_diff': 4.419400000000087e-05}, {'time': 0.023570097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:24.602" endtime="20201115 22:01:24.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.618" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.606" endtime="20201115 22:01:24.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.623" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.622" endtime="20201115 22:01:24.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.625" level="INFO">VALUE: [4.419400000000087e-05, 4.416600000000173e-05, 4.4139000000002065e-05, 4.415199999999869e-05, 4.419400000000087e-05, 4.415200000000216e-05, 4.413799999999912e-05, 4.4167000000001205e-05, 4.4208999999999915e-05, 4.4152999999998166e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.413799999999912e-05, 4.4138999999998596e-05, 4.4153000000005105e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.420799999999697e-05, 4.4153000000005105e-05, 4.4152999999998166e-05, 4.418000000000477e-05, 4.4139000000005535e-05, 4.41660000000052e-05, 4.4138999999998596e-05, 4.4083000000000316e-05, 4.4153000000005105e-05, 4.423600000000305e-05, 4.4166999999997736e-05, 4.4138999999998596e-05, 4.416599999999826e-05, 4.4138999999998596e-05, 4.407000000000022e-05, 4.407000000000022e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4096999999999886e-05, 4.4138999999998596e-05, 4.4153000000005105e-05, 4.4138999999998596e-05, 4.4166999999997736e-05, 4.415299999999123e-05, 4.415200000000563e-05, 4.415299999999123e-05, 4.4166999999997736e-05, 4.412499999999209e-05, 4.4110999999999456e-05, 4.4153000000005105e-05, 4.4153000000005105e-05, 4.41939999999974e-05, 4.416599999999826e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.624" endtime="20201115 22:01:24.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.619" endtime="20201115 22:01:24.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.629" endtime="20201115 22:01:24.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.632" endtime="20201115 22:01:24.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.630" endtime="20201115 22:01:24.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.627" endtime="20201115 22:01:24.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.215" endtime="20201115 22:01:24.653"></status>
</kw>
<msg timestamp="20201115 22:01:24.653" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.662" endtime="20201115 22:01:24.725"></status>
</kw>
<msg timestamp="20201115 22:01:24.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.660" endtime="20201115 22:01:24.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.726" endtime="20201115 22:01:24.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.729" endtime="20201115 22:01:24.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.658" endtime="20201115 22:01:24.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.656" endtime="20201115 22:01:24.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.738" endtime="20201115 22:01:25.025"></status>
</kw>
<msg timestamp="20201115 22:01:25.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.737" endtime="20201115 22:01:25.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.029" endtime="20201115 22:01:25.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.037" endtime="20201115 22:01:25.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.734" endtime="20201115 22:01:25.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.732" endtime="20201115 22:01:25.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.044" level="INFO">${RESULT} = [{'time': 0.022506875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.422200000000001e-05, 'source_diff': 4.422200000000001e-05}, {'time': 0.023589125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.041" endtime="20201115 22:01:25.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.058" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.045" endtime="20201115 22:01:25.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.062" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.061" endtime="20201115 22:01:25.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.065" level="INFO">VALUE: [4.422200000000001e-05, 4.4138999999998596e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4139000000002065e-05, 4.4138999999998596e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.418000000000477e-05, 4.4110999999999456e-05, 4.4167000000004675e-05, 4.41660000000052e-05, 4.4153000000005105e-05, 4.415199999999869e-05, 4.4152999999998166e-05, 4.4153000000005105e-05, 4.4166999999997736e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4167000000004675e-05, 4.4166999999997736e-05, 4.4138999999998596e-05, 4.4195000000003815e-05, 4.4138999999998596e-05, 4.4180999999997306e-05, 4.4181000000004245e-05, 4.4166999999997736e-05, 4.4124999999999026e-05, 4.4139000000005535e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4152999999998166e-05, 4.4138999999998596e-05, 4.4166999999997736e-05, 4.4138999999998596e-05, 4.415299999999123e-05, 4.415299999999123e-05, 4.41939999999974e-05, 4.4153000000005105e-05, 4.4153000000005105e-05, 4.4138999999998596e-05, 4.4181000000004245e-05, 4.4166999999997736e-05, 4.4166999999997736e-05, 4.415200000000563e-05, 4.415299999999123e-05, 4.4166999999997736e-05, 4.4153000000005105e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.063" endtime="20201115 22:01:25.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.059" endtime="20201115 22:01:25.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.068" endtime="20201115 22:01:25.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.071" endtime="20201115 22:01:25.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.070" endtime="20201115 22:01:25.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.066" endtime="20201115 22:01:25.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.653" endtime="20201115 22:01:25.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.873" endtime="20201115 22:01:25.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.872" endtime="20201115 22:01:25.092"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.095" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.103" endtime="20201115 22:01:25.169"></status>
</kw>
<msg timestamp="20201115 22:01:25.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.102" endtime="20201115 22:01:25.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.171" endtime="20201115 22:01:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.173" endtime="20201115 22:01:25.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.099" endtime="20201115 22:01:25.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.097" endtime="20201115 22:01:25.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.183" endtime="20201115 22:01:25.484"></status>
</kw>
<msg timestamp="20201115 22:01:25.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.181" endtime="20201115 22:01:25.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.489" endtime="20201115 22:01:25.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.497" endtime="20201115 22:01:25.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.179" endtime="20201115 22:01:25.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.177" endtime="20201115 22:01:25.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.504" level="INFO">${RESULT} = [{'time': 0.024892681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.476399999999922e-05, 'source_diff': 4.476399999999922e-05}, {'time': 0.026042472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:25.501" endtime="20201115 22:01:25.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.518" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.505" endtime="20201115 22:01:25.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.523" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.522" endtime="20201115 22:01:25.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.525" level="INFO">VALUE: [4.476399999999922e-05, 4.469400000000137e-05, 4.470800000000094e-05, 4.4695000000000845e-05, 4.470800000000094e-05, 4.466599999999876e-05, 4.4723000000003454e-05, 4.472200000000398e-05, 4.470799999999747e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.467999999999833e-05, 4.4694999999997376e-05, 4.469400000000484e-05, 4.4652999999998666e-05, 4.470799999999747e-05, 4.469400000000484e-05, 4.4708999999996946e-05, 4.4708999999996946e-05, 4.476400000000269e-05, 4.472200000000398e-05, 4.469400000000484e-05, 4.4680999999997806e-05, 4.476400000000269e-05, 4.4722999999996516e-05, 4.4708999999996946e-05, 4.472199999999704e-05, 4.472199999999704e-05, 4.470800000000441e-05, 4.473599999999661e-05, 4.4667000000005175e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.468000000000527e-05, 4.470899999999001e-05, 4.4695000000011254e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.470800000000441e-05, 4.4681000000004745e-05, 4.470899999999001e-05, 4.470799999999053e-05, 4.470800000000441e-05, 4.473600000000355e-05, 4.46939999999979e-05, 4.46939999999979e-05, 4.473600000000355e-05, 4.4666999999998236e-05, 4.470800000000441e-05, 4.473600000000355e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.524" endtime="20201115 22:01:25.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.519" endtime="20201115 22:01:25.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.528" endtime="20201115 22:01:25.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.532" endtime="20201115 22:01:25.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.530" endtime="20201115 22:01:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.527" endtime="20201115 22:01:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.095" endtime="20201115 22:01:25.553"></status>
</kw>
<msg timestamp="20201115 22:01:25.553" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.562" endtime="20201115 22:01:25.627"></status>
</kw>
<msg timestamp="20201115 22:01:25.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.560" endtime="20201115 22:01:25.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.629" endtime="20201115 22:01:25.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.632" endtime="20201115 22:01:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.557" endtime="20201115 22:01:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.555" endtime="20201115 22:01:25.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.641" endtime="20201115 22:01:25.928"></status>
</kw>
<msg timestamp="20201115 22:01:25.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.640" endtime="20201115 22:01:25.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.932" endtime="20201115 22:01:25.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.940" endtime="20201115 22:01:25.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.637" endtime="20201115 22:01:25.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.635" endtime="20201115 22:01:25.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.947" level="INFO">${RESULT} = [{'time': 0.022400917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.476399999999922e-05, 'source_diff': 4.476399999999922e-05}, {'time': 0.0235605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:25.944" endtime="20201115 22:01:25.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.960" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.948" endtime="20201115 22:01:25.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.964" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.963" endtime="20201115 22:01:25.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.967" level="INFO">VALUE: [4.476399999999922e-05, 4.470800000000094e-05, 4.4722999999999985e-05, 4.470799999999747e-05, 4.470800000000094e-05, 4.4680999999997806e-05, 4.4722999999999985e-05, 4.472200000000051e-05, 4.472200000000398e-05, 4.46939999999979e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.473599999999661e-05, 4.476399999999575e-05, 4.4708999999996946e-05, 4.470799999999747e-05, 4.472200000000398e-05, 4.470800000000441e-05, 4.4652999999998666e-05, 4.4638999999999096e-05, 4.4708999999996946e-05, 4.4723000000003454e-05, 4.472200000000398e-05, 4.472199999999704e-05, 4.4666999999998236e-05, 4.476399999999575e-05, 4.4666999999998236e-05, 4.4694999999997376e-05, 4.473599999999661e-05, 4.470800000000441e-05, 4.470799999999747e-05, 4.472199999999704e-05, 4.472200000000398e-05, 4.4695000000004315e-05, 4.470799999999747e-05, 4.470799999999053e-05, 4.472199999999704e-05, 4.470799999999053e-05, 4.470800000000441e-05, 4.474999999999618e-05, 4.470799999999053e-05, 4.476399999998881e-05, 4.472300000001039e-05, 4.472199999999704e-05, 4.472199999999704e-05, 4.4722999999996516e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.4709000000003885e-05, 4.46939999999979e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.966" endtime="20201115 22:01:25.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.961" endtime="20201115 22:01:25.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.970" endtime="20201115 22:01:25.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.973" endtime="20201115 22:01:25.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.972" endtime="20201115 22:01:25.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.968" endtime="20201115 22:01:25.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.553" endtime="20201115 22:01:25.994"></status>
</kw>
<msg timestamp="20201115 22:01:25.994" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.004" endtime="20201115 22:01:26.070"></status>
</kw>
<msg timestamp="20201115 22:01:26.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.002" endtime="20201115 22:01:26.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.071" endtime="20201115 22:01:26.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.074" endtime="20201115 22:01:26.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.000" endtime="20201115 22:01:26.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.997" endtime="20201115 22:01:26.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.083" endtime="20201115 22:01:26.381"></status>
</kw>
<msg timestamp="20201115 22:01:26.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:26.081" endtime="20201115 22:01:26.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:26.385" endtime="20201115 22:01:26.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.393" endtime="20201115 22:01:26.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.079" endtime="20201115 22:01:26.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.077" endtime="20201115 22:01:26.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.404" level="INFO">${RESULT} = [{'time': 0.023056278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.477799999999879e-05, 'source_diff': 4.477799999999879e-05}, {'time': 0.024214083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.401" endtime="20201115 22:01:26.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.418" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.405" endtime="20201115 22:01:26.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.422" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.421" endtime="20201115 22:01:26.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.425" level="INFO">VALUE: [4.477799999999879e-05, 4.466600000000223e-05, 4.470800000000094e-05, 4.4681000000001275e-05, 4.4708999999996946e-05, 4.470800000000094e-05, 4.470800000000094e-05, 4.4638999999999096e-05, 4.4666999999998236e-05, 4.470800000000441e-05, 4.473600000000355e-05, 4.4694999999997376e-05, 4.4708999999996946e-05, 4.4722999999996516e-05, 4.479100000000236e-05, 4.470799999999747e-05, 4.473599999999661e-05, 4.4667000000005175e-05, 4.472200000000398e-05, 4.46939999999979e-05, 4.475000000000312e-05, 4.46939999999979e-05, 4.477799999999532e-05, 4.473599999999661e-05, 4.4708999999996946e-05, 4.4709000000003885e-05, 4.4722999999996516e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.4708999999996946e-05, 4.472199999999704e-05, 4.473600000000355e-05, 4.4694999999997376e-05, 4.4708999999996946e-05, 4.469400000000484e-05, 4.470800000000441e-05, 4.473600000000355e-05, 4.46939999999979e-05, 4.47780000000092e-05, 4.465299999999173e-05, 4.4722999999996516e-05, 4.470799999999053e-05, 4.4681000000004745e-05, 4.4709000000003885e-05, 4.472200000001092e-05, 4.4722999999996516e-05, 4.470800000000441e-05, 4.470800000000441e-05, 4.470800000000441e-05, 4.472200000001092e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.423" endtime="20201115 22:01:26.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.419" endtime="20201115 22:01:26.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.428" endtime="20201115 22:01:26.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.431" endtime="20201115 22:01:26.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.430" endtime="20201115 22:01:26.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.426" endtime="20201115 22:01:26.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.995" endtime="20201115 22:01:26.453"></status>
</kw>
<msg timestamp="20201115 22:01:26.453" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.462" endtime="20201115 22:01:26.528"></status>
</kw>
<msg timestamp="20201115 22:01:26.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.460" endtime="20201115 22:01:26.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.529" endtime="20201115 22:01:26.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.532" endtime="20201115 22:01:26.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.458" endtime="20201115 22:01:26.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.455" endtime="20201115 22:01:26.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.541" endtime="20201115 22:01:26.827"></status>
</kw>
<msg timestamp="20201115 22:01:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.539" endtime="20201115 22:01:26.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.831" endtime="20201115 22:01:26.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.839" endtime="20201115 22:01:26.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.536" endtime="20201115 22:01:26.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.535" endtime="20201115 22:01:26.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.846" level="INFO">${RESULT} = [{'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.474999999999965e-05, 'source_diff': 4.474999999999965e-05}, {'time': 0.023753264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:26.843" endtime="20201115 22:01:26.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.859" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.847" endtime="20201115 22:01:26.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.864" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.863" endtime="20201115 22:01:26.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.866" level="INFO">VALUE: [4.474999999999965e-05, 4.473600000000008e-05, 4.469400000000137e-05, 4.469400000000137e-05, 4.473600000000008e-05, 4.4708999999996946e-05, 4.473600000000008e-05, 4.4695000000000845e-05, 4.4694999999997376e-05, 4.470799999999747e-05, 4.473600000000355e-05, 4.474999999999618e-05, 4.46939999999979e-05, 4.469400000000484e-05, 4.472199999999704e-05, 4.4708999999996946e-05, 4.470799999999747e-05, 4.4695000000004315e-05, 4.4652999999998666e-05, 4.473600000000355e-05, 4.470799999999747e-05, 4.4680999999997806e-05, 4.4638999999999096e-05, 4.4694999999997376e-05, 4.4695000000004315e-05, 4.476300000000322e-05, 4.470799999999747e-05, 4.4666999999998236e-05, 4.4694999999997376e-05, 4.4695000000004315e-05, 4.469400000000484e-05, 4.4708999999996946e-05, 4.472200000000398e-05, 4.469400000000484e-05, 4.46939999999979e-05, 4.473600000000355e-05, 4.4695000000011254e-05, 4.470800000000441e-05, 4.468000000000527e-05, 4.46939999999979e-05, 4.4722999999996516e-05, 4.470800000000441e-05, 4.4681000000004745e-05, 4.472199999999704e-05, 4.46939999999979e-05, 4.46939999999979e-05, 4.470800000000441e-05, 4.472199999999704e-05, 4.4695000000011254e-05, 4.4666999999998236e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.865" endtime="20201115 22:01:26.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.860" endtime="20201115 22:01:26.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.870" endtime="20201115 22:01:26.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.873" endtime="20201115 22:01:26.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.872" endtime="20201115 22:01:26.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.868" endtime="20201115 22:01:26.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.453" endtime="20201115 22:01:26.894"></status>
</kw>
<msg timestamp="20201115 22:01:26.894" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.903" endtime="20201115 22:01:26.971"></status>
</kw>
<msg timestamp="20201115 22:01:26.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.902" endtime="20201115 22:01:26.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.977" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.974" endtime="20201115 22:01:26.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.979" endtime="20201115 22:01:26.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.899" endtime="20201115 22:01:26.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.897" endtime="20201115 22:01:26.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.998" endtime="20201115 22:01:27.292"></status>
</kw>
<msg timestamp="20201115 22:01:27.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.995" endtime="20201115 22:01:27.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.296" endtime="20201115 22:01:27.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.304" endtime="20201115 22:01:27.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.989" endtime="20201115 22:01:27.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.986" endtime="20201115 22:01:27.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.311" level="INFO">${RESULT} = [{'time': 0.022700847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.477799999999879e-05, 'source_diff': 4.477799999999879e-05}, {'time': 0.023857542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.307" endtime="20201115 22:01:27.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.325" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.312" endtime="20201115 22:01:27.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.330" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.329" endtime="20201115 22:01:27.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.332" level="INFO">VALUE: [4.477799999999879e-05, 4.4709000000000415e-05, 4.474999999999965e-05, 4.469400000000137e-05, 4.472200000000051e-05, 4.470800000000094e-05, 4.4722999999999985e-05, 4.473600000000008e-05, 4.46939999999979e-05, 4.477800000000226e-05, 4.472199999999704e-05, 4.4694999999997376e-05, 4.477800000000226e-05, 4.473600000000355e-05, 4.469400000000484e-05, 4.4694999999997376e-05, 4.46939999999979e-05, 4.4722999999996516e-05, 4.4722999999996516e-05, 4.472200000000398e-05, 4.470800000000441e-05, 4.472199999999704e-05, 4.469400000000484e-05, 4.473600000000355e-05, 4.473600000000355e-05, 4.4652999999998666e-05, 4.4624999999999526e-05, 4.470799999999747e-05, 4.472199999999704e-05, 4.472199999999704e-05, 4.4708999999996946e-05, 4.473599999999661e-05, 4.472200000000398e-05, 4.472199999999704e-05, 4.473600000000355e-05, 4.470800000000441e-05, 4.470800000000441e-05, 4.465200000000613e-05, 4.470799999999053e-05, 4.4722999999996516e-05, 4.472200000001092e-05, 4.472200000001092e-05, 4.470800000000441e-05, 4.4722999999996516e-05, 4.4694999999997376e-05, 4.472199999999704e-05, 4.472199999999704e-05, 4.465299999999173e-05, 4.4666999999998236e-05, 4.470899999999001e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.331" endtime="20201115 22:01:27.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.326" endtime="20201115 22:01:27.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.336" endtime="20201115 22:01:27.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.339" endtime="20201115 22:01:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.338" endtime="20201115 22:01:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.334" endtime="20201115 22:01:27.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.895" endtime="20201115 22:01:27.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.094" endtime="20201115 22:01:27.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.093" endtime="20201115 22:01:27.360"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.363" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.371" endtime="20201115 22:01:27.440"></status>
</kw>
<msg timestamp="20201115 22:01:27.441" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.370" endtime="20201115 22:01:27.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.442" endtime="20201115 22:01:27.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.444" endtime="20201115 22:01:27.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.367" endtime="20201115 22:01:27.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.365" endtime="20201115 22:01:27.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.454" endtime="20201115 22:01:27.740"></status>
</kw>
<msg timestamp="20201115 22:01:27.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.452" endtime="20201115 22:01:27.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.744" endtime="20201115 22:01:27.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.753" endtime="20201115 22:01:27.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.449" endtime="20201115 22:01:27.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.448" endtime="20201115 22:01:27.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.759" level="INFO">${RESULT} = [{'time': 0.024787486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5388999999999846e-05, 'source_diff': 4.5388999999999846e-05}, {'time': 0.025999014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:27.756" endtime="20201115 22:01:27.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.772" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.760" endtime="20201115 22:01:27.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.777" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.776" endtime="20201115 22:01:27.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.780" level="INFO">VALUE: [4.5388999999999846e-05, 4.527799999999929e-05, 4.526400000000319e-05, 4.527799999999929e-05, 4.527799999999929e-05, 4.527799999999929e-05, 4.527800000000276e-05, 4.526399999999625e-05, 4.527699999999635e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.524999999999668e-05, 4.526299999999678e-05, 4.524999999999668e-05, 4.53060000000019e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.53060000000019e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.526400000000319e-05, 4.527800000000276e-05, 4.526399999999625e-05, 4.527799999999582e-05, 4.527700000000329e-05, 4.522199999999754e-05, 4.529100000000286e-05, 4.526400000000319e-05, 4.527800000000276e-05, 4.527699999999635e-05, 4.526400000000319e-05, 4.527699999999635e-05, 4.526400000000319e-05, 4.534800000000061e-05, 4.526400000000319e-05, 4.527799999999582e-05, 4.527699999999635e-05, 4.530599999999496e-05, 4.52780000000097e-05, 4.526400000000319e-05, 4.529199999998845e-05, 4.529200000000233e-05, 4.527799999999582e-05, 4.526400000000319e-05, 4.523600000000405e-05, 4.529200000000233e-05, 4.529100000000286e-05, 4.530600000000884e-05, 4.527799999999582e-05, 4.526400000000319e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.778" endtime="20201115 22:01:27.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.773" endtime="20201115 22:01:27.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.783" endtime="20201115 22:01:27.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.787" endtime="20201115 22:01:27.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.785" endtime="20201115 22:01:27.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.782" endtime="20201115 22:01:27.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.363" endtime="20201115 22:01:27.807"></status>
</kw>
<msg timestamp="20201115 22:01:27.808" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.816" endtime="20201115 22:01:27.885"></status>
</kw>
<msg timestamp="20201115 22:01:27.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.815" endtime="20201115 22:01:27.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.888" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.887" endtime="20201115 22:01:27.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.889" endtime="20201115 22:01:27.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.812" endtime="20201115 22:01:27.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.810" endtime="20201115 22:01:27.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.899" endtime="20201115 22:01:28.185"></status>
</kw>
<msg timestamp="20201115 22:01:28.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.897" endtime="20201115 22:01:28.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.189" endtime="20201115 22:01:28.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.198" endtime="20201115 22:01:28.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.894" endtime="20201115 22:01:28.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.893" endtime="20201115 22:01:28.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.204" level="INFO">${RESULT} = [{'time': 0.022532889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5347000000001136e-05, 'source_diff': 4.5347000000001136e-05}, {'time': 0.023739292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:28.201" endtime="20201115 22:01:28.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.217" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.205" endtime="20201115 22:01:28.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.222" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.221" endtime="20201115 22:01:28.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.225" level="INFO">VALUE: [4.5347000000001136e-05, 4.5222999999997016e-05, 4.526399999999972e-05, 4.527799999999929e-05, 4.53060000000019e-05, 4.526399999999972e-05, 4.527800000000276e-05, 4.529199999999886e-05, 4.527699999999635e-05, 4.525000000000362e-05, 4.524999999999668e-05, 4.523600000000405e-05, 4.526400000000319e-05, 4.527799999999582e-05, 4.524999999999668e-05, 4.530500000000243e-05, 4.529099999999592e-05, 4.527800000000276e-05, 4.526299999999678e-05, 4.523600000000405e-05, 4.524999999999668e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.526400000000319e-05, 4.525000000000362e-05, 4.527800000000276e-05, 4.522199999999754e-05, 4.5319000000001997e-05, 4.527799999999582e-05, 4.527799999999582e-05, 4.529200000000233e-05, 4.529099999999592e-05, 4.527800000000276e-05, 4.525000000000362e-05, 4.529200000000233e-05, 4.526400000000319e-05, 4.522199999999754e-05, 4.526400000000319e-05, 4.529100000000286e-05, 4.526400000000319e-05, 4.524999999999668e-05, 4.527699999999635e-05, 4.524999999999668e-05, 4.527799999999582e-05, 4.5319000000001997e-05, 4.524999999999668e-05, 4.5209000000004385e-05, 4.527799999999582e-05, 4.529100000000286e-05, 4.5277000000010226e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.223" endtime="20201115 22:01:28.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.219" endtime="20201115 22:01:28.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.228" endtime="20201115 22:01:28.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.231" endtime="20201115 22:01:28.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.230" endtime="20201115 22:01:28.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.226" endtime="20201115 22:01:28.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.808" endtime="20201115 22:01:28.252"></status>
</kw>
<msg timestamp="20201115 22:01:28.252" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.261" endtime="20201115 22:01:28.330"></status>
</kw>
<msg timestamp="20201115 22:01:28.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.260" endtime="20201115 22:01:28.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.333" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.332" endtime="20201115 22:01:28.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.334" endtime="20201115 22:01:28.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.257" endtime="20201115 22:01:28.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.255" endtime="20201115 22:01:28.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.343" endtime="20201115 22:01:28.650"></status>
</kw>
<msg timestamp="20201115 22:01:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.342" endtime="20201115 22:01:28.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.654" endtime="20201115 22:01:28.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.662" endtime="20201115 22:01:28.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.339" endtime="20201115 22:01:28.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.337" endtime="20201115 22:01:28.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.669" level="INFO">${RESULT} = [{'time': 0.022557431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.533400000000104e-05, 'source_diff': 4.533400000000104e-05}, {'time': 0.023765806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.665" endtime="20201115 22:01:28.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.683" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.670" endtime="20201115 22:01:28.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.687" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.686" endtime="20201115 22:01:28.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.690" level="INFO">VALUE: [4.533400000000104e-05, 4.529199999999886e-05, 4.527800000000276e-05, 4.525000000000015e-05, 4.536099999999724e-05, 4.527799999999929e-05, 4.527699999999982e-05, 4.526399999999972e-05, 4.526400000000319e-05, 4.526399999999625e-05, 4.527700000000329e-05, 4.527800000000276e-05, 4.526399999999625e-05, 4.532000000000147e-05, 4.527800000000276e-05, 4.527699999999635e-05, 4.526400000000319e-05, 4.524999999999668e-05, 4.526400000000319e-05, 4.533299999999463e-05, 4.527800000000276e-05, 4.529200000000233e-05, 4.529199999999539e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.530500000000243e-05, 4.529200000000233e-05, 4.529199999999539e-05, 4.526399999999625e-05, 4.527800000000276e-05, 4.53060000000019e-05, 4.525000000000362e-05, 4.525000000000362e-05, 4.529099999998898e-05, 4.527799999999582e-05, 4.529200000000233e-05, 4.527799999999582e-05, 4.525000000001056e-05, 4.527799999999582e-05, 4.527799999999582e-05, 4.526400000000319e-05, 4.5277000000010226e-05, 4.527799999999582e-05, 4.52780000000097e-05, 4.524999999999668e-05, 4.527799999999582e-05, 4.52780000000097e-05, 4.520800000000491e-05, 4.526400000000319e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.688" endtime="20201115 22:01:28.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.683" endtime="20201115 22:01:28.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.693" endtime="20201115 22:01:28.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.696" endtime="20201115 22:01:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.695" endtime="20201115 22:01:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.691" endtime="20201115 22:01:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.253" endtime="20201115 22:01:28.717"></status>
</kw>
<msg timestamp="20201115 22:01:28.717" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.726" endtime="20201115 22:01:28.795"></status>
</kw>
<msg timestamp="20201115 22:01:28.795" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.725" endtime="20201115 22:01:28.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.797" endtime="20201115 22:01:28.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.799" endtime="20201115 22:01:28.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.722" endtime="20201115 22:01:28.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.720" endtime="20201115 22:01:28.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.808" endtime="20201115 22:01:29.095"></status>
</kw>
<msg timestamp="20201115 22:01:29.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.806" endtime="20201115 22:01:29.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.100" endtime="20201115 22:01:29.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.108" endtime="20201115 22:01:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.804" endtime="20201115 22:01:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.802" endtime="20201115 22:01:29.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.115" level="INFO">${RESULT} = [{'time': 0.022563208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5347000000001136e-05, 'source_diff': 4.5347000000001136e-05}, {'time': 0.023769639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.111" endtime="20201115 22:01:29.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.129" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.116" endtime="20201115 22:01:29.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.134" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.133" endtime="20201115 22:01:29.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.136" level="INFO">VALUE: [4.5347000000001136e-05, 4.529199999999886e-05, 4.526399999999972e-05, 4.527699999999982e-05, 4.526399999999972e-05, 4.525000000000015e-05, 4.525000000000015e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.525000000000362e-05, 4.526400000000319e-05, 4.529100000000286e-05, 4.527700000000329e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.5319000000001997e-05, 4.527800000000276e-05, 4.526399999999625e-05, 4.529200000000233e-05, 4.529200000000233e-05, 4.526399999999625e-05, 4.527700000000329e-05, 4.5347000000001136e-05, 4.529200000000233e-05, 4.526400000000319e-05, 4.522199999999754e-05, 4.524999999999668e-05, 4.527799999999582e-05, 4.527800000000276e-05, 4.533299999999463e-05, 4.527799999999582e-05, 4.529100000000286e-05, 4.532000000000147e-05, 4.5319000000001997e-05, 4.529100000000286e-05, 4.5347000000001136e-05, 4.529100000000286e-05, 4.523599999999017e-05, 4.536199999999324e-05, 4.526400000000319e-05, 4.527699999999635e-05, 4.523600000000405e-05, 4.5333000000008505e-05, 4.520800000000491e-05, 4.520800000000491e-05, 4.5319000000001997e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.135" endtime="20201115 22:01:29.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.130" endtime="20201115 22:01:29.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.140" endtime="20201115 22:01:29.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.143" endtime="20201115 22:01:29.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.141" endtime="20201115 22:01:29.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.138" endtime="20201115 22:01:29.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.718" endtime="20201115 22:01:29.164"></status>
</kw>
<msg timestamp="20201115 22:01:29.164" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.173" endtime="20201115 22:01:29.242"></status>
</kw>
<msg timestamp="20201115 22:01:29.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.171" endtime="20201115 22:01:29.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.243" endtime="20201115 22:01:29.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.246" endtime="20201115 22:01:29.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.169" endtime="20201115 22:01:29.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.167" endtime="20201115 22:01:29.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.255" endtime="20201115 22:01:29.560"></status>
</kw>
<msg timestamp="20201115 22:01:29.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.253" endtime="20201115 22:01:29.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.569" endtime="20201115 22:01:29.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.578" endtime="20201115 22:01:29.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.251" endtime="20201115 22:01:29.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.249" endtime="20201115 22:01:29.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.584" level="INFO">${RESULT} = [{'time': 0.022491264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5347000000001136e-05, 'source_diff': 4.5347000000001136e-05}, {'time': 0.023697542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:29.581" endtime="20201115 22:01:29.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.597" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.585" endtime="20201115 22:01:29.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.602" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.601" endtime="20201115 22:01:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.604" level="INFO">VALUE: [4.5347000000001136e-05, 4.526399999999972e-05, 4.529099999999939e-05, 4.527799999999929e-05, 4.529199999999886e-05, 4.529200000000233e-05, 4.529099999999939e-05, 4.529199999999886e-05, 4.526299999999678e-05, 4.529100000000286e-05, 4.529200000000233e-05, 4.526399999999625e-05, 4.527799999999582e-05, 4.526399999999625e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.530500000000243e-05, 4.527800000000276e-05, 4.527799999999582e-05, 4.5208999999997446e-05, 4.525000000000362e-05, 4.527800000000276e-05, 4.527800000000276e-05, 4.527700000000329e-05, 4.526399999999625e-05, 4.529199999999539e-05, 4.526400000000319e-05, 4.527800000000276e-05, 4.526299999999678e-05, 4.525000000000362e-05, 4.527700000000329e-05, 4.526400000000319e-05, 4.527800000000276e-05, 4.523600000000405e-05, 4.522200000001142e-05, 4.525000000001056e-05, 4.532000000000147e-05, 4.526399999998931e-05, 4.527799999999582e-05, 4.526399999998931e-05, 4.529100000000286e-05, 4.526399999998931e-05, 4.529200000000233e-05, 4.527799999999582e-05, 4.523600000000405e-05, 4.526400000000319e-05, 4.525000000001056e-05, 4.527799999999582e-05, 4.527799999999582e-05, 4.526399999998931e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.603" endtime="20201115 22:01:29.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.598" endtime="20201115 22:01:29.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.608" endtime="20201115 22:01:29.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.611" endtime="20201115 22:01:29.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.609" endtime="20201115 22:01:29.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.606" endtime="20201115 22:01:29.631"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.164" endtime="20201115 22:01:29.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.362" endtime="20201115 22:01:29.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.361" endtime="20201115 22:01:29.632"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.634" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.643" endtime="20201115 22:01:29.715"></status>
</kw>
<msg timestamp="20201115 22:01:29.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.642" endtime="20201115 22:01:29.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.717" endtime="20201115 22:01:29.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.719" endtime="20201115 22:01:29.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.639" endtime="20201115 22:01:29.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.637" endtime="20201115 22:01:29.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.729" endtime="20201115 22:01:30.016"></status>
</kw>
<msg timestamp="20201115 22:01:30.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.727" endtime="20201115 22:01:30.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024817556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024863458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.020" endtime="20201115 22:01:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.028" endtime="20201115 22:01:30.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.724" endtime="20201115 22:01:30.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.723" endtime="20201115 22:01:30.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.035" level="INFO">${RESULT} = [{'time': 0.024863458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.590200000000044e-05, 'source_diff': 4.590200000000044e-05}, {'time': 0.026139389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.032" endtime="20201115 22:01:30.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.048" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.036" endtime="20201115 22:01:30.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.053" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.052" endtime="20201115 22:01:30.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.055" level="INFO">VALUE: [4.590200000000044e-05, 4.58199999999985e-05, 4.582000000000197e-05, 4.581899999999903e-05, 4.58329999999986e-05, 4.579200000000283e-05, 4.580599999999546e-05, 4.581999999999503e-05, 4.5847000000001636e-05, 4.58190000000025e-05, 4.5847000000001636e-05, 4.58190000000025e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.58190000000025e-05, 4.583400000000154e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.58060000000024e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.5833000000002067e-05, 4.583299999999513e-05, 4.586199999999374e-05, 4.583299999999513e-05, 4.58339999999946e-05, 4.5861000000001206e-05, 4.584800000000111e-05, 4.586099999999427e-05, 4.5833000000002067e-05, 4.5833000000009005e-05, 4.584800000000111e-05, 4.582000000000197e-05, 4.583299999999513e-05, 4.580499999999599e-05, 4.5847000000001636e-05, 4.583299999999513e-05, 4.577799999999632e-05, 4.58339999999946e-05, 4.5847000000001636e-05, 4.58190000000025e-05, 4.5833000000009005e-05, 4.583400000000848e-05, 4.5833000000009005e-05, 4.58339999999946e-05, 4.58339999999946e-05, 4.582000000000197e-05, 4.583400000000848e-05, 4.576400000000369e-05, 4.584800000000111e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.054" endtime="20201115 22:01:30.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.049" endtime="20201115 22:01:30.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.058" endtime="20201115 22:01:30.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.062" endtime="20201115 22:01:30.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.060" endtime="20201115 22:01:30.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.057" endtime="20201115 22:01:30.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.635" endtime="20201115 22:01:30.083"></status>
</kw>
<msg timestamp="20201115 22:01:30.083" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.092" endtime="20201115 22:01:30.164"></status>
</kw>
<msg timestamp="20201115 22:01:30.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.090" endtime="20201115 22:01:30.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.165" endtime="20201115 22:01:30.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.168" endtime="20201115 22:01:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.088" endtime="20201115 22:01:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.085" endtime="20201115 22:01:30.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.177" endtime="20201115 22:01:30.464"></status>
</kw>
<msg timestamp="20201115 22:01:30.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.176" endtime="20201115 22:01:30.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.468" endtime="20201115 22:01:30.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.476" endtime="20201115 22:01:30.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.173" endtime="20201115 22:01:30.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.171" endtime="20201115 22:01:30.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.483" level="INFO">${RESULT} = [{'time': 0.022663944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.587499999999731e-05, 'source_diff': 4.587499999999731e-05}, {'time': 0.023942111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:30.480" endtime="20201115 22:01:30.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.496" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.484" endtime="20201115 22:01:30.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.501" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.500" endtime="20201115 22:01:30.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.503" level="INFO">VALUE: [4.587499999999731e-05, 4.584699999999817e-05, 4.581899999999903e-05, 4.581899999999903e-05, 4.580599999999893e-05, 4.58199999999985e-05, 4.577799999999979e-05, 4.58469999999947e-05, 4.581899999999556e-05, 4.583400000000154e-05, 4.583299999999513e-05, 4.5847000000001636e-05, 4.577699999999685e-05, 4.584799999999417e-05, 4.5833000000002067e-05, 4.582000000000197e-05, 4.581899999999556e-05, 4.5861000000001206e-05, 4.586200000000068e-05, 4.586099999999427e-05, 4.579200000000283e-05, 4.58060000000024e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.5861000000001206e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.583400000000154e-05, 4.582000000000197e-05, 4.5833000000002067e-05, 4.581899999999556e-05, 4.584800000000111e-05, 4.577799999999632e-05, 4.583299999999513e-05, 4.5847000000001636e-05, 4.583400000000848e-05, 4.5847000000001636e-05, 4.5847000000001636e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.582000000000197e-05, 4.5875000000000776e-05, 4.5847000000001636e-05, 4.584800000000111e-05, 4.583299999999513e-05, 4.579199999998895e-05, 4.579200000000283e-05, 4.582000000000197e-05, 4.582000000000197e-05, 4.5833000000009005e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.502" endtime="20201115 22:01:30.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.497" endtime="20201115 22:01:30.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.506" endtime="20201115 22:01:30.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.510" endtime="20201115 22:01:30.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.508" endtime="20201115 22:01:30.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.505" endtime="20201115 22:01:30.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.083" endtime="20201115 22:01:30.531"></status>
</kw>
<msg timestamp="20201115 22:01:30.531" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.540" endtime="20201115 22:01:30.612"></status>
</kw>
<msg timestamp="20201115 22:01:30.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.538" endtime="20201115 22:01:30.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.615" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.614" endtime="20201115 22:01:30.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.616" endtime="20201115 22:01:30.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.536" endtime="20201115 22:01:30.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.534" endtime="20201115 22:01:30.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.626" endtime="20201115 22:01:30.928"></status>
</kw>
<msg timestamp="20201115 22:01:30.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023242306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.624" endtime="20201115 22:01:30.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023196431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023242306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.932" endtime="20201115 22:01:30.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.940" endtime="20201115 22:01:30.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.621" endtime="20201115 22:01:30.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.620" endtime="20201115 22:01:30.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.947" level="INFO">${RESULT} = [{'time': 0.023242306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5875000000000776e-05, 'source_diff': 4.5875000000000776e-05}, {'time': 0.024511833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.944" endtime="20201115 22:01:30.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.962" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.948" endtime="20201115 22:01:30.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.966" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.965" endtime="20201115 22:01:30.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.969" level="INFO">VALUE: [4.5875000000000776e-05, 4.58329999999986e-05, 4.583399999999807e-05, 4.5833000000002067e-05, 4.576400000000022e-05, 4.58329999999986e-05, 4.58190000000025e-05, 4.576400000000369e-05, 4.5875000000000776e-05, 4.583400000000154e-05, 4.583400000000154e-05, 4.5861000000001206e-05, 4.584800000000111e-05, 4.583400000000154e-05, 4.58060000000024e-05, 4.581999999999503e-05, 4.58190000000025e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.5833000000002067e-05, 4.583400000000154e-05, 4.583299999999513e-05, 4.583400000000154e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.5847000000001636e-05, 4.586200000000068e-05, 4.5861000000001206e-05, 4.5847000000001636e-05, 4.590200000000044e-05, 4.579199999999589e-05, 4.58339999999946e-05, 4.583299999999513e-05, 4.58339999999946e-05, 4.5847000000001636e-05, 4.58339999999946e-05, 4.58339999999946e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.5833000000009005e-05, 4.5833000000009005e-05, 4.583400000000848e-05, 4.580600000000934e-05, 4.5847000000001636e-05, 4.583299999999513e-05, 4.577799999999632e-05, 4.584800000000111e-05, 4.580599999999546e-05, 4.583299999999513e-05, 4.58190000000025e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.968" endtime="20201115 22:01:30.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.963" endtime="20201115 22:01:30.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.972" endtime="20201115 22:01:30.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.975" endtime="20201115 22:01:30.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.974" endtime="20201115 22:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.970" endtime="20201115 22:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.532" endtime="20201115 22:01:30.997"></status>
</kw>
<msg timestamp="20201115 22:01:30.997" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.006" endtime="20201115 22:01:31.078"></status>
</kw>
<msg timestamp="20201115 22:01:31.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.004" endtime="20201115 22:01:31.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.079" endtime="20201115 22:01:31.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.082" endtime="20201115 22:01:31.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.002" endtime="20201115 22:01:31.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.000" endtime="20201115 22:01:31.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.091" endtime="20201115 22:01:31.379"></status>
</kw>
<msg timestamp="20201115 22:01:31.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02315275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.090" endtime="20201115 22:01:31.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02315275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.383" endtime="20201115 22:01:31.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.391" endtime="20201115 22:01:31.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.087" endtime="20201115 22:01:31.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.085" endtime="20201115 22:01:31.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.398" level="INFO">${RESULT} = [{'time': 0.023198653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5902999999999916e-05, 'source_diff': 4.5902999999999916e-05}, {'time': 0.024469, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:31.394" endtime="20201115 22:01:31.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.411" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.399" endtime="20201115 22:01:31.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.416" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.414" endtime="20201115 22:01:31.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.418" level="INFO">VALUE: [4.5902999999999916e-05, 4.58190000000025e-05, 4.584699999999817e-05, 4.584699999999817e-05, 4.577799999999979e-05, 4.580599999999893e-05, 4.5847000000001636e-05, 4.582000000000197e-05, 4.5833000000002067e-05, 4.58469999999947e-05, 4.579100000000336e-05, 4.583400000000154e-05, 4.583400000000154e-05, 4.5833000000002067e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.581899999999556e-05, 4.5847000000001636e-05, 4.576300000000422e-05, 4.5875000000000776e-05, 4.5833000000002067e-05, 4.583299999999513e-05, 4.58060000000024e-05, 4.583299999999513e-05, 4.583299999999513e-05, 4.58190000000025e-05, 4.580599999999546e-05, 4.581899999999556e-05, 4.58190000000025e-05, 4.582000000000197e-05, 4.580499999999599e-05, 4.583299999999513e-05, 4.582000000000197e-05, 4.583299999999513e-05, 4.5847000000001636e-05, 4.580599999999546e-05, 4.582000000000197e-05, 4.58190000000025e-05, 4.58190000000025e-05, 4.58190000000025e-05, 4.586099999999427e-05, 4.579200000000283e-05, 4.58190000000025e-05, 4.5833000000009005e-05, 4.582000000000197e-05, 4.58339999999946e-05, 4.5847000000001636e-05, 4.583299999999513e-05, 4.583299999999513e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.417" endtime="20201115 22:01:31.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.412" endtime="20201115 22:01:31.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.422" endtime="20201115 22:01:31.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.425" endtime="20201115 22:01:31.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.424" endtime="20201115 22:01:31.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.420" endtime="20201115 22:01:31.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.997" endtime="20201115 22:01:31.446"></status>
</kw>
<msg timestamp="20201115 22:01:31.446" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.455" endtime="20201115 22:01:31.527"></status>
</kw>
<msg timestamp="20201115 22:01:31.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.453" endtime="20201115 22:01:31.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.529" endtime="20201115 22:01:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.531" endtime="20201115 22:01:31.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.451" endtime="20201115 22:01:31.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.449" endtime="20201115 22:01:31.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.540" endtime="20201115 22:01:31.843"></status>
</kw>
<msg timestamp="20201115 22:01:31.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02262575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.539" endtime="20201115 22:01:31.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02262575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.847" endtime="20201115 22:01:31.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.855" endtime="20201115 22:01:31.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.536" endtime="20201115 22:01:31.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.534" endtime="20201115 22:01:31.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.862" level="INFO">${RESULT} = [{'time': 0.022671639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5889000000000346e-05, 'source_diff': 4.5889000000000346e-05}, {'time': 0.023945306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:31.859" endtime="20201115 22:01:31.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.875" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.863" endtime="20201115 22:01:31.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.880" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.879" endtime="20201115 22:01:31.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.882" level="INFO">VALUE: [4.5889000000000346e-05, 4.577799999999979e-05, 4.5847000000001636e-05, 4.583400000000154e-05, 4.58199999999985e-05, 4.577799999999979e-05, 4.584699999999817e-05, 4.5847000000001636e-05, 4.581999999999503e-05, 4.58060000000024e-05, 4.581999999999503e-05, 4.5833000000002067e-05, 4.583400000000154e-05, 4.5902999999999916e-05, 4.58190000000025e-05, 4.58190000000025e-05, 4.574999999999718e-05, 4.5833000000002067e-05, 4.58339999999946e-05, 4.583299999999513e-05, 4.581899999999556e-05, 4.5833000000002067e-05, 4.58190000000025e-05, 4.5847000000001636e-05, 4.583299999999513e-05, 4.580599999999546e-05, 4.576399999999675e-05, 4.58190000000025e-05, 4.5847000000001636e-05, 4.5902999999999916e-05, 4.5833000000002067e-05, 4.5833000000002067e-05, 4.58190000000025e-05, 4.58190000000025e-05, 4.583299999999513e-05, 4.5833000000009005e-05, 4.58339999999946e-05, 4.579199999998895e-05, 4.583299999999513e-05, 4.5861000000008145e-05, 4.583299999999513e-05, 4.58339999999946e-05, 4.582000000000197e-05, 4.583299999999513e-05, 4.58339999999946e-05, 4.58190000000025e-05, 4.58339999999946e-05, 4.582000000000197e-05, 4.580599999999546e-05, 4.580599999999546e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.881" endtime="20201115 22:01:31.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.876" endtime="20201115 22:01:31.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.886" endtime="20201115 22:01:31.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.889" endtime="20201115 22:01:31.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.888" endtime="20201115 22:01:31.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.884" endtime="20201115 22:01:31.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.447" endtime="20201115 22:01:31.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.633" endtime="20201115 22:01:31.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.632" endtime="20201115 22:01:31.911"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.913" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.922" endtime="20201115 22:01:31.997"></status>
</kw>
<msg timestamp="20201115 22:01:31.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.920" endtime="20201115 22:01:31.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.998" endtime="20201115 22:01:32.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.001" endtime="20201115 22:01:32.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.917" endtime="20201115 22:01:32.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.915" endtime="20201115 22:01:32.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.010" endtime="20201115 22:01:32.297"></status>
</kw>
<msg timestamp="20201115 22:01:32.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.008" endtime="20201115 22:01:32.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024907444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.301" endtime="20201115 22:01:32.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.309" endtime="20201115 22:01:32.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.006" endtime="20201115 22:01:32.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.004" endtime="20201115 22:01:32.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.316" level="INFO">${RESULT} = [{'time': 0.024953889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6444999999999126e-05, 'source_diff': 4.6444999999999126e-05}, {'time': 0.026283944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.312" endtime="20201115 22:01:32.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.329" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.317" endtime="20201115 22:01:32.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.334" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.333" endtime="20201115 22:01:32.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.337" level="INFO">VALUE: [4.6444999999999126e-05, 4.638800000000137e-05, 4.6319999999999e-05, 4.6375000000001276e-05, 4.637499999999781e-05, 4.637499999999434e-05, 4.647199999999879e-05, 4.636099999999477e-05, 4.632000000000247e-05, 4.6375000000001276e-05, 4.643000000000008e-05, 4.6389000000000846e-05, 4.638800000000137e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.6361000000001706e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.644399999999965e-05, 4.6389000000000846e-05, 4.640299999999348e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.634799999999467e-05, 4.6389000000000846e-05, 4.6333000000002567e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.6389000000007785e-05, 4.6347000000002136e-05, 4.6389000000007785e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.632000000000247e-05, 4.6389000000007785e-05, 4.6375000000001276e-05, 4.6389000000007785e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6347000000002136e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.643000000000008e-05, 4.638899999999391e-05, 4.632000000000247e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.335" endtime="20201115 22:01:32.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.330" endtime="20201115 22:01:32.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.340" endtime="20201115 22:01:32.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.343" endtime="20201115 22:01:32.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.342" endtime="20201115 22:01:32.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.338" endtime="20201115 22:01:32.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.913" endtime="20201115 22:01:32.364"></status>
</kw>
<msg timestamp="20201115 22:01:32.364" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.373" endtime="20201115 22:01:32.449"></status>
</kw>
<msg timestamp="20201115 22:01:32.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.372" endtime="20201115 22:01:32.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.452" endtime="20201115 22:01:32.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.458" endtime="20201115 22:01:32.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.369" endtime="20201115 22:01:32.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.367" endtime="20201115 22:01:32.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.477" endtime="20201115 22:01:32.770"></status>
</kw>
<msg timestamp="20201115 22:01:32.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:32.473" endtime="20201115 22:01:32.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:32.774" endtime="20201115 22:01:32.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.782" endtime="20201115 22:01:32.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.468" endtime="20201115 22:01:32.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.464" endtime="20201115 22:01:32.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.789" level="INFO">${RESULT} = [{'time': 0.022661958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.645799999999922e-05, 'source_diff': 4.645799999999922e-05}, {'time': 0.023990306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:32.785" endtime="20201115 22:01:32.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.804" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.790" endtime="20201115 22:01:32.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.809" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.807" endtime="20201115 22:01:32.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.811" level="INFO">VALUE: [4.645799999999922e-05, 4.637499999999781e-05, 4.6389000000000846e-05, 4.6403000000000416e-05, 4.6361000000001706e-05, 4.638899999999738e-05, 4.6389000000000846e-05, 4.631999999999553e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.636099999999477e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6389000000000846e-05, 4.636099999999477e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6347000000002136e-05, 4.6375000000001276e-05, 4.637499999999434e-05, 4.6361000000001706e-05, 4.6375000000001276e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.640200000000094e-05, 4.6361000000001706e-05, 4.6347000000002136e-05, 4.6389000000000846e-05, 4.6347000000002136e-05, 4.6347000000002136e-05, 4.638899999999391e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6361000000008645e-05, 4.6389000000007785e-05, 4.6403000000000416e-05, 4.6347000000002136e-05, 4.638899999999391e-05, 4.636099999999477e-05, 4.641600000000745e-05, 4.638899999999391e-05, 4.6403000000000416e-05, 4.636200000000812e-05, 4.63749999999874e-05, 4.638899999999391e-05, 4.643000000000008e-05, 4.6375000000001276e-05, 4.6389000000007785e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.810" endtime="20201115 22:01:32.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.805" endtime="20201115 22:01:32.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.814" endtime="20201115 22:01:32.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.818" endtime="20201115 22:01:32.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.816" endtime="20201115 22:01:32.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.812" endtime="20201115 22:01:32.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.365" endtime="20201115 22:01:32.838"></status>
</kw>
<msg timestamp="20201115 22:01:32.839" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.847" endtime="20201115 22:01:32.922"></status>
</kw>
<msg timestamp="20201115 22:01:32.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.846" endtime="20201115 22:01:32.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.925" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.924" endtime="20201115 22:01:32.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.926" endtime="20201115 22:01:32.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.843" endtime="20201115 22:01:32.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.841" endtime="20201115 22:01:32.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.935" endtime="20201115 22:01:33.221"></status>
</kw>
<msg timestamp="20201115 22:01:33.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.934" endtime="20201115 22:01:33.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022573083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.225" endtime="20201115 22:01:33.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.233" endtime="20201115 22:01:33.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.931" endtime="20201115 22:01:33.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.930" endtime="20201115 22:01:33.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.240" level="INFO">${RESULT} = [{'time': 0.022573083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.647200000000226e-05, 'source_diff': 4.647200000000226e-05}, {'time': 0.023908486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.236" endtime="20201115 22:01:33.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.253" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.241" endtime="20201115 22:01:33.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.258" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.257" endtime="20201115 22:01:33.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.260" level="INFO">VALUE: [4.647200000000226e-05, 4.6416999999999986e-05, 4.6361000000001706e-05, 4.638899999999738e-05, 4.6361000000001706e-05, 4.637499999999781e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6389000000000846e-05, 4.640200000000094e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6389000000000846e-05, 4.633400000000204e-05, 4.636200000000118e-05, 4.6403000000000416e-05, 4.636200000000118e-05, 4.6444999999999126e-05, 4.640200000000094e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.6347000000002136e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.638899999999391e-05, 4.6375000000001276e-05, 4.644399999999965e-05, 4.641600000000051e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6387999999994434e-05, 4.638800000000831e-05, 4.638899999999391e-05, 4.638800000000831e-05, 4.6305000000010366e-05, 4.6361000000008645e-05, 4.640200000000094e-05, 4.638899999999391e-05, 4.6347000000002136e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.6389000000007785e-05, 4.633299999999563e-05, 4.636099999999477e-05, 4.6375000000001276e-05, 4.640200000000094e-05, 4.638899999999391e-05, 4.633299999999563e-05, 4.6361000000008645e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.259" endtime="20201115 22:01:33.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.254" endtime="20201115 22:01:33.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.263" endtime="20201115 22:01:33.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.267" endtime="20201115 22:01:33.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.265" endtime="20201115 22:01:33.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.262" endtime="20201115 22:01:33.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.839" endtime="20201115 22:01:33.288"></status>
</kw>
<msg timestamp="20201115 22:01:33.288" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.297" endtime="20201115 22:01:33.372"></status>
</kw>
<msg timestamp="20201115 22:01:33.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.295" endtime="20201115 22:01:33.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.373" endtime="20201115 22:01:33.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.376" endtime="20201115 22:01:33.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.293" endtime="20201115 22:01:33.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.291" endtime="20201115 22:01:33.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.385" endtime="20201115 22:01:33.670"></status>
</kw>
<msg timestamp="20201115 22:01:33.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.383" endtime="20201115 22:01:33.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.674" endtime="20201115 22:01:33.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.683" endtime="20201115 22:01:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.381" endtime="20201115 22:01:33.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.379" endtime="20201115 22:01:33.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.690" level="INFO">${RESULT} = [{'time': 0.022758917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6444999999999126e-05, 'source_diff': 4.6444999999999126e-05}, {'time': 0.024082931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.686" endtime="20201115 22:01:33.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.703" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.691" endtime="20201115 22:01:33.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.708" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.707" endtime="20201115 22:01:33.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.710" level="INFO">VALUE: [4.6444999999999126e-05, 4.638899999999738e-05, 4.636099999999824e-05, 4.6333000000002567e-05, 4.6375000000001276e-05, 4.6431000000003025e-05, 4.638800000000137e-05, 4.638800000000137e-05, 4.6403000000000416e-05, 4.638899999999391e-05, 4.640299999999348e-05, 4.6389000000000846e-05, 4.6361000000001706e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.6403000000000416e-05, 4.636200000000118e-05, 4.638899999999391e-05, 4.634800000000161e-05, 4.6389000000000846e-05, 4.645799999999922e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.6403000000000416e-05, 4.633400000000204e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.63749999999874e-05, 4.638899999999391e-05, 4.638899999999391e-05, 4.63749999999874e-05, 4.6375000000001276e-05, 4.638899999999391e-05, 4.633299999999563e-05, 4.638899999999391e-05, 4.638899999999391e-05, 4.6389000000007785e-05, 4.638899999999391e-05, 4.645799999999922e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6417000000006925e-05, 4.633299999999563e-05, 4.640200000000094e-05, 4.6347000000002136e-05, 4.6375000000001276e-05, 4.6389000000007785e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.709" endtime="20201115 22:01:33.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.704" endtime="20201115 22:01:33.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.713" endtime="20201115 22:01:33.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.717" endtime="20201115 22:01:33.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.715" endtime="20201115 22:01:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.712" endtime="20201115 22:01:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.289" endtime="20201115 22:01:33.738"></status>
</kw>
<msg timestamp="20201115 22:01:33.738" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.747" endtime="20201115 22:01:33.822"></status>
</kw>
<msg timestamp="20201115 22:01:33.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.745" endtime="20201115 22:01:33.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.823" endtime="20201115 22:01:33.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.826" endtime="20201115 22:01:33.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.742" endtime="20201115 22:01:33.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.740" endtime="20201115 22:01:33.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.835" endtime="20201115 22:01:34.137"></status>
</kw>
<msg timestamp="20201115 22:01:34.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.833" endtime="20201115 22:01:34.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.141" endtime="20201115 22:01:34.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.149" endtime="20201115 22:01:34.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.831" endtime="20201115 22:01:34.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.829" endtime="20201115 22:01:34.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.156" level="INFO">${RESULT} = [{'time': 0.022735583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.65000000000014e-05, 'source_diff': 4.65000000000014e-05}, {'time': 0.024071875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:34.153" endtime="20201115 22:01:34.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.170" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:34.157" endtime="20201115 22:01:34.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.174" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.173" endtime="20201115 22:01:34.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.177" level="INFO">VALUE: [4.65000000000014e-05, 4.6389000000000846e-05, 4.634699999999867e-05, 4.641600000000051e-05, 4.63329999999991e-05, 4.6389000000000846e-05, 4.6361000000001706e-05, 4.6389000000000846e-05, 4.6403000000000416e-05, 4.640200000000094e-05, 4.6375000000001276e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.640299999999348e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6389000000000846e-05, 4.632000000000247e-05, 4.641600000000051e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.6389000000000846e-05, 4.6375000000001276e-05, 4.631899999999606e-05, 4.6389000000000846e-05, 4.640200000000094e-05, 4.637499999999434e-05, 4.6403000000000416e-05, 4.6389000000007785e-05, 4.638899999999391e-05, 4.6387999999994434e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6361000000008645e-05, 4.63749999999874e-05, 4.638899999999391e-05, 4.6403000000000416e-05, 4.63749999999874e-05, 4.638899999999391e-05, 4.6403000000000416e-05, 4.6389000000007785e-05, 4.638899999999391e-05, 4.638899999999391e-05, 4.6389000000007785e-05, 4.6387999999994434e-05, 4.6403000000000416e-05, 4.636099999999477e-05, 4.638899999999391e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.175" endtime="20201115 22:01:34.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.170" endtime="20201115 22:01:34.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.180" endtime="20201115 22:01:34.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.183" endtime="20201115 22:01:34.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.182" endtime="20201115 22:01:34.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.178" endtime="20201115 22:01:34.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.738" endtime="20201115 22:01:34.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.912" endtime="20201115 22:01:34.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.911" endtime="20201115 22:01:34.204"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.207" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.215" endtime="20201115 22:01:34.293"></status>
</kw>
<msg timestamp="20201115 22:01:34.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.214" endtime="20201115 22:01:34.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.295" endtime="20201115 22:01:34.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.297" endtime="20201115 22:01:34.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.211" endtime="20201115 22:01:34.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.209" endtime="20201115 22:01:34.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.307" endtime="20201115 22:01:34.594"></status>
</kw>
<msg timestamp="20201115 22:01:34.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.305" endtime="20201115 22:01:34.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.598" endtime="20201115 22:01:34.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.606" endtime="20201115 22:01:34.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.303" endtime="20201115 22:01:34.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.301" endtime="20201115 22:01:34.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:34.613" level="INFO">${RESULT} = [{'time': 0.025023944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.699999999999843e-05, 'source_diff': 4.699999999999843e-05}, {'time': 0.026426917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:34.610" endtime="20201115 22:01:34.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:34.628" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:34.614" endtime="20201115 22:01:34.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.632" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:34.631" endtime="20201115 22:01:34.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.635" level="INFO">VALUE: [4.699999999999843e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.697199999999929e-05, 4.6903000000000916e-05, 4.694400000000015e-05, 4.697199999999929e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.693000000000058e-05, 4.691600000000101e-05, 4.698599999999886e-05, 4.690200000000144e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6903000000000916e-05, 4.694400000000015e-05, 4.69860000000058e-05, 4.697199999999929e-05, 4.6945000000006565e-05, 4.698599999999886e-05, 4.6903000000000916e-05, 4.691699999999355e-05, 4.693000000000058e-05, 4.694399999999321e-05, 4.6931000000000056e-05, 4.690200000000144e-05, 4.694399999999321e-05, 4.694400000000709e-05, 4.694400000000709e-05, 4.694499999999269e-05, 4.694400000000709e-05, 4.6958999999999196e-05, 4.6945000000006565e-05, 4.695799999999972e-05, 4.701299999999853e-05, 4.698599999999886e-05, 4.695799999999972e-05, 4.691699999999355e-05, 4.694499999999269e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.695799999999972e-05, 4.6945000000006565e-05]</msg>
<status status="PASS" starttime="20201115 22:01:34.633" endtime="20201115 22:01:34.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.629" endtime="20201115 22:01:34.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.638" endtime="20201115 22:01:34.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:34.641" endtime="20201115 22:01:34.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.640" endtime="20201115 22:01:34.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.636" endtime="20201115 22:01:34.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.207" endtime="20201115 22:01:34.662"></status>
</kw>
<msg timestamp="20201115 22:01:34.662" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.671" endtime="20201115 22:01:34.749"></status>
</kw>
<msg timestamp="20201115 22:01:34.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.670" endtime="20201115 22:01:34.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:34.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:34.758" endtime="20201115 22:01:34.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.760" endtime="20201115 22:01:34.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.667" endtime="20201115 22:01:34.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.665" endtime="20201115 22:01:34.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:34.769" endtime="20201115 22:01:35.074"></status>
</kw>
<msg timestamp="20201115 22:01:35.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:34.768" endtime="20201115 22:01:35.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.078" endtime="20201115 22:01:35.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.087" endtime="20201115 22:01:35.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.765" endtime="20201115 22:01:35.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.763" endtime="20201115 22:01:35.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.093" level="INFO">${RESULT} = [{'time': 0.022643917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.702800000000104e-05, 'source_diff': 4.702800000000104e-05}, {'time': 0.024045556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:35.090" endtime="20201115 22:01:35.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.107" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:35.094" endtime="20201115 22:01:35.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.111" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.110" endtime="20201115 22:01:35.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.114" level="INFO">VALUE: [4.702800000000104e-05, 4.6958999999999196e-05, 4.698600000000233e-05, 4.6958999999999196e-05, 4.692999999999711e-05, 4.6889000000001346e-05, 4.6958999999999196e-05, 4.698599999999886e-05, 4.6958999999999196e-05, 4.6944999999999626e-05, 4.6945000000006565e-05, 4.693000000000058e-05, 4.697199999999929e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.688899999999441e-05, 4.6929999999993643e-05, 4.6958999999999196e-05, 4.6944999999999626e-05, 4.6903000000000916e-05, 4.699999999999843e-05, 4.695799999999972e-05, 4.699999999999149e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.694399999999321e-05, 4.694499999999269e-05, 4.697199999999235e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.6945000000006565e-05, 4.694499999999269e-05, 4.694499999999269e-05, 4.695799999999972e-05, 4.691600000000795e-05, 4.694499999999269e-05, 4.697199999999235e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.694400000000709e-05, 4.694400000000709e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.112" endtime="20201115 22:01:35.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.108" endtime="20201115 22:01:35.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.117" endtime="20201115 22:01:35.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.120" endtime="20201115 22:01:35.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.119" endtime="20201115 22:01:35.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.115" endtime="20201115 22:01:35.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.663" endtime="20201115 22:01:35.141"></status>
</kw>
<msg timestamp="20201115 22:01:35.141" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.151" endtime="20201115 22:01:35.229"></status>
</kw>
<msg timestamp="20201115 22:01:35.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.149" endtime="20201115 22:01:35.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.230" endtime="20201115 22:01:35.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.233" endtime="20201115 22:01:35.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.146" endtime="20201115 22:01:35.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.144" endtime="20201115 22:01:35.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.242" endtime="20201115 22:01:35.529"></status>
</kw>
<msg timestamp="20201115 22:01:35.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.240" endtime="20201115 22:01:35.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023057639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.533" endtime="20201115 22:01:35.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.541" endtime="20201115 22:01:35.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.238" endtime="20201115 22:01:35.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.236" endtime="20201115 22:01:35.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:35.548" level="INFO">${RESULT} = [{'time': 0.023104667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.702799999999757e-05, 'source_diff': 4.702799999999757e-05}, {'time': 0.0244955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:35.545" endtime="20201115 22:01:35.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:35.562" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:35.549" endtime="20201115 22:01:35.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.566" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:35.565" endtime="20201115 22:01:35.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.569" level="INFO">VALUE: [4.702799999999757e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.6972999999998766e-05, 4.6959000000002665e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.6931000000000056e-05, 4.697199999999929e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.687499999999484e-05, 4.697200000000623e-05, 4.6958999999999196e-05, 4.694400000000015e-05, 4.6973000000005705e-05, 4.697199999999929e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.693000000000058e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6903000000000916e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.6945000000006565e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.694400000000709e-05, 4.694399999999321e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.702800000000451e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.694399999999321e-05, 4.6931000000000056e-05, 4.694399999999321e-05, 4.694399999999321e-05, 4.695799999999972e-05]</msg>
<status status="PASS" starttime="20201115 22:01:35.568" endtime="20201115 22:01:35.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.563" endtime="20201115 22:01:35.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.572" endtime="20201115 22:01:35.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:35.576" endtime="20201115 22:01:35.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.574" endtime="20201115 22:01:35.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.571" endtime="20201115 22:01:35.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.142" endtime="20201115 22:01:35.597"></status>
</kw>
<msg timestamp="20201115 22:01:35.597" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.606" endtime="20201115 22:01:35.684"></status>
</kw>
<msg timestamp="20201115 22:01:35.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.604" endtime="20201115 22:01:35.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:35.686" endtime="20201115 22:01:35.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.688" endtime="20201115 22:01:35.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.602" endtime="20201115 22:01:35.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.600" endtime="20201115 22:01:35.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.697" endtime="20201115 22:01:35.983"></status>
</kw>
<msg timestamp="20201115 22:01:35.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.696" endtime="20201115 22:01:35.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:35.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:35.987" endtime="20201115 22:01:35.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:35.996" endtime="20201115 22:01:35.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.693" endtime="20201115 22:01:35.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.691" endtime="20201115 22:01:35.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.002" level="INFO">${RESULT} = [{'time': 0.022855972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.698599999999886e-05, 'source_diff': 4.698599999999886e-05}, {'time': 0.024243653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:35.999" endtime="20201115 22:01:36.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.016" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:36.003" endtime="20201115 22:01:36.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.020" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.019" endtime="20201115 22:01:36.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.023" level="INFO">VALUE: [4.698599999999886e-05, 4.6944999999999626e-05, 4.697200000000276e-05, 4.697199999999929e-05, 4.695800000000319e-05, 4.695800000000319e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.6903000000000916e-05, 4.697199999999929e-05, 4.695799999999972e-05, 4.698599999999886e-05, 4.697199999999929e-05, 4.6889000000001346e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.6889000000001346e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6875000000001776e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.695799999999972e-05, 4.6903000000000916e-05, 4.6986999999998336e-05, 4.694399999999321e-05, 4.694499999999269e-05, 4.694400000000709e-05, 4.693000000000058e-05, 4.698599999999886e-05, 4.694499999999269e-05, 4.6973000000005705e-05, 4.695799999999972e-05, 4.6959000000013074e-05, 4.698599999999886e-05, 4.694499999999269e-05, 4.6945000000006565e-05, 4.6917000000007425e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.694499999999269e-05, 4.695799999999972e-05, 4.6945000000006565e-05, 4.6945000000006565e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.021" endtime="20201115 22:01:36.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.017" endtime="20201115 22:01:36.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.026" endtime="20201115 22:01:36.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.030" endtime="20201115 22:01:36.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.028" endtime="20201115 22:01:36.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.025" endtime="20201115 22:01:36.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:35.598" endtime="20201115 22:01:36.051"></status>
</kw>
<msg timestamp="20201115 22:01:36.051" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.060" endtime="20201115 22:01:36.138"></status>
</kw>
<msg timestamp="20201115 22:01:36.138" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.058" endtime="20201115 22:01:36.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.141" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.139" endtime="20201115 22:01:36.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.142" endtime="20201115 22:01:36.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.055" endtime="20201115 22:01:36.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.053" endtime="20201115 22:01:36.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.151" endtime="20201115 22:01:36.455"></status>
</kw>
<msg timestamp="20201115 22:01:36.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.150" endtime="20201115 22:01:36.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.459" endtime="20201115 22:01:36.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.468" endtime="20201115 22:01:36.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.147" endtime="20201115 22:01:36.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.145" endtime="20201115 22:01:36.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.474" level="INFO">${RESULT} = [{'time': 0.022786653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.702800000000104e-05, 'source_diff': 4.702800000000104e-05}, {'time': 0.024171639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.471" endtime="20201115 22:01:36.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.489" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:36.475" endtime="20201115 22:01:36.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.493" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.492" endtime="20201115 22:01:36.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.496" level="INFO">VALUE: [4.702800000000104e-05, 4.6945000000003095e-05, 4.6959000000002665e-05, 4.6944999999999626e-05, 4.694399999999668e-05, 4.6958999999999196e-05, 4.695799999999972e-05, 4.6889000000001346e-05, 4.699999999999843e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.691600000000101e-05, 4.6972999999998766e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.6972999999998766e-05, 4.695799999999972e-05, 4.698599999999886e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.698599999999886e-05, 4.695799999999972e-05, 4.694399999999321e-05, 4.695799999999972e-05, 4.6945000000006565e-05, 4.6944999999999626e-05, 4.694499999999269e-05, 4.697199999999235e-05, 4.694399999999321e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.697200000000623e-05, 4.694499999999269e-05, 4.694400000000709e-05, 4.697200000000623e-05, 4.694399999999321e-05, 4.694400000000709e-05, 4.694499999999269e-05, 4.695799999999972e-05, 4.694499999999269e-05, 4.688899999999441e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.695799999999972e-05, 4.6945000000006565e-05, 4.694400000000709e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.495" endtime="20201115 22:01:36.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.490" endtime="20201115 22:01:36.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.500" endtime="20201115 22:01:36.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:36.503" endtime="20201115 22:01:36.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.501" endtime="20201115 22:01:36.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.498" endtime="20201115 22:01:36.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.051" endtime="20201115 22:01:36.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.205" endtime="20201115 22:01:36.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:34.205" endtime="20201115 22:01:36.524"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.526" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.535" endtime="20201115 22:01:36.616"></status>
</kw>
<msg timestamp="20201115 22:01:36.617" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.534" endtime="20201115 22:01:36.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.619" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:36.618" endtime="20201115 22:01:36.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.620" endtime="20201115 22:01:36.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.531" endtime="20201115 22:01:36.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.529" endtime="20201115 22:01:36.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.630" endtime="20201115 22:01:36.961"></status>
</kw>
<msg timestamp="20201115 22:01:36.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.628" endtime="20201115 22:01:36.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024963806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:36.965" endtime="20201115 22:01:36.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:36.974" endtime="20201115 22:01:36.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.625" endtime="20201115 22:01:36.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.624" endtime="20201115 22:01:36.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:36.981" level="INFO">${RESULT} = [{'time': 0.025011375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.756899999999731e-05, 'source_diff': 4.756899999999731e-05}, {'time': 0.026466611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:36.977" endtime="20201115 22:01:36.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:36.994" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:36.982" endtime="20201115 22:01:36.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:36.998" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:36.997" endtime="20201115 22:01:36.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.001" level="INFO">VALUE: [4.756899999999731e-05, 4.75000000000024e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75000000000024e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.751299999999903e-05, 4.751400000000544e-05, 4.751400000000544e-05, 4.749999999999893e-05, 4.755599999999721e-05, 4.75139999999985e-05, 4.751400000000544e-05, 4.75139999999985e-05, 4.751400000000544e-05, 4.749999999999893e-05, 4.750000000000587e-05, 4.747199999999979e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.747199999999979e-05, 4.752799999999807e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.744499999999319e-05, 4.752799999999113e-05, 4.75139999999985e-05, 4.749999999999199e-05, 4.750000000000587e-05, 4.752799999999113e-05, 4.748599999999936e-05, 4.752800000000501e-05, 4.751400000001238e-05, 4.75139999999985e-05, 4.750000000000587e-05, 4.756999999999678e-05, 4.748599999999936e-05, 4.750000000000587e-05, 4.748599999999936e-05, 4.754199999999764e-05, 4.751400000001238e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05]</msg>
<status status="PASS" starttime="20201115 22:01:36.999" endtime="20201115 22:01:37.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.994" endtime="20201115 22:01:37.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.004" endtime="20201115 22:01:37.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.008" endtime="20201115 22:01:37.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.006" endtime="20201115 22:01:37.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.003" endtime="20201115 22:01:37.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.527" endtime="20201115 22:01:37.029"></status>
</kw>
<msg timestamp="20201115 22:01:37.029" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.038" endtime="20201115 22:01:37.120"></status>
</kw>
<msg timestamp="20201115 22:01:37.120" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.037" endtime="20201115 22:01:37.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.121" endtime="20201115 22:01:37.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.124" endtime="20201115 22:01:37.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.033" endtime="20201115 22:01:37.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.031" endtime="20201115 22:01:37.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.133" endtime="20201115 22:01:37.419"></status>
</kw>
<msg timestamp="20201115 22:01:37.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023404292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.131" endtime="20201115 22:01:37.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023404292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.423" endtime="20201115 22:01:37.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.431" endtime="20201115 22:01:37.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.129" endtime="20201115 22:01:37.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.127" endtime="20201115 22:01:37.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.437" level="INFO">${RESULT} = [{'time': 0.023404292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7653000000001666e-05, 'source_diff': 4.7653000000001666e-05}, {'time': 0.024855569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:37.434" endtime="20201115 22:01:37.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.451" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:37.438" endtime="20201115 22:01:37.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.456" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.455" endtime="20201115 22:01:37.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.458" level="INFO">VALUE: [4.7653000000001666e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751400000000197e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.745800000000022e-05, 4.75139999999985e-05, 4.754099999999817e-05, 4.748599999999936e-05, 4.750000000000587e-05, 4.75269999999986e-05, 4.749999999999893e-05, 4.75269999999986e-05, 4.745800000000022e-05, 4.749999999999893e-05, 4.751299999999903e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.751400000000544e-05, 4.748599999999936e-05, 4.752800000000501e-05, 4.75139999999985e-05, 4.751299999999903e-05, 4.754199999999764e-05, 4.748600000001324e-05, 4.750000000000587e-05, 4.752799999999113e-05, 4.75139999999985e-05, 4.750000000000587e-05, 4.7458999999999696e-05, 4.745800000000022e-05, 4.75139999999985e-05, 4.752800000000501e-05, 4.751400000001238e-05, 4.750000000000587e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.7431000000000556e-05, 4.749999999999199e-05, 4.751400000001238e-05, 4.754199999999764e-05, 4.745800000000022e-05]</msg>
<status status="PASS" starttime="20201115 22:01:37.457" endtime="20201115 22:01:37.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.452" endtime="20201115 22:01:37.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.461" endtime="20201115 22:01:37.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.465" endtime="20201115 22:01:37.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.463" endtime="20201115 22:01:37.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.460" endtime="20201115 22:01:37.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.029" endtime="20201115 22:01:37.485"></status>
</kw>
<msg timestamp="20201115 22:01:37.486" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.495" endtime="20201115 22:01:37.577"></status>
</kw>
<msg timestamp="20201115 22:01:37.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.494" endtime="20201115 22:01:37.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.580" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.578" endtime="20201115 22:01:37.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.581" endtime="20201115 22:01:37.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.490" endtime="20201115 22:01:37.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.488" endtime="20201115 22:01:37.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.591" endtime="20201115 22:01:37.895"></status>
</kw>
<msg timestamp="20201115 22:01:37.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.590" endtime="20201115 22:01:37.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023571056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:37.904" endtime="20201115 22:01:37.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.921" endtime="20201115 22:01:37.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.587" endtime="20201115 22:01:37.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.585" endtime="20201115 22:01:37.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:37.927" level="INFO">${RESULT} = [{'time': 0.023571056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.757000000000025e-05, 'source_diff': 4.757000000000025e-05}, {'time': 0.025034306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:37.924" endtime="20201115 22:01:37.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:37.941" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:37.929" endtime="20201115 22:01:37.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.946" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:37.945" endtime="20201115 22:01:37.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:37.948" level="INFO">VALUE: [4.757000000000025e-05, 4.758399999999982e-05, 4.749999999999893e-05, 4.751400000000197e-05, 4.75000000000024e-05, 4.745800000000022e-05, 4.751400000000544e-05, 4.749999999999893e-05, 4.74860000000063e-05, 4.749999999999893e-05, 4.757000000000372e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751299999999903e-05, 4.749999999999893e-05, 4.752800000000501e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.749999999999199e-05, 4.752800000000501e-05, 4.745800000000022e-05, 4.75139999999985e-05, 4.750000000000587e-05, 4.749999999999199e-05, 4.747299999999233e-05, 4.752699999999166e-05, 4.75139999999985e-05, 4.752800000000501e-05, 4.749999999999199e-05, 4.7445000000007065e-05, 4.75139999999985e-05, 4.752799999999113e-05, 4.751400000001238e-05, 4.749999999999199e-05, 4.750000000000587e-05, 4.750000000000587e-05, 4.749999999999199e-05, 4.750000000000587e-05, 4.750000000000587e-05, 4.7473000000006205e-05, 4.75139999999985e-05]</msg>
<status status="PASS" starttime="20201115 22:01:37.947" endtime="20201115 22:01:37.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.942" endtime="20201115 22:01:37.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.951" endtime="20201115 22:01:37.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:37.955" endtime="20201115 22:01:37.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.953" endtime="20201115 22:01:37.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.950" endtime="20201115 22:01:37.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.486" endtime="20201115 22:01:37.975"></status>
</kw>
<msg timestamp="20201115 22:01:37.976" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:37.985" endtime="20201115 22:01:38.067"></status>
</kw>
<msg timestamp="20201115 22:01:38.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:37.983" endtime="20201115 22:01:38.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.068" endtime="20201115 22:01:38.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.071" endtime="20201115 22:01:38.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.980" endtime="20201115 22:01:38.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.978" endtime="20201115 22:01:38.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.080" endtime="20201115 22:01:38.366"></status>
</kw>
<msg timestamp="20201115 22:01:38.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.078" endtime="20201115 22:01:38.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.370" endtime="20201115 22:01:38.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.378" endtime="20201115 22:01:38.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.076" endtime="20201115 22:01:38.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.074" endtime="20201115 22:01:38.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.385" level="INFO">${RESULT} = [{'time': 0.023524431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.758399999999982e-05, 'source_diff': 4.758399999999982e-05}, {'time': 0.024981528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.382" endtime="20201115 22:01:38.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.399" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:38.386" endtime="20201115 22:01:38.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.403" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.402" endtime="20201115 22:01:38.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.406" level="INFO">VALUE: [4.758399999999982e-05, 4.7458999999999696e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.752800000000154e-05, 4.749999999999893e-05, 4.743000000000108e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.747199999999979e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751400000000544e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.754199999999764e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.750000000000587e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751299999999903e-05, 4.75139999999985e-05, 4.750000000000587e-05, 4.758400000000329e-05, 4.750000000000587e-05, 4.747199999999285e-05, 4.755600000000415e-05, 4.748599999999936e-05, 4.743000000000108e-05, 4.7473000000006205e-05, 4.745800000000022e-05, 4.75139999999985e-05, 4.758300000000382e-05, 4.752800000000501e-05, 4.750000000000587e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.750000000000587e-05]</msg>
<status status="PASS" starttime="20201115 22:01:38.404" endtime="20201115 22:01:38.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.400" endtime="20201115 22:01:38.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.409" endtime="20201115 22:01:38.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.412" endtime="20201115 22:01:38.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.411" endtime="20201115 22:01:38.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.407" endtime="20201115 22:01:38.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:37.976" endtime="20201115 22:01:38.433"></status>
</kw>
<msg timestamp="20201115 22:01:38.433" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.442" endtime="20201115 22:01:38.525"></status>
</kw>
<msg timestamp="20201115 22:01:38.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.440" endtime="20201115 22:01:38.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.528" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.526" endtime="20201115 22:01:38.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.529" endtime="20201115 22:01:38.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.438" endtime="20201115 22:01:38.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.436" endtime="20201115 22:01:38.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.538" endtime="20201115 22:01:38.838"></status>
</kw>
<msg timestamp="20201115 22:01:38.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.536" endtime="20201115 22:01:38.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:38.843" endtime="20201115 22:01:38.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.851" endtime="20201115 22:01:38.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.534" endtime="20201115 22:01:38.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.532" endtime="20201115 22:01:38.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:38.858" level="INFO">${RESULT} = [{'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.755600000000068e-05, 'source_diff': 4.755600000000068e-05}, {'time': 0.025594486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:38.854" endtime="20201115 22:01:38.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:38.871" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:38.859" endtime="20201115 22:01:38.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.876" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:38.875" endtime="20201115 22:01:38.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.878" level="INFO">VALUE: [4.755600000000068e-05, 4.749999999999893e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.752800000000154e-05, 4.750000000000587e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.748599999999936e-05, 4.749999999999893e-05, 4.750000000000587e-05, 4.755599999999721e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751299999999903e-05, 4.75139999999985e-05, 4.749999999999893e-05, 4.75139999999985e-05, 4.752799999999807e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.744499999999319e-05, 4.747199999999285e-05, 4.750000000000587e-05, 4.752800000000501e-05, 4.750000000000587e-05, 4.7445000000007065e-05, 4.75139999999985e-05, 4.749999999999199e-05, 4.750000000000587e-05, 4.756899999999731e-05, 4.751400000001238e-05, 4.75139999999985e-05, 4.751400000001238e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.751400000001238e-05, 4.749999999999199e-05, 4.748599999999936e-05, 4.750000000000587e-05, 4.751400000001238e-05]</msg>
<status status="PASS" starttime="20201115 22:01:38.877" endtime="20201115 22:01:38.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.872" endtime="20201115 22:01:38.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.881" endtime="20201115 22:01:38.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:38.885" endtime="20201115 22:01:38.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.883" endtime="20201115 22:01:38.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.880" endtime="20201115 22:01:38.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.434" endtime="20201115 22:01:38.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.525" endtime="20201115 22:01:38.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:36.524" endtime="20201115 22:01:38.906"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:38.908" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:38.917" endtime="20201115 22:01:39.001"></status>
</kw>
<msg timestamp="20201115 22:01:39.002" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:38.915" endtime="20201115 22:01:39.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.004" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.003" endtime="20201115 22:01:39.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.006" endtime="20201115 22:01:39.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.913" endtime="20201115 22:01:39.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.911" endtime="20201115 22:01:39.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.015" endtime="20201115 22:01:39.301"></status>
</kw>
<msg timestamp="20201115 22:01:39.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.014" endtime="20201115 22:01:39.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025142431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.305" endtime="20201115 22:01:39.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.313" endtime="20201115 22:01:39.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.011" endtime="20201115 22:01:39.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.009" endtime="20201115 22:01:39.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.320" level="INFO">${RESULT} = [{'time': 0.025190583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.815199999999922e-05, 'source_diff': 4.815199999999922e-05}, {'time': 0.026703764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.317" endtime="20201115 22:01:39.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:39.321" endtime="20201115 22:01:39.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.338" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.337" endtime="20201115 22:01:39.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.340" level="INFO">VALUE: [4.815199999999922e-05, 4.807000000000075e-05, 4.799999999999943e-05, 4.806900000000128e-05, 4.805599999999771e-05, 4.805499999999824e-05, 4.808300000000432e-05, 4.808400000000379e-05, 4.805599999999771e-05, 4.805600000000465e-05, 4.813899999999566e-05, 4.809699999999695e-05, 4.806899999999781e-05, 4.809700000000389e-05, 4.808299999999738e-05, 4.806999999999728e-05, 4.808300000000432e-05, 4.808399999999685e-05, 4.805600000000465e-05, 4.8125000000003026e-05, 4.808299999999738e-05, 4.8125000000003026e-05, 4.805499999999824e-05, 4.806999999999728e-05, 4.808299999999738e-05, 4.806899999999781e-05, 4.808300000000432e-05, 4.806999999999728e-05, 4.809799999999642e-05, 4.808300000000432e-05, 4.807000000001116e-05, 4.809699999999695e-05, 4.806899999999781e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.808300000000432e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.799999999999249e-05, 4.808300000000432e-05, 4.812499999999609e-05, 4.801400000001288e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.805599999999077e-05, 4.808399999998991e-05, 4.806999999999728e-05]</msg>
<status status="PASS" starttime="20201115 22:01:39.339" endtime="20201115 22:01:39.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.334" endtime="20201115 22:01:39.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.343" endtime="20201115 22:01:39.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.347" endtime="20201115 22:01:39.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.345" endtime="20201115 22:01:39.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.342" endtime="20201115 22:01:39.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.909" endtime="20201115 22:01:39.367"></status>
</kw>
<msg timestamp="20201115 22:01:39.368" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.376" endtime="20201115 22:01:39.462"></status>
</kw>
<msg timestamp="20201115 22:01:39.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.375" endtime="20201115 22:01:39.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.465" endtime="20201115 22:01:39.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.471" endtime="20201115 22:01:39.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.372" endtime="20201115 22:01:39.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.370" endtime="20201115 22:01:39.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.492" endtime="20201115 22:01:39.786"></status>
</kw>
<msg timestamp="20201115 22:01:39.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.489" endtime="20201115 22:01:39.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.790" endtime="20201115 22:01:39.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.798" endtime="20201115 22:01:39.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.482" endtime="20201115 22:01:39.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.479" endtime="20201115 22:01:39.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:39.805" level="INFO">${RESULT} = [{'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805500000000171e-05, 'source_diff': 4.805500000000171e-05}, {'time': 0.024093931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:39.801" endtime="20201115 22:01:39.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:39.818" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:39.806" endtime="20201115 22:01:39.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.822" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:39.821" endtime="20201115 22:01:39.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.825" level="INFO">VALUE: [4.805500000000171e-05, 4.802799999999857e-05, 4.805599999999771e-05, 4.805600000000118e-05, 4.805500000000171e-05, 4.798599999999986e-05, 4.809800000000336e-05, 4.809699999999695e-05, 4.812499999999609e-05, 4.805499999999824e-05, 4.809799999999642e-05, 4.806899999999781e-05, 4.805499999999824e-05, 4.805599999999771e-05, 4.808299999999738e-05, 4.805499999999824e-05, 4.806999999999728e-05, 4.8125000000003026e-05, 4.802799999999857e-05, 4.807000000000422e-05, 4.806899999999781e-05, 4.808299999999738e-05, 4.8125000000003026e-05, 4.806999999999728e-05, 4.806900000000475e-05, 4.806999999999728e-05, 4.806900000000475e-05, 4.809799999999642e-05, 4.808400000000379e-05, 4.807000000001116e-05, 4.809699999999695e-05, 4.808400000000379e-05, 4.806999999999728e-05, 4.805500000000518e-05, 4.806999999999728e-05, 4.811200000000293e-05, 4.806999999999728e-05, 4.809699999999695e-05, 4.806899999999781e-05, 4.808399999998991e-05, 4.806899999999781e-05, 4.80549999999913e-05, 4.8069000000011686e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.807000000001116e-05, 4.808400000000379e-05, 4.805600000000465e-05, 4.805599999999077e-05, 4.806999999999728e-05]</msg>
<status status="PASS" starttime="20201115 22:01:39.823" endtime="20201115 22:01:39.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.819" endtime="20201115 22:01:39.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.828" endtime="20201115 22:01:39.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:39.831" endtime="20201115 22:01:39.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.830" endtime="20201115 22:01:39.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.826" endtime="20201115 22:01:39.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.368" endtime="20201115 22:01:39.852"></status>
</kw>
<msg timestamp="20201115 22:01:39.852" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.882" endtime="20201115 22:01:39.967"></status>
</kw>
<msg timestamp="20201115 22:01:39.967" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.859" endtime="20201115 22:01:39.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:39.968" endtime="20201115 22:01:39.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.971" endtime="20201115 22:01:39.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.857" endtime="20201115 22:01:39.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.855" endtime="20201115 22:01:39.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:39.981" endtime="20201115 22:01:40.272"></status>
</kw>
<msg timestamp="20201115 22:01:40.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:39.979" endtime="20201115 22:01:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.281" endtime="20201115 22:01:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.299" endtime="20201115 22:01:40.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.976" endtime="20201115 22:01:40.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.975" endtime="20201115 22:01:40.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.313" level="INFO">${RESULT} = [{'time': 0.044225639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.809699999999695e-05, 'source_diff': 4.809699999999695e-05}, {'time': 0.045751542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:40.306" endtime="20201115 22:01:40.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.342" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:40.315" endtime="20201115 22:01:40.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.351" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.349" endtime="20201115 22:01:40.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.357" level="INFO">VALUE: [4.809699999999695e-05, 4.806999999999728e-05, 4.8013999999999e-05, 4.808299999999738e-05, 4.805499999999824e-05, 4.808400000000379e-05, 4.805499999999824e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.808299999999738e-05, 4.805499999999824e-05, 4.799999999999943e-05, 4.806900000000475e-05, 4.802800000000551e-05, 4.805599999999077e-05, 4.804099999999867e-05, 4.804199999999814e-05, 4.805600000000465e-05, 4.805500000000518e-05, 4.806999999999728e-05, 4.806999999999728e-05, 4.802799999999163e-05, 4.805600000000465e-05, 4.805600000000465e-05, 4.806899999999781e-05, 4.80549999999913e-05, 4.805600000000465e-05, 4.812499999999609e-05, 4.80549999999913e-05, 4.805600000000465e-05, 4.811099999998958e-05, 4.806899999999781e-05, 4.809799999999642e-05, 4.806899999999781e-05, 4.805600000000465e-05, 4.806899999999781e-05, 4.806999999999728e-05, 4.806999999999728e-05, 4.805600000000465e-05, 4.808299999999044e-05, 4.805500000000518e-05, 4.808300000000432e-05, 4.8111000000003457e-05, 4.8111000000003457e-05, 4.805600000000465e-05, 4.806899999999781e-05, 4.806999999999728e-05, 4.805600000000465e-05, 4.808399999998991e-05, 4.806899999999781e-05]</msg>
<status status="PASS" starttime="20201115 22:01:40.354" endtime="20201115 22:01:40.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.344" endtime="20201115 22:01:40.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.363" endtime="20201115 22:01:40.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.369" endtime="20201115 22:01:40.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.367" endtime="20201115 22:01:40.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.360" endtime="20201115 22:01:40.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.853" endtime="20201115 22:01:40.390"></status>
</kw>
<msg timestamp="20201115 22:01:40.390" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.399" endtime="20201115 22:01:40.484"></status>
</kw>
<msg timestamp="20201115 22:01:40.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.398" endtime="20201115 22:01:40.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.485" endtime="20201115 22:01:40.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.488" endtime="20201115 22:01:40.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.395" endtime="20201115 22:01:40.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.393" endtime="20201115 22:01:40.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.498" endtime="20201115 22:01:40.785"></status>
</kw>
<msg timestamp="20201115 22:01:40.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02288025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:40.497" endtime="20201115 22:01:40.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02288025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:40.790" endtime="20201115 22:01:40.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.798" endtime="20201115 22:01:40.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.494" endtime="20201115 22:01:40.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.493" endtime="20201115 22:01:40.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:40.804" level="INFO">${RESULT} = [{'time': 0.02288025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8139000000002596e-05, 'source_diff': 4.8139000000002596e-05}, {'time': 0.024392431, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:40.801" endtime="20201115 22:01:40.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:40.817" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:40.805" endtime="20201115 22:01:40.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.822" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:40.821" endtime="20201115 22:01:40.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.824" level="INFO">VALUE: [4.8139000000002596e-05, 4.805599999999771e-05, 4.808400000000032e-05, 4.812499999999956e-05, 4.807000000000075e-05, 4.806900000000128e-05, 4.808299999999738e-05, 4.805599999999771e-05, 4.808300000000432e-05, 4.806999999999728e-05, 4.806900000000475e-05, 4.8125000000003026e-05, 4.808299999999738e-05, 4.808300000000432e-05, 4.808400000000379e-05, 4.808399999999685e-05, 4.8125000000003026e-05, 4.8125000000003026e-05, 4.805599999999771e-05, 4.811099999999652e-05, 4.808300000000432e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.805600000000465e-05, 4.809699999999695e-05, 4.808299999999738e-05, 4.808400000000379e-05, 4.806899999999781e-05, 4.808400000000379e-05, 4.8069000000011686e-05, 4.806899999999781e-05, 4.808299999999044e-05, 4.808300000000432e-05, 4.806999999999728e-05, 4.808300000000432e-05, 4.811099999998958e-05, 4.804099999999867e-05, 4.809699999999695e-05, 4.8139000000002596e-05, 4.812499999999609e-05, 4.808300000000432e-05, 4.805600000000465e-05, 4.805500000000518e-05, 4.805599999999077e-05, 4.806999999999728e-05, 4.802800000000551e-05, 4.8069000000011686e-05, 4.805500000000518e-05, 4.802800000000551e-05, 4.808400000000379e-05]</msg>
<status status="PASS" starttime="20201115 22:01:40.823" endtime="20201115 22:01:40.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.818" endtime="20201115 22:01:40.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.827" endtime="20201115 22:01:40.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.831" endtime="20201115 22:01:40.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.829" endtime="20201115 22:01:40.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.825" endtime="20201115 22:01:40.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.391" endtime="20201115 22:01:40.852"></status>
</kw>
<msg timestamp="20201115 22:01:40.852" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.861" endtime="20201115 22:01:40.945"></status>
</kw>
<msg timestamp="20201115 22:01:40.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.859" endtime="20201115 22:01:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.948" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:40.946" endtime="20201115 22:01:40.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.949" endtime="20201115 22:01:40.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.856" endtime="20201115 22:01:40.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.854" endtime="20201115 22:01:40.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:40.959" endtime="20201115 22:01:41.256"></status>
</kw>
<msg timestamp="20201115 22:01:41.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:40.957" endtime="20201115 22:01:41.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:41.260" endtime="20201115 22:01:41.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.268" endtime="20201115 22:01:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.955" endtime="20201115 22:01:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.953" endtime="20201115 22:01:41.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:41.275" level="INFO">${RESULT} = [{'time': 0.022435667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.811099999999999e-05, 'source_diff': 4.811099999999999e-05}, {'time': 0.023951097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:41.272" endtime="20201115 22:01:41.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:41.288" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:41.276" endtime="20201115 22:01:41.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.293" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:41.292" endtime="20201115 22:01:41.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.296" level="INFO">VALUE: [4.811099999999999e-05, 4.805500000000171e-05, 4.806900000000128e-05, 4.808299999999738e-05, 4.807000000000075e-05, 4.802800000000204e-05, 4.806900000000475e-05, 4.805599999999771e-05, 4.809699999999695e-05, 4.806999999999728e-05, 4.809700000000389e-05, 4.806999999999728e-05, 4.802799999999857e-05, 4.805500000000518e-05, 4.806999999999728e-05, 4.8125000000003026e-05, 4.808300000000432e-05, 4.805499999999824e-05, 4.811200000000293e-05, 4.809699999999695e-05, 4.806900000000475e-05, 4.808299999999738e-05, 4.806999999999728e-05, 4.808399999999685e-05, 4.809699999999695e-05, 4.808299999999738e-05, 4.808299999999738e-05, 4.808300000000432e-05, 4.808300000000432e-05, 4.806899999999781e-05, 4.808299999999044e-05, 4.808400000000379e-05, 4.8111000000003457e-05, 4.808300000000432e-05, 4.809699999999695e-05, 4.809799999999642e-05, 4.808300000000432e-05, 4.808400000000379e-05, 4.812499999999609e-05, 4.806899999999781e-05, 4.806899999999781e-05, 4.806999999999728e-05, 4.808300000000432e-05, 4.8111000000003457e-05, 4.8111000000003457e-05, 4.80549999999913e-05, 4.808400000000379e-05, 4.809799999999642e-05, 4.808400000000379e-05, 4.809699999999695e-05]</msg>
<status status="PASS" starttime="20201115 22:01:41.294" endtime="20201115 22:01:41.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.289" endtime="20201115 22:01:41.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.300" endtime="20201115 22:01:41.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.303" endtime="20201115 22:01:41.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.302" endtime="20201115 22:01:41.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.298" endtime="20201115 22:01:41.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.852" endtime="20201115 22:01:41.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.907" endtime="20201115 22:01:41.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:38.906" endtime="20201115 22:01:41.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.340" endtime="20201115 22:01:41.325"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.329" endtime="20201115 22:01:41.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.328" endtime="20201115 22:01:41.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.326" endtime="20201115 22:01:41.350"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:47.272" endtime="20201115 22:01:41.350" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:47.654" endtime="20201115 22:01:41.357"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:45.571" endtime="20201115 22:01:41.377"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_saml10-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
