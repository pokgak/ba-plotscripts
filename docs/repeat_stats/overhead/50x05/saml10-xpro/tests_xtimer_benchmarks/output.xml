<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:01:47.825" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.401" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:48.409" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:49.574" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:48.399" endtime="20201115 22:01:49.575"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.577" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:49.576" endtime="20201115 22:01:49.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.398" endtime="20201115 22:01:49.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.581" endtime="20201115 22:01:49.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.579" endtime="20201115 22:01:49.820"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.834" endtime="20201115 22:01:49.846"></status>
</kw>
<msg timestamp="20201115 22:01:49.847" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.832" endtime="20201115 22:01:49.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.849" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.848" endtime="20201115 22:01:49.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.853" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:49.850" endtime="20201115 22:01:49.853"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.829" endtime="20201115 22:01:49.854"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.827" endtime="20201115 22:01:49.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.826" endtime="20201115 22:01:49.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:49.858" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:49.858" endtime="20201115 22:01:49.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.855" endtime="20201115 22:01:49.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.825" endtime="20201115 22:01:49.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.824" endtime="20201115 22:01:49.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.860" endtime="20201115 22:01:49.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.823" endtime="20201115 22:01:49.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.863" endtime="20201115 22:01:49.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.821" endtime="20201115 22:01:49.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.396" endtime="20201115 22:01:49.865"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.872" endtime="20201115 22:01:49.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.871" endtime="20201115 22:01:49.892"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.907" endtime="20201115 22:01:49.919"></status>
</kw>
<msg timestamp="20201115 22:01:49.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.905" endtime="20201115 22:01:49.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.921" endtime="20201115 22:01:49.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:49.923" endtime="20201115 22:01:49.925"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.903" endtime="20201115 22:01:49.926"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:49.900" endtime="20201115 22:01:49.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.897" endtime="20201115 22:01:49.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:49.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:49.930" endtime="20201115 22:01:49.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.928" endtime="20201115 22:01:49.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.897" endtime="20201115 22:01:49.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.896" endtime="20201115 22:01:49.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.932" endtime="20201115 22:01:49.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.894" endtime="20201115 22:01:49.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.893" endtime="20201115 22:01:49.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.869" endtime="20201115 22:01:49.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.943" endtime="20201115 22:01:49.951"></status>
</kw>
<msg timestamp="20201115 22:01:49.952" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.941" endtime="20201115 22:01:49.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.954" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.953" endtime="20201115 22:01:49.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.955" endtime="20201115 22:01:49.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.939" endtime="20201115 22:01:49.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.936" endtime="20201115 22:01:49.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.963" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:01:49.962" endtime="20201115 22:01:49.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.965" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:01:49.964" endtime="20201115 22:01:49.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.959" endtime="20201115 22:01:49.966"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:49.866" endtime="20201115 22:01:49.967" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:47.935" endtime="20201115 22:01:49.971"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.024" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:50.032" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:51.195" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:50.023" endtime="20201115 22:01:51.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.198" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:51.196" endtime="20201115 22:01:51.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.022" endtime="20201115 22:01:51.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.201" endtime="20201115 22:01:51.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.200" endtime="20201115 22:01:51.472"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.484" endtime="20201115 22:01:51.497"></status>
</kw>
<msg timestamp="20201115 22:01:51.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.483" endtime="20201115 22:01:51.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.500" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.498" endtime="20201115 22:01:51.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.503" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:51.501" endtime="20201115 22:01:51.504"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.480" endtime="20201115 22:01:51.504"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.478" endtime="20201115 22:01:51.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.477" endtime="20201115 22:01:51.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:51.509" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:51.508" endtime="20201115 22:01:51.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.506" endtime="20201115 22:01:51.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.476" endtime="20201115 22:01:51.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.475" endtime="20201115 22:01:51.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.511" endtime="20201115 22:01:51.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.474" endtime="20201115 22:01:51.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.513" endtime="20201115 22:01:51.515"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.473" endtime="20201115 22:01:51.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.020" endtime="20201115 22:01:51.516"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.522" endtime="20201115 22:01:51.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.520" endtime="20201115 22:01:51.542"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.555" endtime="20201115 22:01:51.567"></status>
</kw>
<msg timestamp="20201115 22:01:51.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.553" endtime="20201115 22:01:51.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.569" endtime="20201115 22:01:51.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:51.572" endtime="20201115 22:01:51.574"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.551" endtime="20201115 22:01:51.575"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:51.548" endtime="20201115 22:01:51.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.547" endtime="20201115 22:01:51.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:51.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:51.578" endtime="20201115 22:01:51.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.576" endtime="20201115 22:01:51.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.546" endtime="20201115 22:01:51.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.545" endtime="20201115 22:01:51.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.582" endtime="20201115 22:01:51.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.544" endtime="20201115 22:01:51.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.542" endtime="20201115 22:01:51.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.519" endtime="20201115 22:01:51.584"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:51.587" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.595" endtime="20201115 22:01:51.604"></status>
</kw>
<msg timestamp="20201115 22:01:51.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.593" endtime="20201115 22:01:51.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.605" endtime="20201115 22:01:51.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.608" endtime="20201115 22:01:51.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.591" endtime="20201115 22:01:51.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.589" endtime="20201115 22:01:51.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.617" endtime="20201115 22:01:51.906"></status>
</kw>
<msg timestamp="20201115 22:01:51.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062933681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.615" endtime="20201115 22:01:51.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062933681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.911" endtime="20201115 22:01:51.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.919" endtime="20201115 22:01:51.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.613" endtime="20201115 22:01:51.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.611" endtime="20201115 22:01:51.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.925" level="INFO">${RESULT} = [{'time': 0.062933681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.26400000000082e-06, 'source_diff': 1.26400000000082e-06}, {'time': 0.062961319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:51.922" endtime="20201115 22:01:51.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.939" level="INFO">${GPIO_OVERHEAD} = {'time': [0.062933681, 0.062961319, 0.062981681, 0.063002333, 0.0630205, 0.063036806, 0.063067139, 0.063093708, 0.063106306, 0.063137861, 0.063161958, 0.063187569, 0.063217639, 0.063233889, 0.06325361...</msg>
<status status="PASS" starttime="20201115 22:01:51.926" endtime="20201115 22:01:51.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.944" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:51.943" endtime="20201115 22:01:51.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.947" level="INFO">VALUE: [1.26400000000082e-06, 9.579999999953515e-07, 1.000000000001e-06, 9.859999999944913e-07, 9.999999999871223e-07, 1.000000000001e-06, 1.0139999999936311e-06, 9.859999999944913e-07, 1.02800000000014e-06, 1.000000000001e-06, 9.580000000092292e-07, 9.720000000018603e-07, 1.0559999999992797e-06, 1.000000000001e-06, 9.859999999944913e-07, 1.014000000007509e-06, 1.000000000001e-06, 1.02800000000014e-06, 1.02800000000014e-06, 9.720000000018603e-07, 1.054999999999806e-06, 9.580000000092292e-07, 1.0409999999932973e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999944913e-07, 9.580000000092292e-07, 1.000000000001e-06, 9.58999999994825e-07, 1.0420000000066487e-06, 9.440000000027204e-07, 1.069000000006315e-06, 1.0700000000057885e-06, 9.86000000008369e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999871223e-07, 9.86000000008369e-07, 1.000000000001e-06, 1.054999999999806e-06, 1.0139999999936311e-06, 1.000000000001e-06, 9.859999999944913e-07, 9.720000000018603e-07, 1.0139999999936311e-06, 1.014000000007509e-06, 9.720000000018603e-07, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.945" endtime="20201115 22:01:51.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.940" endtime="20201115 22:01:51.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.950" endtime="20201115 22:01:51.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.953" endtime="20201115 22:01:51.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.952" endtime="20201115 22:01:51.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.948" endtime="20201115 22:01:51.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.588" endtime="20201115 22:01:51.974"></status>
</kw>
<msg timestamp="20201115 22:01:51.974" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.982" endtime="20201115 22:01:51.991"></status>
</kw>
<msg timestamp="20201115 22:01:51.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.980" endtime="20201115 22:01:51.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.994" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.993" endtime="20201115 22:01:51.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.995" endtime="20201115 22:01:51.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.978" endtime="20201115 22:01:51.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.976" endtime="20201115 22:01:51.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.004" endtime="20201115 22:01:52.290"></status>
</kw>
<msg timestamp="20201115 22:01:52.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018572194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.003" endtime="20201115 22:01:52.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018570972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018572194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.294" endtime="20201115 22:01:52.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.302" endtime="20201115 22:01:52.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.000" endtime="20201115 22:01:52.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.998" endtime="20201115 22:01:52.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.310" level="INFO">${RESULT} = [{'time': 0.018572194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.018598903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:52.306" endtime="20201115 22:01:52.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.324" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018572194, 0.018598903, 0.018628306, 0.018641181, 0.018669028, 0.018685361, 0.018697903, 0.018718583, 0.018732431, 0.018751222, 0.018782444, 0.018798153, 0.018821611, 0.0188485, 0.01887819...</msg>
<status status="PASS" starttime="20201115 22:01:52.311" endtime="20201115 22:01:52.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.328" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:52.327" endtime="20201115 22:01:52.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.330" level="INFO">VALUE: [1.2219999999986408e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.02800000000014e-06, 9.589999999982945e-07, 9.860000000014302e-07, 1.02800000000014e-06, 9.860000000014302e-07, 9.999999999975306e-07, 1.01400000000057e-06, 9.57999999998821e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.589999999982945e-07, 1.000000000001e-06, 9.999999999975306e-07, 1.0419999999997098e-06, 1.000000000001e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 9.719999999983908e-07, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.01400000000057e-06, 9.57999999998821e-07, 9.860000000014302e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.57999999998821e-07, 9.999999999975306e-07, 9.57999999998821e-07, 9.999999999975306e-07, 9.859999999979607e-07, 9.859999999979607e-07, 9.860000000014302e-07, 9.860000000014302e-07]</msg>
<status status="PASS" starttime="20201115 22:01:52.329" endtime="20201115 22:01:52.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.325" endtime="20201115 22:01:52.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.333" endtime="20201115 22:01:52.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.337" endtime="20201115 22:01:52.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.335" endtime="20201115 22:01:52.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.332" endtime="20201115 22:01:52.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.975" endtime="20201115 22:01:52.358"></status>
</kw>
<msg timestamp="20201115 22:01:52.358" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.366" endtime="20201115 22:01:52.375"></status>
</kw>
<msg timestamp="20201115 22:01:52.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.364" endtime="20201115 22:01:52.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.376" endtime="20201115 22:01:52.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.379" endtime="20201115 22:01:52.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.361" endtime="20201115 22:01:52.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.360" endtime="20201115 22:01:52.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.388" endtime="20201115 22:01:52.674"></status>
</kw>
<msg timestamp="20201115 22:01:52.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018555931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.386" endtime="20201115 22:01:52.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018555931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.678" endtime="20201115 22:01:52.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.686" endtime="20201115 22:01:52.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.384" endtime="20201115 22:01:52.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.382" endtime="20201115 22:01:52.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.694" level="INFO">${RESULT} = [{'time': 0.018555931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000012501e-06, 'source_diff': 1.2500000000012501e-06}, {'time': 0.018581653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:52.690" endtime="20201115 22:01:52.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.709" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018555931, 0.018581653, 0.018602319, 0.018624222, 0.018648306, 0.018676125, 0.018694014, 0.018721514, 0.018733722, 0.018765236, 0.018781236, 0.018801958, 0.018831347, 0.018852569, 0.018869...</msg>
<status status="PASS" starttime="20201115 22:01:52.695" endtime="20201115 22:01:52.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.713" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:52.712" endtime="20201115 22:01:52.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.715" level="INFO">VALUE: [1.2500000000012501e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.870000000009038e-07, 9.859999999979607e-07, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.054999999999806e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.000000000001e-06, 1.000000000001e-06, 9.870000000009038e-07, 9.999999999975306e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.859999999979607e-07, 1.0560000000027492e-06, 1.0559999999992797e-06, 9.859999999979607e-07, 1.0559999999992797e-06, 1.0130000000010964e-06, 9.999999999975306e-07, 9.859999999979607e-07, 9.719999999983908e-07, 1.000000000001e-06, 1.000000000001e-06, 9.720000000018603e-07, 9.860000000014302e-07, 9.309999999991547e-07, 9.999999999975306e-07, 1.0139999999971006e-06, 9.59000000001764e-07, 1.068999999999376e-06, 1.0830000000024154e-06, 1.000000000001e-06, 1.000000000001e-06, 1.0130000000010964e-06, 1.01400000000057e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.714" endtime="20201115 22:01:52.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.710" endtime="20201115 22:01:52.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.719" endtime="20201115 22:01:52.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.722" endtime="20201115 22:01:52.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.720" endtime="20201115 22:01:52.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.717" endtime="20201115 22:01:52.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.359" endtime="20201115 22:01:52.743"></status>
</kw>
<msg timestamp="20201115 22:01:52.743" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.751" endtime="20201115 22:01:52.760"></status>
</kw>
<msg timestamp="20201115 22:01:52.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.749" endtime="20201115 22:01:52.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.761" endtime="20201115 22:01:52.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.764" endtime="20201115 22:01:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.746" endtime="20201115 22:01:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.745" endtime="20201115 22:01:52.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.773" endtime="20201115 22:01:53.060"></status>
</kw>
<msg timestamp="20201115 22:01:53.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018622722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.771" endtime="20201115 22:01:53.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018622722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.064" endtime="20201115 22:01:53.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.073" endtime="20201115 22:01:53.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.769" endtime="20201115 22:01:53.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.767" endtime="20201115 22:01:53.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.080" level="INFO">${RESULT} = [{'time': 0.018622722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000012501e-06, 'source_diff': 1.2500000000012501e-06}, {'time': 0.018645083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.076" endtime="20201115 22:01:53.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.094" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018622722, 0.018645083, 0.018661694, 0.018692972, 0.018710819, 0.018739028, 0.018769278, 0.018791194, 0.018822778, 0.018839389, 0.018861944, 0.018876375, 0.018908264, 0.018932417, 0.018947...</msg>
<status status="PASS" starttime="20201115 22:01:53.081" endtime="20201115 22:01:53.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.098" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:53.097" endtime="20201115 22:01:53.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.100" level="INFO">VALUE: [1.2500000000012501e-06, 9.860000000014302e-07, 9.859999999979607e-07, 1.0139999999971006e-06, 9.860000000014302e-07, 1.070000000002319e-06, 9.720000000018603e-07, 9.860000000014302e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.012999999997627e-06, 1.000000000001e-06, 9.580000000022904e-07, 1.0559999999992797e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 1.01400000000057e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.999999999975306e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.43999999999251e-07, 1.01400000000057e-06, 1.070000000002319e-06, 9.860000000014302e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.01400000000057e-06, 9.440000000027204e-07, 9.999999999975306e-07, 9.999999999975306e-07, 9.449999999987246e-07, 9.859999999979607e-07, 9.870000000009038e-07, 9.859999999979607e-07, 9.57999999998821e-07, 1.000000000001e-06, 9.860000000014302e-07, 1.000000000001e-06, 9.859999999979607e-07, 1.01400000000057e-06, 1.01400000000057e-06, 9.580000000022904e-07, 9.999999999975306e-07, 1.000000000001e-06, 1.02800000000014e-06, 1.01400000000057e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.099" endtime="20201115 22:01:53.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.095" endtime="20201115 22:01:53.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.104" endtime="20201115 22:01:53.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.107" endtime="20201115 22:01:53.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.106" endtime="20201115 22:01:53.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.102" endtime="20201115 22:01:53.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.743" endtime="20201115 22:01:53.128"></status>
</kw>
<msg timestamp="20201115 22:01:53.128" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.136" endtime="20201115 22:01:53.145"></status>
</kw>
<msg timestamp="20201115 22:01:53.145" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.134" endtime="20201115 22:01:53.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.148" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.146" endtime="20201115 22:01:53.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.149" endtime="20201115 22:01:53.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.132" endtime="20201115 22:01:53.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.130" endtime="20201115 22:01:53.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.158" endtime="20201115 22:01:53.446"></status>
</kw>
<msg timestamp="20201115 22:01:53.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.156" endtime="20201115 22:01:53.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.450" endtime="20201115 22:01:53.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.458" endtime="20201115 22:01:53.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.154" endtime="20201115 22:01:53.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.152" endtime="20201115 22:01:53.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.465" level="INFO">${RESULT} = [{'time': 0.018647278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.018664653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.461" endtime="20201115 22:01:53.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.479" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018647278, 0.018664653, 0.018685347, 0.018710681, 0.018731667, 0.018761986, 0.018786708, 0.018802403, 0.018815, 0.018842819, 0.018856972, 0.018884514, 0.018910139, 0.018937417, 0.018956778...</msg>
<status status="PASS" starttime="20201115 22:01:53.466" endtime="20201115 22:01:53.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.483" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:53.482" endtime="20201115 22:01:53.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.485" level="INFO">VALUE: [1.2219999999986408e-06, 9.860000000014302e-07, 9.580000000022904e-07, 1.000000000001e-06, 1.000000000001e-06, 1.000000000001e-06, 9.859999999979607e-07, 9.999999999975306e-07, 1.0139999999971006e-06, 1.000000000001e-06, 1.000000000001e-06, 1.02800000000014e-06, 9.859999999979607e-07, 1.070000000002319e-06, 9.860000000014302e-07, 9.999999999975306e-07, 9.999999999975306e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.999999999975306e-07, 9.999999999975306e-07, 9.859999999979607e-07, 1.000000000001e-06, 1.000000000001e-06, 9.860000000014302e-07, 9.999999999975306e-07, 1.000000000001e-06, 9.860000000014302e-07, 9.859999999979607e-07, 1.000000000001e-06, 9.859999999979607e-07, 9.999999999975306e-07, 1.01400000000057e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 9.999999999975306e-07, 1.0139999999971006e-06, 1.01400000000057e-06, 9.999999999975306e-07, 1.0130000000010964e-06, 9.870000000009038e-07, 9.999999999975306e-07, 1.0130000000010964e-06, 1.000000000001e-06, 9.999999999975306e-07, 9.870000000009038e-07, 9.859999999979607e-07, 1.01400000000057e-06, 9.580000000022904e-07]</msg>
<status status="PASS" starttime="20201115 22:01:53.484" endtime="20201115 22:01:53.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.480" endtime="20201115 22:01:53.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.489" endtime="20201115 22:01:53.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.492" endtime="20201115 22:01:53.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.490" endtime="20201115 22:01:53.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.487" endtime="20201115 22:01:53.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.129" endtime="20201115 22:01:53.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.586" endtime="20201115 22:01:53.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.518" endtime="20201115 22:01:53.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.516" endtime="20201115 22:01:53.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.515" endtime="20201115 22:01:53.538"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:51.516" endtime="20201115 22:01:53.539" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.548" endtime="20201115 22:01:53.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.546" endtime="20201115 22:01:53.568"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.582" endtime="20201115 22:01:53.594"></status>
</kw>
<msg timestamp="20201115 22:01:53.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.580" endtime="20201115 22:01:53.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.595" endtime="20201115 22:01:53.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.600" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:53.598" endtime="20201115 22:01:53.600"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:53.577" endtime="20201115 22:01:53.601"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:53.574" endtime="20201115 22:01:53.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.573" endtime="20201115 22:01:53.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:53.606" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:53.605" endtime="20201115 22:01:53.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.602" endtime="20201115 22:01:53.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.572" endtime="20201115 22:01:53.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.572" endtime="20201115 22:01:53.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.608" endtime="20201115 22:01:53.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.570" endtime="20201115 22:01:53.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.569" endtime="20201115 22:01:53.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.544" endtime="20201115 22:01:53.611"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:53.614" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.621" endtime="20201115 22:01:53.632"></status>
</kw>
<msg timestamp="20201115 22:01:53.633" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.620" endtime="20201115 22:01:53.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.634" endtime="20201115 22:01:53.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.636" endtime="20201115 22:01:53.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.617" endtime="20201115 22:01:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.616" endtime="20201115 22:01:53.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.645" endtime="20201115 22:01:53.932"></status>
</kw>
<msg timestamp="20201115 22:01:53.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064191514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064204014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.644" endtime="20201115 22:01:53.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064191514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064204014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.936" endtime="20201115 22:01:53.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.944" endtime="20201115 22:01:53.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.641" endtime="20201115 22:01:53.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.640" endtime="20201115 22:01:53.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.952" level="INFO">${RESULT} = [{'time': 0.064204014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.064230681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:53.948" endtime="20201115 22:01:53.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.965" level="INFO">${OVERHEAD} = {'time': [0.064204014, 0.064230681, 0.064260292, 0.064295847, 0.064322069, 0.06435825, 0.064385417, 0.064410375, 0.064437194, 0.064470875, 0.064507667, 0.064532944, 0.064566014, 0.064603736, 0.0646414...</msg>
<status status="PASS" starttime="20201115 22:01:53.953" endtime="20201115 22:01:53.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.969" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:53.968" endtime="20201115 22:01:53.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.973" level="INFO">VALUE: [1.2499999999998623e-05, 1.2194999999992628e-05, 1.2194999999992628e-05, 1.2180000000000524e-05, 1.2193999999993155e-05, 1.2222000000006172e-05, 1.2223000000005646e-05, 1.2222000000006172e-05, 1.2194000000007033e-05, 1.2193999999993155e-05, 1.2195000000006506e-05, 1.2207999999999664e-05, 1.2195000000006506e-05, 1.2193999999993155e-05, 1.2193999999993155e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2277000000004978e-05, 1.2209000000013015e-05, 1.2222000000006172e-05, 1.2152000000001384e-05, 1.2208999999999137e-05, 1.2167000000007366e-05, 1.2180000000000524e-05, 1.2194000000007033e-05, 1.2194000000007033e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2250000000005312e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2152000000001384e-05, 1.2207999999999664e-05, 1.2193999999993155e-05, 1.2153000000000858e-05, 1.2193999999993155e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2222000000006172e-05, 1.2193999999993155e-05, 1.2222000000006172e-05, 1.2194000000007033e-05, 1.2209000000013015e-05]</msg>
<status status="PASS" starttime="20201115 22:01:53.971" endtime="20201115 22:01:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.966" endtime="20201115 22:01:53.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.976" endtime="20201115 22:01:53.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.980" endtime="20201115 22:01:53.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.978" endtime="20201115 22:01:54.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.974" endtime="20201115 22:01:54.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.614" endtime="20201115 22:01:54.001"></status>
</kw>
<msg timestamp="20201115 22:01:54.001" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.009" endtime="20201115 22:01:54.020"></status>
</kw>
<msg timestamp="20201115 22:01:54.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.007" endtime="20201115 22:01:54.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.023" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.021" endtime="20201115 22:01:54.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.024" endtime="20201115 22:01:54.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.005" endtime="20201115 22:01:54.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.003" endtime="20201115 22:01:54.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.033" endtime="20201115 22:01:54.319"></status>
</kw>
<msg timestamp="20201115 22:01:54.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.031" endtime="20201115 22:01:54.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.323" endtime="20201115 22:01:54.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.332" endtime="20201115 22:01:54.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.029" endtime="20201115 22:01:54.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.027" endtime="20201115 22:01:54.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.338" level="INFO">${RESULT} = [{'time': 0.019573472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.019617292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:54.335" endtime="20201115 22:01:54.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.353" level="INFO">${OVERHEAD} = {'time': [0.019573472, 0.019617292, 0.019649681, 0.019679653, 0.019717694, 0.019742333, 0.019780708, 0.019815625, 0.019853361, 0.019888611, 0.019918556, 0.019943208, 0.019971306, 0.020002486, 0.020036...</msg>
<status status="PASS" starttime="20201115 22:01:54.339" endtime="20201115 22:01:54.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:54.356" endtime="20201115 22:01:54.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.359" level="INFO">VALUE: [1.2486000000002523e-05, 1.2250000000001843e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2209000000002607e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2237000000001746e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2180000000000524e-05, 1.2209000000002607e-05, 1.2221999999999233e-05, 1.2222999999998707e-05, 1.2195000000003037e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2125000000001718e-05, 1.2151999999997914e-05, 1.2208000000003133e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2221999999999233e-05, 1.2153000000000858e-05, 1.2208999999999137e-05, 1.2180000000000524e-05, 1.2139000000001288e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2167000000000427e-05, 1.2221999999999233e-05, 1.2292000000000552e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2125000000001718e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2222000000002703e-05, 1.2207999999999664e-05, 1.2180999999999997e-05]</msg>
<status status="PASS" starttime="20201115 22:01:54.358" endtime="20201115 22:01:54.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.353" endtime="20201115 22:01:54.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.363" endtime="20201115 22:01:54.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.367" endtime="20201115 22:01:54.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.364" endtime="20201115 22:01:54.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.361" endtime="20201115 22:01:54.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.002" endtime="20201115 22:01:54.388"></status>
</kw>
<msg timestamp="20201115 22:01:54.388" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.395" endtime="20201115 22:01:54.406"></status>
</kw>
<msg timestamp="20201115 22:01:54.407" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.394" endtime="20201115 22:01:54.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.408" endtime="20201115 22:01:54.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.410" endtime="20201115 22:01:54.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.391" endtime="20201115 22:01:54.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.390" endtime="20201115 22:01:54.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.420" endtime="20201115 22:01:54.706"></status>
</kw>
<msg timestamp="20201115 22:01:54.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.418" endtime="20201115 22:01:54.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.711" endtime="20201115 22:01:54.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.719" endtime="20201115 22:01:54.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.415" endtime="20201115 22:01:54.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.413" endtime="20201115 22:01:54.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.726" level="INFO">${RESULT} = [{'time': 0.019318722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019350347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:54.722" endtime="20201115 22:01:54.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.739" level="INFO">${OVERHEAD} = {'time': [0.019318722, 0.019350347, 0.019383736, 0.019427403, 0.019458542, 0.019490056, 0.019515014, 0.019551181, 0.019594236, 0.019631944, 0.019665333, 0.019703667, 0.019733931, 0.019777319, 0.019805...</msg>
<status status="PASS" starttime="20201115 22:01:54.727" endtime="20201115 22:01:54.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:54.743" endtime="20201115 22:01:54.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.746" level="INFO">VALUE: [1.2528000000001233e-05, 1.2153000000000858e-05, 1.2235999999998803e-05, 1.2263999999997943e-05, 1.2194999999999567e-05, 1.2222999999998707e-05, 1.2167000000000427e-05, 1.2180999999999997e-05, 1.2222000000002703e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2263000000001939e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.2278000000000983e-05, 1.2208999999999137e-05, 1.2111000000002148e-05, 1.2195000000003037e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2152000000001384e-05, 1.2209000000002607e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2194000000000094e-05, 1.2223000000002177e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2124999999998248e-05, 1.2194000000000094e-05, 1.2278000000000983e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2209000000002607e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2124999999998248e-05, 1.2194000000000094e-05, 1.2209000000002607e-05, 1.2195000000003037e-05, 1.2222000000002703e-05]</msg>
<status status="PASS" starttime="20201115 22:01:54.745" endtime="20201115 22:01:54.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.740" endtime="20201115 22:01:54.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.749" endtime="20201115 22:01:54.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.753" endtime="20201115 22:01:54.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.751" endtime="20201115 22:01:54.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.748" endtime="20201115 22:01:54.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.388" endtime="20201115 22:01:54.774"></status>
</kw>
<msg timestamp="20201115 22:01:54.774" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.782" endtime="20201115 22:01:54.793"></status>
</kw>
<msg timestamp="20201115 22:01:54.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.781" endtime="20201115 22:01:54.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.796" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.795" endtime="20201115 22:01:54.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.797" endtime="20201115 22:01:54.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.778" endtime="20201115 22:01:54.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.776" endtime="20201115 22:01:54.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.807" endtime="20201115 22:01:55.093"></status>
</kw>
<msg timestamp="20201115 22:01:55.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019449708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.805" endtime="20201115 22:01:55.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019449708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.097" endtime="20201115 22:01:55.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.105" endtime="20201115 22:01:55.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.802" endtime="20201115 22:01:55.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.801" endtime="20201115 22:01:55.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.112" level="INFO">${RESULT} = [{'time': 0.019449708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019473722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.109" endtime="20201115 22:01:55.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.126" level="INFO">${OVERHEAD} = {'time': [0.019449708, 0.019473722, 0.019517375, 0.019546375, 0.019584722, 0.019619653, 0.019652069, 0.019692917, 0.019735319, 0.019776153, 0.019802667, 0.019830431, 0.019864444, 0.019891583, 0.019930...</msg>
<status status="PASS" starttime="20201115 22:01:55.113" endtime="20201115 22:01:55.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:55.129" endtime="20201115 22:01:55.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.132" level="INFO">VALUE: [1.2569000000000469e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2138000000001814e-05, 1.2139000000001288e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2221999999999233e-05, 1.2195000000003037e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2125000000001718e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.2236000000002273e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2209000000002607e-05, 1.2139000000001288e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2166000000000954e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.131" endtime="20201115 22:01:55.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.127" endtime="20201115 22:01:55.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.135" endtime="20201115 22:01:55.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.140" endtime="20201115 22:01:55.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.137" endtime="20201115 22:01:55.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.134" endtime="20201115 22:01:55.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.775" endtime="20201115 22:01:55.161"></status>
</kw>
<msg timestamp="20201115 22:01:55.161" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.168" endtime="20201115 22:01:55.179"></status>
</kw>
<msg timestamp="20201115 22:01:55.180" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.167" endtime="20201115 22:01:55.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.181" endtime="20201115 22:01:55.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.184" endtime="20201115 22:01:55.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.164" endtime="20201115 22:01:55.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.163" endtime="20201115 22:01:55.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.193" endtime="20201115 22:01:55.479"></status>
</kw>
<msg timestamp="20201115 22:01:55.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019331986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.191" endtime="20201115 22:01:55.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019331986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.483" endtime="20201115 22:01:55.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.492" endtime="20201115 22:01:55.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.189" endtime="20201115 22:01:55.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.187" endtime="20201115 22:01:55.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.499" level="INFO">${RESULT} = [{'time': 0.019331986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.019358875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.495" endtime="20201115 22:01:55.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.512" level="INFO">${OVERHEAD} = {'time': [0.019331986, 0.019358875, 0.019391014, 0.019421875, 0.019454625, 0.019480833, 0.019518569, 0.0195485, 0.019582806, 0.01961775, 0.019661375, 0.019687319, 0.019722514, 0.01974875, 0.019783042,...</msg>
<status status="PASS" starttime="20201115 22:01:55.499" endtime="20201115 22:01:55.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.516" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:55.515" endtime="20201115 22:01:55.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.519" level="INFO">VALUE: [1.2583000000000039e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.2208000000003133e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2193999999996624e-05, 1.2250000000001843e-05, 1.2125000000001718e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2125000000001718e-05, 1.2207999999999664e-05, 1.2263999999997943e-05, 1.2180999999999997e-05, 1.2208000000003133e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2264000000001413e-05, 1.2208000000003133e-05, 1.2153000000000858e-05, 1.2139000000001288e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2263999999997943e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.2223000000002177e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194999999999567e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.517" endtime="20201115 22:01:55.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.513" endtime="20201115 22:01:55.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.522" endtime="20201115 22:01:55.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.526" endtime="20201115 22:01:55.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.524" endtime="20201115 22:01:55.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.520" endtime="20201115 22:01:55.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.161" endtime="20201115 22:01:55.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.612" endtime="20201115 22:01:55.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.552" endtime="20201115 22:01:55.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.550" endtime="20201115 22:01:55.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.549" endtime="20201115 22:01:55.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:53.541" endtime="20201115 22:01:55.573" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.582" endtime="20201115 22:01:55.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.580" endtime="20201115 22:01:55.602"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.615" endtime="20201115 22:01:55.627"></status>
</kw>
<msg timestamp="20201115 22:01:55.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.614" endtime="20201115 22:01:55.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.629" endtime="20201115 22:01:55.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.633" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:55.631" endtime="20201115 22:01:55.634"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:55.611" endtime="20201115 22:01:55.634"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:55.609" endtime="20201115 22:01:55.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.607" endtime="20201115 22:01:55.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:55.639" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:55.638" endtime="20201115 22:01:55.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.636" endtime="20201115 22:01:55.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.606" endtime="20201115 22:01:55.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.606" endtime="20201115 22:01:55.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.641" endtime="20201115 22:01:55.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.604" endtime="20201115 22:01:55.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.603" endtime="20201115 22:01:55.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.579" endtime="20201115 22:01:55.643"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.647" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.658" endtime="20201115 22:01:55.682"></status>
</kw>
<msg timestamp="20201115 22:01:55.682" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.656" endtime="20201115 22:01:55.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.685" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.683" endtime="20201115 22:01:55.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.686" endtime="20201115 22:01:55.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.654" endtime="20201115 22:01:55.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.652" endtime="20201115 22:01:55.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.695" endtime="20201115 22:01:55.982"></status>
</kw>
<msg timestamp="20201115 22:01:55.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067992806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068024917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.694" endtime="20201115 22:01:55.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067992806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068024917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.986" endtime="20201115 22:01:55.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.994" endtime="20201115 22:01:55.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.691" endtime="20201115 22:01:55.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.689" endtime="20201115 22:01:55.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.001" level="INFO">${RESULT} = [{'time': 0.068024917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.211100000000133e-05, 'source_diff': 3.211100000000133e-05}, {'time': 0.068346333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:55.998" endtime="20201115 22:01:56.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.015" level="INFO">${OVERHEAD} = {'time': [0.068024917, 0.068346333, 0.068663347, 0.068971667, 0.069279375, 0.069591167, 0.069902292, 0.070224014, 0.070546028, 0.070853167, 0.071163917, 0.071479403, 0.071792694, 0.072103528, 0.072409...</msg>
<status status="PASS" starttime="20201115 22:01:56.002" endtime="20201115 22:01:56.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.019" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:56.018" endtime="20201115 22:01:56.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.022" level="INFO">VALUE: [3.211100000000133e-05, 3.1290999999988856e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.131900000000187e-05, 3.133399999999398e-05, 3.132000000000135e-05, 3.1332999999994504e-05, 3.130599999999484e-05, 3.137500000000015e-05, 3.131999999998747e-05, 3.133399999999398e-05, 3.131900000000187e-05, 3.133399999999398e-05, 3.132000000000135e-05, 3.1332999999994504e-05, 3.132000000000135e-05, 3.1304999999995364e-05, 3.1262999999989716e-05, 3.1306000000008716e-05, 3.132000000000135e-05, 3.131900000000187e-05, 3.1332999999994504e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.133300000000838e-05, 3.131900000000187e-05, 3.1332999999994504e-05, 3.136100000000752e-05, 3.132000000000135e-05, 3.133300000000838e-05, 3.130500000000924e-05, 3.132000000000135e-05, 3.137500000000015e-05, 3.133399999999398e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.140299999999929e-05, 3.133300000000838e-05, 3.133300000000838e-05, 3.133399999999398e-05, 3.133300000000838e-05, 3.1388999999992784e-05, 3.137500000000015e-05, 3.1278000000009576e-05, 3.132000000000135e-05, 3.136100000000752e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.020" endtime="20201115 22:01:56.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.015" endtime="20201115 22:01:56.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.025" endtime="20201115 22:01:56.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.028" endtime="20201115 22:01:56.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.027" endtime="20201115 22:01:56.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.023" endtime="20201115 22:01:56.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.648" endtime="20201115 22:01:56.049"></status>
</kw>
<msg timestamp="20201115 22:01:56.049" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.059" endtime="20201115 22:01:56.083"></status>
</kw>
<msg timestamp="20201115 22:01:56.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.057" endtime="20201115 22:01:56.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.084" endtime="20201115 22:01:56.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.087" endtime="20201115 22:01:56.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.055" endtime="20201115 22:01:56.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.052" endtime="20201115 22:01:56.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.096" endtime="20201115 22:01:56.382"></status>
</kw>
<msg timestamp="20201115 22:01:56.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.095" endtime="20201115 22:01:56.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.386" endtime="20201115 22:01:56.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.395" endtime="20201115 22:01:56.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.092" endtime="20201115 22:01:56.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.091" endtime="20201115 22:01:56.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.401" level="INFO">${RESULT} = [{'time': 0.022522917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.022840556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:56.398" endtime="20201115 22:01:56.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.415" level="INFO">${OVERHEAD} = {'time': [0.022522917, 0.022840556, 0.023158472, 0.023477667, 0.023796222, 0.024106708, 0.024430917, 0.024744875, 0.025054986, 0.025374486, 0.025688708, 0.026004181, 0.026314069, 0.026637653, 0.026960...</msg>
<status status="PASS" starttime="20201115 22:01:56.402" endtime="20201115 22:01:56.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.419" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:56.418" endtime="20201115 22:01:56.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.422" level="INFO">VALUE: [3.21250000000009e-05, 3.132000000000135e-05, 3.125000000000003e-05, 3.132000000000135e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.132000000000135e-05, 3.137500000000015e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.1276999999999694e-05, 3.132000000000135e-05, 3.1304999999998834e-05, 3.134700000000101e-05, 3.132000000000135e-05, 3.130599999999831e-05, 3.130600000000178e-05, 3.132000000000135e-05, 3.12639999999996e-05, 3.1276999999999694e-05, 3.133300000000144e-05, 3.1360999999997113e-05, 3.132000000000135e-05, 3.131900000000187e-05, 3.131999999999788e-05, 3.132000000000135e-05, 3.1304999999998834e-05, 3.131999999999788e-05, 3.1290999999995794e-05, 3.1332999999994504e-05, 3.129100000000273e-05, 3.133300000000144e-05, 3.131900000000187e-05, 3.130600000000178e-05, 3.131900000000187e-05, 3.130600000000178e-05, 3.131900000000187e-05, 3.129199999999527e-05, 3.134700000000101e-05, 3.13050000000023e-05, 3.132000000000135e-05, 3.1346999999994074e-05, 3.133300000000144e-05, 3.13050000000023e-05, 3.133300000000144e-05, 3.131900000000187e-05, 3.1304999999995364e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.129199999999527e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.420" endtime="20201115 22:01:56.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.416" endtime="20201115 22:01:56.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.425" endtime="20201115 22:01:56.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.428" endtime="20201115 22:01:56.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.427" endtime="20201115 22:01:56.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.423" endtime="20201115 22:01:56.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.050" endtime="20201115 22:01:56.449"></status>
</kw>
<msg timestamp="20201115 22:01:56.449" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.458" endtime="20201115 22:01:56.483"></status>
</kw>
<msg timestamp="20201115 22:01:56.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.457" endtime="20201115 22:01:56.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.486" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.485" endtime="20201115 22:01:56.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.487" endtime="20201115 22:01:56.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.454" endtime="20201115 22:01:56.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.452" endtime="20201115 22:01:56.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.496" endtime="20201115 22:01:56.783"></status>
</kw>
<msg timestamp="20201115 22:01:56.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.495" endtime="20201115 22:01:56.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.787" endtime="20201115 22:01:56.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.795" endtime="20201115 22:01:56.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.492" endtime="20201115 22:01:56.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.491" endtime="20201115 22:01:56.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.801" level="INFO">${RESULT} = [{'time': 0.023011681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.212499999999743e-05, 'source_diff': 3.212499999999743e-05}, {'time': 0.023318431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:56.798" endtime="20201115 22:01:56.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.815" level="INFO">${OVERHEAD} = {'time': [0.023011681, 0.023318431, 0.023633319, 0.023940694, 0.024255556, 0.024578514, 0.024889972, 0.025196417, 0.025503861, 0.025816264, 0.026132083, 0.026455986, 0.026771208, 0.027077667, 0.027395...</msg>
<status status="PASS" starttime="20201115 22:01:56.802" endtime="20201115 22:01:56.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.819" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:56.818" endtime="20201115 22:01:56.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.822" level="INFO">VALUE: [3.212499999999743e-05, 3.132000000000135e-05, 3.133300000000144e-05, 3.1318999999998404e-05, 3.133400000000092e-05, 3.1332999999997974e-05, 3.133300000000144e-05, 3.131999999999788e-05, 3.1304999999998834e-05, 3.130599999999831e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.136100000000058e-05, 3.133400000000092e-05, 3.131900000000187e-05, 3.133400000000092e-05, 3.137500000000015e-05, 3.132000000000135e-05, 3.133400000000092e-05, 3.1304999999998834e-05, 3.13050000000023e-05, 3.133400000000092e-05, 3.125000000000003e-05, 3.1362000000000056e-05, 3.133400000000092e-05, 3.133300000000144e-05, 3.130600000000178e-05, 3.131999999999441e-05, 3.132000000000135e-05, 3.1332999999994504e-05, 3.132000000000135e-05, 3.1332999999994504e-05, 3.133400000000092e-05, 3.140299999999929e-05, 3.131900000000187e-05, 3.130599999999484e-05, 3.1348000000000487e-05, 3.133300000000144e-05, 3.131900000000187e-05, 3.133300000000144e-05, 3.137500000000015e-05, 3.129199999999527e-05, 3.133399999999398e-05, 3.13050000000023e-05, 3.134700000000101e-05, 3.1304999999995364e-05, 3.1332999999994504e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.136100000000058e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.820" endtime="20201115 22:01:56.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.816" endtime="20201115 22:01:56.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.825" endtime="20201115 22:01:56.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.828" endtime="20201115 22:01:56.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.827" endtime="20201115 22:01:56.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.823" endtime="20201115 22:01:56.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.450" endtime="20201115 22:01:56.849"></status>
</kw>
<msg timestamp="20201115 22:01:56.849" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.859" endtime="20201115 22:01:56.883"></status>
</kw>
<msg timestamp="20201115 22:01:56.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.857" endtime="20201115 22:01:56.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.884" endtime="20201115 22:01:56.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.887" endtime="20201115 22:01:56.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.855" endtime="20201115 22:01:56.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.852" endtime="20201115 22:01:56.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.897" endtime="20201115 22:01:57.183"></status>
</kw>
<msg timestamp="20201115 22:01:57.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.895" endtime="20201115 22:01:57.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.187" endtime="20201115 22:01:57.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.195" endtime="20201115 22:01:57.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.892" endtime="20201115 22:01:57.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.891" endtime="20201115 22:01:57.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.202" level="INFO">${RESULT} = [{'time': 0.022174875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.211100000000133e-05, 'source_diff': 3.211100000000133e-05}, {'time': 0.022494361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:57.198" endtime="20201115 22:01:57.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.215" level="INFO">${OVERHEAD} = {'time': [0.022174875, 0.022494361, 0.022806694, 0.023122792, 0.023432361, 0.023755917, 0.024073556, 0.024392389, 0.024700042, 0.025009903, 0.025329708, 0.025639556, 0.025944722, 0.026267681, 0.026576...</msg>
<status status="PASS" starttime="20201115 22:01:57.203" endtime="20201115 22:01:57.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.220" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:57.219" endtime="20201115 22:01:57.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.222" level="INFO">VALUE: [3.211100000000133e-05, 3.131900000000187e-05, 3.1304999999998834e-05, 3.130599999999831e-05, 3.1304999999998834e-05, 3.132000000000135e-05, 3.133400000000092e-05, 3.130600000000178e-05, 3.131999999999788e-05, 3.133400000000092e-05, 3.12639999999996e-05, 3.132000000000135e-05, 3.1318999999998404e-05, 3.132000000000135e-05, 3.131999999999788e-05, 3.1304999999998834e-05, 3.1318999999998404e-05, 3.132000000000135e-05, 3.130599999999831e-05, 3.131900000000187e-05, 3.130599999999831e-05, 3.136100000000058e-05, 3.1348000000000487e-05, 3.1332999999997974e-05, 3.127799999999917e-05, 3.132000000000135e-05, 3.1348000000000487e-05, 3.130600000000178e-05, 3.1304999999998834e-05, 3.13050000000023e-05, 3.131999999999441e-05, 3.130600000000178e-05, 3.130599999999484e-05, 3.129199999999527e-05, 3.127800000000264e-05, 3.1362000000000056e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.133400000000092e-05, 3.132000000000135e-05, 3.131900000000187e-05, 3.137500000000015e-05, 3.133300000000144e-05, 3.130599999999484e-05, 3.13050000000023e-05, 3.130600000000178e-05, 3.12779999999957e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.221" endtime="20201115 22:01:57.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.216" endtime="20201115 22:01:57.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.225" endtime="20201115 22:01:57.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.229" endtime="20201115 22:01:57.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.227" endtime="20201115 22:01:57.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.224" endtime="20201115 22:01:57.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.850" endtime="20201115 22:01:57.250"></status>
</kw>
<msg timestamp="20201115 22:01:57.250" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.259" endtime="20201115 22:01:57.283"></status>
</kw>
<msg timestamp="20201115 22:01:57.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.257" endtime="20201115 22:01:57.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.284" endtime="20201115 22:01:57.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.287" endtime="20201115 22:01:57.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.255" endtime="20201115 22:01:57.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.253" endtime="20201115 22:01:57.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.298" endtime="20201115 22:01:57.583"></status>
</kw>
<msg timestamp="20201115 22:01:57.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.296" endtime="20201115 22:01:57.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.588" endtime="20201115 22:01:57.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.596" endtime="20201115 22:01:57.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.294" endtime="20201115 22:01:57.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.292" endtime="20201115 22:01:57.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.602" level="INFO">${RESULT} = [{'time': 0.021609736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.021919653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:57.599" endtime="20201115 22:01:57.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.615" level="INFO">${OVERHEAD} = {'time': [0.021609736, 0.021919653, 0.022236361, 0.022548722, 0.0228555, 0.023163236, 0.023474653, 0.023789486, 0.024113389, 0.02442175, 0.024745347, 0.025061792, 0.025378, 0.025693097, 0.026009486, 0...</msg>
<status status="PASS" starttime="20201115 22:01:57.603" endtime="20201115 22:01:57.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.620" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:57.619" endtime="20201115 22:01:57.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.622" level="INFO">VALUE: [3.21250000000009e-05, 3.136100000000058e-05, 3.1332999999997974e-05, 3.1304999999998834e-05, 3.133300000000144e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.1318999999998404e-05, 3.131999999999788e-05, 3.1318999999998404e-05, 3.131900000000187e-05, 3.127799999999917e-05, 3.137500000000015e-05, 3.134700000000101e-05, 3.1318999999998404e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.127799999999917e-05, 3.136100000000058e-05, 3.133400000000092e-05, 3.1318999999998404e-05, 3.133400000000092e-05, 3.131999999999788e-05, 3.130600000000178e-05, 3.130600000000178e-05, 3.131900000000187e-05, 3.131900000000187e-05, 3.130599999999831e-05, 3.1276999999999694e-05, 3.131900000000187e-05, 3.130599999999831e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.133300000000144e-05, 3.132000000000135e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.131900000000187e-05, 3.133300000000144e-05, 3.133400000000092e-05, 3.138899999999972e-05, 3.1304999999995364e-05, 3.1362000000000056e-05, 3.129199999999527e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.130600000000178e-05, 3.132000000000135e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.621" endtime="20201115 22:01:57.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.616" endtime="20201115 22:01:57.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.632" endtime="20201115 22:01:57.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.635" endtime="20201115 22:01:57.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.634" endtime="20201115 22:01:57.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.630" endtime="20201115 22:01:57.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.251" endtime="20201115 22:01:57.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.646" endtime="20201115 22:01:57.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.645" endtime="20201115 22:01:57.657"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.660" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.670" endtime="20201115 22:01:57.695"></status>
</kw>
<msg timestamp="20201115 22:01:57.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.668" endtime="20201115 22:01:57.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.697" endtime="20201115 22:01:57.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.699" endtime="20201115 22:01:57.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.665" endtime="20201115 22:01:57.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.663" endtime="20201115 22:01:57.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.709" endtime="20201115 22:01:57.995"></status>
</kw>
<msg timestamp="20201115 22:01:57.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026902736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026928222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.708" endtime="20201115 22:01:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026902736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026928222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.999" endtime="20201115 22:01:58.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.008" endtime="20201115 22:01:58.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.705" endtime="20201115 22:01:58.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.703" endtime="20201115 22:01:58.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.014" level="INFO">${RESULT} = [{'time': 0.026928222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5486000000001646e-05, 'source_diff': 2.5486000000001646e-05}, {'time': 0.027259167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.011" endtime="20201115 22:01:58.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.027" level="INFO">${OVERHEAD} = {'time': [0.026928222, 0.027259167, 0.027599167, 0.027945069, 0.028290083, 0.028628181, 0.028970972, 0.029311028, 0.029653167, 0.030001556, 0.030336264, 0.030676569, 0.031008764, 0.031343486, 0.031682...</msg>
<status status="PASS" starttime="20201115 22:01:58.015" endtime="20201115 22:01:58.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.032" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:58.031" endtime="20201115 22:01:58.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.035" level="INFO">VALUE: [2.5486000000001646e-05, 2.5320000000002285e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.538900000000066e-05, 2.5347999999997956e-05, 2.533300000000238e-05, 2.538900000000066e-05, 2.5348000000001425e-05, 2.5347999999997956e-05, 2.534700000000195e-05, 2.5318999999999342e-05, 2.5320000000002285e-05, 2.5318999999995873e-05, 2.5348000000001425e-05, 2.540300000000023e-05, 2.5334000000001855e-05, 2.5346999999995012e-05, 2.531900000000281e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.5348000000001425e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.5319999999995346e-05, 2.5334000000001855e-05, 2.5360999999994582e-05, 2.5334000000001855e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.5263999999997067e-05, 2.530500000000324e-05, 2.536100000000152e-05, 2.533300000000238e-05, 2.5319999999995346e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.5332999999995442e-05, 2.5348000000001425e-05, 2.5304999999996303e-05, 2.536100000000152e-05, 2.5333999999994916e-05, 2.533300000000238e-05, 2.5332999999995442e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.033" endtime="20201115 22:01:58.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.028" endtime="20201115 22:01:58.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.038" endtime="20201115 22:01:58.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.042" endtime="20201115 22:01:58.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.040" endtime="20201115 22:01:58.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.037" endtime="20201115 22:01:58.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.660" endtime="20201115 22:01:58.062"></status>
</kw>
<msg timestamp="20201115 22:01:58.063" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.072" endtime="20201115 22:01:58.097"></status>
</kw>
<msg timestamp="20201115 22:01:58.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.070" endtime="20201115 22:01:58.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.098" endtime="20201115 22:01:58.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.101" endtime="20201115 22:01:58.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.067" endtime="20201115 22:01:58.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.065" endtime="20201115 22:01:58.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.111" endtime="20201115 22:01:58.398"></status>
</kw>
<msg timestamp="20201115 22:01:58.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.109" endtime="20201115 22:01:58.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021713653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.402" endtime="20201115 22:01:58.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.410" endtime="20201115 22:01:58.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.106" endtime="20201115 22:01:58.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.105" endtime="20201115 22:01:58.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.417" level="INFO">${RESULT} = [{'time': 0.021713653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5471999999998607e-05, 'source_diff': 2.5471999999998607e-05}, {'time': 0.022052139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.413" endtime="20201115 22:01:58.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.430" level="INFO">${OVERHEAD} = {'time': [0.021713653, 0.022052139, 0.022400889, 0.022740333, 0.023079111, 0.023423833, 0.023757028, 0.024100194, 0.024436764, 0.024768417, 0.025106319, 0.025452625, 0.025794833, 0.026132722, 0.02647,...</msg>
<status status="PASS" starttime="20201115 22:01:58.418" endtime="20201115 22:01:58.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.435" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:58.434" endtime="20201115 22:01:58.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.437" level="INFO">VALUE: [2.5471999999998607e-05, 2.5346999999998482e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.5346999999998482e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.5346999999998482e-05, 2.5346999999998482e-05, 2.5348000000001425e-05, 2.5346999999998482e-05, 2.5360999999998052e-05, 2.5304999999999772e-05, 2.534700000000195e-05, 2.538900000000066e-05, 2.533300000000238e-05, 2.538900000000066e-05, 2.5332999999998912e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.533300000000238e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.5320000000002285e-05, 2.5305999999999246e-05, 2.537500000000109e-05, 2.5347999999997956e-05, 2.533300000000238e-05, 2.5360999999994582e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.5374999999994152e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.5360999999994582e-05, 2.534700000000195e-05, 2.54169999999998e-05, 2.538900000000066e-05, 2.5346999999995012e-05, 2.5346999999995012e-05, 2.536100000000152e-05, 2.5292000000003145e-05, 2.5320000000002285e-05, 2.5333999999994916e-05, 2.534700000000195e-05, 2.5277999999996636e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.436" endtime="20201115 22:01:58.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.431" endtime="20201115 22:01:58.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.441" endtime="20201115 22:01:58.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.444" endtime="20201115 22:01:58.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.442" endtime="20201115 22:01:58.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.439" endtime="20201115 22:01:58.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.063" endtime="20201115 22:01:58.465"></status>
</kw>
<msg timestamp="20201115 22:01:58.465" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.474" endtime="20201115 22:01:58.499"></status>
</kw>
<msg timestamp="20201115 22:01:58.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.472" endtime="20201115 22:01:58.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.500" endtime="20201115 22:01:58.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.503" endtime="20201115 22:01:58.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.470" endtime="20201115 22:01:58.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.468" endtime="20201115 22:01:58.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.513" endtime="20201115 22:01:58.799"></status>
</kw>
<msg timestamp="20201115 22:01:58.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.511" endtime="20201115 22:01:58.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.803" endtime="20201115 22:01:58.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.811" endtime="20201115 22:01:58.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.509" endtime="20201115 22:01:58.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.507" endtime="20201115 22:01:58.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.818" level="INFO">${RESULT} = [{'time': 0.021759097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5472000000002076e-05, 'source_diff': 2.5472000000002076e-05}, {'time': 0.022096028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.815" endtime="20201115 22:01:58.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.832" level="INFO">${OVERHEAD} = {'time': [0.021759097, 0.022096028, 0.022436319, 0.022782514, 0.023120931, 0.023468708, 0.023808111, 0.024147889, 0.024480972, 0.024819431, 0.025161583, 0.025495681, 0.025835028, 0.026175042, 0.026509...</msg>
<status status="PASS" starttime="20201115 22:01:58.819" endtime="20201115 22:01:58.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.836" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:58.835" endtime="20201115 22:01:58.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.839" level="INFO">VALUE: [2.5472000000002076e-05, 2.537500000000109e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.5278000000000106e-05, 2.533300000000238e-05, 2.5332999999998912e-05, 2.543099999999937e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.534700000000195e-05, 2.5361999999997525e-05, 2.5346999999998482e-05, 2.5347999999997956e-05, 2.5348000000001425e-05, 2.533300000000238e-05, 2.5333999999998386e-05, 2.533300000000238e-05, 2.5292000000003145e-05, 2.5346999999998482e-05, 2.540300000000023e-05, 2.5333999999998386e-05, 2.5332999999998912e-05, 2.536100000000152e-05, 2.5361999999997525e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.536100000000152e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.5346999999995012e-05, 2.533300000000238e-05, 2.534700000000195e-05, 2.5361999999994056e-05, 2.534700000000195e-05, 2.5332999999995442e-05, 2.5346999999995012e-05, 2.536100000000152e-05, 2.537500000000109e-05, 2.5347999999994486e-05, 2.5362000000000995e-05, 2.5334000000001855e-05, 2.533300000000238e-05, 2.5334000000001855e-05, 2.5318999999995873e-05, 2.5362000000000995e-05, 2.5334000000001855e-05, 2.5360999999994582e-05, 2.538900000000066e-05, 2.5334000000001855e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.837" endtime="20201115 22:01:58.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.833" endtime="20201115 22:01:58.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.842" endtime="20201115 22:01:58.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.845" endtime="20201115 22:01:58.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.844" endtime="20201115 22:01:58.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.840" endtime="20201115 22:01:58.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.466" endtime="20201115 22:01:58.866"></status>
</kw>
<msg timestamp="20201115 22:01:58.866" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.875" endtime="20201115 22:01:58.900"></status>
</kw>
<msg timestamp="20201115 22:01:58.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.874" endtime="20201115 22:01:58.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.902" endtime="20201115 22:01:58.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.904" endtime="20201115 22:01:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.871" endtime="20201115 22:01:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.869" endtime="20201115 22:01:58.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.915" endtime="20201115 22:01:59.202"></status>
</kw>
<msg timestamp="20201115 22:01:59.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.914" endtime="20201115 22:01:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.206" endtime="20201115 22:01:59.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.214" endtime="20201115 22:01:59.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.911" endtime="20201115 22:01:59.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.909" endtime="20201115 22:01:59.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.221" level="INFO">${RESULT} = [{'time': 0.021656014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5472000000002076e-05, 'source_diff': 2.5472000000002076e-05}, {'time': 0.022004778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.218" endtime="20201115 22:01:59.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.235" level="INFO">${OVERHEAD} = {'time': [0.021656014, 0.022004778, 0.022348153, 0.0226975, 0.023037819, 0.023376903, 0.023725931, 0.024066583, 0.024401014, 0.024731389, 0.025070514, 0.025410222, 0.025743361, 0.026085861, 0.02643180...</msg>
<status status="PASS" starttime="20201115 22:01:59.222" endtime="20201115 22:01:59.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.239" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:59.238" endtime="20201115 22:01:59.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.242" level="INFO">VALUE: [2.5472000000002076e-05, 2.538900000000066e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.5347999999997956e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.5360999999998052e-05, 2.5360999999998052e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.5278000000000106e-05, 2.5332999999998912e-05, 2.534700000000195e-05, 2.5249999999997497e-05, 2.5333999999998386e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.5334000000001855e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.5360999999998052e-05, 2.5332999999998912e-05, 2.5362000000000995e-05, 2.534700000000195e-05, 2.5332999999995442e-05, 2.5348000000001425e-05, 2.5333999999994916e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.5360999999994582e-05, 2.534700000000195e-05, 2.5290999999996733e-05, 2.5362000000000995e-05, 2.5332999999995442e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.5360999999994582e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.534700000000195e-05, 2.5360999999994582e-05, 2.5278000000003575e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.240" endtime="20201115 22:01:59.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.236" endtime="20201115 22:01:59.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.245" endtime="20201115 22:01:59.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.248" endtime="20201115 22:01:59.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.247" endtime="20201115 22:01:59.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.243" endtime="20201115 22:01:59.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.867" endtime="20201115 22:01:59.269"></status>
</kw>
<msg timestamp="20201115 22:01:59.269" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.278" endtime="20201115 22:01:59.303"></status>
</kw>
<msg timestamp="20201115 22:01:59.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.276" endtime="20201115 22:01:59.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.305" endtime="20201115 22:01:59.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.307" endtime="20201115 22:01:59.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.274" endtime="20201115 22:01:59.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.272" endtime="20201115 22:01:59.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.317" endtime="20201115 22:01:59.603"></status>
</kw>
<msg timestamp="20201115 22:01:59.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.315" endtime="20201115 22:01:59.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.608" endtime="20201115 22:01:59.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.616" endtime="20201115 22:01:59.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.313" endtime="20201115 22:01:59.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.311" endtime="20201115 22:01:59.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.623" level="INFO">${RESULT} = [{'time': 0.021723056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.545900000000198e-05, 'source_diff': 2.545900000000198e-05}, {'time': 0.022065236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:59.619" endtime="20201115 22:01:59.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.636" level="INFO">${OVERHEAD} = {'time': [0.021723056, 0.022065236, 0.022412389, 0.022755833, 0.023095181, 0.023429875, 0.023777639, 0.024126319, 0.024460125, 0.024790431, 0.025123597, 0.025471347, 0.025806681, 0.026152306, 0.026490...</msg>
<status status="PASS" starttime="20201115 22:01:59.624" endtime="20201115 22:01:59.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.640" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:59.639" endtime="20201115 22:01:59.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.643" level="INFO">VALUE: [2.545900000000198e-05, 2.5318999999999342e-05, 2.533300000000238e-05, 2.5346999999998482e-05, 2.5264000000000536e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.5304999999999772e-05, 2.537499999999762e-05, 2.5334000000001855e-05, 2.5304999999999772e-05, 2.5318999999999342e-05, 2.5348000000001425e-05, 2.5334000000001855e-05, 2.5333999999998386e-05, 2.540300000000023e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.537500000000109e-05, 2.5320000000002285e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.534700000000195e-05, 2.5360999999998052e-05, 2.5346999999998482e-05, 2.5264000000000536e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.538900000000066e-05, 2.5319999999995346e-05, 2.5362000000000995e-05, 2.5360999999994582e-05, 2.538900000000066e-05, 2.5334000000001855e-05, 2.5306000000002715e-05, 2.5334000000001855e-05, 2.5305999999995776e-05, 2.533300000000238e-05, 2.5361999999994056e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.534700000000195e-05, 2.5306000000002715e-05, 2.5348000000001425e-05, 2.5346999999995012e-05, 2.534700000000195e-05, 2.5333999999994916e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.641" endtime="20201115 22:01:59.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.637" endtime="20201115 22:01:59.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.646" endtime="20201115 22:01:59.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.649" endtime="20201115 22:01:59.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.648" endtime="20201115 22:01:59.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.644" endtime="20201115 22:01:59.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.270" endtime="20201115 22:01:59.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.658" endtime="20201115 22:01:59.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.657" endtime="20201115 22:01:59.671"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.673" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.682" endtime="20201115 22:01:59.708"></status>
</kw>
<msg timestamp="20201115 22:01:59.709" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.680" endtime="20201115 22:01:59.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.711" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.710" endtime="20201115 22:01:59.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.712" endtime="20201115 22:01:59.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.678" endtime="20201115 22:01:59.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.675" endtime="20201115 22:01:59.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.722" endtime="20201115 22:02:00.008"></status>
</kw>
<msg timestamp="20201115 22:02:00.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024055708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.720" endtime="20201115 22:02:00.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024055708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.013" endtime="20201115 22:02:00.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.021" endtime="20201115 22:02:00.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.718" endtime="20201115 22:02:00.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.716" endtime="20201115 22:02:00.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.028" level="INFO">${RESULT} = [{'time': 0.024083347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.763900000000291e-05, 'source_diff': 2.763900000000291e-05}, {'time': 0.024441917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:00.024" endtime="20201115 22:02:00.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.041" level="INFO">${OVERHEAD} = {'time': [0.024083347, 0.024441917, 0.024802042, 0.025167167, 0.025527, 0.025894875, 0.026253472, 0.026628556, 0.026999569, 0.027375861, 0.027745028, 0.028109472, 0.028482986, 0.028845931, 0.029208833...</msg>
<status status="PASS" starttime="20201115 22:02:00.029" endtime="20201115 22:02:00.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.046" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:00.045" endtime="20201115 22:02:00.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.048" level="INFO">VALUE: [2.763900000000291e-05, 2.7486000000000177e-05, 2.7513999999999317e-05, 2.7542000000001926e-05, 2.7556000000001496e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7528000000002356e-05, 2.7512999999999843e-05, 2.7514000000002786e-05, 2.7542000000001926e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.7555999999998027e-05, 2.7569000000001592e-05, 2.7527999999998887e-05, 2.7570000000001066e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7526999999999413e-05, 2.7527999999998887e-05, 2.7512999999999843e-05, 2.7513999999999317e-05, 2.7527000000006352e-05, 2.7541999999998457e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7528000000005826e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7527999999998887e-05, 2.7499999999999747e-05, 2.7541999999998457e-05, 2.7526999999999413e-05, 2.7526999999999413e-05, 2.7499999999999747e-05, 2.7582999999997693e-05, 2.7499999999999747e-05, 2.7512999999999843e-05, 2.7513999999999317e-05, 2.7556000000004965e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.047" endtime="20201115 22:02:00.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.042" endtime="20201115 22:02:00.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.051" endtime="20201115 22:02:00.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.055" endtime="20201115 22:02:00.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.053" endtime="20201115 22:02:00.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.050" endtime="20201115 22:02:00.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.673" endtime="20201115 22:02:00.075"></status>
</kw>
<msg timestamp="20201115 22:02:00.076" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.085" endtime="20201115 22:02:00.111"></status>
</kw>
<msg timestamp="20201115 22:02:00.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.083" endtime="20201115 22:02:00.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.114" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.112" endtime="20201115 22:02:00.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.115" endtime="20201115 22:02:00.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.080" endtime="20201115 22:02:00.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.078" endtime="20201115 22:02:00.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.125" endtime="20201115 22:02:00.411"></status>
</kw>
<msg timestamp="20201115 22:02:00.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.124" endtime="20201115 22:02:00.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.415" endtime="20201115 22:02:00.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.424" endtime="20201115 22:02:00.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.121" endtime="20201115 22:02:00.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.120" endtime="20201115 22:02:00.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.430" level="INFO">${RESULT} = [{'time': 0.021731986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999999442e-05, 'source_diff': 2.7638999999999442e-05}, {'time': 0.02210425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:00.427" endtime="20201115 22:02:00.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.444" level="INFO">${OVERHEAD} = {'time': [0.021731986, 0.02210425, 0.022463403, 0.022821028, 0.023193, 0.023563722, 0.023935972, 0.024307611, 0.024665556, 0.025023208, 0.025399833, 0.025765875, 0.026135292, 0.026504708, 0.026868917,...</msg>
<status status="PASS" starttime="20201115 22:02:00.431" endtime="20201115 22:02:00.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.448" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:00.447" endtime="20201115 22:02:00.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.451" level="INFO">VALUE: [2.7638999999999442e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7514000000002786e-05, 2.7514000000002786e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7528000000002356e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7583000000001162e-05, 2.7500000000003216e-05, 2.7527999999998887e-05, 2.7526999999999413e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7444000000001467e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.7486000000000177e-05, 2.7513999999999317e-05, 2.7527999999998887e-05, 2.7542000000005395e-05, 2.7499999999999747e-05, 2.7570000000004535e-05, 2.756900000000506e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7514000000006256e-05, 2.7527999999998887e-05, 2.7556000000004965e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.7458000000001037e-05, 2.7541999999998457e-05, 2.7499999999999747e-05, 2.7514000000006256e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.7499999999999747e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.449" endtime="20201115 22:02:00.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.445" endtime="20201115 22:02:00.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.454" endtime="20201115 22:02:00.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.457" endtime="20201115 22:02:00.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.456" endtime="20201115 22:02:00.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.452" endtime="20201115 22:02:00.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.076" endtime="20201115 22:02:00.478"></status>
</kw>
<msg timestamp="20201115 22:02:00.478" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.488" endtime="20201115 22:02:00.514"></status>
</kw>
<msg timestamp="20201115 22:02:00.515" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.486" endtime="20201115 22:02:00.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.518" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.516" endtime="20201115 22:02:00.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.519" endtime="20201115 22:02:00.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.483" endtime="20201115 22:02:00.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.481" endtime="20201115 22:02:00.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.529" endtime="20201115 22:02:00.815"></status>
</kw>
<msg timestamp="20201115 22:02:00.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:00.528" endtime="20201115 22:02:00.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:00.819" endtime="20201115 22:02:00.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.827" endtime="20201115 22:02:00.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.525" endtime="20201115 22:02:00.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.524" endtime="20201115 22:02:00.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.834" level="INFO">${RESULT} = [{'time': 0.022565639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999999442e-05, 'source_diff': 2.7638999999999442e-05}, {'time': 0.022941972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.830" endtime="20201115 22:02:00.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.847" level="INFO">${OVERHEAD} = {'time': [0.022565639, 0.022941972, 0.023318056, 0.023683722, 0.024042597, 0.024403028, 0.024774722, 0.025149167, 0.025520778, 0.025879042, 0.026246625, 0.026607361, 0.026971542, 0.027341639, 0.027708...</msg>
<status status="PASS" starttime="20201115 22:02:00.835" endtime="20201115 22:02:00.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.851" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:00.850" endtime="20201115 22:02:00.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.854" level="INFO">VALUE: [2.7638999999999442e-05, 2.7528000000002356e-05, 2.7584000000000636e-05, 2.7528000000002356e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7568999999998123e-05, 2.7541999999998457e-05, 2.7528000000002356e-05, 2.7528000000002356e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7514000000002786e-05, 2.7528000000002356e-05, 2.7541000000002452e-05, 2.7472000000000607e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7528000000002356e-05, 2.7499999999999747e-05, 2.7512999999999843e-05, 2.7500000000003216e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.7500000000006686e-05, 2.758300000000463e-05, 2.7513999999999317e-05, 2.744399999999453e-05, 2.7541999999998457e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.758300000000463e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.7541999999998457e-05, 2.7541999999998457e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7526999999999413e-05, 2.7512999999999843e-05, 2.7527999999998887e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.853" endtime="20201115 22:02:00.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.848" endtime="20201115 22:02:00.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.857" endtime="20201115 22:02:00.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.861" endtime="20201115 22:02:00.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.859" endtime="20201115 22:02:00.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.855" endtime="20201115 22:02:00.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.479" endtime="20201115 22:02:00.882"></status>
</kw>
<msg timestamp="20201115 22:02:00.882" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.891" endtime="20201115 22:02:00.917"></status>
</kw>
<msg timestamp="20201115 22:02:00.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.889" endtime="20201115 22:02:00.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.919" endtime="20201115 22:02:00.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.921" endtime="20201115 22:02:00.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.887" endtime="20201115 22:02:00.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.885" endtime="20201115 22:02:00.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.931" endtime="20201115 22:02:01.219"></status>
</kw>
<msg timestamp="20201115 22:02:01.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.930" endtime="20201115 22:02:01.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.223" endtime="20201115 22:02:01.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.231" endtime="20201115 22:02:01.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.927" endtime="20201115 22:02:01.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.925" endtime="20201115 22:02:01.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.238" level="INFO">${RESULT} = [{'time': 0.022210056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.022567681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.235" endtime="20201115 22:02:01.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.251" level="INFO">${OVERHEAD} = {'time': [0.022210056, 0.022567681, 0.022925319, 0.023295361, 0.023661361, 0.024031736, 0.024391556, 0.024765375, 0.025132042, 0.0255055, 0.02587775, 0.026244694, 0.026614153, 0.026973347, 0.027349347...</msg>
<status status="PASS" starttime="20201115 22:02:01.239" endtime="20201115 22:02:01.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.255" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:01.255" endtime="20201115 22:02:01.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.258" level="INFO">VALUE: [2.7624999999999872e-05, 2.744499999999747e-05, 2.7554999999998553e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7528000000002356e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7542000000001926e-05, 2.7499999999999747e-05, 2.7514000000002786e-05, 2.7499999999999747e-05, 2.7472000000000607e-05, 2.7514000000002786e-05, 2.7540999999998983e-05, 2.7528000000002356e-05, 2.7540999999998983e-05, 2.7556000000001496e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7528000000002356e-05, 2.7513999999999317e-05, 2.7512999999999843e-05, 2.7541999999998457e-05, 2.7528000000005826e-05, 2.7555999999998027e-05, 2.7554999999998553e-05, 2.7444000000001467e-05, 2.7499999999999747e-05, 2.7513000000006782e-05, 2.7513999999999317e-05, 2.7514000000006256e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7514000000006256e-05, 2.7527999999998887e-05, 2.7526999999999413e-05, 2.7554999999998553e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7500000000006686e-05, 2.7527999999998887e-05, 2.7499999999999747e-05, 2.7527999999998887e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.748699999999965e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.257" endtime="20201115 22:02:01.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.252" endtime="20201115 22:02:01.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.262" endtime="20201115 22:02:01.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.265" endtime="20201115 22:02:01.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.264" endtime="20201115 22:02:01.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.260" endtime="20201115 22:02:01.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.882" endtime="20201115 22:02:01.286"></status>
</kw>
<msg timestamp="20201115 22:02:01.286" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.295" endtime="20201115 22:02:01.323"></status>
</kw>
<msg timestamp="20201115 22:02:01.324" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.293" endtime="20201115 22:02:01.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.329" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.326" endtime="20201115 22:02:01.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.331" endtime="20201115 22:02:01.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.291" endtime="20201115 22:02:01.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.289" endtime="20201115 22:02:01.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.351" endtime="20201115 22:02:01.644"></status>
</kw>
<msg timestamp="20201115 22:02:01.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.348" endtime="20201115 22:02:01.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.648" endtime="20201115 22:02:01.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.656" endtime="20201115 22:02:01.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.343" endtime="20201115 22:02:01.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.339" endtime="20201115 22:02:01.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.663" level="INFO">${RESULT} = [{'time': 0.021744639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7652999999999012e-05, 'source_diff': 2.7652999999999012e-05}, {'time': 0.022108847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.660" endtime="20201115 22:02:01.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.676" level="INFO">${OVERHEAD} = {'time': [0.021744639, 0.022108847, 0.022484861, 0.022857139, 0.023233764, 0.023609444, 0.023973278, 0.024330944, 0.024704778, 0.025078625, 0.025449097, 0.025826069, 0.0261965, 0.026562875, 0.02692427...</msg>
<status status="PASS" starttime="20201115 22:02:01.664" endtime="20201115 22:02:01.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.681" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:02:01.680" endtime="20201115 22:02:01.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.683" level="INFO">VALUE: [2.7652999999999012e-05, 2.7528000000002356e-05, 2.7513999999999317e-05, 2.7555999999998027e-05, 2.7486000000000177e-05, 2.7512999999999843e-05, 2.7513999999999317e-05, 2.7540999999998983e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7540999999998983e-05, 2.7526999999999413e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7541999999998457e-05, 2.7528000000002356e-05, 2.7512999999999843e-05, 2.7513999999999317e-05, 2.7542000000001926e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7556000000001496e-05, 2.7514000000002786e-05, 2.7500000000003216e-05, 2.7528000000002356e-05, 2.7540999999998983e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7540999999998983e-05, 2.7527999999998887e-05, 2.7540999999998983e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7527999999998887e-05, 2.7540999999998983e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.7540999999998983e-05, 2.7527999999998887e-05, 2.7513999999999317e-05, 2.7528000000005826e-05, 2.7513999999999317e-05, 2.7528000000005826e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.7514000000006256e-05, 2.7527999999998887e-05, 2.7582999999997693e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.682" endtime="20201115 22:02:01.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.677" endtime="20201115 22:02:01.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.687" endtime="20201115 22:02:01.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.690" endtime="20201115 22:02:01.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.689" endtime="20201115 22:02:01.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.685" endtime="20201115 22:02:01.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.287" endtime="20201115 22:02:01.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.672" endtime="20201115 22:02:01.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.671" endtime="20201115 22:02:01.711"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.713" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.722" endtime="20201115 22:02:01.750"></status>
</kw>
<msg timestamp="20201115 22:02:01.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.721" endtime="20201115 22:02:01.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.751" endtime="20201115 22:02:01.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.754" endtime="20201115 22:02:01.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.718" endtime="20201115 22:02:01.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.716" endtime="20201115 22:02:01.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.763" endtime="20201115 22:02:02.050"></status>
</kw>
<msg timestamp="20201115 22:02:02.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023855514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.761" endtime="20201115 22:02:02.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023855514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.054" endtime="20201115 22:02:02.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.062" endtime="20201115 22:02:02.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.759" endtime="20201115 22:02:02.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.757" endtime="20201115 22:02:02.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.068" level="INFO">${RESULT} = [{'time': 0.023855514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0096999999999763e-05, 'source_diff': 3.0096999999999763e-05}, {'time': 0.024258375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.065" endtime="20201115 22:02:02.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.081" level="INFO">${OVERHEAD} = {'time': [0.023855514, 0.024258375, 0.0246625, 0.025059764, 0.025450472, 0.02584775, 0.026248153, 0.026654153, 0.02705175, 0.027454083, 0.027852278, 0.028252972, 0.028657097, 0.029052528, 0.029439861,...</msg>
<status status="PASS" starttime="20201115 22:02:02.069" endtime="20201115 22:02:02.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.086" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:02.085" endtime="20201115 22:02:02.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.089" level="INFO">VALUE: [3.0096999999999763e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9986000000002677e-05, 2.9971999999999638e-05, 2.9931000000000402e-05, 2.9931000000000402e-05, 2.994499999999997e-05, 2.9874999999998653e-05, 2.9985999999999208e-05, 2.9889000000001692e-05, 2.9930000000000928e-05, 2.9930000000000928e-05, 2.9931000000000402e-05, 2.9958000000000068e-05, 2.992999999999746e-05, 2.9931000000000402e-05, 2.9931000000000402e-05, 2.994499999999997e-05, 2.994399999999703e-05, 2.994399999999703e-05, 2.9986000000002677e-05, 2.994399999999703e-05, 2.9930999999996932e-05, 2.992999999999746e-05, 2.9888999999998223e-05, 2.9916000000004828e-05, 2.99170000000043e-05, 2.995900000000301e-05, 2.9958000000003537e-05, 2.994399999999703e-05, 2.997199999999617e-05, 2.994399999999703e-05, 3.0013999999994878e-05, 2.994399999999703e-05, 2.9985999999995738e-05, 2.9944000000003967e-05, 2.9930999999996932e-05, 2.9958000000003537e-05, 2.9986000000002677e-05, 2.9930000000004398e-05, 2.993100000000387e-05, 2.9874999999998653e-05, 2.994399999999703e-05, 2.9930999999996932e-05, 2.9986000000002677e-05, 2.9986000000002677e-05, 2.994500000000344e-05, 2.994500000000344e-05, 2.997199999999617e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.087" endtime="20201115 22:02:02.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.082" endtime="20201115 22:02:02.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.092" endtime="20201115 22:02:02.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.096" endtime="20201115 22:02:02.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.094" endtime="20201115 22:02:02.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.091" endtime="20201115 22:02:02.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.714" endtime="20201115 22:02:02.117"></status>
</kw>
<msg timestamp="20201115 22:02:02.117" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.126" endtime="20201115 22:02:02.153"></status>
</kw>
<msg timestamp="20201115 22:02:02.154" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.124" endtime="20201115 22:02:02.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.156" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.155" endtime="20201115 22:02:02.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.157" endtime="20201115 22:02:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.122" endtime="20201115 22:02:02.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.119" endtime="20201115 22:02:02.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.168" endtime="20201115 22:02:02.454"></status>
</kw>
<msg timestamp="20201115 22:02:02.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.167" endtime="20201115 22:02:02.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.458" endtime="20201115 22:02:02.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.466" endtime="20201115 22:02:02.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.164" endtime="20201115 22:02:02.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.162" endtime="20201115 22:02:02.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.473" level="INFO">${RESULT} = [{'time': 0.021693042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083999999999667e-05, 'source_diff': 3.0083999999999667e-05}, {'time': 0.022080764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.469" endtime="20201115 22:02:02.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.486" level="INFO">${OVERHEAD} = {'time': [0.021693042, 0.022080764, 0.022487111, 0.022886333, 0.023275278, 0.023668861, 0.024072722, 0.024463806, 0.024853069, 0.025258139, 0.025664194, 0.026062458, 0.02646075, 0.026849042, 0.0272364...</msg>
<status status="PASS" starttime="20201115 22:02:02.473" endtime="20201115 22:02:02.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.490" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:02.489" endtime="20201115 22:02:02.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.493" level="INFO">VALUE: [3.0083999999999667e-05, 2.9999999999998778e-05, 2.9958000000000068e-05, 2.99579999999966e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.995899999999954e-05, 2.9999999999998778e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 2.9902000000001788e-05, 2.9958000000000068e-05, 2.9917000000000832e-05, 2.9985999999999208e-05, 2.9944000000000498e-05, 2.9971999999999638e-05, 2.9930000000000928e-05, 2.9999999999998778e-05, 2.995900000000301e-05, 2.9958000000000068e-05, 3.0028000000001387e-05, 2.9931000000000402e-05, 2.9931000000000402e-05, 2.9971999999999638e-05, 2.99579999999966e-05, 2.994500000000344e-05, 2.9930999999996932e-05, 2.994500000000344e-05, 3.0000000000002247e-05, 2.9958000000003537e-05, 2.994500000000344e-05, 2.9985999999995738e-05, 2.99579999999966e-05, 2.9958000000003537e-05, 2.9944999999996502e-05, 2.993100000000387e-05, 2.993100000000387e-05, 2.994500000000344e-05, 2.9944999999996502e-05, 2.9930000000004398e-05, 2.9916999999997362e-05, 2.99579999999966e-05, 2.9930999999996932e-05, 2.9958000000003537e-05, 2.992999999999746e-05, 2.9972000000003107e-05, 2.9944000000003967e-05, 2.9944000000003967e-05, 2.994399999999703e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.492" endtime="20201115 22:02:02.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.487" endtime="20201115 22:02:02.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.496" endtime="20201115 22:02:02.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.499" endtime="20201115 22:02:02.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.498" endtime="20201115 22:02:02.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.494" endtime="20201115 22:02:02.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.117" endtime="20201115 22:02:02.520"></status>
</kw>
<msg timestamp="20201115 22:02:02.520" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.529" endtime="20201115 22:02:02.557"></status>
</kw>
<msg timestamp="20201115 22:02:02.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.527" endtime="20201115 22:02:02.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.558" endtime="20201115 22:02:02.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.561" endtime="20201115 22:02:02.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.525" endtime="20201115 22:02:02.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.523" endtime="20201115 22:02:02.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.571" endtime="20201115 22:02:02.856"></status>
</kw>
<msg timestamp="20201115 22:02:02.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:02.569" endtime="20201115 22:02:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:02.860" endtime="20201115 22:02:02.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.868" endtime="20201115 22:02:02.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.566" endtime="20201115 22:02:02.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.565" endtime="20201115 22:02:02.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.874" level="INFO">${RESULT} = [{'time': 0.021511583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083000000000193e-05, 'source_diff': 3.0083000000000193e-05}, {'time': 0.021900125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.871" endtime="20201115 22:02:02.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.895" level="INFO">${OVERHEAD} = {'time': [0.021511583, 0.021900125, 0.022297444, 0.022698764, 0.023105125, 0.023503639, 0.02390125, 0.024292306, 0.024688681, 0.025079444, 0.025471764, 0.025864431, 0.026253944, 0.026656556, 0.0270444...</msg>
<status status="PASS" starttime="20201115 22:02:02.883" endtime="20201115 22:02:02.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.899" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:02.898" endtime="20201115 22:02:02.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.902" level="INFO">VALUE: [3.0083000000000193e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.994499999999997e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.9944000000000498e-05, 2.9931000000000402e-05, 2.994499999999997e-05, 2.9958000000000068e-05, 2.994499999999997e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.995900000000301e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9958000000000068e-05, 2.994499999999997e-05, 2.9917000000000832e-05, 2.9930000000000928e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9985999999999208e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.993100000000387e-05, 2.9958000000003537e-05, 2.995900000000301e-05, 2.9972000000003107e-05, 2.9972000000003107e-05, 2.995900000000301e-05, 2.9916999999997362e-05, 2.990199999999832e-05, 2.993100000000387e-05, 2.9985999999995738e-05, 2.997300000000258e-05, 2.994500000000344e-05, 2.9958000000003537e-05, 2.9958999999996072e-05, 2.99579999999966e-05, 2.997300000000258e-05, 2.9930000000004398e-05, 2.9930999999996932e-05, 2.9999999999995308e-05, 2.9916000000004828e-05, 2.9986000000002677e-05, 2.9944999999996502e-05, 2.9958000000003537e-05, 2.99579999999966e-05, 2.993100000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.900" endtime="20201115 22:02:02.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.896" endtime="20201115 22:02:02.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.905" endtime="20201115 22:02:02.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.908" endtime="20201115 22:02:02.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.907" endtime="20201115 22:02:02.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.903" endtime="20201115 22:02:02.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.521" endtime="20201115 22:02:02.929"></status>
</kw>
<msg timestamp="20201115 22:02:02.929" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.938" endtime="20201115 22:02:02.966"></status>
</kw>
<msg timestamp="20201115 22:02:02.966" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.936" endtime="20201115 22:02:02.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.967" endtime="20201115 22:02:02.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.970" endtime="20201115 22:02:02.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.934" endtime="20201115 22:02:02.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.932" endtime="20201115 22:02:02.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.979" endtime="20201115 22:02:03.266"></status>
</kw>
<msg timestamp="20201115 22:02:03.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.978" endtime="20201115 22:02:03.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021514556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.270" endtime="20201115 22:02:03.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.278" endtime="20201115 22:02:03.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.975" endtime="20201115 22:02:03.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.974" endtime="20201115 22:02:03.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.285" level="INFO">${RESULT} = [{'time': 0.021544639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083000000000193e-05, 'source_diff': 3.0083000000000193e-05}, {'time': 0.021937306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.281" endtime="20201115 22:02:03.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.298" level="INFO">${OVERHEAD} = {'time': [0.021544639, 0.021937306, 0.022331778, 0.02272625, 0.023120111, 0.023509917, 0.023907194, 0.024304236, 0.024701194, 0.025096944, 0.025496139, 0.025896236, 0.026283889, 0.026674028, 0.0270722...</msg>
<status status="PASS" starttime="20201115 22:02:03.286" endtime="20201115 22:02:03.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.302" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:03.301" endtime="20201115 22:02:03.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.305" level="INFO">VALUE: [3.0083000000000193e-05, 2.997299999999911e-05, 2.9931000000000402e-05, 2.9944000000000498e-05, 2.994399999999703e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.9999999999998778e-05, 2.9944000000000498e-05, 2.991599999999789e-05, 2.9958000000000068e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9931000000000402e-05, 2.9931000000000402e-05, 2.994499999999997e-05, 2.995899999999954e-05, 2.995899999999954e-05, 2.9958000000000068e-05, 2.995899999999954e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9944000000000498e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 2.994399999999703e-05, 2.994399999999703e-05, 3.0000000000002247e-05, 2.988799999999875e-05, 2.9944999999996502e-05, 2.997199999999617e-05, 2.995900000000301e-05, 2.9944000000003967e-05, 2.9958999999996072e-05, 2.9944000000003967e-05, 3.0027999999994448e-05, 2.994500000000344e-05, 2.9958000000003537e-05, 2.9972000000003107e-05, 2.9944999999996502e-05, 2.9944999999996502e-05, 2.995900000000301e-05, 2.992999999999746e-05, 2.9944000000003967e-05, 2.9944000000003967e-05, 2.997199999999617e-05, 2.99579999999966e-05, 2.9958000000003537e-05, 2.997300000000258e-05, 2.994500000000344e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.303" endtime="20201115 22:02:03.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.299" endtime="20201115 22:02:03.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.308" endtime="20201115 22:02:03.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.311" endtime="20201115 22:02:03.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.310" endtime="20201115 22:02:03.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.306" endtime="20201115 22:02:03.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.930" endtime="20201115 22:02:03.332"></status>
</kw>
<msg timestamp="20201115 22:02:03.332" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.341" endtime="20201115 22:02:03.369"></status>
</kw>
<msg timestamp="20201115 22:02:03.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.339" endtime="20201115 22:02:03.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.370" endtime="20201115 22:02:03.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.372" endtime="20201115 22:02:03.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.337" endtime="20201115 22:02:03.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.335" endtime="20201115 22:02:03.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.382" endtime="20201115 22:02:03.667"></status>
</kw>
<msg timestamp="20201115 22:02:03.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.381" endtime="20201115 22:02:03.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.672" endtime="20201115 22:02:03.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.680" endtime="20201115 22:02:03.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.378" endtime="20201115 22:02:03.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.377" endtime="20201115 22:02:03.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.686" level="INFO">${RESULT} = [{'time': 0.021471694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0026999999998444e-05, 'source_diff': 3.0026999999998444e-05}, {'time': 0.021861222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.683" endtime="20201115 22:02:03.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.699" level="INFO">${OVERHEAD} = {'time': [0.021471694, 0.021861222, 0.022260375, 0.022656736, 0.023046861, 0.023450722, 0.023852653, 0.024243792, 0.024632667, 0.025031222, 0.025435403, 0.025834931, 0.026236625, 0.026637986, 0.027041...</msg>
<status status="PASS" starttime="20201115 22:02:03.687" endtime="20201115 22:02:03.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.704" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:02:03.703" endtime="20201115 22:02:03.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.706" level="INFO">VALUE: [3.0026999999998444e-05, 2.9958000000000068e-05, 2.9944000000000498e-05, 2.9889000000001692e-05, 2.992999999999746e-05, 2.9958000000000068e-05, 2.9931000000000402e-05, 2.995899999999954e-05, 2.995899999999954e-05, 2.991599999999789e-05, 2.995899999999954e-05, 2.9930999999996932e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9931000000000402e-05, 2.9958000000000068e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9958000000000068e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9972000000003107e-05, 2.994399999999703e-05, 2.9985999999995738e-05, 2.993100000000387e-05, 2.9958000000003537e-05, 2.9888999999998223e-05, 2.994500000000344e-05, 2.9972000000003107e-05, 2.9999999999995308e-05, 2.99170000000043e-05, 2.99579999999966e-05, 3.0013999999994878e-05, 3.0000000000002247e-05, 2.9930999999996932e-05, 2.9972000000003107e-05, 2.9916000000004828e-05, 2.9958000000003537e-05, 2.9958000000003537e-05, 2.991599999999789e-05, 2.9944999999996502e-05, 2.99170000000043e-05, 2.9944999999996502e-05, 2.9958999999996072e-05, 2.994399999999703e-05, 3.0014000000001817e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.705" endtime="20201115 22:02:03.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.700" endtime="20201115 22:02:03.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.709" endtime="20201115 22:02:03.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.713" endtime="20201115 22:02:03.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.711" endtime="20201115 22:02:03.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.708" endtime="20201115 22:02:03.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.333" endtime="20201115 22:02:03.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.712" endtime="20201115 22:02:03.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.711" endtime="20201115 22:02:03.734"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.736" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.745" endtime="20201115 22:02:03.776"></status>
</kw>
<msg timestamp="20201115 22:02:03.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.743" endtime="20201115 22:02:03.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.777" endtime="20201115 22:02:03.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.780" endtime="20201115 22:02:03.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.741" endtime="20201115 22:02:03.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.739" endtime="20201115 22:02:03.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.789" endtime="20201115 22:02:04.074"></status>
</kw>
<msg timestamp="20201115 22:02:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025476278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.788" endtime="20201115 22:02:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025476278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.079" endtime="20201115 22:02:04.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.086" endtime="20201115 22:02:04.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.785" endtime="20201115 22:02:04.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.783" endtime="20201115 22:02:04.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.093" level="INFO">${RESULT} = [{'time': 0.025476278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.255600000000303e-05, 'source_diff': 3.255600000000303e-05}, {'time': 0.025902278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.090" endtime="20201115 22:02:04.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.106" level="INFO">${OVERHEAD} = {'time': [0.025476278, 0.025902278, 0.026339194, 0.026775194, 0.027204708, 0.027624153, 0.028052056, 0.028484306, 0.028917167, 0.029352208, 0.029773611, 0.030207417, 0.030640931, 0.031078764, 0.031507...</msg>
<status status="PASS" starttime="20201115 22:02:04.094" endtime="20201115 22:02:04.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.111" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:04.110" endtime="20201115 22:02:04.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.113" level="INFO">VALUE: [3.255600000000303e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238799999999778e-05, 3.244399999999953e-05, 3.238899999999725e-05, 3.238899999999725e-05, 3.237500000000115e-05, 3.234800000000149e-05, 3.236100000000158e-05, 3.238899999999725e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.234700000000201e-05, 3.238900000000072e-05, 3.233300000000244e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.241699999999986e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.243099999999943e-05, 3.2360999999994644e-05, 3.237500000000115e-05, 3.230600000000278e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.2360999999994644e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.247200000000561e-05, 3.237500000000115e-05, 3.241699999999986e-05, 3.244399999999953e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.232000000000235e-05, 3.243099999999943e-05, 3.2362000000001057e-05, 3.237500000000115e-05, 3.2346999999995074e-05, 3.244500000000594e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.112" endtime="20201115 22:02:04.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.107" endtime="20201115 22:02:04.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.116" endtime="20201115 22:02:04.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.119" endtime="20201115 22:02:04.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.118" endtime="20201115 22:02:04.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.114" endtime="20201115 22:02:04.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.736" endtime="20201115 22:02:04.140"></status>
</kw>
<msg timestamp="20201115 22:02:04.140" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.149" endtime="20201115 22:02:04.178"></status>
</kw>
<msg timestamp="20201115 22:02:04.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.148" endtime="20201115 22:02:04.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.180" endtime="20201115 22:02:04.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.183" endtime="20201115 22:02:04.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.145" endtime="20201115 22:02:04.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.143" endtime="20201115 22:02:04.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.193" endtime="20201115 22:02:04.479"></status>
</kw>
<msg timestamp="20201115 22:02:04.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:04.191" endtime="20201115 22:02:04.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021521014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:04.483" endtime="20201115 22:02:04.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.491" endtime="20201115 22:02:04.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.189" endtime="20201115 22:02:04.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.187" endtime="20201115 22:02:04.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.498" level="INFO">${RESULT} = [{'time': 0.0215535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.248599999999824e-05, 'source_diff': 3.248599999999824e-05}, {'time': 0.021986972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:04.494" endtime="20201115 22:02:04.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.511" level="INFO">${OVERHEAD} = {'time': [0.0215535, 0.021986972, 0.022419264, 0.022846528, 0.02328125, 0.023703236, 0.024139514, 0.024567361, 0.025001778, 0.025424972, 0.02586125, 0.026284139, 0.026718569, 0.027144861, 0.027576486,...</msg>
<status status="PASS" starttime="20201115 22:02:04.499" endtime="20201115 22:02:04.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.515" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:04.514" endtime="20201115 22:02:04.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.517" level="INFO">VALUE: [3.248599999999824e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.234700000000201e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.2304999999999834e-05, 3.238899999999725e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.236100000000158e-05, 3.240200000000082e-05, 3.2360999999998113e-05, 3.234700000000201e-05, 3.241699999999986e-05, 3.2360999999998113e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.2346999999998544e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.234700000000201e-05, 3.2360999999994644e-05, 3.236100000000158e-05, 3.240300000000029e-05, 3.244399999999953e-05, 3.242999999999996e-05, 3.2388999999993784e-05, 3.237500000000115e-05, 3.242999999999996e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.238800000000125e-05, 3.2444999999999e-05, 3.2362000000001057e-05, 3.237500000000115e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.516" endtime="20201115 22:02:04.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.511" endtime="20201115 22:02:04.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.521" endtime="20201115 22:02:04.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.524" endtime="20201115 22:02:04.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.522" endtime="20201115 22:02:04.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.519" endtime="20201115 22:02:04.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.141" endtime="20201115 22:02:04.545"></status>
</kw>
<msg timestamp="20201115 22:02:04.545" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.554" endtime="20201115 22:02:04.583"></status>
</kw>
<msg timestamp="20201115 22:02:04.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.552" endtime="20201115 22:02:04.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.586" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.585" endtime="20201115 22:02:04.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.587" endtime="20201115 22:02:04.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.550" endtime="20201115 22:02:04.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.547" endtime="20201115 22:02:04.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.597" endtime="20201115 22:02:04.882"></status>
</kw>
<msg timestamp="20201115 22:02:04.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:04.596" endtime="20201115 22:02:04.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:04.886" endtime="20201115 22:02:04.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.894" endtime="20201115 22:02:04.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.593" endtime="20201115 22:02:04.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.592" endtime="20201115 22:02:04.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.900" level="INFO">${RESULT} = [{'time': 0.022023486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.248599999999824e-05, 'source_diff': 3.248599999999824e-05}, {'time': 0.022445708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:04.897" endtime="20201115 22:02:04.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.913" level="INFO">${OVERHEAD} = {'time': [0.022023486, 0.022445708, 0.022872875, 0.023302222, 0.023723208, 0.024142903, 0.024573236, 0.025003194, 0.025440319, 0.025861875, 0.026293069, 0.026724569, 0.027160819, 0.027599153, 0.028028...</msg>
<status status="PASS" starttime="20201115 22:02:04.901" endtime="20201115 22:02:04.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.918" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:04.917" endtime="20201115 22:02:04.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.920" level="INFO">VALUE: [3.248599999999824e-05, 3.240200000000082e-05, 3.230599999999931e-05, 3.236100000000158e-05, 3.2360999999998113e-05, 3.234700000000201e-05, 3.240299999999682e-05, 3.238799999999778e-05, 3.2360999999998113e-05, 3.237500000000115e-05, 3.2360999999998113e-05, 3.236100000000158e-05, 3.242999999999996e-05, 3.236100000000158e-05, 3.238799999999778e-05, 3.238899999999725e-05, 3.238800000000125e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238800000000125e-05, 3.238900000000072e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.2362000000001057e-05, 3.237500000000115e-05, 3.233400000000192e-05, 3.240300000000029e-05, 3.234700000000201e-05, 3.2362000000001057e-05, 3.237500000000115e-05, 3.241699999999986e-05, 3.243099999999943e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.242999999999996e-05, 3.237500000000115e-05, 3.23050000000033e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2318999999995934e-05, 3.2388999999993784e-05, 3.236100000000158e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.919" endtime="20201115 22:02:04.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.914" endtime="20201115 22:02:04.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.923" endtime="20201115 22:02:04.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.927" endtime="20201115 22:02:04.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.925" endtime="20201115 22:02:04.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.922" endtime="20201115 22:02:04.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.545" endtime="20201115 22:02:04.947"></status>
</kw>
<msg timestamp="20201115 22:02:04.948" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.957" endtime="20201115 22:02:04.986"></status>
</kw>
<msg timestamp="20201115 22:02:04.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.955" endtime="20201115 22:02:04.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.989" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.988" endtime="20201115 22:02:04.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.990" endtime="20201115 22:02:04.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.953" endtime="20201115 22:02:04.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.950" endtime="20201115 22:02:04.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.000" endtime="20201115 22:02:05.286"></status>
</kw>
<msg timestamp="20201115 22:02:05.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.998" endtime="20201115 22:02:05.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.290" endtime="20201115 22:02:05.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.298" endtime="20201115 22:02:05.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.996" endtime="20201115 22:02:05.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.994" endtime="20201115 22:02:05.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.304" level="INFO">${RESULT} = [{'time': 0.022049611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.250000000000128e-05, 'source_diff': 3.250000000000128e-05}, {'time': 0.022469083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.301" endtime="20201115 22:02:05.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.317" level="INFO">${OVERHEAD} = {'time': [0.022049611, 0.022469083, 0.022892792, 0.023328681, 0.023765194, 0.024193625, 0.024621792, 0.025041847, 0.025468708, 0.02589125, 0.026313431, 0.026745833, 0.027180486, 0.027615111, 0.0280351...</msg>
<status status="PASS" starttime="20201115 22:02:05.305" endtime="20201115 22:02:05.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.322" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:05.321" endtime="20201115 22:02:05.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.324" level="INFO">VALUE: [3.250000000000128e-05, 3.244399999999953e-05, 3.238899999999725e-05, 3.238900000000072e-05, 3.238800000000125e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.24310000000029e-05, 3.2304999999999834e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.231999999999888e-05, 3.241699999999986e-05, 3.238899999999725e-05, 3.238900000000072e-05, 3.2362000000001057e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2346999999995074e-05, 3.2374999999994214e-05, 3.2362000000001057e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.2374999999994214e-05, 3.238900000000072e-05, 3.241699999999986e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.2346999999995074e-05, 3.236100000000158e-05, 3.240200000000082e-05, 3.237500000000115e-05, 3.2332999999995504e-05, 3.236100000000158e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.323" endtime="20201115 22:02:05.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.318" endtime="20201115 22:02:05.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.327" endtime="20201115 22:02:05.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.331" endtime="20201115 22:02:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.330" endtime="20201115 22:02:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.326" endtime="20201115 22:02:05.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.948" endtime="20201115 22:02:05.352"></status>
</kw>
<msg timestamp="20201115 22:02:05.352" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.361" endtime="20201115 22:02:05.390"></status>
</kw>
<msg timestamp="20201115 22:02:05.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.359" endtime="20201115 22:02:05.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.392" endtime="20201115 22:02:05.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.394" endtime="20201115 22:02:05.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.357" endtime="20201115 22:02:05.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.355" endtime="20201115 22:02:05.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.405" endtime="20201115 22:02:05.696"></status>
</kw>
<msg timestamp="20201115 22:02:05.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:05.403" endtime="20201115 22:02:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:05.705" endtime="20201115 22:02:05.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.723" endtime="20201115 22:02:05.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.401" endtime="20201115 22:02:05.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.399" endtime="20201115 22:02:05.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.737" level="INFO">${RESULT} = [{'time': 0.02151125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-05, 'source_diff': 3.249999999999781e-05}, {'time': 0.021945111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:05.730" endtime="20201115 22:02:05.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.766" level="INFO">${OVERHEAD} = {'time': [0.02151125, 0.021945111, 0.022368875, 0.022798208, 0.023233806, 0.023658514, 0.024091944, 0.024519417, 0.024957486, 0.025393125, 0.025826542, 0.026249972, 0.026684014, 0.027118389, 0.0275530...</msg>
<status status="PASS" starttime="20201115 22:02:05.739" endtime="20201115 22:02:05.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.772" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:02:05.771" endtime="20201115 22:02:05.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.775" level="INFO">VALUE: [3.249999999999781e-05, 3.24579999999991e-05, 3.243099999999943e-05, 3.238900000000072e-05, 3.2374999999997683e-05, 3.2360999999998113e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.2360999999998113e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.2360999999998113e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.23050000000033e-05, 3.2360999999994644e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.234700000000201e-05, 3.236100000000158e-05, 3.2374999999994214e-05, 3.236100000000158e-05, 3.242999999999996e-05, 3.2388999999993784e-05, 3.238900000000072e-05, 3.23050000000033e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.234700000000201e-05, 3.240300000000029e-05, 3.2374999999994214e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.237500000000115e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.773" endtime="20201115 22:02:05.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.768" endtime="20201115 22:02:05.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.778" endtime="20201115 22:02:05.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.782" endtime="20201115 22:02:05.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.780" endtime="20201115 22:02:05.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.776" endtime="20201115 22:02:05.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.353" endtime="20201115 22:02:05.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.735" endtime="20201115 22:02:05.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.734" endtime="20201115 22:02:05.803"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.805" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.814" endtime="20201115 22:02:05.845"></status>
</kw>
<msg timestamp="20201115 22:02:05.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.812" endtime="20201115 22:02:05.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.846" endtime="20201115 22:02:05.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.849" endtime="20201115 22:02:05.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.809" endtime="20201115 22:02:05.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.807" endtime="20201115 22:02:05.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.857" endtime="20201115 22:02:06.143"></status>
</kw>
<msg timestamp="20201115 22:02:06.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023792083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023827014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.856" endtime="20201115 22:02:06.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023792083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023827014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.147" endtime="20201115 22:02:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.155" endtime="20201115 22:02:06.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.853" endtime="20201115 22:02:06.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.852" endtime="20201115 22:02:06.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.161" level="INFO">${RESULT} = [{'time': 0.023827014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.493100000000193e-05, 'source_diff': 3.493100000000193e-05}, {'time': 0.024288847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.158" endtime="20201115 22:02:06.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.174" level="INFO">${OVERHEAD} = {'time': [0.023827014, 0.024288847, 0.024754625, 0.025210181, 0.025664472, 0.026127181, 0.026598583, 0.027068778, 0.027532764, 0.027987056, 0.028445472, 0.028903486, 0.029372167, 0.029830194, 0.030285...</msg>
<status status="PASS" starttime="20201115 22:02:06.162" endtime="20201115 22:02:06.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.179" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:06.178" endtime="20201115 22:02:06.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.182" level="INFO">VALUE: [3.493100000000193e-05, 3.4860999999997144e-05, 3.479199999999877e-05, 3.484800000000052e-05, 3.4819000000001904e-05, 3.479199999999877e-05, 3.4804999999998865e-05, 3.479200000000224e-05, 3.4847000000001044e-05, 3.479199999999877e-05, 3.476399999999963e-05, 3.476399999999963e-05, 3.477800000000267e-05, 3.472200000000092e-05, 3.47779999999992e-05, 3.479200000000224e-05, 3.476399999999963e-05, 3.483300000000494e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.479200000000571e-05, 3.481999999999791e-05, 3.4818999999998435e-05, 3.4819000000005373e-05, 3.475000000000006e-05, 3.479199999999877e-05, 3.479199999999877e-05, 3.4776999999999725e-05, 3.4818999999998435e-05, 3.4819000000005373e-05, 3.480599999999834e-05, 3.481999999999791e-05, 3.4832999999998004e-05, 3.475000000000006e-05, 3.476400000000657e-05, 3.4818999999998435e-05, 3.479199999999877e-05, 3.480599999999834e-05, 3.481999999999791e-05, 3.476399999999963e-05, 3.480599999999834e-05, 3.475000000000006e-05, 3.487500000000365e-05, 3.4763000000000155e-05, 3.4805000000005804e-05, 3.480599999999834e-05, 3.4804999999998865e-05, 3.480599999999834e-05, 3.479199999999877e-05, 3.480599999999834e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.180" endtime="20201115 22:02:06.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.175" endtime="20201115 22:02:06.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.185" endtime="20201115 22:02:06.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.188" endtime="20201115 22:02:06.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.187" endtime="20201115 22:02:06.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.183" endtime="20201115 22:02:06.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.805" endtime="20201115 22:02:06.209"></status>
</kw>
<msg timestamp="20201115 22:02:06.209" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.218" endtime="20201115 22:02:06.249"></status>
</kw>
<msg timestamp="20201115 22:02:06.249" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.216" endtime="20201115 22:02:06.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.250" endtime="20201115 22:02:06.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.253" endtime="20201115 22:02:06.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.214" endtime="20201115 22:02:06.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.212" endtime="20201115 22:02:06.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.263" endtime="20201115 22:02:06.548"></status>
</kw>
<msg timestamp="20201115 22:02:06.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.261" endtime="20201115 22:02:06.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.552" endtime="20201115 22:02:06.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.560" endtime="20201115 22:02:06.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.259" endtime="20201115 22:02:06.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.257" endtime="20201115 22:02:06.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.567" level="INFO">${RESULT} = [{'time': 0.021532472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.494400000000203e-05, 'source_diff': 3.494400000000203e-05}, {'time': 0.021989264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.564" endtime="20201115 22:02:06.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.580" level="INFO">${OVERHEAD} = {'time': [0.021532472, 0.021989264, 0.022446653, 0.022902194, 0.023370792, 0.023840069, 0.024306222, 0.024770819, 0.025232917, 0.025705, 0.026173958, 0.026642889, 0.027103708, 0.027571097, 0.028029458...</msg>
<status status="PASS" starttime="20201115 22:02:06.568" endtime="20201115 22:02:06.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.585" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:06.584" endtime="20201115 22:02:06.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.587" level="INFO">VALUE: [3.494400000000203e-05, 3.479200000000224e-05, 3.480600000000181e-05, 3.4790999999999295e-05, 3.480600000000181e-05, 3.4804999999998865e-05, 3.4804999999998865e-05, 3.4818999999998435e-05, 3.480600000000181e-05, 3.480599999999834e-05, 3.4819000000001904e-05, 3.479199999999877e-05, 3.4790999999999295e-05, 3.4804999999998865e-05, 3.4818999999998435e-05, 3.473600000000049e-05, 3.482000000000138e-05, 3.4819000000001904e-05, 3.4875000000000184e-05, 3.4819000000001904e-05, 3.4763000000000155e-05, 3.481999999999791e-05, 3.482000000000485e-05, 3.480599999999834e-05, 3.4805000000005804e-05, 3.4804999999998865e-05, 3.479200000000571e-05, 3.480599999999834e-05, 3.479199999999877e-05, 3.4818999999998435e-05, 3.4804999999998865e-05, 3.4818999999998435e-05, 3.4874999999996714e-05, 3.4804999999998865e-05, 3.480600000000528e-05, 3.477800000000614e-05, 3.4804999999998865e-05, 3.4818999999998435e-05, 3.4818999999998435e-05, 3.4804999999998865e-05, 3.4846999999997574e-05, 3.4846999999997574e-05, 3.481999999999791e-05, 3.488900000000322e-05, 3.4819000000005373e-05, 3.483399999999748e-05, 3.4805000000005804e-05, 3.4832999999998004e-05, 3.483300000000494e-05, 3.482000000000485e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.586" endtime="20201115 22:02:06.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.581" endtime="20201115 22:02:06.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.590" endtime="20201115 22:02:06.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.594" endtime="20201115 22:02:06.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.592" endtime="20201115 22:02:06.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.589" endtime="20201115 22:02:06.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.210" endtime="20201115 22:02:06.615"></status>
</kw>
<msg timestamp="20201115 22:02:06.615" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.623" endtime="20201115 22:02:06.655"></status>
</kw>
<msg timestamp="20201115 22:02:06.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.622" endtime="20201115 22:02:06.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.656" endtime="20201115 22:02:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.659" endtime="20201115 22:02:06.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.619" endtime="20201115 22:02:06.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.617" endtime="20201115 22:02:06.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.668" endtime="20201115 22:02:06.954"></status>
</kw>
<msg timestamp="20201115 22:02:06.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.667" endtime="20201115 22:02:06.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021492556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.958" endtime="20201115 22:02:06.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.966" endtime="20201115 22:02:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.664" endtime="20201115 22:02:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.663" endtime="20201115 22:02:06.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.973" level="INFO">${RESULT} = [{'time': 0.021527486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.492999999999899e-05, 'source_diff': 3.492999999999899e-05}, {'time': 0.021989014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.969" endtime="20201115 22:02:06.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.986" level="INFO">${OVERHEAD} = {'time': [0.021527486, 0.021989014, 0.022454861, 0.022925403, 0.023385042, 0.023857125, 0.024323319, 0.024793208, 0.025249736, 0.025723056, 0.026179569, 0.026648236, 0.027109125, 0.027581208, 0.028036...</msg>
<status status="PASS" starttime="20201115 22:02:06.974" endtime="20201115 22:02:06.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.991" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:06.990" endtime="20201115 22:02:06.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.993" level="INFO">VALUE: [3.492999999999899e-05, 3.482000000000138e-05, 3.4804999999998865e-05, 3.480600000000181e-05, 3.480600000000181e-05, 3.480599999999834e-05, 3.4790999999999295e-05, 3.4805000000002334e-05, 3.4818999999998435e-05, 3.480600000000181e-05, 3.4804999999998865e-05, 3.4818999999998435e-05, 3.480600000000181e-05, 3.4804999999998865e-05, 3.480600000000181e-05, 3.4804999999998865e-05, 3.482000000000138e-05, 3.480599999999834e-05, 3.4861000000000614e-05, 3.480599999999834e-05, 3.477800000000267e-05, 3.4790999999999295e-05, 3.472200000000092e-05, 3.480600000000528e-05, 3.472200000000092e-05, 3.479199999999877e-05, 3.481999999999791e-05, 3.4805000000005804e-05, 3.480599999999834e-05, 3.473600000000049e-05, 3.479199999999877e-05, 3.480599999999834e-05, 3.4805000000005804e-05, 3.480599999999834e-05, 3.4790999999999295e-05, 3.4832999999998004e-05, 3.4790999999999295e-05, 3.4818999999998435e-05, 3.4818999999998435e-05, 3.479199999999877e-05, 3.4790999999999295e-05, 3.480599999999834e-05, 3.4805000000005804e-05, 3.482000000000485e-05, 3.482000000000485e-05, 3.4790999999999295e-05, 3.4804999999998865e-05, 3.476399999999963e-05, 3.480599999999834e-05, 3.4804999999998865e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.992" endtime="20201115 22:02:06.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.987" endtime="20201115 22:02:06.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.996" endtime="20201115 22:02:06.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.999" endtime="20201115 22:02:07.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.998" endtime="20201115 22:02:07.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.994" endtime="20201115 22:02:07.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.615" endtime="20201115 22:02:07.020"></status>
</kw>
<msg timestamp="20201115 22:02:07.021" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.029" endtime="20201115 22:02:07.060"></status>
</kw>
<msg timestamp="20201115 22:02:07.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.028" endtime="20201115 22:02:07.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.062" endtime="20201115 22:02:07.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.065" endtime="20201115 22:02:07.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.025" endtime="20201115 22:02:07.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.023" endtime="20201115 22:02:07.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.076" endtime="20201115 22:02:07.362"></status>
</kw>
<msg timestamp="20201115 22:02:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.074" endtime="20201115 22:02:07.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.366" endtime="20201115 22:02:07.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.375" endtime="20201115 22:02:07.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.072" endtime="20201115 22:02:07.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.070" endtime="20201115 22:02:07.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.381" level="INFO">${RESULT} = [{'time': 0.021623444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.492999999999899e-05, 'source_diff': 3.492999999999899e-05}, {'time': 0.022086167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:07.378" endtime="20201115 22:02:07.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.394" level="INFO">${OVERHEAD} = {'time': [0.021623444, 0.022086167, 0.022542958, 0.023005375, 0.023471833, 0.023933, 0.024406306, 0.024878042, 0.025343264, 0.025803472, 0.026262153, 0.026724486, 0.027187542, 0.027654597, 0.028112361...</msg>
<status status="PASS" starttime="20201115 22:02:07.382" endtime="20201115 22:02:07.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.399" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:07.398" endtime="20201115 22:02:07.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.401" level="INFO">VALUE: [3.492999999999899e-05, 3.482000000000138e-05, 3.4790999999999295e-05, 3.480600000000181e-05, 3.4805000000002334e-05, 3.480599999999834e-05, 3.480599999999834e-05, 3.481999999999791e-05, 3.482000000000138e-05, 3.4805000000002334e-05, 3.4875000000000184e-05, 3.479199999999877e-05, 3.479199999999877e-05, 3.47779999999992e-05, 3.4818999999998435e-05, 3.4819000000001904e-05, 3.483399999999748e-05, 3.483400000000095e-05, 3.4804999999998865e-05, 3.4804999999998865e-05, 3.482000000000138e-05, 3.4804999999998865e-05, 3.4846999999997574e-05, 3.480600000000528e-05, 3.479200000000571e-05, 3.480599999999834e-05, 3.486199999999662e-05, 3.480599999999834e-05, 3.484700000000451e-05, 3.47779999999992e-05, 3.4790999999999295e-05, 3.479199999999877e-05, 3.479199999999877e-05, 3.47779999999992e-05, 3.4846999999997574e-05, 3.4790999999999295e-05, 3.484700000000451e-05, 3.4776999999999725e-05, 3.4790999999999295e-05, 3.479199999999877e-05, 3.475000000000006e-05, 3.47779999999992e-05, 3.4790999999999295e-05, 3.4805000000005804e-05, 3.480599999999834e-05, 3.479200000000571e-05, 3.480600000000528e-05, 3.4818999999998435e-05, 3.480599999999834e-05, 3.4874999999996714e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.400" endtime="20201115 22:02:07.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.395" endtime="20201115 22:02:07.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.404" endtime="20201115 22:02:07.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.408" endtime="20201115 22:02:07.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.406" endtime="20201115 22:02:07.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.403" endtime="20201115 22:02:07.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.021" endtime="20201115 22:02:07.428"></status>
</kw>
<msg timestamp="20201115 22:02:07.429" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.437" endtime="20201115 22:02:07.468"></status>
</kw>
<msg timestamp="20201115 22:02:07.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.436" endtime="20201115 22:02:07.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.470" endtime="20201115 22:02:07.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.472" endtime="20201115 22:02:07.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.433" endtime="20201115 22:02:07.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.431" endtime="20201115 22:02:07.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.482" endtime="20201115 22:02:07.768"></status>
</kw>
<msg timestamp="20201115 22:02:07.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.481" endtime="20201115 22:02:07.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021602944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.772" endtime="20201115 22:02:07.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.781" endtime="20201115 22:02:07.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.478" endtime="20201115 22:02:07.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.476" endtime="20201115 22:02:07.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.787" level="INFO">${RESULT} = [{'time': 0.021602944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.490199999999985e-05, 'source_diff': 3.490199999999985e-05}, {'time': 0.022068181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:07.784" endtime="20201115 22:02:07.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.800" level="INFO">${OVERHEAD} = {'time': [0.021602944, 0.022068181, 0.022527194, 0.022985611, 0.023454597, 0.023917972, 0.024389389, 0.02484625, 0.025303111, 0.025763667, 0.026222681, 0.026678306, 0.027151319, 0.027622181, 0.0280805...</msg>
<status status="PASS" starttime="20201115 22:02:07.788" endtime="20201115 22:02:07.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.805" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:02:07.804" endtime="20201115 22:02:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.807" level="INFO">VALUE: [3.490199999999985e-05, 3.480599999999834e-05, 3.4804999999998865e-05, 3.479199999999877e-05, 3.4805000000002334e-05, 3.4804999999998865e-05, 3.47779999999992e-05, 3.4819000000001904e-05, 3.4832999999998004e-05, 3.479200000000224e-05, 3.479200000000224e-05, 3.480599999999834e-05, 3.4804999999998865e-05, 3.483399999999748e-05, 3.4804999999998865e-05, 3.480600000000181e-05, 3.4833000000001474e-05, 3.479200000000224e-05, 3.4818999999998435e-05, 3.481999999999791e-05, 3.482000000000138e-05, 3.4818999999998435e-05, 3.481999999999791e-05, 3.4818999999998435e-05, 3.483399999999748e-05, 3.4804999999998865e-05, 3.480599999999834e-05, 3.47779999999992e-05, 3.480599999999834e-05, 3.480599999999834e-05, 3.480600000000528e-05, 3.47779999999992e-05, 3.476399999999963e-05, 3.481999999999791e-05, 3.4804999999998865e-05, 3.480599999999834e-05, 3.480600000000528e-05, 3.4804999999998865e-05, 3.480599999999834e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.480599999999834e-05, 3.480599999999834e-05, 3.4818999999998435e-05, 3.480599999999834e-05, 3.4805000000005804e-05, 3.4804999999998865e-05, 3.483399999999748e-05, 3.479199999999877e-05, 3.475000000000006e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.806" endtime="20201115 22:02:07.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.801" endtime="20201115 22:02:07.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.810" endtime="20201115 22:02:07.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.814" endtime="20201115 22:02:07.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.812" endtime="20201115 22:02:07.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.809" endtime="20201115 22:02:07.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.429" endtime="20201115 22:02:07.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.804" endtime="20201115 22:02:07.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.803" endtime="20201115 22:02:07.835"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.837" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.846" endtime="20201115 22:02:07.878"></status>
</kw>
<msg timestamp="20201115 22:02:07.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.844" endtime="20201115 22:02:07.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.880" endtime="20201115 22:02:07.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.882" endtime="20201115 22:02:07.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.841" endtime="20201115 22:02:07.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.839" endtime="20201115 22:02:07.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.919" endtime="20201115 22:02:08.205"></status>
</kw>
<msg timestamp="20201115 22:02:08.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.918" endtime="20201115 22:02:08.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023830375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023867736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.209" endtime="20201115 22:02:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.217" endtime="20201115 22:02:08.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.915" endtime="20201115 22:02:08.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.913" endtime="20201115 22:02:08.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.223" level="INFO">${RESULT} = [{'time': 0.023867736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360999999999644e-05, 'source_diff': 3.7360999999999644e-05}, {'time': 0.024375194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.220" endtime="20201115 22:02:08.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.237" level="INFO">${OVERHEAD} = {'time': [0.023867736, 0.024375194, 0.024875194, 0.025367417, 0.025872681, 0.026381403, 0.026877653, 0.027370472, 0.027879833, 0.028389708, 0.028885917, 0.029394958, 0.029885597, 0.030384931, 0.030883...</msg>
<status status="PASS" starttime="20201115 22:02:08.224" endtime="20201115 22:02:08.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.241" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:08.240" endtime="20201115 22:02:08.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.243" level="INFO">VALUE: [3.7360999999999644e-05, 3.723599999999952e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.723700000000246e-05, 3.723599999999952e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.726399999999866e-05, 3.720800000000038e-05, 3.7181000000000713e-05, 3.722199999999995e-05, 3.726399999999866e-05, 3.723699999999899e-05, 3.722199999999995e-05, 3.724999999999562e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.729200000000127e-05, 3.723600000000299e-05, 3.723599999999605e-05, 3.7263000000002655e-05, 3.723600000000299e-05, 3.724999999999562e-05, 3.727799999999476e-05, 3.722200000000342e-05, 3.7152999999998104e-05, 3.7291000000001795e-05, 3.722200000000342e-05, 3.723600000000299e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.722199999999648e-05, 3.725000000000256e-05, 3.724999999999562e-05, 3.724999999999562e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.722200000000342e-05, 3.716700000000461e-05, 3.723600000000299e-05, 3.722199999999648e-05, 3.727799999999476e-05, 3.722200000000342e-05, 3.722199999999648e-05, 3.726400000000213e-05, 3.722200000000342e-05, 3.723600000000299e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.242" endtime="20201115 22:02:08.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.238" endtime="20201115 22:02:08.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.247" endtime="20201115 22:02:08.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.250" endtime="20201115 22:02:08.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.248" endtime="20201115 22:02:08.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.245" endtime="20201115 22:02:08.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.837" endtime="20201115 22:02:08.271"></status>
</kw>
<msg timestamp="20201115 22:02:08.271" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.280" endtime="20201115 22:02:08.312"></status>
</kw>
<msg timestamp="20201115 22:02:08.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.278" endtime="20201115 22:02:08.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.314" endtime="20201115 22:02:08.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.317" endtime="20201115 22:02:08.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.275" endtime="20201115 22:02:08.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.273" endtime="20201115 22:02:08.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.327" endtime="20201115 22:02:08.617"></status>
</kw>
<msg timestamp="20201115 22:02:08.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.325" endtime="20201115 22:02:08.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021631222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.626" endtime="20201115 22:02:08.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.644" endtime="20201115 22:02:08.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.323" endtime="20201115 22:02:08.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.321" endtime="20201115 22:02:08.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.658" level="INFO">${RESULT} = [{'time': 0.021631222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360999999999644e-05, 'source_diff': 3.7360999999999644e-05}, {'time': 0.022138431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.650" endtime="20201115 22:02:08.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.687" level="INFO">${OVERHEAD} = {'time': [0.021631222, 0.022138431, 0.022634819, 0.023126125, 0.023626778, 0.024134028, 0.024627472, 0.02513375, 0.025643792, 0.026144139, 0.026647611, 0.027146097, 0.02764925, 0.028154556, 0.02865179...</msg>
<status status="PASS" starttime="20201115 22:02:08.660" endtime="20201115 22:02:08.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.696" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:08.694" endtime="20201115 22:02:08.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.700" level="INFO">VALUE: [3.7360999999999644e-05, 3.722299999999942e-05, 3.7305000000001365e-05, 3.722199999999995e-05, 3.725000000000256e-05, 3.726399999999866e-05, 3.723599999999952e-05, 3.724999999999909e-05, 3.722299999999942e-05, 3.722199999999995e-05, 3.725000000000256e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.720899999999985e-05, 3.722299999999942e-05, 3.725000000000256e-05, 3.722199999999995e-05, 3.722200000000342e-05, 3.723599999999952e-05, 3.729200000000127e-05, 3.720900000000332e-05, 3.723600000000299e-05, 3.723600000000299e-05, 3.7222999999995954e-05, 3.723599999999605e-05, 3.723600000000299e-05, 3.722199999999648e-05, 3.723599999999605e-05, 3.723600000000299e-05, 3.722199999999648e-05, 3.723600000000299e-05, 3.723599999999605e-05, 3.729200000000127e-05, 3.723599999999605e-05, 3.722300000000289e-05, 3.724999999999562e-05, 3.723599999999605e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.722300000000289e-05, 3.726399999999519e-05, 3.724999999999562e-05, 3.723600000000299e-05, 3.7222999999995954e-05, 3.722300000000289e-05, 3.7290999999994856e-05, 3.718100000000418e-05, 3.7305000000001365e-05, 3.722300000000289e-05, 3.726399999999519e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.699" endtime="20201115 22:02:08.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.689" endtime="20201115 22:02:08.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.703" endtime="20201115 22:02:08.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.707" endtime="20201115 22:02:08.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.705" endtime="20201115 22:02:08.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.702" endtime="20201115 22:02:08.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.271" endtime="20201115 22:02:08.728"></status>
</kw>
<msg timestamp="20201115 22:02:08.728" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.737" endtime="20201115 22:02:08.770"></status>
</kw>
<msg timestamp="20201115 22:02:08.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.735" endtime="20201115 22:02:08.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.771" endtime="20201115 22:02:08.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.774" endtime="20201115 22:02:08.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.733" endtime="20201115 22:02:08.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.730" endtime="20201115 22:02:08.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.785" endtime="20201115 22:02:09.070"></status>
</kw>
<msg timestamp="20201115 22:02:09.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.783" endtime="20201115 22:02:09.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.074" endtime="20201115 22:02:09.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.082" endtime="20201115 22:02:09.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.781" endtime="20201115 22:02:09.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.779" endtime="20201115 22:02:09.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.089" level="INFO">${RESULT} = [{'time': 0.022241139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360999999999644e-05, 'source_diff': 3.7360999999999644e-05}, {'time': 0.022733792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.086" endtime="20201115 22:02:09.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.103" level="INFO">${OVERHEAD} = {'time': [0.022241139, 0.022733792, 0.023229431, 0.023724486, 0.02422675, 0.024725819, 0.025228069, 0.02573775, 0.026230611, 0.026738125, 0.027232861, 0.027730417, 0.028227028, 0.028720847, 0.02921283...</msg>
<status status="PASS" starttime="20201115 22:02:09.091" endtime="20201115 22:02:09.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.107" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:09.106" endtime="20201115 22:02:09.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.110" level="INFO">VALUE: [3.7360999999999644e-05, 3.726399999999866e-05, 3.724999999999909e-05, 3.722199999999995e-05, 3.724999999999909e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.722199999999995e-05, 3.720800000000038e-05, 3.723600000000299e-05, 3.723599999999952e-05, 3.722299999999942e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.726400000000213e-05, 3.722199999999995e-05, 3.723600000000299e-05, 3.722199999999995e-05, 3.723600000000299e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.720900000000332e-05, 3.722300000000289e-05, 3.726399999999519e-05, 3.720799999999691e-05, 3.7290999999994856e-05, 3.723600000000299e-05, 3.723599999999605e-05, 3.723700000000246e-05, 3.722300000000289e-05, 3.726400000000213e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.722200000000342e-05, 3.72780000000017e-05, 3.722200000000342e-05, 3.716700000000461e-05, 3.722300000000289e-05, 3.723599999999605e-05, 3.723600000000299e-05, 3.722199999999648e-05, 3.723599999999605e-05, 3.7208999999996384e-05, 3.722199999999648e-05, 3.722199999999648e-05, 3.725000000000256e-05, 3.72780000000017e-05, 3.722199999999648e-05, 3.723600000000299e-05, 3.7222999999995954e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.108" endtime="20201115 22:02:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.104" endtime="20201115 22:02:09.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.113" endtime="20201115 22:02:09.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.116" endtime="20201115 22:02:09.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.115" endtime="20201115 22:02:09.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.111" endtime="20201115 22:02:09.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.728" endtime="20201115 22:02:09.137"></status>
</kw>
<msg timestamp="20201115 22:02:09.138" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.146" endtime="20201115 22:02:09.179"></status>
</kw>
<msg timestamp="20201115 22:02:09.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.145" endtime="20201115 22:02:09.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.181" endtime="20201115 22:02:09.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.183" endtime="20201115 22:02:09.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.142" endtime="20201115 22:02:09.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.140" endtime="20201115 22:02:09.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.193" endtime="20201115 22:02:09.494"></status>
</kw>
<msg timestamp="20201115 22:02:09.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.192" endtime="20201115 22:02:09.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.503" endtime="20201115 22:02:09.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.515" endtime="20201115 22:02:09.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.189" endtime="20201115 22:02:09.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.187" endtime="20201115 22:02:09.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.521" level="INFO">${RESULT} = [{'time': 0.022102903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360999999999644e-05, 'source_diff': 3.7360999999999644e-05}, {'time': 0.022598556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.518" endtime="20201115 22:02:09.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.534" level="INFO">${OVERHEAD} = {'time': [0.022102903, 0.022598556, 0.023098639, 0.023591764, 0.024093958, 0.024593681, 0.025099306, 0.025599944, 0.026098417, 0.026602208, 0.027102819, 0.027611931, 0.028102861, 0.028611292, 0.029106...</msg>
<status status="PASS" starttime="20201115 22:02:09.522" endtime="20201115 22:02:09.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.539" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:09.538" endtime="20201115 22:02:09.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.541" level="INFO">VALUE: [3.7360999999999644e-05, 3.723699999999899e-05, 3.726400000000213e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.7166999999997674e-05, 3.723699999999899e-05, 3.722199999999995e-05, 3.7152999999998104e-05, 3.722199999999995e-05, 3.723599999999952e-05, 3.727799999999823e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.724999999999909e-05, 3.722200000000342e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.722200000000342e-05, 3.720900000000332e-05, 3.7291000000001795e-05, 3.719399999999734e-05, 3.723599999999605e-05, 3.723600000000299e-05, 3.726400000000213e-05, 3.722199999999648e-05, 3.729199999999433e-05, 3.722200000000342e-05, 3.717999999999777e-05, 3.7222999999995954e-05, 3.722300000000289e-05, 3.723600000000299e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.723600000000299e-05, 3.722300000000289e-05, 3.722199999999648e-05, 3.723599999999605e-05, 3.722200000000342e-05, 3.726400000000213e-05, 3.723600000000299e-05, 3.723600000000299e-05, 3.723600000000299e-05, 3.716600000000514e-05, 3.720800000000385e-05, 3.722200000000342e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.540" endtime="20201115 22:02:09.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.535" endtime="20201115 22:02:09.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.544" endtime="20201115 22:02:09.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.548" endtime="20201115 22:02:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.547" endtime="20201115 22:02:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.543" endtime="20201115 22:02:09.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.138" endtime="20201115 22:02:09.569"></status>
</kw>
<msg timestamp="20201115 22:02:09.569" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.578" endtime="20201115 22:02:09.611"></status>
</kw>
<msg timestamp="20201115 22:02:09.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.576" endtime="20201115 22:02:09.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.612" endtime="20201115 22:02:09.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.615" endtime="20201115 22:02:09.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.574" endtime="20201115 22:02:09.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.572" endtime="20201115 22:02:09.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.625" endtime="20201115 22:02:09.910"></status>
</kw>
<msg timestamp="20201115 22:02:09.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.623" endtime="20201115 22:02:09.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.914" endtime="20201115 22:02:09.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.921" endtime="20201115 22:02:09.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.621" endtime="20201115 22:02:09.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.619" endtime="20201115 22:02:09.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.928" level="INFO">${RESULT} = [{'time': 0.021650597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7389000000002254e-05, 'source_diff': 3.7389000000002254e-05}, {'time': 0.022144458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.925" endtime="20201115 22:02:09.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.941" level="INFO">${OVERHEAD} = {'time': [0.021650597, 0.022144458, 0.022654486, 0.023147417, 0.023646222, 0.024152819, 0.024647306, 0.025150167, 0.025648347, 0.026158361, 0.026652222, 0.027162653, 0.027667347, 0.028173, 0.028683306...</msg>
<status status="PASS" starttime="20201115 22:02:09.929" endtime="20201115 22:02:09.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.946" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:09.945" endtime="20201115 22:02:09.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.948" level="INFO">VALUE: [3.7389000000002254e-05, 3.720800000000038e-05, 3.723600000000299e-05, 3.722299999999942e-05, 3.725000000000256e-05, 3.723599999999952e-05, 3.724999999999909e-05, 3.725000000000256e-05, 3.717999999999777e-05, 3.723600000000299e-05, 3.724999999999909e-05, 3.72919999999978e-05, 3.726399999999866e-05, 3.726399999999866e-05, 3.723699999999899e-05, 3.725000000000256e-05, 3.723599999999952e-05, 3.723599999999952e-05, 3.726399999999866e-05, 3.723599999999952e-05, 3.723600000000299e-05, 3.716700000000461e-05, 3.719399999999734e-05, 3.729200000000127e-05, 3.723600000000299e-05, 3.724999999999562e-05, 3.722199999999648e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.724999999999562e-05, 3.722300000000289e-05, 3.722300000000289e-05, 3.7263000000002655e-05, 3.723599999999605e-05, 3.723599999999605e-05, 3.720900000000332e-05, 3.722200000000342e-05, 3.724999999999562e-05, 3.723599999999605e-05, 3.720799999999691e-05, 3.723600000000299e-05, 3.723700000000246e-05, 3.7262999999995716e-05, 3.717999999999777e-05, 3.729200000000127e-05, 3.724999999999562e-05, 3.725000000000256e-05, 3.723600000000299e-05, 3.723600000000299e-05, 3.722199999999648e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.947" endtime="20201115 22:02:09.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.942" endtime="20201115 22:02:09.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.952" endtime="20201115 22:02:09.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.955" endtime="20201115 22:02:09.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.953" endtime="20201115 22:02:09.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.950" endtime="20201115 22:02:09.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.570" endtime="20201115 22:02:09.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.836" endtime="20201115 22:02:09.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.835" endtime="20201115 22:02:09.976"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.978" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.987" endtime="20201115 22:02:10.022"></status>
</kw>
<msg timestamp="20201115 22:02:10.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.985" endtime="20201115 22:02:10.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.024" endtime="20201115 22:02:10.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.026" endtime="20201115 22:02:10.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.983" endtime="20201115 22:02:10.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.981" endtime="20201115 22:02:10.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.035" endtime="20201115 22:02:10.321"></status>
</kw>
<msg timestamp="20201115 22:02:10.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.033" endtime="20201115 22:02:10.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024035833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024075611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.325" endtime="20201115 22:02:10.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.333" endtime="20201115 22:02:10.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.031" endtime="20201115 22:02:10.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.029" endtime="20201115 22:02:10.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.340" level="INFO">${RESULT} = [{'time': 0.024075611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.977800000000073e-05, 'source_diff': 3.977800000000073e-05}, {'time': 0.024611736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:10.337" endtime="20201115 22:02:10.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.353" level="INFO">${OVERHEAD} = {'time': [0.024075611, 0.024611736, 0.025151569, 0.025690458, 0.026229667, 0.026762333, 0.027309028, 0.027847319, 0.028381847, 0.028924778, 0.029465208, 0.029999431, 0.030531472, 0.031078764, 0.031627...</msg>
<status status="PASS" starttime="20201115 22:02:10.341" endtime="20201115 22:02:10.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.357" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:10.356" endtime="20201115 22:02:10.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.360" level="INFO">VALUE: [3.977800000000073e-05, 3.9667000000000174e-05, 3.966599999999723e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.965199999999766e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.965200000000113e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.9652999999997135e-05, 3.965200000000113e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.968000000000027e-05, 3.966599999999376e-05, 3.973599999999855e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.973599999999855e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.968000000000027e-05, 3.970799999999941e-05, 3.9667000000000174e-05, 3.973599999999855e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.973599999999855e-05, 3.9653000000000604e-05, 3.969500000000625e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.358" endtime="20201115 22:02:10.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.354" endtime="20201115 22:02:10.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.363" endtime="20201115 22:02:10.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.367" endtime="20201115 22:02:10.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.365" endtime="20201115 22:02:10.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.362" endtime="20201115 22:02:10.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.979" endtime="20201115 22:02:10.388"></status>
</kw>
<msg timestamp="20201115 22:02:10.388" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.396" endtime="20201115 22:02:10.431"></status>
</kw>
<msg timestamp="20201115 22:02:10.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.395" endtime="20201115 22:02:10.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.433" endtime="20201115 22:02:10.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.435" endtime="20201115 22:02:10.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.392" endtime="20201115 22:02:10.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.390" endtime="20201115 22:02:10.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.446" endtime="20201115 22:02:10.732"></status>
</kw>
<msg timestamp="20201115 22:02:10.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.445" endtime="20201115 22:02:10.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.736" endtime="20201115 22:02:10.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.744" endtime="20201115 22:02:10.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.442" endtime="20201115 22:02:10.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.440" endtime="20201115 22:02:10.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.751" level="INFO">${RESULT} = [{'time': 0.021703444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9776999999997786e-05, 'source_diff': 3.9776999999997786e-05}, {'time': 0.022243542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.747" endtime="20201115 22:02:10.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.764" level="INFO">${OVERHEAD} = {'time': [0.021703444, 0.022243542, 0.022773597, 0.023309014, 0.023843819, 0.024390153, 0.024921861, 0.025470958, 0.026004222, 0.026546819, 0.027093458, 0.027627306, 0.02815875, 0.028698556, 0.0292396...</msg>
<status status="PASS" starttime="20201115 22:02:10.752" endtime="20201115 22:02:10.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.769" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:10.768" endtime="20201115 22:02:10.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.771" level="INFO">VALUE: [3.9776999999997786e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.966599999999723e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9624999999997995e-05, 3.968000000000027e-05, 3.963799999999809e-05, 3.965200000000113e-05, 3.961200000000137e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.966599999999723e-05, 3.9597000000002325e-05, 3.9680999999999744e-05, 3.965199999999419e-05, 3.9653000000000604e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.969400000000678e-05, 3.965200000000113e-05, 3.9582999999995816e-05, 3.972199999999898e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.968000000000027e-05, 3.9638999999994096e-05, 3.9667000000000174e-05, 3.958399999999529e-05, 3.96660000000007e-05, 3.9653000000000604e-05, 3.9639000000001035e-05, 3.9694999999999314e-05, 3.9653000000000604e-05, 3.9666999999993235e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.770" endtime="20201115 22:02:10.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.765" endtime="20201115 22:02:10.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.774" endtime="20201115 22:02:10.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.777" endtime="20201115 22:02:10.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.776" endtime="20201115 22:02:10.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.772" endtime="20201115 22:02:10.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.388" endtime="20201115 22:02:10.798"></status>
</kw>
<msg timestamp="20201115 22:02:10.799" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.807" endtime="20201115 22:02:10.842"></status>
</kw>
<msg timestamp="20201115 22:02:10.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.806" endtime="20201115 22:02:10.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.845" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.844" endtime="20201115 22:02:10.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.846" endtime="20201115 22:02:10.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.803" endtime="20201115 22:02:10.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.801" endtime="20201115 22:02:10.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.856" endtime="20201115 22:02:11.142"></status>
</kw>
<msg timestamp="20201115 22:02:11.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.855" endtime="20201115 22:02:11.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.146" endtime="20201115 22:02:11.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.154" endtime="20201115 22:02:11.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.852" endtime="20201115 22:02:11.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.850" endtime="20201115 22:02:11.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.160" level="INFO">${RESULT} = [{'time': 0.021763583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9805000000000396e-05, 'source_diff': 3.9805000000000396e-05}, {'time': 0.022309583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.157" endtime="20201115 22:02:11.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.174" level="INFO">${OVERHEAD} = {'time': [0.021763583, 0.022309583, 0.022855611, 0.023396, 0.023931708, 0.024477694, 0.025022181, 0.025555056, 0.026093931, 0.026629056, 0.027173458, 0.027720097, 0.028265806, 0.028798139, 0.029339444...</msg>
<status status="PASS" starttime="20201115 22:02:11.162" endtime="20201115 22:02:11.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.178" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:11.177" endtime="20201115 22:02:11.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.181" level="INFO">VALUE: [3.9805000000000396e-05, 3.96660000000007e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.968000000000027e-05, 3.9709000000002354e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9709000000002354e-05, 3.96660000000007e-05, 3.9638999999997565e-05, 3.9639000000001035e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.966599999999723e-05, 3.9625000000001465e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.9680999999999744e-05, 3.968000000000027e-05, 3.96660000000007e-05, 3.972199999999898e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9624999999994526e-05, 3.9653000000000604e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.969500000000625e-05, 3.965200000000113e-05, 3.9639000000001035e-05, 3.9694999999999314e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.179" endtime="20201115 22:02:11.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.175" endtime="20201115 22:02:11.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.184" endtime="20201115 22:02:11.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.187" endtime="20201115 22:02:11.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.186" endtime="20201115 22:02:11.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.182" endtime="20201115 22:02:11.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.799" endtime="20201115 22:02:11.208"></status>
</kw>
<msg timestamp="20201115 22:02:11.208" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.217" endtime="20201115 22:02:11.252"></status>
</kw>
<msg timestamp="20201115 22:02:11.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.215" endtime="20201115 22:02:11.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.253" endtime="20201115 22:02:11.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.256" endtime="20201115 22:02:11.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.213" endtime="20201115 22:02:11.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.211" endtime="20201115 22:02:11.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.266" endtime="20201115 22:02:11.550"></status>
</kw>
<msg timestamp="20201115 22:02:11.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.264" endtime="20201115 22:02:11.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.554" endtime="20201115 22:02:11.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.563" endtime="20201115 22:02:11.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.262" endtime="20201115 22:02:11.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.260" endtime="20201115 22:02:11.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.569" level="INFO">${RESULT} = [{'time': 0.021629556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.97920000000003e-05, 'source_diff': 3.97920000000003e-05}, {'time': 0.022172097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:11.566" endtime="20201115 22:02:11.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.583" level="INFO">${OVERHEAD} = {'time': [0.021629556, 0.022172097, 0.022703194, 0.023242667, 0.023785875, 0.024325986, 0.024867667, 0.025407181, 0.025941347, 0.026482625, 0.027014319, 0.027549056, 0.028098125, 0.028637875, 0.029175...</msg>
<status status="PASS" starttime="20201115 22:02:11.570" endtime="20201115 22:02:11.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.587" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:11.586" endtime="20201115 22:02:11.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.590" level="INFO">VALUE: [3.97920000000003e-05, 3.9653000000000604e-05, 3.965200000000113e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.96660000000007e-05, 3.9667000000000174e-05, 3.96799999999968e-05, 3.9638999999997565e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.965200000000113e-05, 3.9611000000001895e-05, 3.96660000000007e-05, 3.9680999999999744e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.965200000000113e-05, 3.9639000000001035e-05, 3.9708999999998884e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9638999999994096e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9625000000001465e-05, 3.96660000000007e-05, 3.965200000000113e-05, 3.9597000000002325e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.96660000000007e-05, 3.9611000000001895e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.9639000000001035e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.588" endtime="20201115 22:02:11.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.583" endtime="20201115 22:02:11.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.593" endtime="20201115 22:02:11.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.596" endtime="20201115 22:02:11.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.594" endtime="20201115 22:02:11.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.591" endtime="20201115 22:02:11.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.209" endtime="20201115 22:02:11.617"></status>
</kw>
<msg timestamp="20201115 22:02:11.617" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.626" endtime="20201115 22:02:11.660"></status>
</kw>
<msg timestamp="20201115 22:02:11.661" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.624" endtime="20201115 22:02:11.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.663" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.662" endtime="20201115 22:02:11.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.664" endtime="20201115 22:02:11.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.622" endtime="20201115 22:02:11.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.619" endtime="20201115 22:02:11.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.674" endtime="20201115 22:02:11.961"></status>
</kw>
<msg timestamp="20201115 22:02:11.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.673" endtime="20201115 22:02:11.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.965" endtime="20201115 22:02:11.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.974" endtime="20201115 22:02:11.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.670" endtime="20201115 22:02:11.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.668" endtime="20201115 22:02:11.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.980" level="INFO">${RESULT} = [{'time': 0.021567083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9805000000000396e-05, 'source_diff': 3.9805000000000396e-05}, {'time': 0.022114944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.977" endtime="20201115 22:02:11.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.993" level="INFO">${OVERHEAD} = {'time': [0.021567083, 0.022114944, 0.022655944, 0.023188611, 0.023727792, 0.024266319, 0.024803264, 0.025336208, 0.025881236, 0.026413222, 0.026947389, 0.027495875, 0.028039111, 0.028585944, 0.029126...</msg>
<status status="PASS" starttime="20201115 22:02:11.981" endtime="20201115 22:02:11.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.998" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:11.997" endtime="20201115 22:02:11.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.000" level="INFO">VALUE: [3.9805000000000396e-05, 3.96660000000007e-05, 3.963800000000156e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.965200000000113e-05, 3.9667000000000174e-05, 3.966599999999723e-05, 3.9652999999997135e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.9667000000000174e-05, 3.972199999999898e-05, 3.966599999999723e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.9597000000002325e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 3.9736999999998024e-05, 3.9597000000002325e-05, 3.9610999999994956e-05, 3.9611000000001895e-05, 3.965200000000113e-05, 3.968000000000027e-05, 3.973600000000549e-05, 3.9667000000000174e-05, 3.9624999999994526e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.972199999999898e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.96660000000007e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.96660000000007e-05, 3.9680999999999744e-05, 3.970799999999941e-05, 3.9667000000000174e-05, 3.9625000000001465e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.968000000000027e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.999" endtime="20201115 22:02:12.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.994" endtime="20201115 22:02:12.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.004" endtime="20201115 22:02:12.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.007" endtime="20201115 22:02:12.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.005" endtime="20201115 22:02:12.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.002" endtime="20201115 22:02:12.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.617" endtime="20201115 22:02:12.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.977" endtime="20201115 22:02:12.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.976" endtime="20201115 22:02:12.028"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.030" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.039" endtime="20201115 22:02:12.078"></status>
</kw>
<msg timestamp="20201115 22:02:12.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.037" endtime="20201115 22:02:12.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.079" endtime="20201115 22:02:12.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.082" endtime="20201115 22:02:12.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.035" endtime="20201115 22:02:12.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.033" endtime="20201115 22:02:12.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.091" endtime="20201115 22:02:12.376"></status>
</kw>
<msg timestamp="20201115 22:02:12.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.090" endtime="20201115 22:02:12.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025691528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.380" endtime="20201115 22:02:12.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.388" endtime="20201115 22:02:12.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.087" endtime="20201115 22:02:12.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.085" endtime="20201115 22:02:12.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.395" level="INFO">${RESULT} = [{'time': 0.025691528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2153000000003105e-05, 'source_diff': 4.2153000000003105e-05}, {'time': 0.026281847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.392" endtime="20201115 22:02:12.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.408" level="INFO">${OVERHEAD} = {'time': [0.025691528, 0.026281847, 0.026865236, 0.027449597, 0.028038319, 0.028617056, 0.029207042, 0.02978475, 0.030372542, 0.030955028, 0.031537486, 0.032111875, 0.032690972, 0.033265694, 0.0338562...</msg>
<status status="PASS" starttime="20201115 22:02:12.396" endtime="20201115 22:02:12.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.413" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:12.412" endtime="20201115 22:02:12.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.415" level="INFO">VALUE: [4.2153000000003105e-05, 4.2125000000000495e-05, 4.2083000000001786e-05, 4.2082999999998316e-05, 4.2027000000000037e-05, 4.209799999999736e-05, 4.2152999999999635e-05, 4.2068999999998746e-05, 4.208399999999779e-05, 4.206999999999822e-05, 4.2069000000005685e-05, 4.204199999999908e-05, 4.2096999999997886e-05, 4.2082999999998316e-05, 4.2068999999998746e-05, 4.204199999999908e-05, 4.2083000000005255e-05, 4.2068999999998746e-05, 4.2139000000003535e-05, 4.208399999999779e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.205600000000559e-05, 4.2082999999998316e-05, 4.2111000000004395e-05, 4.2027000000000037e-05, 4.2111000000004395e-05, 4.2068999999998746e-05, 4.2082999999998316e-05, 4.2097000000004825e-05, 4.2124999999997026e-05, 4.209799999999736e-05, 4.209799999999736e-05, 4.2082999999998316e-05, 4.2124999999997026e-05, 4.2068999999998746e-05, 4.206999999999822e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.2111000000004395e-05, 4.2083000000005255e-05, 4.206999999999822e-05, 4.207000000000516e-05, 4.208399999999779e-05, 4.208400000000473e-05, 4.208399999999779e-05, 4.2097000000004825e-05, 4.206999999999822e-05, 4.2068999999998746e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.414" endtime="20201115 22:02:12.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.409" endtime="20201115 22:02:12.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.418" endtime="20201115 22:02:12.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.422" endtime="20201115 22:02:12.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.420" endtime="20201115 22:02:12.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.417" endtime="20201115 22:02:12.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.031" endtime="20201115 22:02:12.442"></status>
</kw>
<msg timestamp="20201115 22:02:12.443" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.451" endtime="20201115 22:02:12.488"></status>
</kw>
<msg timestamp="20201115 22:02:12.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.450" endtime="20201115 22:02:12.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.490" endtime="20201115 22:02:12.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.493" endtime="20201115 22:02:12.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.447" endtime="20201115 22:02:12.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.445" endtime="20201115 22:02:12.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.503" endtime="20201115 22:02:12.788"></status>
</kw>
<msg timestamp="20201115 22:02:12.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:12.501" endtime="20201115 22:02:12.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:12.792" endtime="20201115 22:02:12.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.800" endtime="20201115 22:02:12.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.499" endtime="20201115 22:02:12.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.497" endtime="20201115 22:02:12.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.807" level="INFO">${RESULT} = [{'time': 0.021684194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.219399999999887e-05, 'source_diff': 4.219399999999887e-05}, {'time': 0.022275097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:12.803" endtime="20201115 22:02:12.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.820" level="INFO">${OVERHEAD} = {'time': [0.021684194, 0.022275097, 0.022856028, 0.023445694, 0.024019486, 0.024605444, 0.025185792, 0.025763375, 0.026352458, 0.026944042, 0.027525958, 0.028111014, 0.028687375, 0.029278931, 0.029857...</msg>
<status status="PASS" starttime="20201115 22:02:12.808" endtime="20201115 22:02:12.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.824" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:12.823" endtime="20201115 22:02:12.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.827" level="INFO">VALUE: [4.219399999999887e-05, 4.2097000000001356e-05, 4.207000000000169e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2097000000001356e-05, 4.208399999999779e-05, 4.2097000000001356e-05, 4.2096999999997886e-05, 4.209800000000083e-05, 4.2082999999998316e-05, 4.2083000000001786e-05, 4.2125000000000495e-05, 4.209800000000083e-05, 4.2125000000000495e-05, 4.2125000000000495e-05, 4.208399999999779e-05, 4.2096999999997886e-05, 4.2082999999998316e-05, 4.209799999999736e-05, 4.208399999999779e-05, 4.206999999999822e-05, 4.2082999999998316e-05, 4.204199999999908e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2097000000004825e-05, 4.2110999999997456e-05, 4.2082999999998316e-05, 4.2083000000005255e-05, 4.2097000000004825e-05, 4.2096999999997886e-05, 4.208400000000473e-05, 4.208400000000473e-05, 4.2125000000003965e-05, 4.2082999999998316e-05, 4.213800000000406e-05, 4.20980000000043e-05, 4.2096999999997886e-05, 4.2068999999998746e-05, 4.2097000000004825e-05, 4.2082999999998316e-05, 4.209799999999736e-05, 4.2096999999997886e-05, 4.206999999999822e-05, 4.2110999999997456e-05, 4.206999999999822e-05, 4.2125000000003965e-05, 4.2068999999998746e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.825" endtime="20201115 22:02:12.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.821" endtime="20201115 22:02:12.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.830" endtime="20201115 22:02:12.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.833" endtime="20201115 22:02:12.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.832" endtime="20201115 22:02:12.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.828" endtime="20201115 22:02:12.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.443" endtime="20201115 22:02:12.854"></status>
</kw>
<msg timestamp="20201115 22:02:12.854" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.863" endtime="20201115 22:02:12.900"></status>
</kw>
<msg timestamp="20201115 22:02:12.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.862" endtime="20201115 22:02:12.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.902" endtime="20201115 22:02:12.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.904" endtime="20201115 22:02:12.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.859" endtime="20201115 22:02:12.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.857" endtime="20201115 22:02:12.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.914" endtime="20201115 22:02:13.201"></status>
</kw>
<msg timestamp="20201115 22:02:13.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.912" endtime="20201115 22:02:13.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.205" endtime="20201115 22:02:13.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.213" endtime="20201115 22:02:13.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.910" endtime="20201115 22:02:13.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.908" endtime="20201115 22:02:13.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.219" level="INFO">${RESULT} = [{'time': 0.022171417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223599999999758e-05, 'source_diff': 4.223599999999758e-05}, {'time': 0.022745847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.216" endtime="20201115 22:02:13.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.232" level="INFO">${OVERHEAD} = {'time': [0.022171417, 0.022745847, 0.023331111, 0.023915444, 0.024503847, 0.025089722, 0.025667819, 0.026252542, 0.026824528, 0.027402292, 0.027986347, 0.02856325, 0.029147625, 0.029736417, 0.0303108...</msg>
<status status="PASS" starttime="20201115 22:02:13.220" endtime="20201115 22:02:13.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.237" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:13.236" endtime="20201115 22:02:13.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.239" level="INFO">VALUE: [4.223599999999758e-05, 4.2082999999998316e-05, 4.2097000000001356e-05, 4.2097000000001356e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2083000000001786e-05, 4.208400000000126e-05, 4.2180999999998775e-05, 4.209800000000083e-05, 4.2083000000001786e-05, 4.205599999999865e-05, 4.2097000000001356e-05, 4.209800000000083e-05, 4.2083000000001786e-05, 4.21120000000004e-05, 4.2097000000004825e-05, 4.2082999999998316e-05, 4.2040999999999606e-05, 4.2138999999996596e-05, 4.2096999999997886e-05, 4.206999999999822e-05, 4.2096999999997886e-05, 4.2110999999997456e-05, 4.202799999999951e-05, 4.2125000000003965e-05, 4.2096999999997886e-05, 4.2027000000000037e-05, 4.208399999999779e-05, 4.2096999999997886e-05, 4.211200000000387e-05, 4.208399999999779e-05, 4.2096999999997886e-05, 4.2097000000004825e-05, 4.208399999999779e-05, 4.201399999999994e-05, 4.2083000000005255e-05, 4.2096999999997886e-05, 4.2082999999998316e-05, 4.206999999999822e-05, 4.207000000000516e-05, 4.2083000000005255e-05, 4.2124999999997026e-05, 4.2124999999997026e-05, 4.2096999999997886e-05, 4.2097000000004825e-05, 4.20980000000043e-05, 4.206999999999822e-05, 4.2125000000003965e-05, 4.2083000000005255e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.238" endtime="20201115 22:02:13.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.233" endtime="20201115 22:02:13.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.243" endtime="20201115 22:02:13.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.246" endtime="20201115 22:02:13.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.244" endtime="20201115 22:02:13.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.241" endtime="20201115 22:02:13.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.855" endtime="20201115 22:02:13.267"></status>
</kw>
<msg timestamp="20201115 22:02:13.267" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.276" endtime="20201115 22:02:13.313"></status>
</kw>
<msg timestamp="20201115 22:02:13.314" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.274" endtime="20201115 22:02:13.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.315" endtime="20201115 22:02:13.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.317" endtime="20201115 22:02:13.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.272" endtime="20201115 22:02:13.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.270" endtime="20201115 22:02:13.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.327" endtime="20201115 22:02:13.611"></status>
</kw>
<msg timestamp="20201115 22:02:13.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.325" endtime="20201115 22:02:13.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.615" endtime="20201115 22:02:13.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.623" endtime="20201115 22:02:13.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.323" endtime="20201115 22:02:13.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.321" endtime="20201115 22:02:13.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.630" level="INFO">${RESULT} = [{'time': 0.022114986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2166999999999205e-05, 'source_diff': 4.2166999999999205e-05}, {'time': 0.022699306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.626" endtime="20201115 22:02:13.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.643" level="INFO">${OVERHEAD} = {'time': [0.022114986, 0.022699306, 0.023290514, 0.023880125, 0.024452931, 0.025035042, 0.025625236, 0.026205181, 0.026780181, 0.027364819, 0.027953528, 0.028542222, 0.029117194, 0.029699611, 0.030274...</msg>
<status status="PASS" starttime="20201115 22:02:13.631" endtime="20201115 22:02:13.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.647" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:13.646" endtime="20201115 22:02:13.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.650" level="INFO">VALUE: [4.2166999999999205e-05, 4.208399999999779e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.208400000000126e-05, 4.208400000000126e-05, 4.2068999999998746e-05, 4.208400000000126e-05, 4.21120000000004e-05, 4.2096999999997886e-05, 4.2096999999997886e-05, 4.2082999999998316e-05, 4.2096999999997886e-05, 4.2083000000001786e-05, 4.2096999999997886e-05, 4.2083000000001786e-05, 4.2068999999998746e-05, 4.2082999999998316e-05, 4.206999999999822e-05, 4.208400000000473e-05, 4.2139000000003535e-05, 4.208399999999779e-05, 4.208399999999779e-05, 4.2096999999997886e-05, 4.209799999999736e-05, 4.2096999999997886e-05, 4.208399999999779e-05, 4.2083000000005255e-05, 4.208399999999779e-05, 4.2097000000004825e-05, 4.2082999999998316e-05, 4.205599999999865e-05, 4.2068999999998746e-05, 4.209799999999736e-05, 4.2082999999998316e-05, 4.2111000000004395e-05, 4.208399999999779e-05, 4.208400000000473e-05, 4.204200000000602e-05, 4.202799999999951e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.2096999999997886e-05, 4.2097000000004825e-05, 4.2125000000003965e-05, 4.2124999999997026e-05, 4.2083000000005255e-05, 4.2082999999998316e-05, 4.208399999999779e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.648" endtime="20201115 22:02:13.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.644" endtime="20201115 22:02:13.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.653" endtime="20201115 22:02:13.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.657" endtime="20201115 22:02:13.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.655" endtime="20201115 22:02:13.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.652" endtime="20201115 22:02:13.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.268" endtime="20201115 22:02:13.678"></status>
</kw>
<msg timestamp="20201115 22:02:13.678" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.686" endtime="20201115 22:02:13.723"></status>
</kw>
<msg timestamp="20201115 22:02:13.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.685" endtime="20201115 22:02:13.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.725" endtime="20201115 22:02:13.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.728" endtime="20201115 22:02:13.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.682" endtime="20201115 22:02:13.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.680" endtime="20201115 22:02:13.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.738" endtime="20201115 22:02:14.025"></status>
</kw>
<msg timestamp="20201115 22:02:14.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.737" endtime="20201115 22:02:14.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021759944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.029" endtime="20201115 22:02:14.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.037" endtime="20201115 22:02:14.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.734" endtime="20201115 22:02:14.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.733" endtime="20201115 22:02:14.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.044" level="INFO">${RESULT} = [{'time': 0.021759944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.022345903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:14.040" endtime="20201115 22:02:14.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.057" level="INFO">${OVERHEAD} = {'time': [0.021759944, 0.022345903, 0.022925319, 0.023501931, 0.024076708, 0.024667417, 0.025246583, 0.025829083, 0.026416917, 0.026998833, 0.027585458, 0.028159917, 0.028740611, 0.029312542, 0.029887...</msg>
<status status="PASS" starttime="20201115 22:02:14.045" endtime="20201115 22:02:14.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.061" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:14.060" endtime="20201115 22:02:14.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.064" level="INFO">VALUE: [4.222200000000148e-05, 4.208400000000126e-05, 4.2096999999997886e-05, 4.208400000000126e-05, 4.2096999999997886e-05, 4.208400000000126e-05, 4.2111000000000925e-05, 4.2082999999998316e-05, 4.209800000000083e-05, 4.2082999999998316e-05, 4.2111000000000925e-05, 4.209800000000083e-05, 4.2096999999997886e-05, 4.208400000000126e-05, 4.2068999999998746e-05, 4.2097000000001356e-05, 4.2097000000001356e-05, 4.211199999999693e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.209799999999736e-05, 4.2096999999997886e-05, 4.2125000000003965e-05, 4.2111000000004395e-05, 4.2125000000003965e-05, 4.2110999999997456e-05, 4.2111000000004395e-05, 4.2082999999998316e-05, 4.2110999999997456e-05, 4.2125000000003965e-05, 4.2097000000004825e-05, 4.2096999999997886e-05, 4.2083000000005255e-05, 4.2040999999999606e-05, 4.2082999999998316e-05, 4.2097000000004825e-05, 4.208400000000473e-05, 4.201399999999994e-05, 4.2082999999998316e-05, 4.20980000000043e-05, 4.2083000000005255e-05, 4.2068999999998746e-05, 4.208399999999779e-05, 4.2124999999997026e-05, 4.2068999999998746e-05, 4.211199999999693e-05, 4.2111000000004395e-05, 4.2096999999997886e-05, 4.2083000000005255e-05, 4.2083000000005255e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.062" endtime="20201115 22:02:14.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.058" endtime="20201115 22:02:14.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.067" endtime="20201115 22:02:14.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.070" endtime="20201115 22:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.069" endtime="20201115 22:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.065" endtime="20201115 22:02:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.678" endtime="20201115 22:02:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.029" endtime="20201115 22:02:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.029" endtime="20201115 22:02:14.092"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.094" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.103" endtime="20201115 22:02:14.142"></status>
</kw>
<msg timestamp="20201115 22:02:14.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.101" endtime="20201115 22:02:14.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.143" endtime="20201115 22:02:14.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.146" endtime="20201115 22:02:14.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.099" endtime="20201115 22:02:14.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.096" endtime="20201115 22:02:14.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.155" endtime="20201115 22:02:14.440"></status>
</kw>
<msg timestamp="20201115 22:02:14.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024241931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.153" endtime="20201115 22:02:14.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024241931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.444" endtime="20201115 22:02:14.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.452" endtime="20201115 22:02:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.151" endtime="20201115 22:02:14.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.149" endtime="20201115 22:02:14.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.459" level="INFO">${RESULT} = [{'time': 0.024286569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.463799999999962e-05, 'source_diff': 4.463799999999962e-05}, {'time': 0.024913958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:14.455" endtime="20201115 22:02:14.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.472" level="INFO">${OVERHEAD} = {'time': [0.024286569, 0.024913958, 0.025543778, 0.026174264, 0.026791681, 0.02741525, 0.028041694, 0.028662181, 0.029288264, 0.029914722, 0.030548042, 0.031168306, 0.031799958, 0.032433194, 0.0330496...</msg>
<status status="PASS" starttime="20201115 22:02:14.460" endtime="20201115 22:02:14.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.476" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:14.475" endtime="20201115 22:02:14.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.479" level="INFO">VALUE: [4.463799999999962e-05, 4.454099999999864e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.44999999999994e-05, 4.45129999999995e-05, 4.44999999999994e-05, 4.451400000000244e-05, 4.448599999999983e-05, 4.452800000000201e-05, 4.458400000000029e-05, 4.452700000000254e-05, 4.45269999999956e-05, 4.449999999999593e-05, 4.451400000000244e-05, 4.44860000000033e-05, 4.452800000000201e-05, 4.452800000000201e-05, 4.4597000000000386e-05, 4.450000000000287e-05, 4.452800000000201e-05, 4.448599999999636e-05, 4.45139999999955e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.451400000000244e-05, 4.451400000000244e-05, 4.452700000000254e-05, 4.45139999999955e-05, 4.452799999999507e-05, 4.451400000000244e-05, 4.45139999999955e-05, 4.45139999999955e-05, 4.455600000000115e-05, 4.454200000000158e-05, 4.454100000000211e-05, 4.451400000000244e-05, 4.451300000000297e-05, 4.452800000000201e-05, 4.454200000000158e-05, 4.454199999999464e-05, 4.451400000000244e-05, 4.452799999999507e-05, 4.451400000000244e-05, 4.447199999999679e-05, 4.454200000000158e-05, 4.451400000000244e-05, 4.45139999999955e-05, 4.45139999999955e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.478" endtime="20201115 22:02:14.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.473" endtime="20201115 22:02:14.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.482" endtime="20201115 22:02:14.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.486" endtime="20201115 22:02:14.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.484" endtime="20201115 22:02:14.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.481" endtime="20201115 22:02:14.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.094" endtime="20201115 22:02:14.506"></status>
</kw>
<msg timestamp="20201115 22:02:14.507" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.515" endtime="20201115 22:02:14.555"></status>
</kw>
<msg timestamp="20201115 22:02:14.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.514" endtime="20201115 22:02:14.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.556" endtime="20201115 22:02:14.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.559" endtime="20201115 22:02:14.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.511" endtime="20201115 22:02:14.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.509" endtime="20201115 22:02:14.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.569" endtime="20201115 22:02:14.854"></status>
</kw>
<msg timestamp="20201115 22:02:14.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.567" endtime="20201115 22:02:14.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.858" endtime="20201115 22:02:14.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.866" endtime="20201115 22:02:14.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.565" endtime="20201115 22:02:14.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.563" endtime="20201115 22:02:14.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.873" level="INFO">${RESULT} = [{'time': 0.021883014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.022518444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.869" endtime="20201115 22:02:14.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.886" level="INFO">${OVERHEAD} = {'time': [0.021883014, 0.022518444, 0.023140181, 0.023760944, 0.024392639, 0.025022806, 0.025643236, 0.026278986, 0.026914431, 0.027532153, 0.028152639, 0.028786528, 0.029411722, 0.030033139, 0.030660...</msg>
<status status="PASS" starttime="20201115 22:02:14.874" endtime="20201115 22:02:14.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.891" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:14.890" endtime="20201115 22:02:14.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.893" level="INFO">VALUE: [4.4610999999999956e-05, 4.45129999999995e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.451399999999897e-05, 4.455600000000115e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.452800000000201e-05, 4.44999999999994e-05, 4.452699999999907e-05, 4.458299999999735e-05, 4.451400000000244e-05, 4.449999999999593e-05, 4.451400000000244e-05, 4.4569000000001247e-05, 4.45269999999956e-05, 4.457000000000072e-05, 4.452800000000201e-05, 4.447199999999679e-05, 4.455599999999421e-05, 4.450000000000287e-05, 4.451400000000244e-05, 4.45139999999955e-05, 4.451299999999603e-05, 4.451300000000297e-05, 4.445799999999722e-05, 4.444399999999765e-05, 4.449999999999593e-05, 4.459799999999986e-05, 4.454100000000211e-05, 4.447199999999679e-05, 4.451400000000244e-05, 4.450000000000287e-05, 4.452700000000254e-05, 4.44860000000033e-05, 4.452799999999507e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.4486999999995835e-05, 4.45139999999955e-05, 4.44860000000033e-05, 4.448599999999636e-05, 4.452800000000201e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.892" endtime="20201115 22:02:14.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.887" endtime="20201115 22:02:14.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.896" endtime="20201115 22:02:14.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.899" endtime="20201115 22:02:14.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.898" endtime="20201115 22:02:14.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.894" endtime="20201115 22:02:14.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.507" endtime="20201115 22:02:14.920"></status>
</kw>
<msg timestamp="20201115 22:02:14.920" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.929" endtime="20201115 22:02:14.969"></status>
</kw>
<msg timestamp="20201115 22:02:14.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.928" endtime="20201115 22:02:14.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.970" endtime="20201115 22:02:14.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.972" endtime="20201115 22:02:14.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.925" endtime="20201115 22:02:14.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.923" endtime="20201115 22:02:14.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.982" endtime="20201115 22:02:15.269"></status>
</kw>
<msg timestamp="20201115 22:02:15.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.981" endtime="20201115 22:02:15.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.273" endtime="20201115 22:02:15.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.281" endtime="20201115 22:02:15.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.978" endtime="20201115 22:02:15.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.977" endtime="20201115 22:02:15.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.287" level="INFO">${RESULT} = [{'time': 0.021939819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.463799999999962e-05, 'source_diff': 4.463799999999962e-05}, {'time': 0.022570931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:15.284" endtime="20201115 22:02:15.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.301" level="INFO">${OVERHEAD} = {'time': [0.021939819, 0.022570931, 0.023188639, 0.023815986, 0.024441181, 0.025069181, 0.025698736, 0.026315208, 0.026933194, 0.027567028, 0.028190625, 0.028809903, 0.029441, 0.030076792, 0.030703208...</msg>
<status status="PASS" starttime="20201115 22:02:15.289" endtime="20201115 22:02:15.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.305" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:15.304" endtime="20201115 22:02:15.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.308" level="INFO">VALUE: [4.463799999999962e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.451400000000244e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.44999999999994e-05, 4.452699999999907e-05, 4.452699999999907e-05, 4.4445000000000595e-05, 4.451399999999897e-05, 4.451400000000244e-05, 4.451399999999897e-05, 4.451400000000244e-05, 4.44999999999994e-05, 4.4555000000001677e-05, 4.45139999999955e-05, 4.451400000000244e-05, 4.454200000000158e-05, 4.454200000000158e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.444399999999765e-05, 4.456899999999431e-05, 4.450000000000287e-05, 4.451300000000297e-05, 4.450000000000287e-05, 4.451400000000244e-05, 4.451400000000244e-05, 4.450000000000287e-05, 4.452700000000254e-05, 4.448599999999636e-05, 4.450000000000287e-05, 4.449999999999593e-05, 4.450000000000287e-05, 4.447199999999679e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.452700000000254e-05, 4.454200000000158e-05, 4.45139999999955e-05, 4.450000000000287e-05, 4.4473000000003204e-05, 4.451299999999603e-05, 4.445800000000416e-05, 4.452800000000201e-05, 4.452800000000201e-05, 4.454199999999464e-05, 4.451400000000244e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.306" endtime="20201115 22:02:15.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.302" endtime="20201115 22:02:15.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.311" endtime="20201115 22:02:15.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.314" endtime="20201115 22:02:15.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.312" endtime="20201115 22:02:15.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.309" endtime="20201115 22:02:15.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.921" endtime="20201115 22:02:15.335"></status>
</kw>
<msg timestamp="20201115 22:02:15.335" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.344" endtime="20201115 22:02:15.383"></status>
</kw>
<msg timestamp="20201115 22:02:15.383" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.342" endtime="20201115 22:02:15.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.386" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.385" endtime="20201115 22:02:15.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.387" endtime="20201115 22:02:15.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.340" endtime="20201115 22:02:15.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.338" endtime="20201115 22:02:15.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.398" endtime="20201115 22:02:15.683"></status>
</kw>
<msg timestamp="20201115 22:02:15.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.396" endtime="20201115 22:02:15.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.687" endtime="20201115 22:02:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.695" endtime="20201115 22:02:15.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.394" endtime="20201115 22:02:15.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.392" endtime="20201115 22:02:15.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.702" level="INFO">${RESULT} = [{'time': 0.021921028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4638999999999096e-05, 'source_diff': 4.4638999999999096e-05}, {'time': 0.022543375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.699" endtime="20201115 22:02:15.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.715" level="INFO">${OVERHEAD} = {'time': [0.021921028, 0.022543375, 0.023175375, 0.023803931, 0.024436847, 0.025063208, 0.025679333, 0.026296639, 0.026922667, 0.027540611, 0.028174472, 0.028791167, 0.029415681, 0.030050986, 0.030676...</msg>
<status status="PASS" starttime="20201115 22:02:15.703" endtime="20201115 22:02:15.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.720" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:15.719" endtime="20201115 22:02:15.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.722" level="INFO">VALUE: [4.4638999999999096e-05, 4.44999999999994e-05, 4.452800000000201e-05, 4.452800000000201e-05, 4.44999999999994e-05, 4.452699999999907e-05, 4.459699999999692e-05, 4.451399999999897e-05, 4.451400000000244e-05, 4.451399999999897e-05, 4.452799999999854e-05, 4.452799999999854e-05, 4.455599999999768e-05, 4.451399999999897e-05, 4.450000000000287e-05, 4.45139999999955e-05, 4.451400000000244e-05, 4.451400000000244e-05, 4.449999999999593e-05, 4.452800000000201e-05, 4.444400000000459e-05, 4.44860000000033e-05, 4.451400000000244e-05, 4.450000000000287e-05, 4.45139999999955e-05, 4.452799999999507e-05, 4.448599999999636e-05, 4.451400000000244e-05, 4.454099999999517e-05, 4.451300000000297e-05, 4.451400000000244e-05, 4.455499999999474e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.452799999999507e-05, 4.45139999999955e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.454199999999464e-05, 4.454200000000158e-05, 4.45139999999955e-05, 4.452800000000201e-05, 4.45139999999955e-05, 4.448599999999636e-05, 4.450000000000287e-05, 4.451400000000244e-05, 4.45139999999955e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.721" endtime="20201115 22:02:15.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.716" endtime="20201115 22:02:15.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.725" endtime="20201115 22:02:15.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.728" endtime="20201115 22:02:15.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.727" endtime="20201115 22:02:15.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.723" endtime="20201115 22:02:15.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.335" endtime="20201115 22:02:15.749"></status>
</kw>
<msg timestamp="20201115 22:02:15.749" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.758" endtime="20201115 22:02:15.797"></status>
</kw>
<msg timestamp="20201115 22:02:15.798" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.757" endtime="20201115 22:02:15.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.799" endtime="20201115 22:02:15.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.801" endtime="20201115 22:02:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.754" endtime="20201115 22:02:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.752" endtime="20201115 22:02:15.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.811" endtime="20201115 22:02:16.097"></status>
</kw>
<msg timestamp="20201115 22:02:16.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.810" endtime="20201115 22:02:16.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.101" endtime="20201115 22:02:16.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.109" endtime="20201115 22:02:16.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.807" endtime="20201115 22:02:16.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.805" endtime="20201115 22:02:16.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.116" level="INFO">${RESULT} = [{'time': 0.021872972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.46800000000018e-05, 'source_diff': 4.46800000000018e-05}, {'time': 0.022493139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:16.113" endtime="20201115 22:02:16.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.129" level="INFO">${OVERHEAD} = {'time': [0.021872972, 0.022493139, 0.023127708, 0.023748542, 0.024381167, 0.02500075, 0.025633958, 0.026265667, 0.026881778, 0.027500097, 0.028131417, 0.028747514, 0.029367708, 0.029991542, 0.0306185...</msg>
<status status="PASS" starttime="20201115 22:02:16.117" endtime="20201115 22:02:16.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.134" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:16.133" endtime="20201115 22:02:16.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.136" level="INFO">VALUE: [4.46800000000018e-05, 4.451399999999897e-05, 4.452699999999907e-05, 4.451400000000244e-05, 4.44999999999994e-05, 4.452799999999854e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.451399999999897e-05, 4.451400000000244e-05, 4.44999999999994e-05, 4.451399999999897e-05, 4.454099999999864e-05, 4.44999999999994e-05, 4.452799999999854e-05, 4.452799999999854e-05, 4.455499999999474e-05, 4.450000000000287e-05, 4.452800000000201e-05, 4.45269999999956e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.452800000000201e-05, 4.452799999999507e-05, 4.45139999999955e-05, 4.451400000000244e-05, 4.45139999999955e-05, 4.449999999999593e-05, 4.452800000000201e-05, 4.449999999999593e-05, 4.451400000000244e-05, 4.452800000000201e-05, 4.452700000000254e-05, 4.449999999999593e-05, 4.452799999999507e-05, 4.45139999999955e-05, 4.447200000000373e-05, 4.450000000000287e-05, 4.451400000000244e-05, 4.450000000000287e-05, 4.4583000000000816e-05, 4.448599999999636e-05, 4.450000000000287e-05, 4.450000000000287e-05, 4.45139999999955e-05, 4.457000000000072e-05, 4.451300000000297e-05, 4.447200000000373e-05, 4.45139999999955e-05, 4.449999999999593e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.135" endtime="20201115 22:02:16.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.130" endtime="20201115 22:02:16.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.139" endtime="20201115 22:02:16.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.142" endtime="20201115 22:02:16.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.141" endtime="20201115 22:02:16.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.137" endtime="20201115 22:02:16.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.750" endtime="20201115 22:02:16.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.093" endtime="20201115 22:02:16.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.092" endtime="20201115 22:02:16.164"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.166" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.174" endtime="20201115 22:02:16.216"></status>
</kw>
<msg timestamp="20201115 22:02:16.217" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.173" endtime="20201115 22:02:16.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.219" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.218" endtime="20201115 22:02:16.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.220" endtime="20201115 22:02:16.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.170" endtime="20201115 22:02:16.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.168" endtime="20201115 22:02:16.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.230" endtime="20201115 22:02:16.515"></status>
</kw>
<msg timestamp="20201115 22:02:16.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.228" endtime="20201115 22:02:16.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.519" endtime="20201115 22:02:16.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.527" endtime="20201115 22:02:16.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.225" endtime="20201115 22:02:16.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.224" endtime="20201115 22:02:16.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.534" level="INFO">${RESULT} = [{'time': 0.024166194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.706899999999681e-05, 'source_diff': 4.706899999999681e-05}, {'time': 0.024831194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:16.531" endtime="20201115 22:02:16.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.547" level="INFO">${OVERHEAD} = {'time': [0.024166194, 0.024831194, 0.025502375, 0.026175111, 0.026855958, 0.027520319, 0.028191542, 0.028862153, 0.0295445, 0.030211639, 0.030890014, 0.031569319, 0.032240847, 0.032920764, 0.03360318...</msg>
<status status="PASS" starttime="20201115 22:02:16.535" endtime="20201115 22:02:16.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.552" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:16.551" endtime="20201115 22:02:16.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.554" level="INFO">VALUE: [4.706899999999681e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.6959000000002665e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.6959000000006135e-05, 4.6958999999999196e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.691600000000101e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.699999999999843e-05, 4.6972999999998766e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6889000000001346e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6958999999999196e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.6889000000001346e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6915999999994074e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.693000000000058e-05, 4.6931000000000056e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.553" endtime="20201115 22:02:16.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.548" endtime="20201115 22:02:16.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.557" endtime="20201115 22:02:16.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.560" endtime="20201115 22:02:16.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.559" endtime="20201115 22:02:16.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.555" endtime="20201115 22:02:16.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.166" endtime="20201115 22:02:16.581"></status>
</kw>
<msg timestamp="20201115 22:02:16.581" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.590" endtime="20201115 22:02:16.632"></status>
</kw>
<msg timestamp="20201115 22:02:16.632" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.589" endtime="20201115 22:02:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.633" endtime="20201115 22:02:16.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.636" endtime="20201115 22:02:16.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.586" endtime="20201115 22:02:16.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.584" endtime="20201115 22:02:16.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.646" endtime="20201115 22:02:16.932"></status>
</kw>
<msg timestamp="20201115 22:02:16.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.645" endtime="20201115 22:02:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.936" endtime="20201115 22:02:16.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.944" endtime="20201115 22:02:16.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.642" endtime="20201115 22:02:16.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.640" endtime="20201115 22:02:16.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.951" level="INFO">${RESULT} = [{'time': 0.021886097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7139000000001596e-05, 'source_diff': 4.7139000000001596e-05}, {'time': 0.022551542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.947" endtime="20201115 22:02:16.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.964" level="INFO">${OVERHEAD} = {'time': [0.021886097, 0.022551542, 0.0232285, 0.023907694, 0.024583486, 0.025260542, 0.025941944, 0.026612431, 0.027289514, 0.027956361, 0.028625014, 0.029287764, 0.029966944, 0.030647417, 0.03131725...</msg>
<status status="PASS" starttime="20201115 22:02:16.952" endtime="20201115 22:02:16.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.968" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:16.967" endtime="20201115 22:02:16.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.971" level="INFO">VALUE: [4.7139000000001596e-05, 4.6973000000002235e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6889000000001346e-05, 4.690200000000144e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.698600000000233e-05, 4.695799999999972e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.69860000000058e-05, 4.6931000000000056e-05, 4.6929999999993643e-05, 4.6889000000001346e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.699999999999843e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.6972999999998766e-05, 4.69860000000058e-05, 4.6931000000000056e-05, 4.6875000000001776e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.694399999999321e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.691600000000101e-05, 4.6931000000000056e-05, 4.6944999999999626e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.969" endtime="20201115 22:02:16.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.965" endtime="20201115 22:02:16.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.974" endtime="20201115 22:02:16.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.977" endtime="20201115 22:02:16.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.976" endtime="20201115 22:02:16.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.972" endtime="20201115 22:02:16.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.582" endtime="20201115 22:02:16.998"></status>
</kw>
<msg timestamp="20201115 22:02:16.998" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.007" endtime="20201115 22:02:17.049"></status>
</kw>
<msg timestamp="20201115 22:02:17.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.005" endtime="20201115 22:02:17.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.051" endtime="20201115 22:02:17.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.053" endtime="20201115 22:02:17.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.003" endtime="20201115 22:02:17.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.001" endtime="20201115 22:02:17.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.064" endtime="20201115 22:02:17.364"></status>
</kw>
<msg timestamp="20201115 22:02:17.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.062" endtime="20201115 22:02:17.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.373" endtime="20201115 22:02:17.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.390" endtime="20201115 22:02:17.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.060" endtime="20201115 22:02:17.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.058" endtime="20201115 22:02:17.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.397" level="INFO">${RESULT} = [{'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.706899999999681e-05, 'source_diff': 4.706899999999681e-05}, {'time': 0.023262153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.393" endtime="20201115 22:02:17.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.410" level="INFO">${OVERHEAD} = {'time': [0.022598194, 0.023262153, 0.023929222, 0.024611264, 0.025275569, 0.025948083, 0.026623597, 0.027301028, 0.027970972, 0.028647722, 0.029324208, 0.030005931, 0.030673347, 0.031337069, 0.032015...</msg>
<status status="PASS" starttime="20201115 22:02:17.398" endtime="20201115 22:02:17.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.414" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:17.413" endtime="20201115 22:02:17.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.417" level="INFO">VALUE: [4.706899999999681e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.70000000000019e-05, 4.691599999999754e-05, 4.6959000000002665e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.698600000000233e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6875000000001776e-05, 4.6903000000000916e-05, 4.6889000000001346e-05, 4.6944999999999626e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.699999999999843e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.6944999999999626e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.6931000000000056e-05, 4.6958999999999196e-05, 4.6931000000000056e-05, 4.7013999999998e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6889000000001346e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.6944999999999626e-05, 4.693000000000058e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.6917000000000486e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.415" endtime="20201115 22:02:17.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.411" endtime="20201115 22:02:17.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.420" endtime="20201115 22:02:17.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.423" endtime="20201115 22:02:17.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.422" endtime="20201115 22:02:17.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.418" endtime="20201115 22:02:17.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.999" endtime="20201115 22:02:17.444"></status>
</kw>
<msg timestamp="20201115 22:02:17.444" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.453" endtime="20201115 22:02:17.495"></status>
</kw>
<msg timestamp="20201115 22:02:17.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.452" endtime="20201115 22:02:17.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.498" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.496" endtime="20201115 22:02:17.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.499" endtime="20201115 22:02:17.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.449" endtime="20201115 22:02:17.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.447" endtime="20201115 22:02:17.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.509" endtime="20201115 22:02:17.795"></status>
</kw>
<msg timestamp="20201115 22:02:17.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.507" endtime="20201115 22:02:17.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.799" endtime="20201115 22:02:17.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.807" endtime="20201115 22:02:17.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.505" endtime="20201115 22:02:17.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.503" endtime="20201115 22:02:17.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.814" level="INFO">${RESULT} = [{'time': 0.022415778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7111000000002456e-05, 'source_diff': 4.7111000000002456e-05}, {'time': 0.023082111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.810" endtime="20201115 22:02:17.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.827" level="INFO">${OVERHEAD} = {'time': [0.022415778, 0.023082111, 0.023758361, 0.024437736, 0.025109306, 0.025776486, 0.026440222, 0.027107417, 0.027782722, 0.028455514, 0.029122083, 0.029804264, 0.030473903, 0.031153264, 0.031822...</msg>
<status status="PASS" starttime="20201115 22:02:17.815" endtime="20201115 22:02:17.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.831" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:17.830" endtime="20201115 22:02:17.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.834" level="INFO">VALUE: [4.7111000000002456e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6973000000002235e-05, 4.697200000000276e-05, 4.6903000000000916e-05, 4.6945000000003095e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.6889000000001346e-05, 4.6929999999993643e-05, 4.691600000000101e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.6945000000006565e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.6929999999993643e-05, 4.6931000000000056e-05, 4.691699999999355e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.6917000000000486e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6944999999999626e-05, 4.6973000000005705e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.6917000000000486e-05, 4.6944999999999626e-05, 4.693000000000058e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.699999999999843e-05, 4.6917000000000486e-05, 4.695799999999972e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.832" endtime="20201115 22:02:17.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.828" endtime="20201115 22:02:17.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.837" endtime="20201115 22:02:17.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.841" endtime="20201115 22:02:17.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.839" endtime="20201115 22:02:17.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.835" endtime="20201115 22:02:17.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.445" endtime="20201115 22:02:17.861"></status>
</kw>
<msg timestamp="20201115 22:02:17.862" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.870" endtime="20201115 22:02:17.912"></status>
</kw>
<msg timestamp="20201115 22:02:17.913" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.869" endtime="20201115 22:02:17.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.914" endtime="20201115 22:02:17.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.916" endtime="20201115 22:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.866" endtime="20201115 22:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.864" endtime="20201115 22:02:17.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.926" endtime="20201115 22:02:18.211"></status>
</kw>
<msg timestamp="20201115 22:02:18.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.924" endtime="20201115 22:02:18.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.215" endtime="20201115 22:02:18.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.224" endtime="20201115 22:02:18.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.922" endtime="20201115 22:02:18.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.920" endtime="20201115 22:02:18.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.231" level="INFO">${RESULT} = [{'time': 0.021904528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709699999999942e-05, 'source_diff': 4.709699999999942e-05}, {'time': 0.022577833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.227" endtime="20201115 22:02:18.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.244" level="INFO">${OVERHEAD} = {'time': [0.021904528, 0.022577833, 0.023242583, 0.023913097, 0.024590208, 0.025259208, 0.025933486, 0.026614319, 0.027283014, 0.027947944, 0.028615389, 0.029281389, 0.029950431, 0.030620681, 0.031293...</msg>
<status status="PASS" starttime="20201115 22:02:18.232" endtime="20201115 22:02:18.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.248" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:18.247" endtime="20201115 22:02:18.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.251" level="INFO">VALUE: [4.709699999999942e-05, 4.695799999999972e-05, 4.701400000000147e-05, 4.695799999999972e-05, 4.692999999999711e-05, 4.694399999999668e-05, 4.692999999999711e-05, 4.688800000000187e-05, 4.6931000000000056e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.698600000000233e-05, 4.6972999999998766e-05, 4.6944999999999626e-05, 4.691699999999702e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.691600000000101e-05, 4.6917000000000486e-05, 4.693000000000058e-05, 4.6944999999999626e-05, 4.6931000000000056e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.698599999999886e-05, 4.694400000000015e-05, 4.6903000000000916e-05, 4.688800000000187e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6958999999999196e-05, 4.688899999999441e-05, 4.6903000000000916e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.6903000000000916e-05, 4.694400000000015e-05, 4.697199999999929e-05, 4.6958999999999196e-05, 4.6915999999994074e-05, 4.694400000000015e-05, 4.695799999999972e-05, 4.694400000000015e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.250" endtime="20201115 22:02:18.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.245" endtime="20201115 22:02:18.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.254" endtime="20201115 22:02:18.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.258" endtime="20201115 22:02:18.277"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.256" endtime="20201115 22:02:18.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.253" endtime="20201115 22:02:18.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.862" endtime="20201115 22:02:18.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.165" endtime="20201115 22:02:18.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.164" endtime="20201115 22:02:18.279"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.281" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.290" endtime="20201115 22:02:18.334"></status>
</kw>
<msg timestamp="20201115 22:02:18.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.288" endtime="20201115 22:02:18.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.336" endtime="20201115 22:02:18.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.339" endtime="20201115 22:02:18.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.286" endtime="20201115 22:02:18.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.284" endtime="20201115 22:02:18.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.347" endtime="20201115 22:02:18.633"></status>
</kw>
<msg timestamp="20201115 22:02:18.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024695736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024745222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.346" endtime="20201115 22:02:18.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024695736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024745222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.636" endtime="20201115 22:02:18.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.644" endtime="20201115 22:02:18.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.343" endtime="20201115 22:02:18.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.342" endtime="20201115 22:02:18.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.651" level="INFO">${RESULT} = [{'time': 0.024745222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.948600000000136e-05, 'source_diff': 4.948600000000136e-05}, {'time': 0.025460958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:18.648" endtime="20201115 22:02:18.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.664" level="INFO">${OVERHEAD} = {'time': [0.024745222, 0.025460958, 0.026191597, 0.026911028, 0.027627028, 0.028352389, 0.029083625, 0.029802125, 0.030522111, 0.031241806, 0.031963319, 0.032679597, 0.033403653, 0.034125875, 0.034845...</msg>
<status status="PASS" starttime="20201115 22:02:18.652" endtime="20201115 22:02:18.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.669" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:18.668" endtime="20201115 22:02:18.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.672" level="INFO">VALUE: [4.948600000000136e-05, 4.937499999999734e-05, 4.938900000000038e-05, 4.937500000000081e-05, 4.934700000000167e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.936100000000124e-05, 4.937500000000081e-05, 4.9387999999997434e-05, 4.936099999999777e-05, 4.93469999999982e-05, 4.936099999999777e-05, 4.933299999999863e-05, 4.936099999999777e-05, 4.9389000000003846e-05, 4.936099999999777e-05, 4.940299999999648e-05, 4.93469999999982e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.938899999999691e-05, 4.934799999999767e-05, 4.9389000000003846e-05, 4.927799999999982e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.944499999999519e-05, 4.9375000000004277e-05, 4.9319000000006e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.933300000000557e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.936100000000471e-05, 4.930599999999896e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.936099999999777e-05, 4.945800000000222e-05, 4.937499999999734e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.670" endtime="20201115 22:02:18.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.665" endtime="20201115 22:02:18.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.675" endtime="20201115 22:02:18.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.678" endtime="20201115 22:02:18.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.677" endtime="20201115 22:02:18.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.673" endtime="20201115 22:02:18.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.282" endtime="20201115 22:02:18.699"></status>
</kw>
<msg timestamp="20201115 22:02:18.699" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.708" endtime="20201115 22:02:18.752"></status>
</kw>
<msg timestamp="20201115 22:02:18.753" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.706" endtime="20201115 22:02:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.754" endtime="20201115 22:02:18.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.756" endtime="20201115 22:02:18.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.704" endtime="20201115 22:02:18.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.702" endtime="20201115 22:02:18.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.767" endtime="20201115 22:02:19.053"></status>
</kw>
<msg timestamp="20201115 22:02:19.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.765" endtime="20201115 22:02:19.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.057" endtime="20201115 22:02:19.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.065" endtime="20201115 22:02:19.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.763" endtime="20201115 22:02:19.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.761" endtime="20201115 22:02:19.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.072" level="INFO">${RESULT} = [{'time': 0.022019931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.950000000000093e-05, 'source_diff': 4.950000000000093e-05}, {'time': 0.022750264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:19.068" endtime="20201115 22:02:19.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.085" level="INFO">${OVERHEAD} = {'time': [0.022019931, 0.022750264, 0.023471292, 0.02419575, 0.024922028, 0.025645847, 0.026373458, 0.027088833, 0.027813028, 0.028539931, 0.029252236, 0.029969208, 0.030686486, 0.031409681, 0.0321381...</msg>
<status status="PASS" starttime="20201115 22:02:19.073" endtime="20201115 22:02:19.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.090" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:19.089" endtime="20201115 22:02:19.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.092" level="INFO">VALUE: [4.950000000000093e-05, 4.937500000000081e-05, 4.936100000000124e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.938900000000038e-05, 4.941600000000004e-05, 4.93469999999982e-05, 4.941699999999952e-05, 4.936200000000071e-05, 4.93330000000021e-05, 4.938900000000038e-05, 4.937499999999734e-05, 4.930599999999896e-05, 4.9389000000003846e-05, 4.941699999999605e-05, 4.936099999999777e-05, 4.938899999999691e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.936100000000471e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.933299999999863e-05, 4.9389000000003846e-05, 4.9375000000004277e-05, 4.9389000000003846e-05, 4.941699999999605e-05, 4.9417000000002986e-05, 4.933299999999863e-05, 4.938899999999691e-05, 4.936100000000471e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.9401999999997004e-05, 4.936100000000471e-05, 4.936099999999777e-05, 4.937499999999734e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.091" endtime="20201115 22:02:19.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.086" endtime="20201115 22:02:19.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.095" endtime="20201115 22:02:19.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.098" endtime="20201115 22:02:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.097" endtime="20201115 22:02:19.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.093" endtime="20201115 22:02:19.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.700" endtime="20201115 22:02:19.119"></status>
</kw>
<msg timestamp="20201115 22:02:19.119" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.128" endtime="20201115 22:02:19.172"></status>
</kw>
<msg timestamp="20201115 22:02:19.173" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.127" endtime="20201115 22:02:19.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.174" endtime="20201115 22:02:19.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.176" endtime="20201115 22:02:19.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.124" endtime="20201115 22:02:19.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.122" endtime="20201115 22:02:19.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.186" endtime="20201115 22:02:19.472"></status>
</kw>
<msg timestamp="20201115 22:02:19.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.185" endtime="20201115 22:02:19.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.476" endtime="20201115 22:02:19.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.484" endtime="20201115 22:02:19.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.182" endtime="20201115 22:02:19.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.181" endtime="20201115 22:02:19.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.490" level="INFO">${RESULT} = [{'time': 0.022099444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.950000000000093e-05, 'source_diff': 4.950000000000093e-05}, {'time': 0.022828597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:19.487" endtime="20201115 22:02:19.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.504" level="INFO">${OVERHEAD} = {'time': [0.022099444, 0.022828597, 0.023541819, 0.024258139, 0.024973264, 0.025696167, 0.026416889, 0.027134528, 0.027846778, 0.028566847, 0.029281014, 0.029996083, 0.030716236, 0.031443486, 0.032171...</msg>
<status status="PASS" starttime="20201115 22:02:19.492" endtime="20201115 22:02:19.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.508" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:19.507" endtime="20201115 22:02:19.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.511" level="INFO">VALUE: [4.950000000000093e-05, 4.938900000000038e-05, 4.9387999999997434e-05, 4.936100000000124e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.9417000000002986e-05, 4.936099999999777e-05, 4.938900000000038e-05, 4.938900000000038e-05, 4.93469999999982e-05, 4.938900000000038e-05, 4.936099999999777e-05, 4.938899999999691e-05, 4.9445000000002126e-05, 4.937499999999734e-05, 4.933300000000557e-05, 4.9375000000004277e-05, 4.9387999999997434e-05, 4.938899999999691e-05, 4.944400000000265e-05, 4.938899999999691e-05, 4.93060000000059e-05, 4.937499999999734e-05, 4.930499999999949e-05, 4.9375000000004277e-05, 4.9403000000003416e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.938899999999691e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.93469999999982e-05, 4.938800000000437e-05, 4.937499999999734e-05, 4.93469999999982e-05, 4.937499999999734e-05, 4.934799999999767e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.938899999999691e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.9457999999995284e-05, 4.938899999999691e-05, 4.931899999999906e-05, 4.938899999999691e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.509" endtime="20201115 22:02:19.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.505" endtime="20201115 22:02:19.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.514" endtime="20201115 22:02:19.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.517" endtime="20201115 22:02:19.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.516" endtime="20201115 22:02:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.512" endtime="20201115 22:02:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.120" endtime="20201115 22:02:19.538"></status>
</kw>
<msg timestamp="20201115 22:02:19.539" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.548" endtime="20201115 22:02:19.592"></status>
</kw>
<msg timestamp="20201115 22:02:19.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.546" endtime="20201115 22:02:19.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.593" endtime="20201115 22:02:19.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.596" endtime="20201115 22:02:19.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.544" endtime="20201115 22:02:19.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.542" endtime="20201115 22:02:19.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.606" endtime="20201115 22:02:19.891"></status>
</kw>
<msg timestamp="20201115 22:02:19.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.604" endtime="20201115 22:02:19.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.895" endtime="20201115 22:02:19.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.903" endtime="20201115 22:02:19.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.602" endtime="20201115 22:02:19.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.600" endtime="20201115 22:02:19.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.910" level="INFO">${RESULT} = [{'time': 0.022871903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.023597333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:19.907" endtime="20201115 22:02:19.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.923" level="INFO">${OVERHEAD} = {'time': [0.022871903, 0.023597333, 0.024318972, 0.02503725, 0.025760833, 0.026491264, 0.027210528, 0.027929778, 0.028660819, 0.029377931, 0.030094556, 0.030824667, 0.031553819, 0.032274583, 0.0329888...</msg>
<status status="PASS" starttime="20201115 22:02:19.911" endtime="20201115 22:02:19.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.928" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:19.927" endtime="20201115 22:02:19.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.930" level="INFO">VALUE: [4.95140000000005e-05, 4.934700000000167e-05, 4.937500000000081e-05, 4.937500000000081e-05, 4.930499999999949e-05, 4.937500000000081e-05, 4.938900000000038e-05, 4.937499999999734e-05, 4.9388000000000903e-05, 4.9458999999998227e-05, 4.938900000000038e-05, 4.938900000000038e-05, 4.937499999999734e-05, 4.936100000000471e-05, 4.9389000000003846e-05, 4.931999999999853e-05, 4.929199999999939e-05, 4.937499999999734e-05, 4.930499999999949e-05, 4.9389000000003846e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.9375000000004277e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.933299999999863e-05, 4.936099999999777e-05, 4.943000000000308e-05, 4.9415999999996574e-05, 4.936200000000418e-05, 4.938899999999691e-05, 4.938899999999691e-05, 4.936099999999777e-05, 4.937499999999734e-05, 4.938899999999691e-05, 4.937499999999734e-05, 4.936100000000471e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.9389000000003846e-05, 4.9389000000003846e-05, 4.9319000000006e-05, 4.929099999999992e-05, 4.937499999999734e-05, 4.9417000000002986e-05, 4.936100000000471e-05, 4.937499999999734e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.929" endtime="20201115 22:02:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.924" endtime="20201115 22:02:19.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.933" endtime="20201115 22:02:19.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.937" endtime="20201115 22:02:19.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.935" endtime="20201115 22:02:19.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.932" endtime="20201115 22:02:19.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.539" endtime="20201115 22:02:19.957"></status>
</kw>
<msg timestamp="20201115 22:02:19.958" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.966" endtime="20201115 22:02:20.010"></status>
</kw>
<msg timestamp="20201115 22:02:20.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.965" endtime="20201115 22:02:20.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.013" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.012" endtime="20201115 22:02:20.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.014" endtime="20201115 22:02:20.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.962" endtime="20201115 22:02:20.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.960" endtime="20201115 22:02:20.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.024" endtime="20201115 22:02:20.330"></status>
</kw>
<msg timestamp="20201115 22:02:20.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.023" endtime="20201115 22:02:20.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.334" endtime="20201115 22:02:20.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.342" endtime="20201115 22:02:20.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.020" endtime="20201115 22:02:20.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.019" endtime="20201115 22:02:20.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.349" level="INFO">${RESULT} = [{'time': 0.021978806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.0227005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:02:20.345" endtime="20201115 22:02:20.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.362" level="INFO">${OVERHEAD} = {'time': [0.021978806, 0.0227005, 0.023426194, 0.024142542, 0.024864861, 0.025577569, 0.026294875, 0.027016611, 0.027732639, 0.02845875, 0.029172597, 0.029888333, 0.030603194, 0.031334556, 0.032057486...</msg>
<status status="PASS" starttime="20201115 22:02:20.350" endtime="20201115 22:02:20.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.366" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:20.365" endtime="20201115 22:02:20.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.369" level="INFO">VALUE: [4.95140000000005e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.937500000000081e-05, 4.937499999999734e-05, 4.937500000000081e-05, 4.937499999999734e-05, 4.942999999999961e-05, 4.937500000000081e-05, 4.9417000000002986e-05, 4.936100000000124e-05, 4.936100000000124e-05, 4.9388000000000903e-05, 4.937499999999734e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.936099999999777e-05, 4.940299999999648e-05, 4.938899999999691e-05, 4.936099999999777e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.937499999999734e-05, 4.943000000000308e-05, 4.936099999999777e-05, 4.9375000000004277e-05, 4.9389000000003846e-05, 4.936099999999777e-05, 4.938899999999691e-05, 4.940200000000394e-05, 4.930499999999949e-05, 4.936099999999777e-05, 4.9389000000003846e-05, 4.938899999999691e-05, 4.936099999999777e-05, 4.9417000000002986e-05, 4.937499999999734e-05, 4.9387999999997434e-05, 4.937499999999734e-05, 4.9375000000004277e-05, 4.938899999999691e-05, 4.9375000000004277e-05, 4.936099999999777e-05, 4.938899999999691e-05, 4.9389000000003846e-05, 4.937499999999734e-05, 4.9375000000004277e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.368" endtime="20201115 22:02:20.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.363" endtime="20201115 22:02:20.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.372" endtime="20201115 22:02:20.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.375" endtime="20201115 22:02:20.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.374" endtime="20201115 22:02:20.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.370" endtime="20201115 22:02:20.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.958" endtime="20201115 22:02:20.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.280" endtime="20201115 22:02:20.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.279" endtime="20201115 22:02:20.396"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.399" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.407" endtime="20201115 22:02:20.456"></status>
</kw>
<msg timestamp="20201115 22:02:20.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.406" endtime="20201115 22:02:20.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.459" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.457" endtime="20201115 22:02:20.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.460" endtime="20201115 22:02:20.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.403" endtime="20201115 22:02:20.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.401" endtime="20201115 22:02:20.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.469" endtime="20201115 22:02:20.755"></status>
</kw>
<msg timestamp="20201115 22:02:20.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026062847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.468" endtime="20201115 22:02:20.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026062847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.759" endtime="20201115 22:02:20.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.766" endtime="20201115 22:02:20.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.465" endtime="20201115 22:02:20.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.463" endtime="20201115 22:02:20.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.773" level="INFO">${RESULT} = [{'time': 0.026114792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194500000000116e-05, 'source_diff': 5.194500000000116e-05}, {'time': 0.026884931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:20.770" endtime="20201115 22:02:20.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.786" level="INFO">${OVERHEAD} = {'time': [0.026114792, 0.026884931, 0.027665389, 0.028444014, 0.029209264, 0.029973542, 0.030739708, 0.031518917, 0.032286556, 0.033065444, 0.033830944, 0.034608514, 0.035386153, 0.036166319, 0.036944...</msg>
<status status="PASS" starttime="20201115 22:02:20.774" endtime="20201115 22:02:20.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.791" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:20.790" endtime="20201115 22:02:20.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.793" level="INFO">VALUE: [5.194500000000116e-05, 5.180600000000146e-05, 5.181999999999756e-05, 5.176399999999928e-05, 5.181999999999756e-05, 5.180599999999799e-05, 5.180500000000199e-05, 5.182000000000103e-05, 5.179200000000189e-05, 5.180500000000199e-05, 5.181900000000156e-05, 5.180600000000146e-05, 5.183399999999366e-05, 5.181900000000156e-05, 5.180500000000199e-05, 5.179200000000189e-05, 5.181900000000156e-05, 5.18340000000006e-05, 5.180500000000199e-05, 5.176300000000328e-05, 5.179200000000189e-05, 5.177800000000232e-05, 5.177800000000232e-05, 5.180600000000146e-05, 5.180600000000146e-05, 5.183300000000113e-05, 5.176400000000275e-05, 5.180499999999505e-05, 5.180600000000146e-05, 5.179200000000189e-05, 5.179099999999548e-05, 5.173600000000361e-05, 5.181999999999409e-05, 5.180600000000146e-05, 5.180600000000146e-05, 5.179100000000242e-05, 5.183300000000113e-05, 5.180500000000199e-05, 5.179100000000242e-05, 5.182000000000103e-05, 5.179100000000242e-05, 5.184800000000017e-05, 5.181900000000156e-05, 5.177699999999591e-05, 5.179100000000242e-05, 5.172200000000404e-05, 5.183399999999366e-05, 5.186100000000027e-05, 5.18749999999929e-05, 5.175000000000318e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.792" endtime="20201115 22:02:20.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.787" endtime="20201115 22:02:20.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.796" endtime="20201115 22:02:20.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.799" endtime="20201115 22:02:20.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.798" endtime="20201115 22:02:20.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.794" endtime="20201115 22:02:20.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.399" endtime="20201115 22:02:20.820"></status>
</kw>
<msg timestamp="20201115 22:02:20.820" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.829" endtime="20201115 22:02:20.876"></status>
</kw>
<msg timestamp="20201115 22:02:20.876" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.828" endtime="20201115 22:02:20.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.877" endtime="20201115 22:02:20.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.880" endtime="20201115 22:02:20.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.825" endtime="20201115 22:02:20.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.823" endtime="20201115 22:02:20.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.890" endtime="20201115 22:02:21.176"></status>
</kw>
<msg timestamp="20201115 22:02:21.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.889" endtime="20201115 22:02:21.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.180" endtime="20201115 22:02:21.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.187" endtime="20201115 22:02:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.886" endtime="20201115 22:02:21.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.884" endtime="20201115 22:02:21.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.194" level="INFO">${RESULT} = [{'time': 0.022025778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.193099999999812e-05, 'source_diff': 5.193099999999812e-05}, {'time': 0.022805347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.191" endtime="20201115 22:02:21.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.207" level="INFO">${OVERHEAD} = {'time': [0.022025778, 0.022805347, 0.02358025, 0.024358944, 0.025133597, 0.025909111, 0.026684625, 0.027462625, 0.02823125, 0.028997097, 0.029767042, 0.030534792, 0.031309722, 0.032086986, 0.03285526...</msg>
<status status="PASS" starttime="20201115 22:02:21.195" endtime="20201115 22:02:21.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.213" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:21.211" endtime="20201115 22:02:21.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.216" level="INFO">VALUE: [5.193099999999812e-05, 5.183300000000113e-05, 5.180600000000146e-05, 5.174999999999971e-05, 5.176399999999928e-05, 5.180499999999852e-05, 5.181900000000156e-05, 5.180600000000146e-05, 5.179199999999842e-05, 5.180499999999852e-05, 5.179200000000189e-05, 5.18340000000006e-05, 5.18470000000007e-05, 5.1749999999996243e-05, 5.180600000000146e-05, 5.182000000000103e-05, 5.179200000000189e-05, 5.180500000000199e-05, 5.180499999999505e-05, 5.18340000000006e-05, 5.179099999999548e-05, 5.181900000000156e-05, 5.183300000000113e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.179100000000242e-05, 5.181899999999462e-05, 5.180499999999505e-05, 5.177800000000232e-05, 5.180500000000199e-05, 5.182000000000103e-05, 5.181900000000156e-05, 5.186100000000027e-05, 5.180600000000146e-05, 5.179100000000242e-05, 5.180500000000199e-05, 5.180600000000146e-05, 5.180500000000199e-05, 5.180499999999505e-05, 5.173600000000361e-05, 5.181899999999462e-05, 5.18470000000007e-05, 5.180500000000199e-05, 5.177800000000232e-05, 5.181900000000156e-05, 5.183300000000113e-05, 5.182000000000103e-05, 5.186100000000027e-05, 5.181900000000156e-05, 5.181900000000156e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.214" endtime="20201115 22:02:21.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.208" endtime="20201115 22:02:21.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.219" endtime="20201115 22:02:21.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.224" endtime="20201115 22:02:21.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.222" endtime="20201115 22:02:21.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.218" endtime="20201115 22:02:21.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.821" endtime="20201115 22:02:21.245"></status>
</kw>
<msg timestamp="20201115 22:02:21.245" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.257" endtime="20201115 22:02:21.303"></status>
</kw>
<msg timestamp="20201115 22:02:21.304" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.254" endtime="20201115 22:02:21.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.305" endtime="20201115 22:02:21.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.308" endtime="20201115 22:02:21.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.251" endtime="20201115 22:02:21.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.248" endtime="20201115 22:02:21.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.318" endtime="20201115 22:02:21.604"></status>
</kw>
<msg timestamp="20201115 22:02:21.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.317" endtime="20201115 22:02:21.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025214986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.608" endtime="20201115 22:02:21.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.616" endtime="20201115 22:02:21.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.314" endtime="20201115 22:02:21.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.312" endtime="20201115 22:02:21.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.623" level="INFO">${RESULT} = [{'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.191699999999855e-05, 'source_diff': 5.191699999999855e-05}, {'time': 0.026036764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.619" endtime="20201115 22:02:21.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.635" level="INFO">${OVERHEAD} = {'time': [0.025266903, 0.026036764, 0.026806222, 0.027573528, 0.028349486, 0.029131042, 0.029902681, 0.030676486, 0.031457153, 0.032230042, 0.032997278, 0.033774542, 0.03454925, 0.035322083, 0.0360995...</msg>
<status status="PASS" starttime="20201115 22:02:21.623" endtime="20201115 22:02:21.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.640" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:21.639" endtime="20201115 22:02:21.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.642" level="INFO">VALUE: [5.191699999999855e-05, 5.18470000000007e-05, 5.18470000000007e-05, 5.182000000000103e-05, 5.177799999999885e-05, 5.176399999999928e-05, 5.182000000000103e-05, 5.179199999999842e-05, 5.182000000000103e-05, 5.179200000000189e-05, 5.179199999999495e-05, 5.179199999999495e-05, 5.180599999999452e-05, 5.179099999999548e-05, 5.180499999999505e-05, 5.180500000000199e-05, 5.180600000000146e-05, 5.1707999999997534e-05, 5.180500000000199e-05, 5.180499999999505e-05, 5.177800000000232e-05, 5.181900000000156e-05, 5.179199999999495e-05, 5.177699999999591e-05, 5.179199999999495e-05, 5.182000000000103e-05, 5.179200000000189e-05, 5.1749999999996243e-05, 5.179099999999548e-05, 5.179200000000189e-05, 5.170800000000447e-05, 5.180599999999452e-05, 5.177800000000232e-05, 5.186100000000027e-05, 5.179100000000242e-05, 5.181900000000156e-05, 5.180499999999505e-05, 5.180600000000146e-05, 5.180499999999505e-05, 5.180500000000199e-05, 5.177799999999538e-05, 5.177799999999538e-05, 5.181900000000156e-05, 5.180500000000199e-05, 5.179099999999548e-05, 5.183300000000113e-05, 5.180600000000146e-05, 5.180599999999452e-05, 5.179200000000189e-05, 5.180600000000146e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.641" endtime="20201115 22:02:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.636" endtime="20201115 22:02:21.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.645" endtime="20201115 22:02:21.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.649" endtime="20201115 22:02:21.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.647" endtime="20201115 22:02:21.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.644" endtime="20201115 22:02:21.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.246" endtime="20201115 22:02:21.670"></status>
</kw>
<msg timestamp="20201115 22:02:21.670" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.679" endtime="20201115 22:02:21.726"></status>
</kw>
<msg timestamp="20201115 22:02:21.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.678" endtime="20201115 22:02:21.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.728" endtime="20201115 22:02:21.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.730" endtime="20201115 22:02:21.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.675" endtime="20201115 22:02:21.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.673" endtime="20201115 22:02:21.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.740" endtime="20201115 22:02:22.026"></status>
</kw>
<msg timestamp="20201115 22:02:22.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022450278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.739" endtime="20201115 22:02:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022450278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.030" endtime="20201115 22:02:22.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.038" endtime="20201115 22:02:22.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.736" endtime="20201115 22:02:22.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.735" endtime="20201115 22:02:22.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.044" level="INFO">${RESULT} = [{'time': 0.022502194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1915999999999074e-05, 'source_diff': 5.1915999999999074e-05}, {'time': 0.023284931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.041" endtime="20201115 22:02:22.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.057" level="INFO">${OVERHEAD} = {'time': [0.022502194, 0.023284931, 0.024051458, 0.024829278, 0.025597125, 0.026361208, 0.027143694, 0.027919014, 0.028699931, 0.029463319, 0.030243944, 0.031019903, 0.03179175, 0.032557361, 0.0333223...</msg>
<status status="PASS" starttime="20201115 22:02:22.045" endtime="20201115 22:02:22.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.062" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:22.061" endtime="20201115 22:02:22.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.064" level="INFO">VALUE: [5.1915999999999074e-05, 5.179199999999842e-05, 5.177700000000285e-05, 5.179199999999842e-05, 5.180599999999799e-05, 5.180500000000199e-05, 5.177699999999938e-05, 5.180599999999799e-05, 5.177800000000232e-05, 5.179100000000242e-05, 5.180499999999852e-05, 5.182000000000103e-05, 5.179200000000189e-05, 5.181900000000156e-05, 5.179200000000189e-05, 5.179199999999495e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.186100000000027e-05, 5.177699999999591e-05, 5.179100000000242e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.180600000000146e-05, 5.179099999999548e-05, 5.179200000000189e-05, 5.179099999999548e-05, 5.181900000000156e-05, 5.177800000000232e-05, 5.180599999999452e-05, 5.176400000000275e-05, 5.179200000000189e-05, 5.180500000000199e-05, 5.181900000000156e-05, 5.179200000000189e-05, 5.180600000000146e-05, 5.175000000000318e-05, 5.180600000000146e-05, 5.177800000000232e-05, 5.179200000000189e-05, 5.176400000000275e-05, 5.172200000000404e-05, 5.179200000000189e-05, 5.179199999999495e-05, 5.179200000000189e-05, 5.179099999999548e-05, 5.179200000000189e-05, 5.177799999999538e-05, 5.180500000000199e-05, 5.177800000000232e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.063" endtime="20201115 22:02:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.058" endtime="20201115 22:02:22.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.067" endtime="20201115 22:02:22.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.071" endtime="20201115 22:02:22.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.070" endtime="20201115 22:02:22.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.066" endtime="20201115 22:02:22.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.671" endtime="20201115 22:02:22.092"></status>
</kw>
<msg timestamp="20201115 22:02:22.092" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.101" endtime="20201115 22:02:22.147"></status>
</kw>
<msg timestamp="20201115 22:02:22.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.099" endtime="20201115 22:02:22.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.149" endtime="20201115 22:02:22.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.151" endtime="20201115 22:02:22.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.097" endtime="20201115 22:02:22.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.095" endtime="20201115 22:02:22.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.162" endtime="20201115 22:02:22.447"></status>
</kw>
<msg timestamp="20201115 22:02:22.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.161" endtime="20201115 22:02:22.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.451" endtime="20201115 22:02:22.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.459" endtime="20201115 22:02:22.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.158" endtime="20201115 22:02:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.156" endtime="20201115 22:02:22.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.465" level="INFO">${RESULT} = [{'time': 0.022020319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1929999999998644e-05, 'source_diff': 5.1929999999998644e-05}, {'time': 0.022789056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.462" endtime="20201115 22:02:22.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.478" level="INFO">${OVERHEAD} = {'time': [0.022020319, 0.022789056, 0.023562375, 0.024330778, 0.025102236, 0.025867208, 0.026647361, 0.027411681, 0.028190625, 0.028965597, 0.029738014, 0.030513889, 0.031280417, 0.032050347, 0.032826...</msg>
<status status="PASS" starttime="20201115 22:02:22.466" endtime="20201115 22:02:22.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.483" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:22.482" endtime="20201115 22:02:22.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.485" level="INFO">VALUE: [5.1929999999998644e-05, 5.183399999999713e-05, 5.180600000000146e-05, 5.179200000000189e-05, 5.179199999999842e-05, 5.176399999999928e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.181899999999809e-05, 5.179199999999842e-05, 5.179199999999842e-05, 5.179199999999842e-05, 5.180500000000199e-05, 5.179200000000189e-05, 5.177799999999538e-05, 5.180500000000199e-05, 5.180600000000146e-05, 5.179099999999548e-05, 5.177800000000232e-05, 5.179200000000189e-05, 5.179199999999495e-05, 5.172200000000404e-05, 5.179100000000242e-05, 5.180600000000146e-05, 5.173600000000361e-05, 5.179100000000242e-05, 5.179100000000242e-05, 5.177800000000232e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.179099999999548e-05, 5.181900000000156e-05, 5.179199999999495e-05, 5.179200000000189e-05, 5.179200000000189e-05, 5.18470000000007e-05, 5.175000000000318e-05, 5.177800000000232e-05, 5.179199999999495e-05, 5.180499999999505e-05, 5.179199999999495e-05, 5.18340000000006e-05, 5.180599999999452e-05, 5.179200000000189e-05, 5.179199999999495e-05, 5.1721999999997104e-05, 5.179200000000189e-05, 5.177800000000232e-05, 5.177800000000232e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.484" endtime="20201115 22:02:22.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.479" endtime="20201115 22:02:22.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.489" endtime="20201115 22:02:22.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.492" endtime="20201115 22:02:22.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.491" endtime="20201115 22:02:22.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.487" endtime="20201115 22:02:22.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.093" endtime="20201115 22:02:22.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.398" endtime="20201115 22:02:22.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.397" endtime="20201115 22:02:22.513"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.515" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.524" endtime="20201115 22:02:22.574"></status>
</kw>
<msg timestamp="20201115 22:02:22.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.523" endtime="20201115 22:02:22.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.575" endtime="20201115 22:02:22.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.578" endtime="20201115 22:02:22.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.520" endtime="20201115 22:02:22.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.518" endtime="20201115 22:02:22.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.586" endtime="20201115 22:02:22.872"></status>
</kw>
<msg timestamp="20201115 22:02:22.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.585" endtime="20201115 22:02:22.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.876" endtime="20201115 22:02:22.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.884" endtime="20201115 22:02:22.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.582" endtime="20201115 22:02:22.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.581" endtime="20201115 22:02:22.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.891" level="INFO">${RESULT} = [{'time': 0.024371903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.432000000000006e-05, 'source_diff': 5.432000000000006e-05}, {'time': 0.025194319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:22.887" endtime="20201115 22:02:22.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.904" level="INFO">${OVERHEAD} = {'time': [0.024371903, 0.025194319, 0.026022972, 0.026857514, 0.027691986, 0.028517472, 0.029338569, 0.030163403, 0.030997875, 0.031833569, 0.032655583, 0.033477014, 0.034305569, 0.035130431, 0.035962...</msg>
<status status="PASS" starttime="20201115 22:02:22.892" endtime="20201115 22:02:22.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.908" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:22.907" endtime="20201115 22:02:22.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.911" level="INFO">VALUE: [5.432000000000006e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4179999999997425e-05, 5.4208000000000034e-05, 5.4193999999996995e-05, 5.415299999999776e-05, 5.4221999999999604e-05, 5.4152000000001754e-05, 5.4208000000000034e-05, 5.4249999999998744e-05, 5.4249999999998744e-05, 5.419499999999994e-05, 5.425000000000568e-05, 5.422299999999908e-05, 5.4221999999999604e-05, 5.426400000000525e-05, 5.422200000000654e-05, 5.423699999999865e-05, 5.4235999999999174e-05, 5.420899999999951e-05, 5.413900000000166e-05, 5.4221999999999604e-05, 5.422299999999908e-05, 5.423600000000611e-05, 5.4249999999998744e-05, 5.4249999999998744e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.423699999999865e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.419499999999994e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.422299999999908e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.420899999999951e-05, 5.425000000000568e-05, 5.4221999999992665e-05, 5.4180000000000894e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.909" endtime="20201115 22:02:22.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.905" endtime="20201115 22:02:22.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.914" endtime="20201115 22:02:22.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.918" endtime="20201115 22:02:22.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.916" endtime="20201115 22:02:22.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.913" endtime="20201115 22:02:22.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.516" endtime="20201115 22:02:22.939"></status>
</kw>
<msg timestamp="20201115 22:02:22.939" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.947" endtime="20201115 22:02:22.997"></status>
</kw>
<msg timestamp="20201115 22:02:22.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.946" endtime="20201115 22:02:22.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.000" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.998" endtime="20201115 22:02:23.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.001" endtime="20201115 22:02:23.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.943" endtime="20201115 22:02:23.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.941" endtime="20201115 22:02:23.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.011" endtime="20201115 22:02:23.296"></status>
</kw>
<msg timestamp="20201115 22:02:23.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.009" endtime="20201115 22:02:23.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.300" endtime="20201115 22:02:23.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.308" endtime="20201115 22:02:23.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.007" endtime="20201115 22:02:23.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.005" endtime="20201115 22:02:23.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.315" level="INFO">${RESULT} = [{'time': 0.022091597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.433300000000016e-05, 'source_diff': 5.433300000000016e-05}, {'time': 0.022918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.312" endtime="20201115 22:02:23.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.329" level="INFO">${OVERHEAD} = {'time': [0.022091597, 0.022918264, 0.023740583, 0.024562806, 0.025382528, 0.026213569, 0.027046458, 0.027875611, 0.028710583, 0.029546236, 0.030379389, 0.031208569, 0.032040806, 0.032865333, 0.033701...</msg>
<status status="PASS" starttime="20201115 22:02:23.316" endtime="20201115 22:02:23.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.334" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:23.333" endtime="20201115 22:02:23.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.336" level="INFO">VALUE: [5.433300000000016e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.422299999999908e-05, 5.419499999999994e-05, 5.4221999999999604e-05, 5.4194000000000464e-05, 5.413900000000166e-05, 5.4194000000000464e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.426299999999884e-05, 5.422299999999908e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.422299999999908e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4194000000000464e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.420899999999951e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4166000000001324e-05, 5.4221999999999604e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.41670000000008e-05, 5.422299999999908e-05, 5.426400000000525e-05, 5.427699999999841e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.423699999999865e-05, 5.422299999999908e-05, 5.422299999999908e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.413900000000166e-05, 5.4263999999998314e-05, 5.4235999999999174e-05, 5.418100000000037e-05, 5.4180000000000894e-05, 5.4208000000000034e-05, 5.422299999999214e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.335" endtime="20201115 22:02:23.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.330" endtime="20201115 22:02:23.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.339" endtime="20201115 22:02:23.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.343" endtime="20201115 22:02:23.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.341" endtime="20201115 22:02:23.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.338" endtime="20201115 22:02:23.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.939" endtime="20201115 22:02:23.363"></status>
</kw>
<msg timestamp="20201115 22:02:23.364" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.376" endtime="20201115 22:02:23.426"></status>
</kw>
<msg timestamp="20201115 22:02:23.426" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.375" endtime="20201115 22:02:23.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.428" endtime="20201115 22:02:23.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.430" endtime="20201115 22:02:23.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.372" endtime="20201115 22:02:23.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.366" endtime="20201115 22:02:23.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.440" endtime="20201115 22:02:23.725"></status>
</kw>
<msg timestamp="20201115 22:02:23.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026211431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026265778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.438" endtime="20201115 22:02:23.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026211431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026265778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.729" endtime="20201115 22:02:23.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.737" endtime="20201115 22:02:23.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.436" endtime="20201115 22:02:23.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.434" endtime="20201115 22:02:23.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.743" level="INFO">${RESULT} = [{'time': 0.026265778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.434699999999973e-05, 'source_diff': 5.434699999999973e-05}, {'time': 0.027096333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.740" endtime="20201115 22:02:23.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.763" level="INFO">${OVERHEAD} = {'time': [0.026265778, 0.027096333, 0.0279175, 0.028753014, 0.029581028, 0.030415264, 0.031247569, 0.032084569, 0.032915403, 0.033747903, 0.034576458, 0.035411306, 0.036239625, 0.037067708, 0.03789483...</msg>
<status status="PASS" starttime="20201115 22:02:23.751" endtime="20201115 22:02:23.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.767" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:23.766" endtime="20201115 22:02:23.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.770" level="INFO">VALUE: [5.434699999999973e-05, 5.4221999999999604e-05, 5.422200000000307e-05, 5.4221999999999604e-05, 5.419499999999994e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.426400000000525e-05, 5.4179999999993955e-05, 5.423699999999865e-05, 5.41670000000008e-05, 5.4235999999999174e-05, 5.423600000000611e-05, 5.422200000000654e-05, 5.4209000000006446e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4249999999998744e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4277999999997883e-05, 5.423600000000611e-05, 5.41670000000008e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.422200000000654e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4209000000006446e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.422299999999908e-05, 5.427800000000482e-05, 5.425000000000568e-05, 5.4193999999993525e-05, 5.4235999999999174e-05, 5.4180000000000894e-05, 5.422200000000654e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.769" endtime="20201115 22:02:23.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.764" endtime="20201115 22:02:23.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.773" endtime="20201115 22:02:23.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.776" endtime="20201115 22:02:23.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.775" endtime="20201115 22:02:23.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.771" endtime="20201115 22:02:23.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.364" endtime="20201115 22:02:23.797"></status>
</kw>
<msg timestamp="20201115 22:02:23.797" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.806" endtime="20201115 22:02:23.856"></status>
</kw>
<msg timestamp="20201115 22:02:23.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.804" endtime="20201115 22:02:23.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.859" endtime="20201115 22:02:23.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.865" endtime="20201115 22:02:23.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.802" endtime="20201115 22:02:23.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.800" endtime="20201115 22:02:23.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.887" endtime="20201115 22:02:24.180"></status>
</kw>
<msg timestamp="20201115 22:02:24.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:23.884" endtime="20201115 22:02:24.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:24.184" endtime="20201115 22:02:24.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.192" endtime="20201115 22:02:24.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.878" endtime="20201115 22:02:24.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.875" endtime="20201115 22:02:24.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.199" level="INFO">${RESULT} = [{'time': 0.0221295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.434699999999973e-05, 'source_diff': 5.434699999999973e-05}, {'time': 0.022952556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:24.195" endtime="20201115 22:02:24.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.212" level="INFO">${OVERHEAD} = {'time': [0.0221295, 0.022952556, 0.023776625, 0.024605333, 0.025440847, 0.026260528, 0.027080847, 0.02790675, 0.028737, 0.029558153, 0.030385278, 0.031207389, 0.032030458, 0.032852264, 0.033675875, 0...</msg>
<status status="PASS" starttime="20201115 22:02:24.200" endtime="20201115 22:02:24.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.216" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:24.215" endtime="20201115 22:02:24.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.219" level="INFO">VALUE: [5.434699999999973e-05, 5.422299999999908e-05, 5.4235999999999174e-05, 5.429100000000145e-05, 5.4221999999999604e-05, 5.422200000000307e-05, 5.422200000000307e-05, 5.423600000000264e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.425000000000221e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.413900000000166e-05, 5.430599999999702e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.420899999999951e-05, 5.4263999999998314e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4194000000000464e-05, 5.420899999999951e-05, 5.4235999999999174e-05, 5.4277999999997883e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4223000000006016e-05, 5.4235999999999174e-05, 5.4179999999993955e-05, 5.426400000000525e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.420899999999951e-05, 5.422200000000654e-05, 5.419499999999994e-05, 5.4277999999997883e-05, 5.4208000000000034e-05, 5.422200000000654e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.217" endtime="20201115 22:02:24.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.213" endtime="20201115 22:02:24.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.222" endtime="20201115 22:02:24.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.225" endtime="20201115 22:02:24.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.224" endtime="20201115 22:02:24.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.220" endtime="20201115 22:02:24.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.798" endtime="20201115 22:02:24.246"></status>
</kw>
<msg timestamp="20201115 22:02:24.246" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.255" endtime="20201115 22:02:24.304"></status>
</kw>
<msg timestamp="20201115 22:02:24.305" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.253" endtime="20201115 22:02:24.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.307" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.306" endtime="20201115 22:02:24.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.308" endtime="20201115 22:02:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.251" endtime="20201115 22:02:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.249" endtime="20201115 22:02:24.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.318" endtime="20201115 22:02:24.602"></status>
</kw>
<msg timestamp="20201115 22:02:24.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.316" endtime="20201115 22:02:24.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.607" endtime="20201115 22:02:24.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.615" endtime="20201115 22:02:24.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.314" endtime="20201115 22:02:24.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.312" endtime="20201115 22:02:24.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.622" level="INFO">${RESULT} = [{'time': 0.022026556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.436199999999877e-05, 'source_diff': 5.436199999999877e-05}, {'time': 0.022857681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:24.618" endtime="20201115 22:02:24.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.635" level="INFO">${OVERHEAD} = {'time': [0.022026556, 0.022857681, 0.023678583, 0.024500042, 0.025320042, 0.026153653, 0.026976042, 0.027805292, 0.028623319, 0.029445458, 0.030272208, 0.031093708, 0.031924833, 0.032755986, 0.033587...</msg>
<status status="PASS" starttime="20201115 22:02:24.622" endtime="20201115 22:02:24.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.639" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:24.638" endtime="20201115 22:02:24.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.642" level="INFO">VALUE: [5.436199999999877e-05, 5.422300000000255e-05, 5.4165999999997855e-05, 5.422299999999908e-05, 5.423600000000264e-05, 5.415299999999776e-05, 5.422299999999908e-05, 5.420899999999951e-05, 5.4221999999999604e-05, 5.426400000000178e-05, 5.4221999999999604e-05, 5.423600000000264e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4249999999998744e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.4221999999999604e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.419499999999994e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.422200000000654e-05, 5.4194000000000464e-05, 5.4209000000006446e-05, 5.4208000000000034e-05, 5.4166000000001324e-05, 5.4221999999999604e-05, 5.418100000000037e-05, 5.4235999999999174e-05, 5.4235999999999174e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.4166000000001324e-05, 5.4208000000000034e-05, 5.4235999999999174e-05, 5.422299999999908e-05, 5.422299999999908e-05, 5.4221999999999604e-05, 5.423600000000611e-05, 5.4263999999998314e-05, 5.4235999999999174e-05, 5.422299999999908e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4235999999992235e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.640" endtime="20201115 22:02:24.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.636" endtime="20201115 22:02:24.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.645" endtime="20201115 22:02:24.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.648" endtime="20201115 22:02:24.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.646" endtime="20201115 22:02:24.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.643" endtime="20201115 22:02:24.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.246" endtime="20201115 22:02:24.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.514" endtime="20201115 22:02:24.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.514" endtime="20201115 22:02:24.669"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.671" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.680" endtime="20201115 22:02:24.732"></status>
</kw>
<msg timestamp="20201115 22:02:24.733" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.678" endtime="20201115 22:02:24.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.734" endtime="20201115 22:02:24.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.736" endtime="20201115 22:02:24.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.676" endtime="20201115 22:02:24.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.674" endtime="20201115 22:02:24.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.746" endtime="20201115 22:02:25.031"></status>
</kw>
<msg timestamp="20201115 22:02:25.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024388972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.744" endtime="20201115 22:02:25.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024388972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.035" endtime="20201115 22:02:25.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.043" endtime="20201115 22:02:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.742" endtime="20201115 22:02:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.740" endtime="20201115 22:02:25.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.050" level="INFO">${RESULT} = [{'time': 0.024388972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6763999999997344e-05, 'source_diff': 5.6763999999997344e-05}, {'time': 0.025272153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.046" endtime="20201115 22:02:25.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.063" level="INFO">${OVERHEAD} = {'time': [0.024388972, 0.025272153, 0.026149069, 0.027036819, 0.027911167, 0.028788681, 0.029668431, 0.030557486, 0.031444042, 0.032325347, 0.033216264, 0.034098167, 0.034977, 0.035870139, 0.036759472...</msg>
<status status="PASS" starttime="20201115 22:02:25.051" endtime="20201115 22:02:25.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.067" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:25.066" endtime="20201115 22:02:25.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.070" level="INFO">VALUE: [5.6763999999997344e-05, 5.662499999999765e-05, 5.6666000000000355e-05, 5.6638000000001215e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.663899999999722e-05, 5.665299999999679e-05, 5.662499999999765e-05, 5.665299999999679e-05, 5.665300000000373e-05, 5.666699999999636e-05, 5.663900000000416e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.662500000000459e-05, 5.66670000000033e-05, 5.6694000000002964e-05, 5.665300000000373e-05, 5.66670000000033e-05, 5.663899999999722e-05, 5.6750000000001244e-05, 5.665300000000373e-05, 5.662500000000459e-05, 5.658300000000588e-05, 5.663900000000416e-05, 5.6679999999996455e-05, 5.662499999999765e-05, 5.663899999999722e-05, 5.66670000000033e-05, 5.6652000000004255e-05, 5.665300000000373e-05, 5.6651999999997316e-05, 5.665300000000373e-05, 5.663899999999722e-05, 5.6708000000002534e-05, 5.6679999999996455e-05, 5.665299999999679e-05, 5.659699999999851e-05, 5.662499999999765e-05, 5.66670000000033e-05, 5.6694000000002964e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.665299999998985e-05, 5.6680000000003394e-05, 5.663899999999722e-05, 5.665300000000373e-05, 5.661199999999755e-05, 5.663899999999722e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.069" endtime="20201115 22:02:25.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.064" endtime="20201115 22:02:25.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.073" endtime="20201115 22:02:25.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.076" endtime="20201115 22:02:25.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.075" endtime="20201115 22:02:25.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.071" endtime="20201115 22:02:25.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.672" endtime="20201115 22:02:25.097"></status>
</kw>
<msg timestamp="20201115 22:02:25.097" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.106" endtime="20201115 22:02:25.158"></status>
</kw>
<msg timestamp="20201115 22:02:25.159" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.104" endtime="20201115 22:02:25.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.162" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.160" endtime="20201115 22:02:25.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.163" endtime="20201115 22:02:25.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.102" endtime="20201115 22:02:25.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.100" endtime="20201115 22:02:25.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.173" endtime="20201115 22:02:25.473"></status>
</kw>
<msg timestamp="20201115 22:02:25.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.171" endtime="20201115 22:02:25.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.478" endtime="20201115 22:02:25.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.485" endtime="20201115 22:02:25.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.169" endtime="20201115 22:02:25.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.167" endtime="20201115 22:02:25.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.492" level="INFO">${RESULT} = [{'time': 0.022127514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6805999999999524e-05, 'source_diff': 5.6805999999999524e-05}, {'time': 0.023016403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.489" endtime="20201115 22:02:25.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.505" level="INFO">${OVERHEAD} = {'time': [0.022127514, 0.023016403, 0.023898972, 0.024773556, 0.025654944, 0.026531389, 0.027419694, 0.028312681, 0.029199042, 0.030083694, 0.030968, 0.031856, 0.03274775, 0.033641056, 0.034516611, 0....</msg>
<status status="PASS" starttime="20201115 22:02:25.493" endtime="20201115 22:02:25.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.510" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:25.509" endtime="20201115 22:02:25.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.512" level="INFO">VALUE: [5.6805999999999524e-05, 5.670900000000201e-05, 5.6666000000000355e-05, 5.66809999999994e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.6652000000000785e-05, 5.66809999999994e-05, 5.665300000000026e-05, 5.6666000000000355e-05, 5.66809999999994e-05, 5.665300000000373e-05, 5.665299999999679e-05, 5.668100000000287e-05, 5.66670000000033e-05, 5.6652000000004255e-05, 5.665299999999679e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.668100000000287e-05, 5.666699999999636e-05, 5.666699999999636e-05, 5.6680000000003394e-05, 5.665299999999679e-05, 5.666699999999636e-05, 5.666699999999636e-05, 5.6665999999996886e-05, 5.659799999999798e-05, 5.665300000000373e-05, 5.66670000000033e-05, 5.665299999999679e-05, 5.66670000000033e-05, 5.6651999999997316e-05, 5.66670000000033e-05, 5.6666000000003824e-05, 5.6666000000003824e-05, 5.665299999999679e-05, 5.66670000000033e-05, 5.662499999999765e-05, 5.6750000000001244e-05, 5.666699999999636e-05, 5.663899999999722e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.6679999999989517e-05, 5.672200000000904e-05, 5.666700000001024e-05, 5.666699999999636e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.511" endtime="20201115 22:02:25.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.506" endtime="20201115 22:02:25.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.515" endtime="20201115 22:02:25.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.519" endtime="20201115 22:02:25.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.517" endtime="20201115 22:02:25.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.514" endtime="20201115 22:02:25.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.098" endtime="20201115 22:02:25.539"></status>
</kw>
<msg timestamp="20201115 22:02:25.540" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.549" endtime="20201115 22:02:25.601"></status>
</kw>
<msg timestamp="20201115 22:02:25.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.547" endtime="20201115 22:02:25.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.602" endtime="20201115 22:02:25.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.605" endtime="20201115 22:02:25.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.544" endtime="20201115 22:02:25.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.542" endtime="20201115 22:02:25.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.616" endtime="20201115 22:02:25.902"></status>
</kw>
<msg timestamp="20201115 22:02:25.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.614" endtime="20201115 22:02:25.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.906" endtime="20201115 22:02:25.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.914" endtime="20201115 22:02:25.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.612" endtime="20201115 22:02:25.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.610" endtime="20201115 22:02:25.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.920" level="INFO">${RESULT} = [{'time': 0.022562861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6778000000000384e-05, 'source_diff': 5.6778000000000384e-05}, {'time': 0.023447458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.917" endtime="20201115 22:02:25.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.933" level="INFO">${OVERHEAD} = {'time': [0.022562861, 0.023447458, 0.024328931, 0.025213792, 0.026105792, 0.026999056, 0.027891028, 0.028770875, 0.029645097, 0.030522486, 0.031402931, 0.032284389, 0.033166778, 0.034041153, 0.034928...</msg>
<status status="PASS" starttime="20201115 22:02:25.921" endtime="20201115 22:02:25.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.938" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:25.937" endtime="20201115 22:02:25.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.940" level="INFO">VALUE: [5.6778000000000384e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.663899999999722e-05, 5.666699999999983e-05, 5.663899999999722e-05, 5.666699999999983e-05, 5.658400000000535e-05, 5.661099999999808e-05, 5.663900000000416e-05, 5.6721999999995165e-05, 5.663900000000416e-05, 5.6652000000004255e-05, 5.665300000000373e-05, 5.6665999999996886e-05, 5.665300000000373e-05, 5.663899999999722e-05, 5.662499999999765e-05, 5.668100000000287e-05, 5.666699999999636e-05, 5.665299999999679e-05, 5.6665999999996886e-05, 5.6652000000004255e-05, 5.668099999999593e-05, 5.6722000000002104e-05, 5.666699999999636e-05, 5.665299999999679e-05, 5.663899999999722e-05, 5.663900000000416e-05, 5.668099999999593e-05, 5.661099999999808e-05, 5.666699999999636e-05, 5.666699999999636e-05, 5.663900000000416e-05, 5.663899999999722e-05, 5.6694000000002964e-05, 5.666699999999636e-05, 5.6652000000004255e-05, 5.668099999999593e-05, 5.6665999999996886e-05, 5.662500000000459e-05, 5.669500000000244e-05, 5.665300000000373e-05, 5.668100000000287e-05, 5.6665999999996886e-05, 5.662500000000459e-05, 5.665300000000373e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.939" endtime="20201115 22:02:25.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.934" endtime="20201115 22:02:25.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.943" endtime="20201115 22:02:25.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.947" endtime="20201115 22:02:25.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.945" endtime="20201115 22:02:25.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.942" endtime="20201115 22:02:25.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.540" endtime="20201115 22:02:25.968"></status>
</kw>
<msg timestamp="20201115 22:02:25.968" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.977" endtime="20201115 22:02:26.029"></status>
</kw>
<msg timestamp="20201115 22:02:26.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.975" endtime="20201115 22:02:26.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.031" endtime="20201115 22:02:26.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.033" endtime="20201115 22:02:26.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.973" endtime="20201115 22:02:26.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.971" endtime="20201115 22:02:26.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.043" endtime="20201115 22:02:26.329"></status>
</kw>
<msg timestamp="20201115 22:02:26.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.041" endtime="20201115 22:02:26.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.333" endtime="20201115 22:02:26.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.341" endtime="20201115 22:02:26.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.039" endtime="20201115 22:02:26.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.037" endtime="20201115 22:02:26.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.348" level="INFO">${RESULT} = [{'time': 0.022580694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680500000000005e-05, 'source_diff': 5.680500000000005e-05}, {'time': 0.023472431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.344" endtime="20201115 22:02:26.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.361" level="INFO">${OVERHEAD} = {'time': [0.022580694, 0.023472431, 0.024365431, 0.025249083, 0.026133931, 0.027024139, 0.027901806, 0.028794472, 0.029672153, 0.030561403, 0.031441944, 0.032331194, 0.033213319, 0.034098153, 0.034984...</msg>
<status status="PASS" starttime="20201115 22:02:26.349" endtime="20201115 22:02:26.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.366" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:26.365" endtime="20201115 22:02:26.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.369" level="INFO">VALUE: [5.680500000000005e-05, 5.665299999999679e-05, 5.666699999999983e-05, 5.6679999999999925e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.6666000000000355e-05, 5.658399999999841e-05, 5.661100000000155e-05, 5.6665999999996886e-05, 5.6666000000003824e-05, 5.6735999999994735e-05, 5.666699999999636e-05, 5.668100000000287e-05, 5.663899999999722e-05, 5.6680000000003394e-05, 5.662499999999765e-05, 5.6736000000001674e-05, 5.663899999999722e-05, 5.6721999999995165e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.666699999999636e-05, 5.668100000000287e-05, 5.66670000000033e-05, 5.659799999999798e-05, 5.66670000000033e-05, 5.663900000000416e-05, 5.665299999999679e-05, 5.6679999999996455e-05, 5.6679999999996455e-05, 5.661199999999755e-05, 5.6652000000004255e-05, 5.663900000000416e-05, 5.6652000000004255e-05, 5.666699999999636e-05, 5.6666000000003824e-05, 5.665299999999679e-05, 5.661099999999808e-05, 5.6708000000002534e-05, 5.665299999999679e-05, 5.668100000000287e-05, 5.661099999999808e-05, 5.666699999999636e-05, 5.662499999999765e-05, 5.6652000000004255e-05, 5.6665999999996886e-05, 5.663899999999722e-05, 5.666699999999636e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.367" endtime="20201115 22:02:26.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.362" endtime="20201115 22:02:26.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.372" endtime="20201115 22:02:26.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.376" endtime="20201115 22:02:26.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.374" endtime="20201115 22:02:26.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.370" endtime="20201115 22:02:26.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.969" endtime="20201115 22:02:26.396"></status>
</kw>
<msg timestamp="20201115 22:02:26.397" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.405" endtime="20201115 22:02:26.458"></status>
</kw>
<msg timestamp="20201115 22:02:26.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.404" endtime="20201115 22:02:26.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.459" endtime="20201115 22:02:26.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.462" endtime="20201115 22:02:26.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.401" endtime="20201115 22:02:26.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.399" endtime="20201115 22:02:26.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.471" endtime="20201115 22:02:26.756"></status>
</kw>
<msg timestamp="20201115 22:02:26.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.470" endtime="20201115 22:02:26.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.760" endtime="20201115 22:02:26.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.768" endtime="20201115 22:02:26.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.467" endtime="20201115 22:02:26.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.466" endtime="20201115 22:02:26.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.775" level="INFO">${RESULT} = [{'time': 0.022116056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6791999999999954e-05, 'source_diff': 5.6791999999999954e-05}, {'time': 0.02300675, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:26.772" endtime="20201115 22:02:26.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.788" level="INFO">${OVERHEAD} = {'time': [0.022116056, 0.02300675, 0.023893708, 0.024771639, 0.025653667, 0.026538472, 0.027423278, 0.028310569, 0.029202264, 0.030091792, 0.030966972, 0.031852097, 0.032734139, 0.033625764, 0.0345133...</msg>
<status status="PASS" starttime="20201115 22:02:26.776" endtime="20201115 22:02:26.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.792" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:26.791" endtime="20201115 22:02:26.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.795" level="INFO">VALUE: [5.6791999999999954e-05, 5.665300000000026e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.6666000000000355e-05, 5.666699999999983e-05, 5.6638000000001215e-05, 5.666699999999983e-05, 5.66809999999994e-05, 5.665300000000026e-05, 5.6680000000003394e-05, 5.66670000000033e-05, 5.663900000000416e-05, 5.666699999999636e-05, 5.66670000000033e-05, 5.665300000000373e-05, 5.6666000000003824e-05, 5.6679999999996455e-05, 5.662500000000459e-05, 5.665300000000373e-05, 5.668100000000287e-05, 5.665299999999679e-05, 5.6637999999997746e-05, 5.6651999999997316e-05, 5.662500000000459e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.666699999999636e-05, 5.665299999999679e-05, 5.662499999999765e-05, 5.6651999999997316e-05, 5.6707999999995595e-05, 5.6666000000003824e-05, 5.665300000000373e-05, 5.659700000000545e-05, 5.665299999999679e-05, 5.6637999999997746e-05, 5.666699999999636e-05, 5.665300000000373e-05, 5.6666000000003824e-05, 5.663899999999722e-05, 5.666699999999636e-05, 5.6652000000004255e-05, 5.665300000000373e-05, 5.666699999999636e-05, 5.665299999998985e-05, 5.669500000000938e-05, 5.665300000000373e-05, 5.666699999999636e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.793" endtime="20201115 22:02:26.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.789" endtime="20201115 22:02:26.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.798" endtime="20201115 22:02:26.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.802" endtime="20201115 22:02:26.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.800" endtime="20201115 22:02:26.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.797" endtime="20201115 22:02:26.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.397" endtime="20201115 22:02:26.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.670" endtime="20201115 22:02:26.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.670" endtime="20201115 22:02:26.823"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.825" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.834" endtime="20201115 22:02:26.889"></status>
</kw>
<msg timestamp="20201115 22:02:26.890" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.832" endtime="20201115 22:02:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.893" endtime="20201115 22:02:26.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.898" endtime="20201115 22:02:26.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.830" endtime="20201115 22:02:26.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.828" endtime="20201115 22:02:26.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.916" endtime="20201115 22:02:27.208"></status>
</kw>
<msg timestamp="20201115 22:02:27.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.913" endtime="20201115 22:02:27.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024490889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.212" endtime="20201115 22:02:27.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.220" endtime="20201115 22:02:27.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.908" endtime="20201115 22:02:27.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.904" endtime="20201115 22:02:27.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.227" level="INFO">${RESULT} = [{'time': 0.024490889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9235999999997235e-05, 'source_diff': 5.9235999999997235e-05}, {'time': 0.025435486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.223" endtime="20201115 22:02:27.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.240" level="INFO">${OVERHEAD} = {'time': [0.024490889, 0.025435486, 0.026374819, 0.027311042, 0.028256292, 0.029191264, 0.030132153, 0.031070208, 0.032002903, 0.032953097, 0.033903597, 0.034852528, 0.035797361, 0.036745403, 0.037681...</msg>
<status status="PASS" starttime="20201115 22:02:27.228" endtime="20201115 22:02:27.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.244" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:27.243" endtime="20201115 22:02:27.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.247" level="INFO">VALUE: [5.9235999999997235e-05, 5.906900000000187e-05, 5.90550000000023e-05, 5.9084000000000914e-05, 5.9083999999997444e-05, 5.909700000000101e-05, 5.909699999999754e-05, 5.90689999999984e-05, 5.9070000000001344e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.906900000000187e-05, 5.909700000000101e-05, 5.9070000000001344e-05, 5.906899999999493e-05, 5.909700000000101e-05, 5.916699999999886e-05, 5.911100000000058e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.906900000000187e-05, 5.905499999999536e-05, 5.908300000000144e-05, 5.912500000000015e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.911100000000058e-05, 5.908300000000144e-05, 5.912500000000015e-05, 5.909700000000101e-05, 5.906900000000881e-05, 5.9055999999987896e-05, 5.90550000000023e-05, 5.908300000000144e-05, 5.906899999999493e-05, 5.909699999999407e-05, 5.9056000000001774e-05, 5.912499999999321e-05, 5.907000000000828e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.245" endtime="20201115 22:02:27.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.241" endtime="20201115 22:02:27.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.250" endtime="20201115 22:02:27.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.254" endtime="20201115 22:02:27.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.252" endtime="20201115 22:02:27.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.249" endtime="20201115 22:02:27.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.826" endtime="20201115 22:02:27.274"></status>
</kw>
<msg timestamp="20201115 22:02:27.275" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.283" endtime="20201115 22:02:27.338"></status>
</kw>
<msg timestamp="20201115 22:02:27.339" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.282" endtime="20201115 22:02:27.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.340" endtime="20201115 22:02:27.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.342" endtime="20201115 22:02:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.279" endtime="20201115 22:02:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.277" endtime="20201115 22:02:27.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.353" endtime="20201115 22:02:27.639"></status>
</kw>
<msg timestamp="20201115 22:02:27.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.352" endtime="20201115 22:02:27.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.643" endtime="20201115 22:02:27.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.651" endtime="20201115 22:02:27.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.349" endtime="20201115 22:02:27.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.347" endtime="20201115 22:02:27.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.657" level="INFO">${RESULT} = [{'time': 0.022166333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9208000000001565e-05, 'source_diff': 5.9208000000001565e-05}, {'time': 0.023103569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.654" endtime="20201115 22:02:27.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.670" level="INFO">${OVERHEAD} = {'time': [0.022166333, 0.023103569, 0.024042667, 0.024990139, 0.025941292, 0.026891819, 0.027833319, 0.028774208, 0.029717917, 0.030655, 0.031599597, 0.032545125, 0.033488153, 0.034422556, 0.035358486...</msg>
<status status="PASS" starttime="20201115 22:02:27.658" endtime="20201115 22:02:27.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.675" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:27.674" endtime="20201115 22:02:27.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.678" level="INFO">VALUE: [5.9208000000001565e-05, 5.909700000000101e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.906900000000187e-05, 5.90689999999984e-05, 5.912500000000015e-05, 5.916699999999886e-05, 5.909700000000101e-05, 5.90550000000023e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.912500000000015e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.9041999999995265e-05, 5.906899999999493e-05, 5.9056000000001774e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.908300000000144e-05, 5.9098000000000483e-05, 5.911099999999364e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.90829999999945e-05, 5.9069999999994405e-05, 5.909700000000101e-05, 5.906900000000187e-05, 5.9070000000001344e-05, 5.908300000000144e-05, 5.906900000000187e-05, 5.9070000000001344e-05, 5.9098000000000483e-05, 5.906900000000187e-05, 5.9070000000001344e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.9070000000001344e-05, 5.9084000000000914e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.909699999999407e-05, 5.911100000000058e-05, 5.913899999999972e-05, 5.916700000001274e-05, 5.911100000000058e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.676" endtime="20201115 22:02:27.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.671" endtime="20201115 22:02:27.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.681" endtime="20201115 22:02:27.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.684" endtime="20201115 22:02:27.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.682" endtime="20201115 22:02:27.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.679" endtime="20201115 22:02:27.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.275" endtime="20201115 22:02:27.705"></status>
</kw>
<msg timestamp="20201115 22:02:27.705" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.714" endtime="20201115 22:02:27.769"></status>
</kw>
<msg timestamp="20201115 22:02:27.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.712" endtime="20201115 22:02:27.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.770" endtime="20201115 22:02:27.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.773" endtime="20201115 22:02:27.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.710" endtime="20201115 22:02:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.707" endtime="20201115 22:02:27.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.783" endtime="20201115 22:02:28.069"></status>
</kw>
<msg timestamp="20201115 22:02:28.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.781" endtime="20201115 22:02:28.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.073" endtime="20201115 22:02:28.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.081" endtime="20201115 22:02:28.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.779" endtime="20201115 22:02:28.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.777" endtime="20201115 22:02:28.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.087" level="INFO">${RESULT} = [{'time': 0.022218972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9208000000001565e-05, 'source_diff': 5.9208000000001565e-05}, {'time': 0.023153444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.084" endtime="20201115 22:02:28.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.101" level="INFO">${OVERHEAD} = {'time': [0.022218972, 0.023153444, 0.024092181, 0.025035, 0.025981875, 0.026930611, 0.027873764, 0.028823444, 0.029757472, 0.030691819, 0.031626833, 0.032577417, 0.033526431, 0.034475472, 0.035409264...</msg>
<status status="PASS" starttime="20201115 22:02:28.089" endtime="20201115 22:02:28.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.105" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:28.104" endtime="20201115 22:02:28.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.108" level="INFO">VALUE: [5.9208000000001565e-05, 5.9138000000000246e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.906900000000187e-05, 5.911100000000058e-05, 5.911099999999711e-05, 5.909700000000101e-05, 5.904099999999926e-05, 5.909699999999754e-05, 5.906900000000187e-05, 5.9098000000000483e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.906899999999493e-05, 5.9084000000000914e-05, 5.911100000000058e-05, 5.9028000000002634e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.9070000000001344e-05, 5.906900000000187e-05, 5.9083999999993975e-05, 5.909700000000101e-05, 5.906900000000187e-05, 5.9070000000001344e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.9083999999993975e-05, 5.909700000000101e-05, 5.909699999999407e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.915299999999929e-05, 5.908300000000144e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.9055999999994835e-05, 5.907000000000828e-05, 5.908300000000144e-05, 5.909699999999407e-05, 5.9069999999994405e-05, 5.908299999998756e-05, 5.908300000000144e-05, 5.904200000000914e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.106" endtime="20201115 22:02:28.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.102" endtime="20201115 22:02:28.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.111" endtime="20201115 22:02:28.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.114" endtime="20201115 22:02:28.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.113" endtime="20201115 22:02:28.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.109" endtime="20201115 22:02:28.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.705" endtime="20201115 22:02:28.135"></status>
</kw>
<msg timestamp="20201115 22:02:28.135" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.144" endtime="20201115 22:02:28.199"></status>
</kw>
<msg timestamp="20201115 22:02:28.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.142" endtime="20201115 22:02:28.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.202" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.200" endtime="20201115 22:02:28.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.203" endtime="20201115 22:02:28.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.140" endtime="20201115 22:02:28.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.138" endtime="20201115 22:02:28.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.213" endtime="20201115 22:02:28.518"></status>
</kw>
<msg timestamp="20201115 22:02:28.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.211" endtime="20201115 22:02:28.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.522" endtime="20201115 22:02:28.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.530" endtime="20201115 22:02:28.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.209" endtime="20201115 22:02:28.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.207" endtime="20201115 22:02:28.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.536" level="INFO">${RESULT} = [{'time': 0.022185667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.922300000000061e-05, 'source_diff': 5.922300000000061e-05}, {'time': 0.023125694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:28.533" endtime="20201115 22:02:28.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.550" level="INFO">${OVERHEAD} = {'time': [0.022185667, 0.023125694, 0.024072583, 0.025006417, 0.025957306, 0.026891708, 0.027838222, 0.028772292, 0.029711403, 0.030649167, 0.031591014, 0.032534736, 0.033468847, 0.034411681, 0.035361...</msg>
<status status="PASS" starttime="20201115 22:02:28.537" endtime="20201115 22:02:28.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.554" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:28.553" endtime="20201115 22:02:28.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.556" level="INFO">VALUE: [5.922300000000061e-05, 5.909699999999754e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.908299999999797e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.9056000000001774e-05, 5.908300000000144e-05, 5.906900000000187e-05, 5.906900000000187e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.911100000000058e-05, 5.905499999999536e-05, 5.909700000000101e-05, 5.906899999999493e-05, 5.90829999999945e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.913899999999972e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.911100000000058e-05, 5.912500000000015e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.9112000000000053e-05, 5.9084000000000914e-05, 5.9083999999993975e-05, 5.9084000000000914e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.909700000000795e-05, 5.909700000000795e-05, 5.9028000000002634e-05, 5.909700000000795e-05, 5.908300000000144e-05, 5.916699999999886e-05, 5.9084000000000914e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.555" endtime="20201115 22:02:28.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.550" endtime="20201115 22:02:28.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.560" endtime="20201115 22:02:28.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.563" endtime="20201115 22:02:28.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.561" endtime="20201115 22:02:28.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.558" endtime="20201115 22:02:28.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.136" endtime="20201115 22:02:28.584"></status>
</kw>
<msg timestamp="20201115 22:02:28.584" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.593" endtime="20201115 22:02:28.648"></status>
</kw>
<msg timestamp="20201115 22:02:28.648" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.591" endtime="20201115 22:02:28.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.649" endtime="20201115 22:02:28.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.652" endtime="20201115 22:02:28.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.588" endtime="20201115 22:02:28.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.586" endtime="20201115 22:02:28.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.661" endtime="20201115 22:02:28.947"></status>
</kw>
<msg timestamp="20201115 22:02:28.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:28.660" endtime="20201115 22:02:28.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022198208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:28.956" endtime="20201115 22:02:28.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.964" endtime="20201115 22:02:28.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.657" endtime="20201115 22:02:28.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.656" endtime="20201115 22:02:28.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.970" level="INFO">${RESULT} = [{'time': 0.022198208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9208000000001565e-05, 'source_diff': 5.9208000000001565e-05}, {'time': 0.023140347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.967" endtime="20201115 22:02:28.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.983" level="INFO">${OVERHEAD} = {'time': [0.022198208, 0.023140347, 0.024075736, 0.025014431, 0.025965681, 0.026900139, 0.027840125, 0.028775764, 0.029719778, 0.030661292, 0.031608736, 0.032559028, 0.033503903, 0.034456347, 0.035391...</msg>
<status status="PASS" starttime="20201115 22:02:28.971" endtime="20201115 22:02:28.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.988" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:28.987" endtime="20201115 22:02:28.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.990" level="INFO">VALUE: [5.9208000000001565e-05, 5.911099999999711e-05, 5.916699999999886e-05, 5.9098000000000483e-05, 5.9098000000000483e-05, 5.912500000000015e-05, 5.908300000000144e-05, 5.9041999999998734e-05, 5.9083999999997444e-05, 5.9098000000000483e-05, 5.908300000000144e-05, 5.915299999999929e-05, 5.9056000000001774e-05, 5.909700000000101e-05, 5.912499999999321e-05, 5.90550000000023e-05, 5.908300000000144e-05, 5.906900000000187e-05, 5.90550000000023e-05, 5.9070000000001344e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.904099999999579e-05, 5.909700000000101e-05, 5.912500000000015e-05, 5.911100000000058e-05, 5.90829999999945e-05, 5.90829999999945e-05, 5.909700000000101e-05, 5.9083999999993975e-05, 5.9084000000000914e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.90829999999945e-05, 5.909700000000101e-05, 5.911100000000058e-05, 5.909700000000101e-05, 5.9098000000000483e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.9165999999999386e-05, 5.909699999999407e-05, 5.9084000000000914e-05, 5.9084000000000914e-05, 5.906899999999493e-05, 5.908300000000144e-05, 5.908300000000144e-05, 5.9112000000000053e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.989" endtime="20201115 22:02:28.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.984" endtime="20201115 22:02:28.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.993" endtime="20201115 22:02:28.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.997" endtime="20201115 22:02:29.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.995" endtime="20201115 22:02:29.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.992" endtime="20201115 22:02:29.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.584" endtime="20201115 22:02:29.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.824" endtime="20201115 22:02:29.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.823" endtime="20201115 22:02:29.018"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.020" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.029" endtime="20201115 22:02:29.089"></status>
</kw>
<msg timestamp="20201115 22:02:29.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.027" endtime="20201115 22:02:29.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.090" endtime="20201115 22:02:29.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.093" endtime="20201115 22:02:29.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.025" endtime="20201115 22:02:29.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.023" endtime="20201115 22:02:29.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.102" endtime="20201115 22:02:29.388"></status>
</kw>
<msg timestamp="20201115 22:02:29.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026228097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02628975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:29.101" endtime="20201115 22:02:29.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026228097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02628975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:29.392" endtime="20201115 22:02:29.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.400" endtime="20201115 22:02:29.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.098" endtime="20201115 22:02:29.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.096" endtime="20201115 22:02:29.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.407" level="INFO">${RESULT} = [{'time': 0.02628975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165300000000179e-05, 'source_diff': 6.165300000000179e-05}, {'time': 0.027292028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:29.403" endtime="20201115 22:02:29.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.420" level="INFO">${OVERHEAD} = {'time': [0.02628975, 0.027292028, 0.028286819, 0.029285639, 0.030285472, 0.031289986, 0.032292847, 0.033304444, 0.034310472, 0.035321125, 0.03632925, 0.037329583, 0.038324347, 0.039336806, 0.04034054...</msg>
<status status="PASS" starttime="20201115 22:02:29.408" endtime="20201115 22:02:29.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.425" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:29.424" endtime="20201115 22:02:29.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.427" level="INFO">VALUE: [6.165300000000179e-05, 6.151399999999863e-05, 6.152700000000219e-05, 6.151399999999863e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.152700000000566e-05, 6.145800000000035e-05, 6.149999999999906e-05, 6.151399999999863e-05, 6.152699999999872e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.147299999999939e-05, 6.152800000000513e-05, 6.15279999999982e-05, 6.151300000000609e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.152699999999872e-05, 6.151399999999863e-05, 6.154099999999829e-05, 6.147199999999992e-05, 6.151300000000609e-05, 6.151400000000556e-05, 6.152699999999872e-05, 6.152699999999872e-05, 6.151399999999863e-05, 6.151299999999915e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.155499999999786e-05, 6.149999999999906e-05, 6.151400000000556e-05, 6.149999999999906e-05, 6.151399999999863e-05, 6.151299999999915e-05, 6.152700000000566e-05, 6.158300000000394e-05, 6.152799999999126e-05, 6.154199999999777e-05, 6.152800000000513e-05, 6.152700000000566e-05, 6.152800000000513e-05, 6.152799999999126e-05, 6.154199999999777e-05, 6.156899999999743e-05, 6.151399999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.426" endtime="20201115 22:02:29.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.421" endtime="20201115 22:02:29.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.430" endtime="20201115 22:02:29.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.434" endtime="20201115 22:02:29.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.432" endtime="20201115 22:02:29.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.429" endtime="20201115 22:02:29.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.021" endtime="20201115 22:02:29.454"></status>
</kw>
<msg timestamp="20201115 22:02:29.454" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.463" endtime="20201115 22:02:29.521"></status>
</kw>
<msg timestamp="20201115 22:02:29.522" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.462" endtime="20201115 22:02:29.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.525" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.523" endtime="20201115 22:02:29.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.526" endtime="20201115 22:02:29.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.459" endtime="20201115 22:02:29.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.457" endtime="20201115 22:02:29.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.536" endtime="20201115 22:02:29.822"></status>
</kw>
<msg timestamp="20201115 22:02:29.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.534" endtime="20201115 22:02:29.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.826" endtime="20201115 22:02:29.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.833" endtime="20201115 22:02:29.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.532" endtime="20201115 22:02:29.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.530" endtime="20201115 22:02:29.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.840" level="INFO">${RESULT} = [{'time': 0.022293458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165199999999885e-05, 'source_diff': 6.165199999999885e-05}, {'time': 0.023299111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:29.837" endtime="20201115 22:02:29.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.853" level="INFO">${OVERHEAD} = {'time': [0.022293458, 0.023299111, 0.024308, 0.025312375, 0.026323333, 0.027331444, 0.028340542, 0.029334583, 0.030337083, 0.031337056, 0.032335875, 0.033347194, 0.034348653, 0.035358333, 0.036362167...</msg>
<status status="PASS" starttime="20201115 22:02:29.841" endtime="20201115 22:02:29.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.858" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:29.856" endtime="20201115 22:02:29.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.860" level="INFO">VALUE: [6.165199999999885e-05, 6.152800000000166e-05, 6.15560000000008e-05, 6.154200000000123e-05, 6.152700000000219e-05, 6.151299999999915e-05, 6.147299999999939e-05, 6.152700000000219e-05, 6.154100000000176e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.151299999999915e-05, 6.159699999999657e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.145899999999982e-05, 6.151399999999863e-05, 6.147299999999939e-05, 6.15279999999982e-05, 6.151299999999915e-05, 6.152699999999872e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.156899999999743e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.15699999999969e-05, 6.149999999999906e-05, 6.151400000000556e-05, 6.151299999999915e-05, 6.159699999999657e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.152699999999872e-05, 6.148600000000642e-05, 6.15279999999982e-05, 6.149999999999906e-05, 6.149999999999212e-05, 6.1500000000006e-05, 6.152800000000513e-05, 6.154199999999777e-05, 6.15550000000048e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.152799999999126e-05, 6.149999999999212e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.859" endtime="20201115 22:02:29.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.854" endtime="20201115 22:02:29.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.863" endtime="20201115 22:02:29.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.866" endtime="20201115 22:02:29.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.865" endtime="20201115 22:02:29.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.861" endtime="20201115 22:02:29.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.455" endtime="20201115 22:02:29.887"></status>
</kw>
<msg timestamp="20201115 22:02:29.887" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.896" endtime="20201115 22:02:29.955"></status>
</kw>
<msg timestamp="20201115 22:02:29.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.895" endtime="20201115 22:02:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.956" endtime="20201115 22:02:29.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.959" endtime="20201115 22:02:29.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.892" endtime="20201115 22:02:29.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.890" endtime="20201115 22:02:29.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.969" endtime="20201115 22:02:30.254"></status>
</kw>
<msg timestamp="20201115 22:02:30.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.967" endtime="20201115 22:02:30.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.258" endtime="20201115 22:02:30.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.266" endtime="20201115 22:02:30.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.965" endtime="20201115 22:02:30.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.963" endtime="20201115 22:02:30.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.272" level="INFO">${RESULT} = [{'time': 0.022816444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166600000000189e-05, 'source_diff': 6.166600000000189e-05}, {'time': 0.023827472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.269" endtime="20201115 22:02:30.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.286" level="INFO">${OVERHEAD} = {'time': [0.022816444, 0.023827472, 0.024830361, 0.025831375, 0.026828403, 0.027824736, 0.028833792, 0.029830111, 0.030836056, 0.031841764, 0.032838458, 0.033848847, 0.034845125, 0.035856444, 0.036863...</msg>
<status status="PASS" starttime="20201115 22:02:30.273" endtime="20201115 22:02:30.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.290" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:30.289" endtime="20201115 22:02:30.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.293" level="INFO">VALUE: [6.166600000000189e-05, 6.15279999999982e-05, 6.155499999999786e-05, 6.154200000000123e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.152800000000166e-05, 6.154199999999777e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.154099999999829e-05, 6.154099999999829e-05, 6.149999999999906e-05, 6.152699999999872e-05, 6.152699999999872e-05, 6.151399999999863e-05, 6.152800000000513e-05, 6.152800000000513e-05, 6.15279999999982e-05, 6.15420000000047e-05, 6.15279999999982e-05, 6.159699999999657e-05, 6.148599999999949e-05, 6.151399999999863e-05, 6.155599999999734e-05, 6.149999999999906e-05, 6.151299999999915e-05, 6.15279999999982e-05, 6.147299999999939e-05, 6.144400000000078e-05, 6.152800000000513e-05, 6.155499999999786e-05, 6.151399999999863e-05, 6.152800000000513e-05, 6.161199999999561e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.147299999999939e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.152799999999126e-05, 6.151399999999863e-05, 6.154099999999829e-05, 6.152800000000513e-05, 6.154099999999829e-05, 6.151299999999915e-05, 6.152800000000513e-05, 6.151399999999863e-05, 6.149999999999212e-05, 6.156900000001131e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.291" endtime="20201115 22:02:30.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.286" endtime="20201115 22:02:30.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.296" endtime="20201115 22:02:30.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.299" endtime="20201115 22:02:30.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.298" endtime="20201115 22:02:30.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.294" endtime="20201115 22:02:30.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.888" endtime="20201115 22:02:30.320"></status>
</kw>
<msg timestamp="20201115 22:02:30.320" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.329" endtime="20201115 22:02:30.387"></status>
</kw>
<msg timestamp="20201115 22:02:30.388" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.328" endtime="20201115 22:02:30.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.390" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.389" endtime="20201115 22:02:30.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.391" endtime="20201115 22:02:30.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.325" endtime="20201115 22:02:30.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.323" endtime="20201115 22:02:30.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.401" endtime="20201115 22:02:30.703"></status>
</kw>
<msg timestamp="20201115 22:02:30.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.400" endtime="20201115 22:02:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.712" endtime="20201115 22:02:30.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.729" endtime="20201115 22:02:30.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.397" endtime="20201115 22:02:30.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.395" endtime="20201115 22:02:30.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.736" level="INFO">${RESULT} = [{'time': 0.022650194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.159700000000004e-05, 'source_diff': 6.159700000000004e-05}, {'time': 0.023652056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:30.733" endtime="20201115 22:02:30.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.749" level="INFO">${OVERHEAD} = {'time': [0.022650194, 0.023652056, 0.024665514, 0.025668583, 0.026675139, 0.027687611, 0.028682, 0.029677944, 0.03068825, 0.031697917, 0.032697917, 0.033708847, 0.034716069, 0.03571225, 0.036710056, ...</msg>
<status status="PASS" starttime="20201115 22:02:30.737" endtime="20201115 22:02:30.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.754" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:30.753" endtime="20201115 22:02:30.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.756" level="INFO">VALUE: [6.159700000000004e-05, 6.152800000000166e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.15140000000021e-05, 6.154200000000123e-05, 6.149999999999906e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.152699999999872e-05, 6.15279999999982e-05, 6.155599999999734e-05, 6.154199999999777e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.152699999999872e-05, 6.149999999999906e-05, 6.154199999999777e-05, 6.15279999999982e-05, 6.154199999999777e-05, 6.15420000000047e-05, 6.154199999999777e-05, 6.147199999999992e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.151300000000609e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.151400000000556e-05, 6.148600000000642e-05, 6.151399999999863e-05, 6.151299999999915e-05, 6.151399999999863e-05, 6.152699999999178e-05, 6.161100000000308e-05, 6.154199999999777e-05, 6.151399999999863e-05, 6.149999999999212e-05, 6.154099999999829e-05, 6.152699999999178e-05, 6.144400000000771e-05, 6.151399999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.755" endtime="20201115 22:02:30.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.750" endtime="20201115 22:02:30.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.759" endtime="20201115 22:02:30.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.763" endtime="20201115 22:02:30.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.761" endtime="20201115 22:02:30.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.757" endtime="20201115 22:02:30.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.321" endtime="20201115 22:02:30.784"></status>
</kw>
<msg timestamp="20201115 22:02:30.784" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.798" endtime="20201115 22:02:30.857"></status>
</kw>
<msg timestamp="20201115 22:02:30.858" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.795" endtime="20201115 22:02:30.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.859" endtime="20201115 22:02:30.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.861" endtime="20201115 22:02:30.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.789" endtime="20201115 22:02:30.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.786" endtime="20201115 22:02:30.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.872" endtime="20201115 22:02:31.158"></status>
</kw>
<msg timestamp="20201115 22:02:31.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028655917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028717556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.871" endtime="20201115 22:02:31.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028655917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028717556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.162" endtime="20201115 22:02:31.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.170" endtime="20201115 22:02:31.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.868" endtime="20201115 22:02:31.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.866" endtime="20201115 22:02:31.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.176" level="INFO">${RESULT} = [{'time': 0.028717556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.163900000000222e-05, 'source_diff': 6.163900000000222e-05}, {'time': 0.029725722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:31.173" endtime="20201115 22:02:31.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.189" level="INFO">${OVERHEAD} = {'time': [0.028717556, 0.029725722, 0.030732625, 0.031726681, 0.032730125, 0.033727069, 0.034724958, 0.035731625, 0.036739819, 0.037736556, 0.038731028, 0.039730861, 0.040736556, 0.041733208, 0.042729...</msg>
<status status="PASS" starttime="20201115 22:02:31.177" endtime="20201115 22:02:31.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.194" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:31.193" endtime="20201115 22:02:31.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.196" level="INFO">VALUE: [6.163900000000222e-05, 6.154099999999829e-05, 6.15279999999982e-05, 6.144500000000025e-05, 6.145800000000035e-05, 6.148599999999949e-05, 6.151399999999863e-05, 6.15420000000047e-05, 6.151299999999915e-05, 6.15699999999969e-05, 6.15279999999982e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.148699999999896e-05, 6.149999999999906e-05, 6.15279999999982e-05, 6.156899999999743e-05, 6.151299999999915e-05, 6.154199999999777e-05, 6.152800000000513e-05, 6.151299999999915e-05, 6.15420000000047e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.151400000000556e-05, 6.152699999999872e-05, 6.154199999999777e-05, 6.151299999999915e-05, 6.151400000000556e-05, 6.151299999999915e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.154199999999777e-05, 6.147200000000685e-05, 6.152800000000513e-05, 6.151399999999863e-05, 6.152800000000513e-05, 6.156899999999743e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.145899999999982e-05, 6.152800000000513e-05, 6.154099999999829e-05, 6.151399999999863e-05, 6.152800000000513e-05, 6.154099999999829e-05, 6.154099999999829e-05, 6.151399999999863e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.195" endtime="20201115 22:02:31.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.190" endtime="20201115 22:02:31.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.200" endtime="20201115 22:02:31.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.203" endtime="20201115 22:02:31.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.202" endtime="20201115 22:02:31.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.198" endtime="20201115 22:02:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.784" endtime="20201115 22:02:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.019" endtime="20201115 22:02:31.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.018" endtime="20201115 22:02:31.224"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.226" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.235" endtime="20201115 22:02:31.297"></status>
</kw>
<msg timestamp="20201115 22:02:31.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.234" endtime="20201115 22:02:31.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.298" endtime="20201115 22:02:31.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.301" endtime="20201115 22:02:31.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.231" endtime="20201115 22:02:31.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.229" endtime="20201115 22:02:31.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.310" endtime="20201115 22:02:31.612"></status>
</kw>
<msg timestamp="20201115 22:02:31.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.308" endtime="20201115 22:02:31.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.616" endtime="20201115 22:02:31.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.624" endtime="20201115 22:02:31.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.305" endtime="20201115 22:02:31.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.304" endtime="20201115 22:02:31.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.630" level="INFO">${RESULT} = [{'time': 0.024616681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.407000000000287e-05, 'source_diff': 6.407000000000287e-05}, {'time': 0.025674417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:31.627" endtime="20201115 22:02:31.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.643" level="INFO">${OVERHEAD} = {'time': [0.024616681, 0.025674417, 0.026746861, 0.027822403, 0.028892583, 0.029954667, 0.031021431, 0.032079458, 0.033140944, 0.034209361, 0.035274931, 0.036344208, 0.037420639, 0.038488375, 0.039564...</msg>
<status status="PASS" starttime="20201115 22:02:31.631" endtime="20201115 22:02:31.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.648" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:31.647" endtime="20201115 22:02:31.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.651" level="INFO">VALUE: [6.407000000000287e-05, 6.394500000000275e-05, 6.395799999999938e-05, 6.393099999999971e-05, 6.39439999999998e-05, 6.393099999999971e-05, 6.398699999999799e-05, 6.394399999999634e-05, 6.392999999999677e-05, 6.39300000000037e-05, 6.394500000000275e-05, 6.390200000000457e-05, 6.394499999999581e-05, 6.395799999999591e-05, 6.394400000000328e-05, 6.394499999999581e-05, 6.394400000000328e-05, 6.39300000000037e-05, 6.394399999999634e-05, 6.395900000000232e-05, 6.395900000000232e-05, 6.388899999999753e-05, 6.394400000000328e-05, 6.395900000000232e-05, 6.395800000000285e-05, 6.394399999999634e-05, 6.394400000000328e-05, 6.394400000000328e-05, 6.394500000000275e-05, 6.392999999999677e-05, 6.388899999999753e-05, 6.391700000000361e-05, 6.392999999999677e-05, 6.391700000000361e-05, 6.395899999999538e-05, 6.394500000000275e-05, 6.394399999999634e-05, 6.39309999999893e-05, 6.392999999998983e-05, 6.39300000000037e-05, 6.394499999999581e-05, 6.394499999999581e-05, 6.394400000001021e-05, 6.394500000000969e-05, 6.393100000000318e-05, 6.386099999999839e-05, 6.394499999999581e-05, 6.395800000000285e-05, 6.39300000000037e-05, 6.395800000000285e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.649" endtime="20201115 22:02:31.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.644" endtime="20201115 22:02:31.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.654" endtime="20201115 22:02:31.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.657" endtime="20201115 22:02:31.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.656" endtime="20201115 22:02:31.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.652" endtime="20201115 22:02:31.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.227" endtime="20201115 22:02:31.678"></status>
</kw>
<msg timestamp="20201115 22:02:31.678" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.687" endtime="20201115 22:02:31.748"></status>
</kw>
<msg timestamp="20201115 22:02:31.749" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.685" endtime="20201115 22:02:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.750" endtime="20201115 22:02:31.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.752" endtime="20201115 22:02:31.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.683" endtime="20201115 22:02:31.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.681" endtime="20201115 22:02:31.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.762" endtime="20201115 22:02:32.049"></status>
</kw>
<msg timestamp="20201115 22:02:32.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.761" endtime="20201115 22:02:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022376583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.053" endtime="20201115 22:02:32.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.060" endtime="20201115 22:02:32.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.758" endtime="20201115 22:02:32.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.756" endtime="20201115 22:02:32.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.067" level="INFO">${RESULT} = [{'time': 0.022376583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.406899999999993e-05, 'source_diff': 6.406899999999993e-05}, {'time': 0.023449306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:32.064" endtime="20201115 22:02:32.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.080" level="INFO">${OVERHEAD} = {'time': [0.022376583, 0.023449306, 0.024515417, 0.025579444, 0.026642542, 0.027700958, 0.028769931, 0.029834931, 0.030894, 0.031963375, 0.033028, 0.034093528, 0.035160597, 0.036225569, 0.037286833, 0...</msg>
<status status="PASS" starttime="20201115 22:02:32.068" endtime="20201115 22:02:32.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.085" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:32.084" endtime="20201115 22:02:32.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.087" level="INFO">VALUE: [6.406899999999993e-05, 6.394499999999928e-05, 6.393099999999971e-05, 6.39439999999998e-05, 6.393100000000318e-05, 6.397200000000242e-05, 6.394499999999928e-05, 6.395899999999885e-05, 6.387500000000143e-05, 6.390300000000404e-05, 6.395800000000285e-05, 6.39029999999971e-05, 6.395800000000285e-05, 6.395799999999591e-05, 6.394399999999634e-05, 6.393099999999624e-05, 6.394500000000275e-05, 6.397199999999548e-05, 6.394399999999634e-05, 6.386199999999786e-05, 6.394499999999581e-05, 6.394399999999634e-05, 6.394500000000275e-05, 6.393100000000318e-05, 6.393099999999624e-05, 6.394400000000328e-05, 6.394500000000275e-05, 6.395900000000232e-05, 6.393100000000318e-05, 6.390300000000404e-05, 6.393100000000318e-05, 6.397200000000242e-05, 6.394400000000328e-05, 6.401299999999471e-05, 6.391699999999667e-05, 6.397300000000189e-05, 6.395800000000285e-05, 6.394500000000275e-05, 6.395800000000285e-05, 6.395800000000285e-05, 6.394499999999581e-05, 6.398600000000199e-05, 6.398600000000199e-05, 6.390299999999016e-05, 6.397299999999495e-05, 6.393100000000318e-05, 6.393100000000318e-05, 6.393100000000318e-05, 6.39300000000037e-05, 6.39300000000037e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.086" endtime="20201115 22:02:32.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.081" endtime="20201115 22:02:32.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.090" endtime="20201115 22:02:32.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.094" endtime="20201115 22:02:32.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.092" endtime="20201115 22:02:32.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.089" endtime="20201115 22:02:32.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.679" endtime="20201115 22:02:32.114"></status>
</kw>
<msg timestamp="20201115 22:02:32.115" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.123" endtime="20201115 22:02:32.185"></status>
</kw>
<msg timestamp="20201115 22:02:32.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.122" endtime="20201115 22:02:32.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.188" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.186" endtime="20201115 22:02:32.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.189" endtime="20201115 22:02:32.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.119" endtime="20201115 22:02:32.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.117" endtime="20201115 22:02:32.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.199" endtime="20201115 22:02:32.505"></status>
</kw>
<msg timestamp="20201115 22:02:32.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.197" endtime="20201115 22:02:32.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.509" endtime="20201115 22:02:32.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.517" endtime="20201115 22:02:32.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.195" endtime="20201115 22:02:32.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.193" endtime="20201115 22:02:32.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.523" level="INFO">${RESULT} = [{'time': 0.022371681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.40699999999994e-05, 'source_diff': 6.40699999999994e-05}, {'time': 0.023446653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:32.520" endtime="20201115 22:02:32.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.537" level="INFO">${OVERHEAD} = {'time': [0.022371681, 0.023446653, 0.024517583, 0.025578806, 0.026637583, 0.027714153, 0.028786931, 0.029854681, 0.030920847, 0.031991792, 0.0330605, 0.034137625, 0.035211986, 0.03628225, 0.037359444...</msg>
<status status="PASS" starttime="20201115 22:02:32.525" endtime="20201115 22:02:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.541" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:32.540" endtime="20201115 22:02:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.544" level="INFO">VALUE: [6.40699999999994e-05, 6.395900000000232e-05, 6.39439999999998e-05, 6.395899999999885e-05, 6.393000000000024e-05, 6.393099999999971e-05, 6.394500000000275e-05, 6.395900000000232e-05, 6.395800000000285e-05, 6.394499999999581e-05, 6.394399999999634e-05, 6.395799999999591e-05, 6.39300000000037e-05, 6.394400000000328e-05, 6.395799999999591e-05, 6.394400000000328e-05, 6.39159999999972e-05, 6.39159999999972e-05, 6.391699999999667e-05, 6.395800000000285e-05, 6.395800000000285e-05, 6.395799999999591e-05, 6.391600000000414e-05, 6.397200000000242e-05, 6.388799999999806e-05, 6.394400000000328e-05, 6.391700000000361e-05, 6.394399999999634e-05, 6.391700000000361e-05, 6.395799999999591e-05, 6.393099999999624e-05, 6.394500000000275e-05, 6.395900000000232e-05, 6.394399999999634e-05, 6.39300000000037e-05, 6.394400000000328e-05, 6.39159999999972e-05, 6.394399999999634e-05, 6.390299999999016e-05, 6.39300000000037e-05, 6.394399999999634e-05, 6.394399999999634e-05, 6.395800000000285e-05, 6.394399999999634e-05, 6.388899999999753e-05, 6.395799999998897e-05, 6.394499999999581e-05, 6.394399999999634e-05, 6.392999999998983e-05, 6.395800000000285e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.542" endtime="20201115 22:02:32.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.538" endtime="20201115 22:02:32.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.547" endtime="20201115 22:02:32.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.550" endtime="20201115 22:02:32.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.549" endtime="20201115 22:02:32.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.545" endtime="20201115 22:02:32.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.115" endtime="20201115 22:02:32.571"></status>
</kw>
<msg timestamp="20201115 22:02:32.571" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.580" endtime="20201115 22:02:32.641"></status>
</kw>
<msg timestamp="20201115 22:02:32.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.578" endtime="20201115 22:02:32.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.643" endtime="20201115 22:02:32.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.645" endtime="20201115 22:02:32.649"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.576" endtime="20201115 22:02:32.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.574" endtime="20201115 22:02:32.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.656" endtime="20201115 22:02:32.941"></status>
</kw>
<msg timestamp="20201115 22:02:32.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.655" endtime="20201115 22:02:32.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.945" endtime="20201115 22:02:32.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.954" endtime="20201115 22:02:32.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.652" endtime="20201115 22:02:32.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.651" endtime="20201115 22:02:32.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.960" level="INFO">${RESULT} = [{'time': 0.022354583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.406899999999993e-05, 'source_diff': 6.406899999999993e-05}, {'time': 0.0234275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:32.957" endtime="20201115 22:02:32.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.974" level="INFO">${OVERHEAD} = {'time': [0.022354583, 0.0234275, 0.024495806, 0.025556, 0.026630569, 0.027696472, 0.028764194, 0.029836931, 0.030913097, 0.031989611, 0.033052111, 0.034125042, 0.035193986, 0.036253236, 0.037317222, ...</msg>
<status status="PASS" starttime="20201115 22:02:32.961" endtime="20201115 22:02:32.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.978" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:32.977" endtime="20201115 22:02:32.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.980" level="INFO">VALUE: [6.406899999999993e-05, 6.39439999999998e-05, 6.391700000000014e-05, 6.39439999999998e-05, 6.39439999999998e-05, 6.390300000000057e-05, 6.39439999999998e-05, 6.395899999999885e-05, 6.397199999999895e-05, 6.398600000000199e-05, 6.40280000000007e-05, 6.394500000000275e-05, 6.395799999999591e-05, 6.394400000000328e-05, 6.394399999999634e-05, 6.393100000000318e-05, 6.393099999999624e-05, 6.388799999999806e-05, 6.394500000000275e-05, 6.39159999999972e-05, 6.392999999999677e-05, 6.39300000000037e-05, 6.39300000000037e-05, 6.388899999999753e-05, 6.394399999999634e-05, 6.394399999999634e-05, 6.394399999999634e-05, 6.394399999999634e-05, 6.394399999999634e-05, 6.395900000000232e-05, 6.395799999999591e-05, 6.394500000000275e-05, 6.397199999999548e-05, 6.393099999999624e-05, 6.391699999999667e-05, 6.394499999999581e-05, 6.397200000000242e-05, 6.394499999999581e-05, 6.394399999999634e-05, 6.394400000001021e-05, 6.394399999999634e-05, 6.398599999998811e-05, 6.399999999999462e-05, 6.394499999999581e-05, 6.392999999998983e-05, 6.387499999999102e-05, 6.395900000000232e-05, 6.394400000001021e-05, 6.391700000001055e-05, 6.395800000000285e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.979" endtime="20201115 22:02:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.974" endtime="20201115 22:02:32.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.984" endtime="20201115 22:02:32.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.987" endtime="20201115 22:02:33.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.985" endtime="20201115 22:02:33.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.982" endtime="20201115 22:02:33.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.572" endtime="20201115 22:02:33.008"></status>
</kw>
<msg timestamp="20201115 22:02:33.008" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.017" endtime="20201115 22:02:33.078"></status>
</kw>
<msg timestamp="20201115 22:02:33.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.015" endtime="20201115 22:02:33.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.081" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.080" endtime="20201115 22:02:33.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.082" endtime="20201115 22:02:33.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.013" endtime="20201115 22:02:33.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.011" endtime="20201115 22:02:33.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.092" endtime="20201115 22:02:33.377"></status>
</kw>
<msg timestamp="20201115 22:02:33.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.090" endtime="20201115 22:02:33.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.382" endtime="20201115 22:02:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.390" endtime="20201115 22:02:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.088" endtime="20201115 22:02:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.086" endtime="20201115 22:02:33.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.396" level="INFO">${RESULT} = [{'time': 0.022423736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.406899999999993e-05, 'source_diff': 6.406899999999993e-05}, {'time': 0.023500819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:33.393" endtime="20201115 22:02:33.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.410" level="INFO">${OVERHEAD} = {'time': [0.022423736, 0.023500819, 0.024568875, 0.025631278, 0.026692458, 0.027752028, 0.028828194, 0.029888472, 0.030959958, 0.032029833, 0.033097486, 0.034155153, 0.035218167, 0.036279306, 0.037337...</msg>
<status status="PASS" starttime="20201115 22:02:33.397" endtime="20201115 22:02:33.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.414" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:33.413" endtime="20201115 22:02:33.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.416" level="INFO">VALUE: [6.406899999999993e-05, 6.391600000000067e-05, 6.39439999999998e-05, 6.3889000000001e-05, 6.39439999999998e-05, 6.394500000000275e-05, 6.393000000000024e-05, 6.39439999999998e-05, 6.390199999999763e-05, 6.39300000000037e-05, 6.388900000000447e-05, 6.395900000000232e-05, 6.395900000000232e-05, 6.393099999999624e-05, 6.391699999999667e-05, 6.392999999999677e-05, 6.393099999999624e-05, 6.39300000000037e-05, 6.392999999999677e-05, 6.394399999999634e-05, 6.395799999999591e-05, 6.393099999999624e-05, 6.395900000000232e-05, 6.39029999999971e-05, 6.397200000000242e-05, 6.393099999999624e-05, 6.395799999999591e-05, 6.395800000000285e-05, 6.394499999999581e-05, 6.393100000000318e-05, 6.394499999999581e-05, 6.397199999999548e-05, 6.388899999999753e-05, 6.394400000000328e-05, 6.392999999999677e-05, 6.394500000000275e-05, 6.39300000000037e-05, 6.395800000000285e-05, 6.393100000000318e-05, 6.398600000000199e-05, 6.398599999998811e-05, 6.398600000000199e-05, 6.395800000000285e-05, 6.39300000000037e-05, 6.391699999999667e-05, 6.391699999999667e-05, 6.39309999999893e-05, 6.390300000000404e-05, 6.393100000000318e-05, 6.394499999999581e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.415" endtime="20201115 22:02:33.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.410" endtime="20201115 22:02:33.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.420" endtime="20201115 22:02:33.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.423" endtime="20201115 22:02:33.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.421" endtime="20201115 22:02:33.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.418" endtime="20201115 22:02:33.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.009" endtime="20201115 22:02:33.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.225" endtime="20201115 22:02:33.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.225" endtime="20201115 22:02:33.444"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.446" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.455" endtime="20201115 22:02:33.520"></status>
</kw>
<msg timestamp="20201115 22:02:33.520" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.453" endtime="20201115 22:02:33.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.521" endtime="20201115 22:02:33.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.524" endtime="20201115 22:02:33.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.451" endtime="20201115 22:02:33.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.449" endtime="20201115 22:02:33.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.533" endtime="20201115 22:02:33.833"></status>
</kw>
<msg timestamp="20201115 22:02:33.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.531" endtime="20201115 22:02:33.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.842" endtime="20201115 22:02:33.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.859" endtime="20201115 22:02:33.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.529" endtime="20201115 22:02:33.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.527" endtime="20201115 22:02:33.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.866" level="INFO">${RESULT} = [{'time': 0.024629556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.659800000000105e-05, 'source_diff': 6.659800000000105e-05}, {'time': 0.025765347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:33.863" endtime="20201115 22:02:33.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.879" level="INFO">${OVERHEAD} = {'time': [0.024629556, 0.025765347, 0.026906153, 0.028034889, 0.029178014, 0.030318569, 0.031451333, 0.032585597, 0.033712083, 0.034842069, 0.035972056, 0.037111792, 0.038250417, 0.039385653, 0.040514...</msg>
<status status="PASS" starttime="20201115 22:02:33.867" endtime="20201115 22:02:33.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.884" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:33.883" endtime="20201115 22:02:33.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.886" level="INFO">VALUE: [6.659800000000105e-05, 6.637500000000046e-05, 6.631999999999819e-05, 6.638900000000003e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.637499999999352e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.643099999999874e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.640200000000013e-05, 6.64159999999997e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638800000000056e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.634700000000132e-05, 6.641699999999917e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.633400000000123e-05, 6.634699999999438e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.637499999999352e-05, 6.63750000000074e-05, 6.637499999999352e-05, 6.63750000000074e-05, 6.636100000000089e-05, 6.641699999999917e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.629199999999558e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.885" endtime="20201115 22:02:33.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.880" endtime="20201115 22:02:33.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.889" endtime="20201115 22:02:33.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.892" endtime="20201115 22:02:33.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.891" endtime="20201115 22:02:33.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.888" endtime="20201115 22:02:33.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.447" endtime="20201115 22:02:33.913"></status>
</kw>
<msg timestamp="20201115 22:02:33.913" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.922" endtime="20201115 22:02:33.987"></status>
</kw>
<msg timestamp="20201115 22:02:33.987" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.921" endtime="20201115 22:02:33.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.988" endtime="20201115 22:02:33.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.995" endtime="20201115 22:02:33.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.918" endtime="20201115 22:02:33.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.916" endtime="20201115 22:02:33.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.005" endtime="20201115 22:02:34.292"></status>
</kw>
<msg timestamp="20201115 22:02:34.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.004" endtime="20201115 22:02:34.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.296" endtime="20201115 22:02:34.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.304" endtime="20201115 22:02:34.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.001" endtime="20201115 22:02:34.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.000" endtime="20201115 22:02:34.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.310" level="INFO">${RESULT} = [{'time': 0.022295181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.650000000000059e-05, 'source_diff': 6.650000000000059e-05}, {'time': 0.023429292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.307" endtime="20201115 22:02:34.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.323" level="INFO">${OVERHEAD} = {'time': [0.022295181, 0.023429292, 0.024570417, 0.025695625, 0.026835722, 0.027960569, 0.029091347, 0.030216222, 0.031344889, 0.032470181, 0.033595069, 0.034719931, 0.035856569, 0.036987333, 0.038113...</msg>
<status status="PASS" starttime="20201115 22:02:34.311" endtime="20201115 22:02:34.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.328" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:34.327" endtime="20201115 22:02:34.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.330" level="INFO">VALUE: [6.650000000000059e-05, 6.630600000000209e-05, 6.637500000000046e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.644499999999831e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.637500000000046e-05, 6.633400000000123e-05, 6.637500000000046e-05, 6.636099999999395e-05, 6.633400000000123e-05, 6.636100000000089e-05, 6.636200000000037e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.638800000000056e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638800000000056e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.629100000000304e-05, 6.636100000000089e-05, 6.63750000000074e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.641699999999917e-05, 6.638800000000056e-05, 6.637499999999352e-05, 6.636100000000089e-05, 6.637499999999352e-05, 6.638900000000003e-05, 6.63750000000074e-05, 6.63750000000074e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.329" endtime="20201115 22:02:34.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.324" endtime="20201115 22:02:34.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.333" endtime="20201115 22:02:34.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.337" endtime="20201115 22:02:34.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.335" endtime="20201115 22:02:34.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.332" endtime="20201115 22:02:34.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.914" endtime="20201115 22:02:34.357"></status>
</kw>
<msg timestamp="20201115 22:02:34.358" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.367" endtime="20201115 22:02:34.432"></status>
</kw>
<msg timestamp="20201115 22:02:34.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.365" endtime="20201115 22:02:34.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.435" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.433" endtime="20201115 22:02:34.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.436" endtime="20201115 22:02:34.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.362" endtime="20201115 22:02:34.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.360" endtime="20201115 22:02:34.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.446" endtime="20201115 22:02:34.749"></status>
</kw>
<msg timestamp="20201115 22:02:34.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.445" endtime="20201115 22:02:34.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.753" endtime="20201115 22:02:34.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.760" endtime="20201115 22:02:34.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.442" endtime="20201115 22:02:34.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.441" endtime="20201115 22:02:34.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.767" level="INFO">${RESULT} = [{'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.650000000000059e-05, 'source_diff': 6.650000000000059e-05}, {'time': 0.024024319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.764" endtime="20201115 22:02:34.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.780" level="INFO">${OVERHEAD} = {'time': [0.022893486, 0.024024319, 0.025160708, 0.026294375, 0.027437917, 0.028575875, 0.029719111, 0.030857708, 0.031988583, 0.033132167, 0.034268264, 0.035409028, 0.036552597, 0.037676486, 0.038820...</msg>
<status status="PASS" starttime="20201115 22:02:34.768" endtime="20201115 22:02:34.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.785" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:34.784" endtime="20201115 22:02:34.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.787" level="INFO">VALUE: [6.650000000000059e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.638900000000003e-05, 6.636099999999395e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.642999999999927e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.636099999999395e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.64159999999997e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.630600000000209e-05, 6.642999999999233e-05, 6.636200000000037e-05, 6.634799999999386e-05, 6.630599999998821e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.637499999999352e-05, 6.630600000000209e-05, 6.638900000000003e-05, 6.64309999999918e-05, 6.64159999999997e-05, 6.638800000000056e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.786" endtime="20201115 22:02:34.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.781" endtime="20201115 22:02:34.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.790" endtime="20201115 22:02:34.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.793" endtime="20201115 22:02:34.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.792" endtime="20201115 22:02:34.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.788" endtime="20201115 22:02:34.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.358" endtime="20201115 22:02:34.814"></status>
</kw>
<msg timestamp="20201115 22:02:34.814" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.823" endtime="20201115 22:02:34.888"></status>
</kw>
<msg timestamp="20201115 22:02:34.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.822" endtime="20201115 22:02:34.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.891" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.890" endtime="20201115 22:02:34.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.892" endtime="20201115 22:02:34.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.819" endtime="20201115 22:02:34.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.817" endtime="20201115 22:02:34.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.902" endtime="20201115 22:02:35.187"></status>
</kw>
<msg timestamp="20201115 22:02:35.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.900" endtime="20201115 22:02:35.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.191" endtime="20201115 22:02:35.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.199" endtime="20201115 22:02:35.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.898" endtime="20201115 22:02:35.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.896" endtime="20201115 22:02:35.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.206" level="INFO">${RESULT} = [{'time': 0.022720722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.649999999999712e-05, 'source_diff': 6.649999999999712e-05}, {'time': 0.023848417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:35.202" endtime="20201115 22:02:35.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.219" level="INFO">${OVERHEAD} = {'time': [0.022720722, 0.023848417, 0.024984278, 0.026112222, 0.027236875, 0.028367958, 0.029497194, 0.030629903, 0.031754889, 0.032879889, 0.034017097, 0.035144167, 0.036277667, 0.037412694, 0.038548...</msg>
<status status="PASS" starttime="20201115 22:02:35.207" endtime="20201115 22:02:35.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.223" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:35.222" endtime="20201115 22:02:35.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.225" level="INFO">VALUE: [6.649999999999712e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.64300000000062e-05, 6.636099999999395e-05, 6.637500000000046e-05, 6.638800000000056e-05, 6.641700000000611e-05, 6.640200000000013e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.641699999999917e-05, 6.638900000000003e-05, 6.644399999999884e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.64029999999996e-05, 6.638900000000003e-05, 6.633300000000175e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.638800000000056e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.640300000000654e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.642999999999233e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.640299999999266e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.637499999999352e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.224" endtime="20201115 22:02:35.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.220" endtime="20201115 22:02:35.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.229" endtime="20201115 22:02:35.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.233" endtime="20201115 22:02:35.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.231" endtime="20201115 22:02:35.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.227" endtime="20201115 22:02:35.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.815" endtime="20201115 22:02:35.253"></status>
</kw>
<msg timestamp="20201115 22:02:35.253" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.262" endtime="20201115 22:02:35.327"></status>
</kw>
<msg timestamp="20201115 22:02:35.327" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.261" endtime="20201115 22:02:35.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.328" endtime="20201115 22:02:35.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.331" endtime="20201115 22:02:35.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.258" endtime="20201115 22:02:35.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.256" endtime="20201115 22:02:35.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.341" endtime="20201115 22:02:35.642"></status>
</kw>
<msg timestamp="20201115 22:02:35.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.339" endtime="20201115 22:02:35.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.646" endtime="20201115 22:02:35.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.653" endtime="20201115 22:02:35.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.337" endtime="20201115 22:02:35.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.335" endtime="20201115 22:02:35.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.660" level="INFO">${RESULT} = [{'time': 0.022364194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.650000000000059e-05, 'source_diff': 6.650000000000059e-05}, {'time': 0.02349225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:35.657" endtime="20201115 22:02:35.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.673" level="INFO">${OVERHEAD} = {'time': [0.022364194, 0.02349225, 0.024619292, 0.025758583, 0.026886667, 0.028011069, 0.029150111, 0.030287917, 0.031419444, 0.032556472, 0.03369175, 0.034820167, 0.035953903, 0.037082389, 0.03821173...</msg>
<status status="PASS" starttime="20201115 22:02:35.661" endtime="20201115 22:02:35.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.677" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:35.676" endtime="20201115 22:02:35.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.680" level="INFO">VALUE: [6.650000000000059e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.631999999999819e-05, 6.640200000000013e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638800000000056e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.643099999999874e-05, 6.640300000000654e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.638900000000003e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.631900000000218e-05, 6.633300000000175e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.645799999999841e-05, 6.630600000000209e-05, 6.638900000000003e-05, 6.640300000000654e-05, 6.63750000000074e-05, 6.638800000000056e-05, 6.637499999999352e-05, 6.645799999999147e-05, 6.640200000000707e-05, 6.63750000000074e-05, 6.638900000000003e-05, 6.637499999999352e-05, 6.638900000000003e-05, 6.634700000000826e-05, 6.640300000000654e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.679" endtime="20201115 22:02:35.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.674" endtime="20201115 22:02:35.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.683" endtime="20201115 22:02:35.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.687" endtime="20201115 22:02:35.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.685" endtime="20201115 22:02:35.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.682" endtime="20201115 22:02:35.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.254" endtime="20201115 22:02:35.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.445" endtime="20201115 22:02:35.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.444" endtime="20201115 22:02:35.708"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.710" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.719" endtime="20201115 22:02:35.787"></status>
</kw>
<msg timestamp="20201115 22:02:35.788" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.717" endtime="20201115 22:02:35.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.790" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.789" endtime="20201115 22:02:35.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.791" endtime="20201115 22:02:35.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.715" endtime="20201115 22:02:35.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.713" endtime="20201115 22:02:35.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.800" endtime="20201115 22:02:36.085"></status>
</kw>
<msg timestamp="20201115 22:02:36.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024787014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024856, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:35.799" endtime="20201115 22:02:36.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024787014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024856, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:36.089" endtime="20201115 22:02:36.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.097" endtime="20201115 22:02:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.796" endtime="20201115 22:02:36.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.794" endtime="20201115 22:02:36.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.104" level="INFO">${RESULT} = [{'time': 0.024856, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898600000000005e-05, 'source_diff': 6.898600000000005e-05}, {'time': 0.026054514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:36.101" endtime="20201115 22:02:36.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.117" level="INFO">${OVERHEAD} = {'time': [0.024856, 0.026054514, 0.027264208, 0.02846725, 0.029660389, 0.030858667, 0.032062194, 0.033261917, 0.034459208, 0.035653722, 0.036854444, 0.038052347, 0.039249931, 0.040456028, 0.041660125,...</msg>
<status status="PASS" starttime="20201115 22:02:36.105" endtime="20201115 22:02:36.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.121" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:36.120" endtime="20201115 22:02:36.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.124" level="INFO">VALUE: [6.898600000000005e-05, 6.883300000000078e-05, 6.881900000000121e-05, 6.888899999999906e-05, 6.880599999999765e-05, 6.883400000000026e-05, 6.883300000000425e-05, 6.882000000000416e-05, 6.881899999999774e-05, 6.880499999999817e-05, 6.880499999999817e-05, 6.881899999999774e-05, 6.882000000000416e-05, 6.881999999999722e-05, 6.880599999999765e-05, 6.881899999999774e-05, 6.879199999999808e-05, 6.880599999999765e-05, 6.880599999999765e-05, 6.883399999999679e-05, 6.880599999999765e-05, 6.881899999999774e-05, 6.881999999999722e-05, 6.880599999999765e-05, 6.880599999999765e-05, 6.880499999999817e-05, 6.880500000000511e-05, 6.886099999999645e-05, 6.880499999999817e-05, 6.879199999999808e-05, 6.884799999999636e-05, 6.881999999999722e-05, 6.876399999999894e-05, 6.881899999999774e-05, 6.881899999999774e-05, 6.87500000000063e-05, 6.883400000000373e-05, 6.881899999999774e-05, 6.883300000000425e-05, 6.880600000000459e-05, 6.87909999999986e-05, 6.877800000000545e-05, 6.879199999999808e-05, 6.879199999999808e-05, 6.880500000000511e-05, 6.883300000000425e-05, 6.881899999999774e-05, 6.883299999999037e-05, 6.880500000000511e-05, 6.880600000000459e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.123" endtime="20201115 22:02:36.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.118" endtime="20201115 22:02:36.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.127" endtime="20201115 22:02:36.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.131" endtime="20201115 22:02:36.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.129" endtime="20201115 22:02:36.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.126" endtime="20201115 22:02:36.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.711" endtime="20201115 22:02:36.152"></status>
</kw>
<msg timestamp="20201115 22:02:36.152" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.161" endtime="20201115 22:02:36.229"></status>
</kw>
<msg timestamp="20201115 22:02:36.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.159" endtime="20201115 22:02:36.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.232" endtime="20201115 22:02:36.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.238" endtime="20201115 22:02:36.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.156" endtime="20201115 22:02:36.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.154" endtime="20201115 22:02:36.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.260" endtime="20201115 22:02:36.552"></status>
</kw>
<msg timestamp="20201115 22:02:36.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.257" endtime="20201115 22:02:36.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.556" endtime="20201115 22:02:36.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.564" endtime="20201115 22:02:36.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.251" endtime="20201115 22:02:36.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.248" endtime="20201115 22:02:36.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.571" level="INFO">${RESULT} = [{'time': 0.022449569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.899999999999962e-05, 'source_diff': 6.899999999999962e-05}, {'time': 0.023654458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.568" endtime="20201115 22:02:36.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.626" level="INFO">${OVERHEAD} = {'time': [0.022449569, 0.023654458, 0.024849153, 0.026056014, 0.027248903, 0.028447389, 0.029659583, 0.030862792, 0.032055667, 0.033264139, 0.034467292, 0.035679167, 0.036888819, 0.038095042, 0.039292...</msg>
<status status="PASS" starttime="20201115 22:02:36.572" endtime="20201115 22:02:36.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.631" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:36.630" endtime="20201115 22:02:36.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.634" level="INFO">VALUE: [6.899999999999962e-05, 6.880499999999817e-05, 6.876399999999894e-05, 6.880599999999765e-05, 6.880600000000112e-05, 6.879200000000155e-05, 6.881900000000121e-05, 6.880600000000112e-05, 6.880600000000459e-05, 6.880599999999765e-05, 6.880599999999765e-05, 6.880599999999765e-05, 6.880500000000511e-05, 6.876400000000588e-05, 6.883400000000373e-05, 6.874999999999937e-05, 6.880599999999765e-05, 6.880599999999765e-05, 6.874999999999937e-05, 6.881999999999722e-05, 6.879199999999808e-05, 6.883299999999731e-05, 6.881899999999774e-05, 6.884699999999688e-05, 6.880599999999765e-05, 6.87909999999986e-05, 6.881999999999722e-05, 6.880599999999765e-05, 6.882000000000416e-05, 6.881899999999774e-05, 6.880599999999765e-05, 6.87359999999998e-05, 6.880599999999765e-05, 6.880500000000511e-05, 6.886200000000287e-05, 6.876399999999894e-05, 6.880500000000511e-05, 6.880500000000511e-05, 6.880599999999071e-05, 6.887499999999602e-05, 6.876399999999894e-05, 6.880600000000459e-05, 6.880499999999123e-05, 6.879199999999808e-05, 6.880500000000511e-05, 6.880499999999123e-05, 6.881899999999774e-05, 6.880500000000511e-05, 6.880500000000511e-05, 6.881999999999722e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.632" endtime="20201115 22:02:36.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.627" endtime="20201115 22:02:36.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.637" endtime="20201115 22:02:36.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.640" endtime="20201115 22:02:36.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.639" endtime="20201115 22:02:36.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.635" endtime="20201115 22:02:36.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.152" endtime="20201115 22:02:36.661"></status>
</kw>
<msg timestamp="20201115 22:02:36.661" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.670" endtime="20201115 22:02:36.738"></status>
</kw>
<msg timestamp="20201115 22:02:36.738" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.668" endtime="20201115 22:02:36.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.741" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.739" endtime="20201115 22:02:36.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.742" endtime="20201115 22:02:36.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.666" endtime="20201115 22:02:36.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.664" endtime="20201115 22:02:36.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.751" endtime="20201115 22:02:37.036"></status>
</kw>
<msg timestamp="20201115 22:02:37.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.749" endtime="20201115 22:02:37.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.040" endtime="20201115 22:02:37.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.048" endtime="20201115 22:02:37.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.747" endtime="20201115 22:02:37.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.745" endtime="20201115 22:02:37.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.055" level="INFO">${RESULT} = [{'time': 0.022406167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.894500000000081e-05, 'source_diff': 6.894500000000081e-05}, {'time': 0.023613014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.052" endtime="20201115 22:02:37.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.069" level="INFO">${OVERHEAD} = {'time': [0.022406167, 0.023613014, 0.024818944, 0.026026139, 0.027221556, 0.028422556, 0.029633042, 0.03083525, 0.032036806, 0.033233736, 0.034430694, 0.035628139, 0.036837264, 0.03804825, 0.03926012...</msg>
<status status="PASS" starttime="20201115 22:02:37.056" endtime="20201115 22:02:37.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.073" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:37.072" endtime="20201115 22:02:37.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.075" level="INFO">VALUE: [6.894500000000081e-05, 6.880600000000112e-05, 6.877699999999903e-05, 6.882000000000069e-05, 6.883400000000026e-05, 6.882000000000069e-05, 6.877799999999851e-05, 6.883300000000078e-05, 6.882000000000416e-05, 6.879199999999808e-05, 6.883299999999731e-05, 6.880600000000459e-05, 6.880600000000459e-05, 6.880599999999765e-05, 6.872200000000023e-05, 6.87359999999998e-05, 6.87359999999998e-05, 6.87909999999986e-05, 6.881999999999722e-05, 6.879200000000502e-05, 6.87909999999986e-05, 6.879200000000502e-05, 6.87909999999986e-05, 6.880599999999765e-05, 6.877800000000545e-05, 6.881899999999774e-05, 6.880599999999765e-05, 6.880600000000459e-05, 6.879199999999808e-05, 6.884700000000382e-05, 6.876299999999946e-05, 6.879199999999808e-05, 6.880599999999765e-05, 6.876399999999894e-05, 6.879199999999808e-05, 6.881999999999722e-05, 6.883300000000425e-05, 6.880600000000459e-05, 6.880600000000459e-05, 6.881999999999722e-05, 6.881899999999774e-05, 6.886100000000339e-05, 6.879199999999808e-05, 6.87909999999986e-05, 6.881999999999722e-05, 6.881999999999722e-05, 6.880600000000459e-05, 6.880600000000459e-05, 6.886100000000339e-05, 6.880599999999071e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.074" endtime="20201115 22:02:37.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.070" endtime="20201115 22:02:37.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.079" endtime="20201115 22:02:37.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.082" endtime="20201115 22:02:37.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.080" endtime="20201115 22:02:37.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.077" endtime="20201115 22:02:37.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.662" endtime="20201115 22:02:37.103"></status>
</kw>
<msg timestamp="20201115 22:02:37.103" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.112" endtime="20201115 22:02:37.180"></status>
</kw>
<msg timestamp="20201115 22:02:37.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.110" endtime="20201115 22:02:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.181" endtime="20201115 22:02:37.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.184" endtime="20201115 22:02:37.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.108" endtime="20201115 22:02:37.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.105" endtime="20201115 22:02:37.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.193" endtime="20201115 22:02:37.479"></status>
</kw>
<msg timestamp="20201115 22:02:37.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.191" endtime="20201115 22:02:37.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.483" endtime="20201115 22:02:37.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.492" endtime="20201115 22:02:37.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.188" endtime="20201115 22:02:37.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.187" endtime="20201115 22:02:37.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.498" level="INFO">${RESULT} = [{'time': 0.022406097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.894400000000134e-05, 'source_diff': 6.894400000000134e-05}, {'time': 0.023600681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.495" endtime="20201115 22:02:37.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.511" level="INFO">${OVERHEAD} = {'time': [0.022406097, 0.023600681, 0.024805125, 0.026005583, 0.027204194, 0.028411833, 0.0296145, 0.030819986, 0.032025514, 0.033222944, 0.034417292, 0.035622208, 0.036819528, 0.038019375, 0.03923048...</msg>
<status status="PASS" starttime="20201115 22:02:37.499" endtime="20201115 22:02:37.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.516" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:37.515" endtime="20201115 22:02:37.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.518" level="INFO">VALUE: [6.894400000000134e-05, 6.883399999999679e-05, 6.880600000000112e-05, 6.880499999999817e-05, 6.883300000000078e-05, 6.881900000000121e-05, 6.881899999999774e-05, 6.881900000000121e-05, 6.880599999999765e-05, 6.880499999999817e-05, 6.882000000000416e-05, 6.881900000000468e-05, 6.879199999999808e-05, 6.879199999999808e-05, 6.880500000000511e-05, 6.881999999999722e-05, 6.877799999999851e-05, 6.879199999999808e-05, 6.882000000000416e-05, 6.881900000000468e-05, 6.881899999999774e-05, 6.880599999999765e-05, 6.880500000000511e-05, 6.881999999999722e-05, 6.882000000000416e-05, 6.882000000000416e-05, 6.883400000000373e-05, 6.881900000000468e-05, 6.882000000000416e-05, 6.877799999999851e-05, 6.881900000000468e-05, 6.881899999999774e-05, 6.882000000000416e-05, 6.879199999999808e-05, 6.881899999999774e-05, 6.883400000000373e-05, 6.880600000000459e-05, 6.880499999999123e-05, 6.880600000000459e-05, 6.888900000000253e-05, 6.87769999999921e-05, 6.881899999999774e-05, 6.879199999999808e-05, 6.881999999999722e-05, 6.883300000000425e-05, 6.880499999999123e-05, 6.881899999999774e-05, 6.881899999999774e-05, 6.876399999999894e-05, 6.880599999999071e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.517" endtime="20201115 22:02:37.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.512" endtime="20201115 22:02:37.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.521" endtime="20201115 22:02:37.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.524" endtime="20201115 22:02:37.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.523" endtime="20201115 22:02:37.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.520" endtime="20201115 22:02:37.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.103" endtime="20201115 22:02:37.545"></status>
</kw>
<msg timestamp="20201115 22:02:37.546" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.554" endtime="20201115 22:02:37.622"></status>
</kw>
<msg timestamp="20201115 22:02:37.623" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.553" endtime="20201115 22:02:37.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.624" endtime="20201115 22:02:37.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.626" endtime="20201115 22:02:37.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.550" endtime="20201115 22:02:37.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.548" endtime="20201115 22:02:37.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.635" endtime="20201115 22:02:37.933"></status>
</kw>
<msg timestamp="20201115 22:02:37.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.634" endtime="20201115 22:02:37.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.938" endtime="20201115 22:02:37.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.946" endtime="20201115 22:02:37.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.631" endtime="20201115 22:02:37.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.630" endtime="20201115 22:02:37.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.952" level="INFO">${RESULT} = [{'time': 0.022617944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.89160000000022e-05, 'source_diff': 6.89160000000022e-05}, {'time': 0.023821153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:37.949" endtime="20201115 22:02:37.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.965" level="INFO">${OVERHEAD} = {'time': [0.022617944, 0.023821153, 0.025029861, 0.026226889, 0.027431444, 0.028639056, 0.029848806, 0.031042611, 0.032236806, 0.033436944, 0.034647069, 0.035855958, 0.037054, 0.038252903, 0.039449819...</msg>
<status status="PASS" starttime="20201115 22:02:37.953" endtime="20201115 22:02:37.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.970" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:37.969" endtime="20201115 22:02:37.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.972" level="INFO">VALUE: [6.89160000000022e-05, 6.884700000000035e-05, 6.877800000000198e-05, 6.882000000000069e-05, 6.880499999999817e-05, 6.880600000000112e-05, 6.877799999999851e-05, 6.879200000000155e-05, 6.873699999999927e-05, 6.879100000000554e-05, 6.87359999999998e-05, 6.87909999999986e-05, 6.880599999999765e-05, 6.879199999999808e-05, 6.87909999999986e-05, 6.87909999999986e-05, 6.880599999999765e-05, 6.87909999999986e-05, 6.877799999999851e-05, 6.87909999999986e-05, 6.881899999999774e-05, 6.874999999999937e-05, 6.879100000000554e-05, 6.880499999999817e-05, 6.880600000000459e-05, 6.879199999999808e-05, 6.881900000000468e-05, 6.880499999999817e-05, 6.879200000000502e-05, 6.879199999999808e-05, 6.876399999999894e-05, 6.881899999999774e-05, 6.884700000000382e-05, 6.880500000000511e-05, 6.880600000000459e-05, 6.879199999999808e-05, 6.87909999999986e-05, 6.877799999999157e-05, 6.880500000000511e-05, 6.881999999999722e-05, 6.877800000000545e-05, 6.880600000000459e-05, 6.881899999999774e-05, 6.874999999999243e-05, 6.87500000000063e-05, 6.881899999999774e-05, 6.880499999999123e-05, 6.881899999999774e-05, 6.884799999999636e-05, 6.877800000000545e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.971" endtime="20201115 22:02:37.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.966" endtime="20201115 22:02:37.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.975" endtime="20201115 22:02:37.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.979" endtime="20201115 22:02:37.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.977" endtime="20201115 22:02:37.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.974" endtime="20201115 22:02:37.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.546" endtime="20201115 22:02:37.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.709" endtime="20201115 22:02:38.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.708" endtime="20201115 22:02:38.000"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.002" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.011" endtime="20201115 22:02:38.082"></status>
</kw>
<msg timestamp="20201115 22:02:38.083" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.009" endtime="20201115 22:02:38.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.084" endtime="20201115 22:02:38.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.086" endtime="20201115 22:02:38.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.006" endtime="20201115 22:02:38.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.004" endtime="20201115 22:02:38.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.096" endtime="20201115 22:02:38.382"></status>
</kw>
<msg timestamp="20201115 22:02:38.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.094" endtime="20201115 22:02:38.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024873319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.386" endtime="20201115 22:02:38.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.394" endtime="20201115 22:02:38.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.092" endtime="20201115 22:02:38.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.090" endtime="20201115 22:02:38.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.401" level="INFO">${RESULT} = [{'time': 0.024873319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.134700000000285e-05, 'source_diff': 7.134700000000285e-05}, {'time': 0.026139486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:38.398" endtime="20201115 22:02:38.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.414" level="INFO">${OVERHEAD} = {'time': [0.024873319, 0.026139486, 0.027412361, 0.028692819, 0.029958681, 0.03122975, 0.032497375, 0.033778181, 0.035045819, 0.036315083, 0.037596722, 0.038862792, 0.040132639, 0.041405306, 0.0426751...</msg>
<status status="PASS" starttime="20201115 22:02:38.402" endtime="20201115 22:02:38.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.418" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:38.417" endtime="20201115 22:02:38.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.421" level="INFO">VALUE: [7.134700000000285e-05, 7.127800000000101e-05, 7.123599999999883e-05, 7.116600000000098e-05, 7.125000000000187e-05, 7.116700000000045e-05, 7.12360000000023e-05, 7.127799999999407e-05, 7.12360000000023e-05, 7.123599999999536e-05, 7.125000000000187e-05, 7.126400000000144e-05, 7.124999999999493e-05, 7.123700000000177e-05, 7.131999999999972e-05, 7.122200000000273e-05, 7.130600000000015e-05, 7.127800000000101e-05, 7.124999999999493e-05, 7.125000000000187e-05, 7.12639999999945e-05, 7.117999999999708e-05, 7.12360000000023e-05, 7.125000000000187e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.116700000000392e-05, 7.126400000000144e-05, 7.122299999999526e-05, 7.127800000000101e-05, 7.12500000000088e-05, 7.119500000001e-05, 7.123700000000177e-05, 7.12500000000088e-05, 7.123700000000177e-05, 7.126399999998756e-05, 7.122199999999579e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.127800000000795e-05, 7.12500000000088e-05, 7.12500000000088e-05, 7.122199999999579e-05, 7.12500000000088e-05, 7.123700000000177e-05, 7.12360000000023e-05, 7.120799999998928e-05, 7.127800000000795e-05, 7.12360000000023e-05, 7.122200000000967e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.419" endtime="20201115 22:02:38.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.415" endtime="20201115 22:02:38.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.424" endtime="20201115 22:02:38.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.427" endtime="20201115 22:02:38.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.426" endtime="20201115 22:02:38.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.422" endtime="20201115 22:02:38.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.002" endtime="20201115 22:02:38.448"></status>
</kw>
<msg timestamp="20201115 22:02:38.448" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.457" endtime="20201115 22:02:38.528"></status>
</kw>
<msg timestamp="20201115 22:02:38.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.455" endtime="20201115 22:02:38.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.530" endtime="20201115 22:02:38.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.533" endtime="20201115 22:02:38.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.453" endtime="20201115 22:02:38.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.451" endtime="20201115 22:02:38.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.542" endtime="20201115 22:02:38.844"></status>
</kw>
<msg timestamp="20201115 22:02:38.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.540" endtime="20201115 22:02:38.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.848" endtime="20201115 22:02:38.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.856" endtime="20201115 22:02:38.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.538" endtime="20201115 22:02:38.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.536" endtime="20201115 22:02:38.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.863" level="INFO">${RESULT} = [{'time': 0.022551958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.141600000000123e-05, 'source_diff': 7.141600000000123e-05}, {'time': 0.023826778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:38.859" endtime="20201115 22:02:38.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.875" level="INFO">${OVERHEAD} = {'time': [0.022551958, 0.023826778, 0.025106833, 0.026372875, 0.027646194, 0.028920944, 0.030186986, 0.031457417, 0.032721694, 0.033991292, 0.035266181, 0.036531708, 0.037807806, 0.039080083, 0.040353...</msg>
<status status="PASS" starttime="20201115 22:02:38.864" endtime="20201115 22:02:38.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.880" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:38.879" endtime="20201115 22:02:38.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.882" level="INFO">VALUE: [7.141600000000123e-05, 7.12499999999984e-05, 7.12499999999984e-05, 7.123599999999883e-05, 7.12629999999985e-05, 7.123599999999883e-05, 7.122199999999926e-05, 7.12230000000022e-05, 7.12360000000023e-05, 7.129200000000058e-05, 7.131999999999972e-05, 7.126400000000144e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.126400000000144e-05, 7.126400000000144e-05, 7.124999999999493e-05, 7.125000000000187e-05, 7.115299999999741e-05, 7.12360000000023e-05, 7.123599999999536e-05, 7.122200000000273e-05, 7.125000000000187e-05, 7.126400000000144e-05, 7.122200000000273e-05, 7.124999999999493e-05, 7.12360000000023e-05, 7.123700000000177e-05, 7.123700000000177e-05, 7.12360000000023e-05, 7.123700000000177e-05, 7.125000000000187e-05, 7.124999999999493e-05, 7.124999999999493e-05, 7.129200000000058e-05, 7.120900000000263e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.129200000000058e-05, 7.12360000000023e-05, 7.122200000000967e-05, 7.126400000000144e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.124999999999493e-05, 7.129200000000058e-05, 7.120800000000316e-05, 7.126400000000144e-05, 7.122199999999579e-05]</msg>
<status status="PASS" starttime="20201115 22:02:38.881" endtime="20201115 22:02:38.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.876" endtime="20201115 22:02:38.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.885" endtime="20201115 22:02:38.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.889" endtime="20201115 22:02:38.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.887" endtime="20201115 22:02:38.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.884" endtime="20201115 22:02:38.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.449" endtime="20201115 22:02:38.910"></status>
</kw>
<msg timestamp="20201115 22:02:38.910" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.919" endtime="20201115 22:02:38.991"></status>
</kw>
<msg timestamp="20201115 22:02:38.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.917" endtime="20201115 22:02:38.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.992" endtime="20201115 22:02:38.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.995" endtime="20201115 22:02:38.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.914" endtime="20201115 22:02:38.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.912" endtime="20201115 22:02:38.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.004" endtime="20201115 22:02:39.290"></status>
</kw>
<msg timestamp="20201115 22:02:39.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:39.002" endtime="20201115 22:02:39.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:39.295" endtime="20201115 22:02:39.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.302" endtime="20201115 22:02:39.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.000" endtime="20201115 22:02:39.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.998" endtime="20201115 22:02:39.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.309" level="INFO">${RESULT} = [{'time': 0.022989347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.134699999999938e-05, 'source_diff': 7.134699999999938e-05}, {'time': 0.024272514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:39.306" endtime="20201115 22:02:39.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.322" level="INFO">${OVERHEAD} = {'time': [0.022989347, 0.024272514, 0.025555708, 0.026838625, 0.028105847, 0.029374653, 0.030648694, 0.031929694, 0.033205708, 0.034485861, 0.035753792, 0.03702325, 0.038304569, 0.039577764, 0.0408453...</msg>
<status status="PASS" starttime="20201115 22:02:39.310" endtime="20201115 22:02:39.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.326" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:39.325" endtime="20201115 22:02:39.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.329" level="INFO">VALUE: [7.134699999999938e-05, 7.12499999999984e-05, 7.12499999999984e-05, 7.127800000000101e-05, 7.123599999999883e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.126300000000196e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.127800000000101e-05, 7.12360000000023e-05, 7.129099999999416e-05, 7.125000000000187e-05, 7.122199999999579e-05, 7.12360000000023e-05, 7.116599999999751e-05, 7.12360000000023e-05, 7.120900000000263e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.123599999999536e-05, 7.122199999999579e-05, 7.12360000000023e-05, 7.122199999999579e-05, 7.126400000000144e-05, 7.124999999999493e-05, 7.120900000000263e-05, 7.120799999999622e-05, 7.126400000000144e-05, 7.122199999999579e-05, 7.123599999999536e-05, 7.124999999999493e-05, 7.129200000000058e-05, 7.12360000000023e-05, 7.126300000000196e-05, 7.122300000000914e-05, 7.127800000000795e-05, 7.124999999999493e-05, 7.12769999999946e-05, 7.123599999998842e-05, 7.130499999999373e-05, 7.12360000000023e-05, 7.131900000000024e-05, 7.123700000000177e-05, 7.12500000000088e-05, 7.123599999998842e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.126400000000144e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.328" endtime="20201115 22:02:39.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.323" endtime="20201115 22:02:39.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.332" endtime="20201115 22:02:39.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.335" endtime="20201115 22:02:39.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.334" endtime="20201115 22:02:39.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.330" endtime="20201115 22:02:39.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.910" endtime="20201115 22:02:39.359"></status>
</kw>
<msg timestamp="20201115 22:02:39.359" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.384" endtime="20201115 22:02:39.459"></status>
</kw>
<msg timestamp="20201115 22:02:39.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.381" endtime="20201115 22:02:39.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.465" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.462" endtime="20201115 22:02:39.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.467" endtime="20201115 22:02:39.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.376" endtime="20201115 22:02:39.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.371" endtime="20201115 22:02:39.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.485" endtime="20201115 22:02:39.781"></status>
</kw>
<msg timestamp="20201115 22:02:39.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043150319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.482" endtime="20201115 22:02:39.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043150319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.785" endtime="20201115 22:02:39.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.793" endtime="20201115 22:02:39.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.477" endtime="20201115 22:02:39.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.473" endtime="20201115 22:02:39.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.800" level="INFO">${RESULT} = [{'time': 0.043221694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.137499999999852e-05, 'source_diff': 7.137499999999852e-05}, {'time': 0.044495792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:39.796" endtime="20201115 22:02:39.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.813" level="INFO">${OVERHEAD} = {'time': [0.043221694, 0.044495792, 0.045767125, 0.047043389, 0.048319944, 0.049586236, 0.050865583, 0.052134583, 0.05341175, 0.054685167, 0.055965403, 0.057241069, 0.0585045, 0.059772111, 0.061047708...</msg>
<status status="PASS" starttime="20201115 22:02:39.801" endtime="20201115 22:02:39.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.817" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:39.816" endtime="20201115 22:02:39.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.820" level="INFO">VALUE: [7.137499999999852e-05, 7.12230000000022e-05, 7.125000000000187e-05, 7.124999999999493e-05, 7.122199999999579e-05, 7.127800000000101e-05, 7.12360000000023e-05, 7.123599999999536e-05, 7.122200000000273e-05, 7.119500000000306e-05, 7.123599999999536e-05, 7.122199999999579e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.120799999999622e-05, 7.12360000000023e-05, 7.123599999998842e-05, 7.120900000000263e-05, 7.115300000000435e-05, 7.123599999998842e-05, 7.122199999999579e-05, 7.126400000000144e-05, 7.124999999999493e-05, 7.127799999999407e-05, 7.120800000000316e-05, 7.12360000000023e-05, 7.123599999998842e-05, 7.117999999999014e-05, 7.124999999999493e-05, 7.122299999999526e-05, 7.12360000000023e-05, 7.123700000000177e-05, 7.12360000000023e-05, 7.119499999999612e-05, 7.124999999999493e-05, 7.118000000000402e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.122200000000967e-05, 7.127700000000847e-05, 7.120900000000263e-05, 7.123599999998842e-05, 7.122299999999526e-05, 7.123599999998842e-05, 7.120799999998928e-05, 7.12360000000023e-05, 7.122199999999579e-05, 7.124999999999493e-05, 7.12360000000023e-05, 7.122199999999579e-05]</msg>
<status status="PASS" starttime="20201115 22:02:39.818" endtime="20201115 22:02:39.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.814" endtime="20201115 22:02:39.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.823" endtime="20201115 22:02:39.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.827" endtime="20201115 22:02:39.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.825" endtime="20201115 22:02:39.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.821" endtime="20201115 22:02:39.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.367" endtime="20201115 22:02:39.847"></status>
</kw>
<msg timestamp="20201115 22:02:39.848" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.856" endtime="20201115 22:02:39.928"></status>
</kw>
<msg timestamp="20201115 22:02:39.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.855" endtime="20201115 22:02:39.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.929" endtime="20201115 22:02:39.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.932" endtime="20201115 22:02:39.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.852" endtime="20201115 22:02:39.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.850" endtime="20201115 22:02:39.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.941" endtime="20201115 22:02:40.226"></status>
</kw>
<msg timestamp="20201115 22:02:40.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.939" endtime="20201115 22:02:40.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.231" endtime="20201115 22:02:40.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.239" endtime="20201115 22:02:40.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.937" endtime="20201115 22:02:40.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.935" endtime="20201115 22:02:40.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.245" level="INFO">${RESULT} = [{'time': 0.022510903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.136099999999895e-05, 'source_diff': 7.136099999999895e-05}, {'time': 0.023776333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.242" endtime="20201115 22:02:40.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.258" level="INFO">${OVERHEAD} = {'time': [0.022510903, 0.023776333, 0.025051097, 0.026317361, 0.027594222, 0.028863028, 0.030132764, 0.03139625, 0.032673208, 0.033955417, 0.035231764, 0.036505958, 0.037788222, 0.039057639, 0.0403308...</msg>
<status status="PASS" starttime="20201115 22:02:40.246" endtime="20201115 22:02:40.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.262" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:40.261" endtime="20201115 22:02:40.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.265" level="INFO">VALUE: [7.136099999999895e-05, 7.126400000000144e-05, 7.130500000000067e-05, 7.125000000000187e-05, 7.126400000000144e-05, 7.12499999999984e-05, 7.123599999999883e-05, 7.122200000000273e-05, 7.122200000000273e-05, 7.125000000000187e-05, 7.123599999999536e-05, 7.127700000000153e-05, 7.119400000000359e-05, 7.122199999999579e-05, 7.125000000000187e-05, 7.123700000000177e-05, 7.125000000000187e-05, 7.12360000000023e-05, 7.122200000000273e-05, 7.123699999999483e-05, 7.125000000000187e-05, 7.120800000000316e-05, 7.12360000000023e-05, 7.125000000000187e-05, 7.122199999999579e-05, 7.123599999999536e-05, 7.122200000000273e-05, 7.125000000000187e-05, 7.122199999999579e-05, 7.125000000000187e-05, 7.125000000000187e-05, 7.130500000000067e-05, 7.129200000000058e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.12500000000088e-05, 7.12360000000023e-05, 7.12360000000023e-05, 7.122300000000914e-05, 7.12500000000088e-05, 7.12360000000023e-05, 7.124999999999493e-05, 7.12360000000023e-05, 7.123599999998842e-05, 7.122200000000967e-05, 7.124999999999493e-05, 7.124999999999493e-05, 7.124999999999493e-05, 7.126400000000144e-05, 7.122200000000967e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.263" endtime="20201115 22:02:40.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.259" endtime="20201115 22:02:40.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.268" endtime="20201115 22:02:40.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.272" endtime="20201115 22:02:40.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.270" endtime="20201115 22:02:40.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.267" endtime="20201115 22:02:40.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.848" endtime="20201115 22:02:40.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.001" endtime="20201115 22:02:40.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.000" endtime="20201115 22:02:40.293"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.295" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.304" endtime="20201115 22:02:40.379"></status>
</kw>
<msg timestamp="20201115 22:02:40.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.302" endtime="20201115 22:02:40.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.382" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.381" endtime="20201115 22:02:40.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.383" endtime="20201115 22:02:40.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.300" endtime="20201115 22:02:40.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.298" endtime="20201115 22:02:40.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.392" endtime="20201115 22:02:40.679"></status>
</kw>
<msg timestamp="20201115 22:02:40.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.390" endtime="20201115 22:02:40.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024893028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.683" endtime="20201115 22:02:40.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.691" endtime="20201115 22:02:40.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.388" endtime="20201115 22:02:40.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.386" endtime="20201115 22:02:40.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.698" level="INFO">${RESULT} = [{'time': 0.024893028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.379199999999961e-05, 'source_diff': 7.379199999999961e-05}, {'time': 0.026245931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.694" endtime="20201115 22:02:40.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.710" level="INFO">${OVERHEAD} = {'time': [0.024893028, 0.026245931, 0.027587917, 0.028929264, 0.030266319, 0.031606444, 0.032949847, 0.034294597, 0.035649167, 0.036995431, 0.038343931, 0.039685625, 0.041029167, 0.042373861, 0.043726...</msg>
<status status="PASS" starttime="20201115 22:02:40.698" endtime="20201115 22:02:40.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.715" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:40.714" endtime="20201115 22:02:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.718" level="INFO">VALUE: [7.379199999999961e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.37500000000009e-05, 7.376299999999752e-05, 7.367999999999958e-05, 7.370800000000566e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.368099999999905e-05, 7.370799999999872e-05, 7.368099999999905e-05, 7.369399999999915e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.369399999999915e-05, 7.366699999999948e-05, 7.367999999999958e-05, 7.366699999999948e-05, 7.36110000000012e-05, 7.366600000000001e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.362500000000077e-05, 7.363900000000034e-05, 7.365200000000044e-05, 7.366699999999948e-05, 7.365300000000685e-05, 7.365299999999297e-05, 7.366699999999948e-05, 7.368000000000652e-05, 7.363900000000034e-05, 7.365299999999297e-05, 7.366600000000001e-05, 7.365299999999297e-05, 7.359700000000857e-05, 7.366699999999948e-05, 7.368099999999211e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.365300000000685e-05, 7.365299999999297e-05, 7.365200000000738e-05, 7.366699999999948e-05, 7.369399999999915e-05, 7.366699999999948e-05, 7.369499999999862e-05]</msg>
<status status="PASS" starttime="20201115 22:02:40.716" endtime="20201115 22:02:40.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.711" endtime="20201115 22:02:40.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.721" endtime="20201115 22:02:40.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.724" endtime="20201115 22:02:40.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.723" endtime="20201115 22:02:40.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.719" endtime="20201115 22:02:40.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.296" endtime="20201115 22:02:40.745"></status>
</kw>
<msg timestamp="20201115 22:02:40.745" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.754" endtime="20201115 22:02:40.829"></status>
</kw>
<msg timestamp="20201115 22:02:40.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.752" endtime="20201115 22:02:40.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.832" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.831" endtime="20201115 22:02:40.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.833" endtime="20201115 22:02:40.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.750" endtime="20201115 22:02:40.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.748" endtime="20201115 22:02:40.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.842" endtime="20201115 22:02:41.145"></status>
</kw>
<msg timestamp="20201115 22:02:41.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.841" endtime="20201115 22:02:41.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.149" endtime="20201115 22:02:41.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.157" endtime="20201115 22:02:41.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.838" endtime="20201115 22:02:41.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.836" endtime="20201115 22:02:41.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.164" level="INFO">${RESULT} = [{'time': 0.022498181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.379199999999961e-05, 'source_diff': 7.379199999999961e-05}, {'time': 0.023844139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.161" endtime="20201115 22:02:41.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.177" level="INFO">${OVERHEAD} = {'time': [0.022498181, 0.023844139, 0.025189847, 0.026528042, 0.027881556, 0.029224444, 0.030574208, 0.03192, 0.033262347, 0.034609333, 0.035955444, 0.037293278, 0.038647069, 0.039991222, 0.041339125,...</msg>
<status status="PASS" starttime="20201115 22:02:41.165" endtime="20201115 22:02:41.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.182" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:41.181" endtime="20201115 22:02:41.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.184" level="INFO">VALUE: [7.379199999999961e-05, 7.368099999999905e-05, 7.368000000000305e-05, 7.36110000000012e-05, 7.369499999999862e-05, 7.36379999999974e-05, 7.367999999999958e-05, 7.372199999999829e-05, 7.366600000000001e-05, 7.365200000000044e-05, 7.369400000000609e-05, 7.366699999999948e-05, 7.366600000000001e-05, 7.365299999999991e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.369399999999915e-05, 7.36110000000012e-05, 7.366600000000001e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.366600000000001e-05, 7.363900000000034e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.366600000000001e-05, 7.366699999999948e-05, 7.367999999999264e-05, 7.366600000000001e-05, 7.365300000000685e-05, 7.365300000000685e-05, 7.367999999999264e-05, 7.36519999999935e-05, 7.366699999999948e-05, 7.365300000000685e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.368099999999211e-05, 7.368099999999211e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.36519999999935e-05, 7.365299999999297e-05, 7.366600000000001e-05, 7.363900000000034e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.183" endtime="20201115 22:02:41.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.178" endtime="20201115 22:02:41.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.187" endtime="20201115 22:02:41.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.190" endtime="20201115 22:02:41.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.189" endtime="20201115 22:02:41.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.185" endtime="20201115 22:02:41.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.746" endtime="20201115 22:02:41.211"></status>
</kw>
<msg timestamp="20201115 22:02:41.211" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.220" endtime="20201115 22:02:41.296"></status>
</kw>
<msg timestamp="20201115 22:02:41.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.219" endtime="20201115 22:02:41.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.297" endtime="20201115 22:02:41.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.300" endtime="20201115 22:02:41.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.216" endtime="20201115 22:02:41.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.214" endtime="20201115 22:02:41.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.308" endtime="20201115 22:02:41.595"></status>
</kw>
<msg timestamp="20201115 22:02:41.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.307" endtime="20201115 22:02:41.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.599" endtime="20201115 22:02:41.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.608" endtime="20201115 22:02:41.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.304" endtime="20201115 22:02:41.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.303" endtime="20201115 22:02:41.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.615" level="INFO">${RESULT} = [{'time': 0.022587708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.377700000000056e-05, 'source_diff': 7.377700000000056e-05}, {'time': 0.023933389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.611" endtime="20201115 22:02:41.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.628" level="INFO">${OVERHEAD} = {'time': [0.022587708, 0.023933389, 0.025289653, 0.026628778, 0.027981875, 0.029326639, 0.030680625, 0.032026875, 0.033383042, 0.034729597, 0.036084944, 0.037429653, 0.038766514, 0.040105667, 0.041461...</msg>
<status status="PASS" starttime="20201115 22:02:41.616" endtime="20201115 22:02:41.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.633" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:41.632" endtime="20201115 22:02:41.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.635" level="INFO">VALUE: [7.377700000000056e-05, 7.369499999999862e-05, 7.366699999999948e-05, 7.369499999999862e-05, 7.368099999999905e-05, 7.369500000000209e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.369399999999915e-05, 7.366600000000001e-05, 7.365299999999991e-05, 7.363900000000034e-05, 7.372299999999776e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.365200000000044e-05, 7.36519999999935e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.365299999999991e-05, 7.368000000000652e-05, 7.365299999999991e-05, 7.362500000000077e-05, 7.366699999999948e-05, 7.366600000000001e-05, 7.365299999999991e-05, 7.36110000000012e-05, 7.367999999999264e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.368100000000599e-05, 7.366699999999948e-05, 7.368000000000652e-05, 7.365300000000685e-05, 7.365300000000685e-05, 7.365300000000685e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.366600000000001e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.365300000000685e-05, 7.366600000000001e-05]</msg>
<status status="PASS" starttime="20201115 22:02:41.634" endtime="20201115 22:02:41.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.629" endtime="20201115 22:02:41.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.638" endtime="20201115 22:02:41.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.642" endtime="20201115 22:02:41.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.640" endtime="20201115 22:02:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.637" endtime="20201115 22:02:41.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.212" endtime="20201115 22:02:41.662"></status>
</kw>
<msg timestamp="20201115 22:02:41.663" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.671" endtime="20201115 22:02:41.747"></status>
</kw>
<msg timestamp="20201115 22:02:41.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.670" endtime="20201115 22:02:41.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.748" endtime="20201115 22:02:41.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.751" endtime="20201115 22:02:41.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.667" endtime="20201115 22:02:41.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.665" endtime="20201115 22:02:41.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.760" endtime="20201115 22:02:42.061"></status>
</kw>
<msg timestamp="20201115 22:02:42.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:41.758" endtime="20201115 22:02:42.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:42.065" endtime="20201115 22:02:42.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.073" endtime="20201115 22:02:42.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.756" endtime="20201115 22:02:42.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.754" endtime="20201115 22:02:42.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.080" level="INFO">${RESULT} = [{'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.376400000000047e-05, 'source_diff': 7.376400000000047e-05}, {'time': 0.024029694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:42.076" endtime="20201115 22:02:42.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.093" level="INFO">${OVERHEAD} = {'time': [0.02267475, 0.024029694, 0.025367847, 0.026712528, 0.028064333, 0.029415833, 0.030758, 0.032113889, 0.033453556, 0.0348075, 0.036158347, 0.037509847, 0.038857889, 0.040212681, 0.041564361, 0...</msg>
<status status="PASS" starttime="20201115 22:02:42.081" endtime="20201115 22:02:42.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.097" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:42.096" endtime="20201115 22:02:42.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.100" level="INFO">VALUE: [7.376400000000047e-05, 7.366600000000001e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.366600000000001e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.366600000000001e-05, 7.367999999999958e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.363900000000034e-05, 7.370900000000513e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.369400000000609e-05, 7.368099999999905e-05, 7.366699999999948e-05, 7.365200000000044e-05, 7.367999999999958e-05, 7.36110000000012e-05, 7.36389999999934e-05, 7.365299999999991e-05, 7.370899999999819e-05, 7.365200000000044e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.36519999999935e-05, 7.365299999999297e-05, 7.365300000000685e-05, 7.368100000000599e-05, 7.368000000000652e-05, 7.365200000000738e-05, 7.361099999998733e-05, 7.365299999999297e-05, 7.362499999999383e-05, 7.365200000000738e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.365300000000685e-05, 7.362500000000771e-05, 7.366600000000001e-05, 7.363800000000087e-05, 7.365300000000685e-05, 7.365300000000685e-05, 7.365299999999297e-05, 7.365299999999297e-05]</msg>
<status status="PASS" starttime="20201115 22:02:42.098" endtime="20201115 22:02:42.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.094" endtime="20201115 22:02:42.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.103" endtime="20201115 22:02:42.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.106" endtime="20201115 22:02:42.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.104" endtime="20201115 22:02:42.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.101" endtime="20201115 22:02:42.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.663" endtime="20201115 22:02:42.127"></status>
</kw>
<msg timestamp="20201115 22:02:42.127" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.135" endtime="20201115 22:02:42.211"></status>
</kw>
<msg timestamp="20201115 22:02:42.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.134" endtime="20201115 22:02:42.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.212" endtime="20201115 22:02:42.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.215" endtime="20201115 22:02:42.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.131" endtime="20201115 22:02:42.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.129" endtime="20201115 22:02:42.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.224" endtime="20201115 22:02:42.510"></status>
</kw>
<msg timestamp="20201115 22:02:42.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.222" endtime="20201115 22:02:42.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.515" endtime="20201115 22:02:42.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.523" endtime="20201115 22:02:42.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.220" endtime="20201115 22:02:42.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.218" endtime="20201115 22:02:42.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.529" level="INFO">${RESULT} = [{'time': 0.022491403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.379199999999961e-05, 'source_diff': 7.379199999999961e-05}, {'time': 0.023829278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.526" endtime="20201115 22:02:42.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.542" level="INFO">${OVERHEAD} = {'time': [0.022491403, 0.023829278, 0.025169319, 0.026512819, 0.027856056, 0.029203556, 0.030556583, 0.031893778, 0.033240042, 0.034590611, 0.035941208, 0.037286444, 0.038629181, 0.039979764, 0.041325...</msg>
<status status="PASS" starttime="20201115 22:02:42.530" endtime="20201115 22:02:42.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.547" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:42.546" endtime="20201115 22:02:42.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.549" level="INFO">VALUE: [7.379199999999961e-05, 7.366699999999948e-05, 7.365200000000044e-05, 7.365200000000044e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.365199999999697e-05, 7.365299999999991e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.367999999999958e-05, 7.365200000000044e-05, 7.362500000000077e-05, 7.366699999999948e-05, 7.368100000000599e-05, 7.365299999999991e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.365200000000044e-05, 7.366699999999948e-05, 7.366600000000001e-05, 7.362500000000077e-05, 7.365299999999991e-05, 7.368099999999905e-05, 7.367999999999958e-05, 7.366699999999948e-05, 7.365200000000044e-05, 7.362500000000077e-05, 7.362500000000077e-05, 7.365299999999991e-05, 7.372299999999776e-05, 7.366600000000001e-05, 7.365300000000685e-05, 7.366600000000001e-05, 7.369399999999915e-05, 7.366699999999948e-05, 7.35969999999947e-05, 7.366600000000001e-05, 7.366699999999948e-05, 7.365200000000738e-05, 7.365300000000685e-05, 7.366699999999948e-05, 7.365300000000685e-05, 7.372299999999776e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.35969999999947e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201115 22:02:42.548" endtime="20201115 22:02:42.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.543" endtime="20201115 22:02:42.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.552" endtime="20201115 22:02:42.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.555" endtime="20201115 22:02:42.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.554" endtime="20201115 22:02:42.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.551" endtime="20201115 22:02:42.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.127" endtime="20201115 22:02:42.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.294" endtime="20201115 22:02:42.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.293" endtime="20201115 22:02:42.577"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.579" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.587" endtime="20201115 22:02:42.667"></status>
</kw>
<msg timestamp="20201115 22:02:42.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.586" endtime="20201115 22:02:42.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.668" endtime="20201115 22:02:42.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.671" endtime="20201115 22:02:42.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.583" endtime="20201115 22:02:42.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.581" endtime="20201115 22:02:42.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.680" endtime="20201115 22:02:42.967"></status>
</kw>
<msg timestamp="20201115 22:02:42.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.679" endtime="20201115 22:02:42.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025026472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.971" endtime="20201115 22:02:42.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.979" endtime="20201115 22:02:42.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.676" endtime="20201115 22:02:42.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.674" endtime="20201115 22:02:42.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.986" level="INFO">${RESULT} = [{'time': 0.025102681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.620900000000069e-05, 'source_diff': 7.620900000000069e-05}, {'time': 0.026529736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.982" endtime="20201115 22:02:42.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.999" level="INFO">${OVERHEAD} = {'time': [0.025102681, 0.026529736, 0.027945611, 0.029370597, 0.030792694, 0.032206319, 0.033626111, 0.035047569, 0.036477722, 0.037896042, 0.039309958, 0.040733236, 0.042152528, 0.043580583, 0.044994...</msg>
<status status="PASS" starttime="20201115 22:02:42.987" endtime="20201115 22:02:42.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.003" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:43.002" endtime="20201115 22:02:43.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.006" level="INFO">VALUE: [7.620900000000069e-05, 7.606900000000152e-05, 7.606899999999805e-05, 7.608299999999762e-05, 7.608299999999762e-05, 7.608299999999762e-05, 7.608299999999762e-05, 7.605499999999848e-05, 7.608299999999762e-05, 7.60839999999971e-05, 7.608299999999762e-05, 7.60969999999972e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.611099999999676e-05, 7.608299999999762e-05, 7.61110000000037e-05, 7.615299999999547e-05, 7.61110000000037e-05, 7.617999999999514e-05, 7.61110000000037e-05, 7.61110000000037e-05, 7.609700000000413e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.61110000000037e-05, 7.606899999999805e-05, 7.615299999999547e-05, 7.609799999999667e-05, 7.61110000000037e-05, 7.606899999999805e-05, 7.609700000001107e-05, 7.602800000000576e-05, 7.61110000000037e-05, 7.604199999999839e-05, 7.60969999999972e-05, 7.609700000001107e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.606999999999753e-05, 7.609799999999667e-05, 7.61110000000037e-05, 7.608300000000456e-05, 7.608299999999069e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.60269999999924e-05, 7.60969999999972e-05, 7.612499999999633e-05, 7.608300000000456e-05]</msg>
<status status="PASS" starttime="20201115 22:02:43.004" endtime="20201115 22:02:43.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.000" endtime="20201115 22:02:43.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.009" endtime="20201115 22:02:43.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.012" endtime="20201115 22:02:43.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.011" endtime="20201115 22:02:43.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.007" endtime="20201115 22:02:43.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.579" endtime="20201115 22:02:43.033"></status>
</kw>
<msg timestamp="20201115 22:02:43.033" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.042" endtime="20201115 22:02:43.121"></status>
</kw>
<msg timestamp="20201115 22:02:43.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.040" endtime="20201115 22:02:43.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.122" endtime="20201115 22:02:43.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.125" endtime="20201115 22:02:43.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.038" endtime="20201115 22:02:43.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.035" endtime="20201115 22:02:43.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.134" endtime="20201115 22:02:43.437"></status>
</kw>
<msg timestamp="20201115 22:02:43.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.133" endtime="20201115 22:02:43.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.441" endtime="20201115 22:02:43.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.449" endtime="20201115 22:02:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.130" endtime="20201115 22:02:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.128" endtime="20201115 22:02:43.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.456" level="INFO">${RESULT} = [{'time': 0.022688833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.620799999999775e-05, 'source_diff': 7.620799999999775e-05}, {'time': 0.024107514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.453" endtime="20201115 22:02:43.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.469" level="INFO">${OVERHEAD} = {'time': [0.022688833, 0.024107514, 0.025529278, 0.026950014, 0.028370167, 0.029786306, 0.031217028, 0.032641639, 0.034057556, 0.035488694, 0.036906806, 0.038325556, 0.039744847, 0.041167569, 0.042588...</msg>
<status status="PASS" starttime="20201115 22:02:43.457" endtime="20201115 22:02:43.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.473" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:43.472" endtime="20201115 22:02:43.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.476" level="INFO">VALUE: [7.620799999999775e-05, 7.60830000000011e-05, 7.609700000000066e-05, 7.609700000000066e-05, 7.611100000000023e-05, 7.611199999999971e-05, 7.608400000000057e-05, 7.60969999999972e-05, 7.608400000000404e-05, 7.605499999999848e-05, 7.60839999999971e-05, 7.612499999999633e-05, 7.608299999999762e-05, 7.605499999999848e-05, 7.612500000000327e-05, 7.609700000000413e-05, 7.615300000000241e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.606899999999805e-05, 7.60969999999972e-05, 7.608299999999762e-05, 7.608299999999762e-05, 7.608300000000456e-05, 7.60969999999972e-05, 7.611099999999676e-05, 7.606999999999753e-05, 7.60969999999972e-05, 7.609700000000413e-05, 7.608400000000404e-05, 7.606999999999753e-05, 7.60969999999972e-05, 7.608400000000404e-05, 7.609700000001107e-05, 7.609799999999667e-05, 7.609700000001107e-05, 7.61110000000037e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.613900000000284e-05, 7.61110000000037e-05, 7.608300000000456e-05, 7.60700000000114e-05, 7.612499999999633e-05, 7.60969999999972e-05, 7.606899999999805e-05, 7.608400000000404e-05, 7.606999999999753e-05, 7.60560000000049e-05, 7.61110000000037e-05]</msg>
<status status="PASS" starttime="20201115 22:02:43.474" endtime="20201115 22:02:43.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.470" endtime="20201115 22:02:43.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.479" endtime="20201115 22:02:43.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.482" endtime="20201115 22:02:43.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.481" endtime="20201115 22:02:43.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.477" endtime="20201115 22:02:43.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.033" endtime="20201115 22:02:43.503"></status>
</kw>
<msg timestamp="20201115 22:02:43.503" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.512" endtime="20201115 22:02:43.592"></status>
</kw>
<msg timestamp="20201115 22:02:43.592" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.510" endtime="20201115 22:02:43.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.593" endtime="20201115 22:02:43.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.596" endtime="20201115 22:02:43.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.508" endtime="20201115 22:02:43.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.506" endtime="20201115 22:02:43.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.604" endtime="20201115 22:02:43.898"></status>
</kw>
<msg timestamp="20201115 22:02:43.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023323833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.603" endtime="20201115 22:02:43.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023247611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023323833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.902" endtime="20201115 22:02:43.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.910" endtime="20201115 22:02:43.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.600" endtime="20201115 22:02:43.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.599" endtime="20201115 22:02:43.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.917" level="INFO">${RESULT} = [{'time': 0.023323833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.622199999999732e-05, 'source_diff': 7.622199999999732e-05}, {'time': 0.024739181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.914" endtime="20201115 22:02:43.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.930" level="INFO">${OVERHEAD} = {'time': [0.023323833, 0.024739181, 0.026170347, 0.027601778, 0.029016958, 0.030430417, 0.031848833, 0.033274431, 0.034703694, 0.036133556, 0.037550028, 0.038977611, 0.040403431, 0.041835194, 0.043251...</msg>
<status status="PASS" starttime="20201115 22:02:43.918" endtime="20201115 22:02:43.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.934" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:43.933" endtime="20201115 22:02:43.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.937" level="INFO">VALUE: [7.622199999999732e-05, 7.609800000000014e-05, 7.605499999999848e-05, 7.613899999999937e-05, 7.611100000000023e-05, 7.608400000000057e-05, 7.60969999999972e-05, 7.60839999999971e-05, 7.60969999999972e-05, 7.611199999999624e-05, 7.60969999999972e-05, 7.613900000000284e-05, 7.609799999999667e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.609799999999667e-05, 7.606899999999805e-05, 7.615299999999547e-05, 7.605499999999848e-05, 7.608300000000456e-05, 7.604199999999839e-05, 7.611099999999676e-05, 7.60969999999972e-05, 7.607000000000447e-05, 7.611200000000318e-05, 7.608299999999762e-05, 7.60969999999972e-05, 7.608300000000456e-05, 7.608299999999069e-05, 7.606999999999753e-05, 7.609799999999667e-05, 7.608299999999069e-05, 7.606900000001193e-05, 7.608399999999016e-05, 7.60969999999972e-05, 7.611200000000318e-05, 7.608399999999016e-05, 7.615299999999547e-05, 7.609700000001107e-05, 7.608400000000404e-05, 7.606899999999805e-05, 7.60969999999972e-05, 7.60700000000114e-05, 7.608400000000404e-05, 7.608400000000404e-05, 7.613900000000284e-05, 7.606899999999805e-05, 7.611099999998983e-05]</msg>
<status status="PASS" starttime="20201115 22:02:43.935" endtime="20201115 22:02:43.937"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.931" endtime="20201115 22:02:43.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.940" endtime="20201115 22:02:43.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.943" endtime="20201115 22:02:43.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.942" endtime="20201115 22:02:43.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.938" endtime="20201115 22:02:43.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.504" endtime="20201115 22:02:43.964"></status>
</kw>
<msg timestamp="20201115 22:02:43.964" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.974" endtime="20201115 22:02:44.053"></status>
</kw>
<msg timestamp="20201115 22:02:44.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.972" endtime="20201115 22:02:44.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.054" endtime="20201115 22:02:44.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.057" endtime="20201115 22:02:44.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.969" endtime="20201115 22:02:44.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.967" endtime="20201115 22:02:44.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.066" endtime="20201115 22:02:44.368"></status>
</kw>
<msg timestamp="20201115 22:02:44.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.064" endtime="20201115 22:02:44.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023209458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.372" endtime="20201115 22:02:44.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.380" endtime="20201115 22:02:44.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.062" endtime="20201115 22:02:44.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.060" endtime="20201115 22:02:44.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.386" level="INFO">${RESULT} = [{'time': 0.023285653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.619500000000112e-05, 'source_diff': 7.619500000000112e-05}, {'time': 0.024700861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.383" endtime="20201115 22:02:44.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.399" level="INFO">${OVERHEAD} = {'time': [0.023285653, 0.024700861, 0.026127792, 0.027551681, 0.028972778, 0.030388153, 0.031806194, 0.033229194, 0.034655597, 0.036081028, 0.037507472, 0.038936194, 0.040360583, 0.041774347, 0.043190...</msg>
<status status="PASS" starttime="20201115 22:02:44.387" endtime="20201115 22:02:44.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.404" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:44.403" endtime="20201115 22:02:44.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.406" level="INFO">VALUE: [7.619500000000112e-05, 7.611100000000023e-05, 7.602799999999882e-05, 7.608400000000057e-05, 7.608400000000057e-05, 7.608400000000057e-05, 7.608300000000456e-05, 7.60969999999972e-05, 7.608300000000456e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.605499999999848e-05, 7.608300000000456e-05, 7.608299999999762e-05, 7.60839999999971e-05, 7.609799999999667e-05, 7.6069000000005e-05, 7.606899999999805e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.608299999999762e-05, 7.60969999999972e-05, 7.606899999999805e-05, 7.602800000000576e-05, 7.608400000000404e-05, 7.606899999999805e-05, 7.612500000000327e-05, 7.606900000001193e-05, 7.606999999999753e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.609700000001107e-05, 7.608300000000456e-05, 7.608300000000456e-05, 7.606900000001193e-05, 7.60969999999972e-05, 7.608300000000456e-05, 7.612499999999633e-05, 7.609700000001107e-05, 7.602799999999188e-05, 7.608400000000404e-05, 7.608300000000456e-05, 7.60969999999972e-05, 7.60969999999972e-05, 7.608400000000404e-05, 7.608300000000456e-05, 7.60969999999972e-05]</msg>
<status status="PASS" starttime="20201115 22:02:44.405" endtime="20201115 22:02:44.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.400" endtime="20201115 22:02:44.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.409" endtime="20201115 22:02:44.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.417" endtime="20201115 22:02:44.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.415" endtime="20201115 22:02:44.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.407" endtime="20201115 22:02:44.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.965" endtime="20201115 22:02:44.438"></status>
</kw>
<msg timestamp="20201115 22:02:44.438" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.447" endtime="20201115 22:02:44.526"></status>
</kw>
<msg timestamp="20201115 22:02:44.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.445" endtime="20201115 22:02:44.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.527" endtime="20201115 22:02:44.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.530" endtime="20201115 22:02:44.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.443" endtime="20201115 22:02:44.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.440" endtime="20201115 22:02:44.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.539" endtime="20201115 22:02:44.824"></status>
</kw>
<msg timestamp="20201115 22:02:44.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.537" endtime="20201115 22:02:44.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.828" endtime="20201115 22:02:44.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.836" endtime="20201115 22:02:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.535" endtime="20201115 22:02:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.533" endtime="20201115 22:02:44.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.843" level="INFO">${RESULT} = [{'time': 0.022702625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.623600000000036e-05, 'source_diff': 7.623600000000036e-05}, {'time': 0.024135167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.840" endtime="20201115 22:02:44.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.856" level="INFO">${OVERHEAD} = {'time': [0.022702625, 0.024135167, 0.025554556, 0.026971444, 0.028393931, 0.029806597, 0.031232472, 0.032660153, 0.034091681, 0.035505111, 0.036932847, 0.038360014, 0.039777264, 0.041195042, 0.042611...</msg>
<status status="PASS" starttime="20201115 22:02:44.844" endtime="20201115 22:02:44.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.860" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:44.859" endtime="20201115 22:02:44.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.863" level="INFO">VALUE: [7.623600000000036e-05, 7.609800000000014e-05, 7.609800000000014e-05, 7.606900000000152e-05, 7.608400000000057e-05, 7.602800000000229e-05, 7.60830000000011e-05, 7.606999999999753e-05, 7.616700000000198e-05, 7.608299999999762e-05, 7.611099999999676e-05, 7.608299999999762e-05, 7.612499999999633e-05, 7.609800000000361e-05, 7.606999999999753e-05, 7.618000000000208e-05, 7.609800000000361e-05, 7.60839999999971e-05, 7.605599999999796e-05, 7.6069000000005e-05, 7.608300000000456e-05, 7.608299999999762e-05, 7.609799999999667e-05, 7.609700000000413e-05, 7.607000000000447e-05, 7.608299999999762e-05, 7.608400000000404e-05, 7.61110000000037e-05, 7.608299999999762e-05, 7.611099999998983e-05, 7.611099999998983e-05, 7.606999999999753e-05, 7.613900000000284e-05, 7.608300000000456e-05, 7.608399999999016e-05, 7.612500000001021e-05, 7.608300000000456e-05, 7.608300000000456e-05, 7.604199999999839e-05, 7.612500000001021e-05, 7.606999999999753e-05, 7.609799999999667e-05, 7.61110000000037e-05, 7.60969999999972e-05, 7.606999999999753e-05, 7.61110000000037e-05, 7.608400000000404e-05, 7.60969999999972e-05, 7.61110000000037e-05, 7.61110000000037e-05]</msg>
<status status="PASS" starttime="20201115 22:02:44.861" endtime="20201115 22:02:44.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.857" endtime="20201115 22:02:44.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.866" endtime="20201115 22:02:44.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.870" endtime="20201115 22:02:44.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.868" endtime="20201115 22:02:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.865" endtime="20201115 22:02:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.438" endtime="20201115 22:02:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.578" endtime="20201115 22:02:44.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.577" endtime="20201115 22:02:44.891"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.893" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.902" endtime="20201115 22:02:44.985"></status>
</kw>
<msg timestamp="20201115 22:02:44.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.900" endtime="20201115 22:02:44.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.989" endtime="20201115 22:02:44.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.994" endtime="20201115 22:02:44.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.898" endtime="20201115 22:02:44.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.895" endtime="20201115 22:02:44.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.013" endtime="20201115 22:02:45.317"></status>
</kw>
<msg timestamp="20201115 22:02:45.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02501275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025091389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:45.010" endtime="20201115 22:02:45.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02501275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025091389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:45.321" endtime="20201115 22:02:45.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.329" endtime="20201115 22:02:45.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.004" endtime="20201115 22:02:45.331"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.000" endtime="20201115 22:02:45.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.335" level="INFO">${RESULT} = [{'time': 0.025091389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.86389999999984e-05, 'source_diff': 7.86389999999984e-05}, {'time': 0.026600833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:45.332" endtime="20201115 22:02:45.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.348" level="INFO">${OVERHEAD} = {'time': [0.025091389, 0.026600833, 0.028110167, 0.02961925, 0.031127764, 0.032619208, 0.034116611, 0.035608528, 0.037100569, 0.038591486, 0.040093722, 0.041590431, 0.043088319, 0.044584153, 0.0460751...</msg>
<status status="PASS" starttime="20201115 22:02:45.336" endtime="20201115 22:02:45.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.353" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:45.352" endtime="20201115 22:02:45.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.356" level="INFO">VALUE: [7.86389999999984e-05, 7.850000000000218e-05, 7.852799999999785e-05, 7.847199999999957e-05, 7.852799999999785e-05, 7.851399999999481e-05, 7.852800000000132e-05, 7.852800000000132e-05, 7.850000000000218e-05, 7.848600000000261e-05, 7.852800000000132e-05, 7.851399999999481e-05, 7.850000000000218e-05, 7.855600000000046e-05, 7.852800000000132e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.851399999999481e-05, 7.851400000000175e-05, 7.848600000000261e-05, 7.854100000000142e-05, 7.851399999999481e-05, 7.850000000000218e-05, 7.848599999999567e-05, 7.850000000000218e-05, 7.852799999999438e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.847200000000998e-05, 7.852800000000826e-05, 7.844500000001031e-05, 7.851400000000175e-05, 7.850000000000912e-05, 7.854200000000089e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.852800000000826e-05, 7.854200000000089e-05, 7.852800000000826e-05, 7.857000000000003e-05, 7.851300000000228e-05, 7.854200000000089e-05, 7.849999999999524e-05, 7.85269999999949e-05, 7.854200000000089e-05, 7.845800000000347e-05, 7.852800000000826e-05, 7.854199999998701e-05]</msg>
<status status="PASS" starttime="20201115 22:02:45.354" endtime="20201115 22:02:45.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.349" endtime="20201115 22:02:45.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.359" endtime="20201115 22:02:45.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.362" endtime="20201115 22:02:45.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.361" endtime="20201115 22:02:45.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.357" endtime="20201115 22:02:45.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.893" endtime="20201115 22:02:45.383"></status>
</kw>
<msg timestamp="20201115 22:02:45.383" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.392" endtime="20201115 22:02:45.475"></status>
</kw>
<msg timestamp="20201115 22:02:45.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.390" endtime="20201115 22:02:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.478" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.477" endtime="20201115 22:02:45.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.479" endtime="20201115 22:02:45.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.388" endtime="20201115 22:02:45.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.386" endtime="20201115 22:02:45.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.488" endtime="20201115 22:02:45.777"></status>
</kw>
<msg timestamp="20201115 22:02:45.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.486" endtime="20201115 22:02:45.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.781" endtime="20201115 22:02:45.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.789" endtime="20201115 22:02:45.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.484" endtime="20201115 22:02:45.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.482" endtime="20201115 22:02:45.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.795" level="INFO">${RESULT} = [{'time': 0.022648958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.865200000000197e-05, 'source_diff': 7.865200000000197e-05}, {'time': 0.024153389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:45.792" endtime="20201115 22:02:45.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.808" level="INFO">${OVERHEAD} = {'time': [0.022648958, 0.024153389, 0.025651917, 0.027156389, 0.0286655, 0.030162458, 0.031670611, 0.033175986, 0.034679583, 0.036189597, 0.037697486, 0.039202819, 0.040711556, 0.042211278, 0.04371136...</msg>
<status status="PASS" starttime="20201115 22:02:45.796" endtime="20201115 22:02:45.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.813" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:45.812" endtime="20201115 22:02:45.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.815" level="INFO">VALUE: [7.865200000000197e-05, 7.854200000000089e-05, 7.848599999999914e-05, 7.84449999999999e-05, 7.851399999999828e-05, 7.852699999999838e-05, 7.850000000000218e-05, 7.849999999999524e-05, 7.851400000000175e-05, 7.851399999999481e-05, 7.852800000000132e-05, 7.850000000000218e-05, 7.852800000000132e-05, 7.852800000000132e-05, 7.851399999999481e-05, 7.851400000000175e-05, 7.858300000000012e-05, 7.852700000000185e-05, 7.852800000000132e-05, 7.856900000000056e-05, 7.854100000000142e-05, 7.851300000000228e-05, 7.855500000000099e-05, 7.854100000000142e-05, 7.848599999999567e-05, 7.845799999999653e-05, 7.855600000000046e-05, 7.849999999999524e-05, 7.85269999999949e-05, 7.852800000000826e-05, 7.854200000000089e-05, 7.852800000000826e-05, 7.854200000000089e-05, 7.851400000000175e-05, 7.854100000000142e-05, 7.852799999999438e-05, 7.854200000000089e-05, 7.851400000000175e-05, 7.849999999999524e-05, 7.852799999999438e-05, 7.849999999999524e-05, 7.852799999999438e-05, 7.854100000000142e-05, 7.852799999999438e-05, 7.852799999999438e-05, 7.851400000000175e-05, 7.85560000000074e-05, 7.851400000000175e-05, 7.855599999999352e-05, 7.852800000000826e-05]</msg>
<status status="PASS" starttime="20201115 22:02:45.814" endtime="20201115 22:02:45.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.810" endtime="20201115 22:02:45.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.819" endtime="20201115 22:02:45.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.822" endtime="20201115 22:02:45.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.820" endtime="20201115 22:02:45.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.817" endtime="20201115 22:02:45.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.384" endtime="20201115 22:02:45.846"></status>
</kw>
<msg timestamp="20201115 22:02:45.846" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.864" endtime="20201115 22:02:45.949"></status>
</kw>
<msg timestamp="20201115 22:02:45.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.861" endtime="20201115 22:02:45.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.953" endtime="20201115 22:02:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.958" endtime="20201115 22:02:45.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.856" endtime="20201115 22:02:45.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.851" endtime="20201115 22:02:45.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.976" endtime="20201115 22:02:46.271"></status>
</kw>
<msg timestamp="20201115 22:02:46.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036563194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036641847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.973" endtime="20201115 22:02:46.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036563194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036641847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.275" endtime="20201115 22:02:46.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.283" endtime="20201115 22:02:46.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.968" endtime="20201115 22:02:46.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.964" endtime="20201115 22:02:46.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.289" level="INFO">${RESULT} = [{'time': 0.036641847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.865299999999797e-05, 'source_diff': 7.865299999999797e-05}, {'time': 0.038144208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:46.286" endtime="20201115 22:02:46.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.303" level="INFO">${OVERHEAD} = {'time': [0.036641847, 0.038144208, 0.03964675, 0.041149014, 0.042648389, 0.044156958, 0.045664903, 0.047171764, 0.048681917, 0.050173111, 0.051674375, 0.053172625, 0.054667694, 0.056164042, 0.0576603...</msg>
<status status="PASS" starttime="20201115 22:02:46.291" endtime="20201115 22:02:46.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.307" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:46.306" endtime="20201115 22:02:46.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.310" level="INFO">VALUE: [7.865299999999797e-05, 7.851400000000175e-05, 7.848600000000261e-05, 7.851399999999481e-05, 7.851400000000175e-05, 7.852700000000185e-05, 7.851400000000175e-05, 7.851399999999481e-05, 7.854200000000089e-05, 7.854200000000089e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.851300000000228e-05, 7.843099999999686e-05, 7.851400000000175e-05, 7.848599999999567e-05, 7.854200000000089e-05, 7.852800000000132e-05, 7.850000000000912e-05, 7.851300000000228e-05, 7.851400000000175e-05, 7.84719999999961e-05, 7.852799999999438e-05, 7.854200000000089e-05, 7.852800000000826e-05, 7.852799999999438e-05, 7.852800000000826e-05, 7.852800000000826e-05, 7.849999999999524e-05, 7.851400000000175e-05, 7.849999999999524e-05, 7.851400000000175e-05, 7.854200000000089e-05, 7.855499999999405e-05, 7.854099999998754e-05, 7.852800000000826e-05, 7.852799999999438e-05, 7.852800000000826e-05, 7.849999999999524e-05, 7.852800000000826e-05, 7.850000000000912e-05, 7.854100000000142e-05, 7.849999999999524e-05, 7.852700000000878e-05, 7.854199999998701e-05, 7.854200000000089e-05, 7.85269999999949e-05, 7.854200000000089e-05, 7.848600000000261e-05, 7.854200000000089e-05]</msg>
<status status="PASS" starttime="20201115 22:02:46.308" endtime="20201115 22:02:46.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.304" endtime="20201115 22:02:46.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.313" endtime="20201115 22:02:46.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.316" endtime="20201115 22:02:46.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.315" endtime="20201115 22:02:46.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.311" endtime="20201115 22:02:46.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.847" endtime="20201115 22:02:46.337"></status>
</kw>
<msg timestamp="20201115 22:02:46.337" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.346" endtime="20201115 22:02:46.429"></status>
</kw>
<msg timestamp="20201115 22:02:46.429" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.344" endtime="20201115 22:02:46.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.430" endtime="20201115 22:02:46.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.433" endtime="20201115 22:02:46.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.342" endtime="20201115 22:02:46.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.340" endtime="20201115 22:02:46.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.442" endtime="20201115 22:02:46.729"></status>
</kw>
<msg timestamp="20201115 22:02:46.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:46.440" endtime="20201115 22:02:46.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:46.734" endtime="20201115 22:02:46.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.747" endtime="20201115 22:02:46.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.438" endtime="20201115 22:02:46.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.436" endtime="20201115 22:02:46.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.761" level="INFO">${RESULT} = [{'time': 0.0227085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.862499999999883e-05, 'source_diff': 7.862499999999883e-05}, {'time': 0.024203, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201115 22:02:46.754" endtime="20201115 22:02:46.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.790" level="INFO">${OVERHEAD} = {'time': [0.0227085, 0.024203, 0.025698028, 0.027195653, 0.028704056, 0.030209, 0.031702472, 0.033200597, 0.034696556, 0.036200417, 0.03770775, 0.039217542, 0.040709528, 0.042217333, 0.04372025, 0.045...</msg>
<status status="PASS" starttime="20201115 22:02:46.763" endtime="20201115 22:02:46.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.799" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:46.797" endtime="20201115 22:02:46.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.805" level="INFO">VALUE: [7.862499999999883e-05, 7.851399999999828e-05, 7.851400000000175e-05, 7.85969999999997e-05, 7.851399999999828e-05, 7.851399999999828e-05, 7.850000000000218e-05, 7.851400000000175e-05, 7.84310000000038e-05, 7.852800000000132e-05, 7.854200000000089e-05, 7.850000000000218e-05, 7.845900000000294e-05, 7.852700000000185e-05, 7.854200000000089e-05, 7.850000000000218e-05, 7.847300000000251e-05, 7.851400000000175e-05, 7.850000000000218e-05, 7.851400000000175e-05, 7.850000000000218e-05, 7.848700000000208e-05, 7.850000000000218e-05, 7.854200000000089e-05, 7.851400000000175e-05, 7.855500000000099e-05, 7.851399999999481e-05, 7.85129999999884e-05, 7.851400000000175e-05, 7.848600000000261e-05, 7.845799999998959e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.852800000000826e-05, 7.851400000000175e-05, 7.85269999999949e-05, 7.852799999999438e-05, 7.849999999999524e-05, 7.852799999999438e-05, 7.854200000000089e-05, 7.845900000000294e-05, 7.852799999999438e-05, 7.852799999999438e-05, 7.851400000000175e-05, 7.857000000000003e-05, 7.851400000000175e-05, 7.852800000000826e-05, 7.851400000000175e-05, 7.855599999999352e-05, 7.851400000000175e-05]</msg>
<status status="PASS" starttime="20201115 22:02:46.802" endtime="20201115 22:02:46.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.792" endtime="20201115 22:02:46.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.811" endtime="20201115 22:02:46.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.818" endtime="20201115 22:02:46.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.815" endtime="20201115 22:02:46.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.808" endtime="20201115 22:02:46.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.338" endtime="20201115 22:02:46.841"></status>
</kw>
<msg timestamp="20201115 22:02:46.841" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.850" endtime="20201115 22:02:46.933"></status>
</kw>
<msg timestamp="20201115 22:02:46.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.848" endtime="20201115 22:02:46.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.936" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.934" endtime="20201115 22:02:46.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.937" endtime="20201115 22:02:46.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.846" endtime="20201115 22:02:46.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.844" endtime="20201115 22:02:46.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.946" endtime="20201115 22:02:47.233"></status>
</kw>
<msg timestamp="20201115 22:02:47.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:46.944" endtime="20201115 22:02:47.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024008, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024086625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:47.237" endtime="20201115 22:02:47.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.245" endtime="20201115 22:02:47.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.942" endtime="20201115 22:02:47.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.940" endtime="20201115 22:02:47.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.252" level="INFO">${RESULT} = [{'time': 0.024086625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.862499999999883e-05, 'source_diff': 7.862499999999883e-05}, {'time': 0.025591569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.249" endtime="20201115 22:02:47.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.265" level="INFO">${OVERHEAD} = {'time': [0.024086625, 0.025591569, 0.027090958, 0.028596375, 0.030104819, 0.031604014, 0.033114014, 0.0346055, 0.03610475, 0.037609222, 0.039105917, 0.040611, 0.042103139, 0.043612681, 0.045118319, 0...</msg>
<status status="PASS" starttime="20201115 22:02:47.253" endtime="20201115 22:02:47.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.270" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:47.269" endtime="20201115 22:02:47.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.272" level="INFO">VALUE: [7.862499999999883e-05, 7.851300000000228e-05, 7.849999999999871e-05, 7.854200000000089e-05, 7.851300000000228e-05, 7.852800000000132e-05, 7.849999999999524e-05, 7.852799999999438e-05, 7.84719999999961e-05, 7.851399999999481e-05, 7.852799999999438e-05, 7.852800000000132e-05, 7.852799999999438e-05, 7.850000000000218e-05, 7.855499999999405e-05, 7.854200000000089e-05, 7.852800000000132e-05, 7.847200000000304e-05, 7.852800000000132e-05, 7.851400000000175e-05, 7.852800000000132e-05, 7.854200000000089e-05, 7.858300000000012e-05, 7.851399999999481e-05, 7.851400000000175e-05, 7.851400000000175e-05, 7.852800000000826e-05, 7.851400000000175e-05, 7.857000000000003e-05, 7.852800000000826e-05, 7.852799999999438e-05, 7.852700000000878e-05, 7.854200000000089e-05, 7.848599999998873e-05, 7.854200000000089e-05, 7.850000000000912e-05, 7.852800000000826e-05, 7.844399999999696e-05, 7.852800000000826e-05, 7.852800000000826e-05, 7.852799999999438e-05, 7.851400000000175e-05, 7.854200000000089e-05, 7.845900000000294e-05, 7.849999999999524e-05, 7.847300000000945e-05, 7.852799999999438e-05, 7.855499999999405e-05, 7.851400000000175e-05, 7.849999999999524e-05]</msg>
<status status="PASS" starttime="20201115 22:02:47.271" endtime="20201115 22:02:47.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.266" endtime="20201115 22:02:47.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.275" endtime="20201115 22:02:47.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.278" endtime="20201115 22:02:47.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.277" endtime="20201115 22:02:47.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.273" endtime="20201115 22:02:47.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.842" endtime="20201115 22:02:47.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.892" endtime="20201115 22:02:47.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.891" endtime="20201115 22:02:47.300"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.302" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.310" endtime="20201115 22:02:47.398"></status>
</kw>
<msg timestamp="20201115 22:02:47.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.309" endtime="20201115 22:02:47.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.399" endtime="20201115 22:02:47.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.401" endtime="20201115 22:02:47.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.306" endtime="20201115 22:02:47.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.304" endtime="20201115 22:02:47.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.411" endtime="20201115 22:02:47.715"></status>
</kw>
<msg timestamp="20201115 22:02:47.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025108986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.409" endtime="20201115 22:02:47.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025108986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.719" endtime="20201115 22:02:47.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.727" endtime="20201115 22:02:47.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.407" endtime="20201115 22:02:47.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.405" endtime="20201115 22:02:47.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.734" level="INFO">${RESULT} = [{'time': 0.025190056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.106999999999906e-05, 'source_diff': 8.106999999999906e-05}, {'time': 0.026774819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:47.730" endtime="20201115 22:02:47.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.746" level="INFO">${OVERHEAD} = {'time': [0.025190056, 0.026774819, 0.028353875, 0.029932681, 0.031506889, 0.033086431, 0.034667986, 0.036255139, 0.037829792, 0.039417944, 0.040998333, 0.042575264, 0.044153083, 0.045726347, 0.047302...</msg>
<status status="PASS" starttime="20201115 22:02:47.734" endtime="20201115 22:02:47.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.751" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:47.750" endtime="20201115 22:02:47.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.753" level="INFO">VALUE: [8.106999999999906e-05, 8.09719999999986e-05, 8.093099999999936e-05, 8.09589999999985e-05, 8.094500000000587e-05, 8.090300000000022e-05, 8.088900000000065e-05, 8.095799999999903e-05, 8.093099999999936e-05, 8.09440000000064e-05, 8.095799999999903e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.09719999999986e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.093099999999936e-05, 8.09719999999986e-05, 8.09589999999985e-05, 8.09589999999985e-05, 8.09440000000064e-05, 8.095800000000597e-05, 8.094399999999946e-05, 8.09310000000063e-05, 8.09310000000063e-05, 8.092999999999295e-05, 8.088900000000065e-05, 8.094499999999893e-05, 8.095900000000544e-05, 8.09719999999986e-05, 8.097299999999807e-05, 8.09719999999986e-05, 8.094399999999946e-05, 8.095800000000597e-05, 8.095799999999209e-05, 8.094399999999946e-05, 8.09310000000063e-05, 8.095899999999157e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.093099999999243e-05, 8.094499999999893e-05, 8.094499999999893e-05, 8.094499999999893e-05, 8.094499999999893e-05, 8.095800000000597e-05, 8.094499999999893e-05, 8.095799999999209e-05, 8.095800000000597e-05]</msg>
<status status="PASS" starttime="20201115 22:02:47.752" endtime="20201115 22:02:47.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.747" endtime="20201115 22:02:47.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.756" endtime="20201115 22:02:47.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.760" endtime="20201115 22:02:47.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.758" endtime="20201115 22:02:47.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.755" endtime="20201115 22:02:47.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.302" endtime="20201115 22:02:47.781"></status>
</kw>
<msg timestamp="20201115 22:02:47.781" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.789" endtime="20201115 22:02:47.877"></status>
</kw>
<msg timestamp="20201115 22:02:47.877" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.788" endtime="20201115 22:02:47.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.878" endtime="20201115 22:02:47.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.881" endtime="20201115 22:02:47.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.785" endtime="20201115 22:02:47.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.783" endtime="20201115 22:02:47.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.890" endtime="20201115 22:02:48.178"></status>
</kw>
<msg timestamp="20201115 22:02:48.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.888" endtime="20201115 22:02:48.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.182" endtime="20201115 22:02:48.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.190" endtime="20201115 22:02:48.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.886" endtime="20201115 22:02:48.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.884" endtime="20201115 22:02:48.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.196" level="INFO">${RESULT} = [{'time': 0.022757778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.106999999999906e-05, 'source_diff': 8.106999999999906e-05}, {'time': 0.024335944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.193" endtime="20201115 22:02:48.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.209" level="INFO">${OVERHEAD} = {'time': [0.022757778, 0.024335944, 0.025924778, 0.027502667, 0.029075111, 0.030651111, 0.032234875, 0.033822681, 0.035403, 0.036994319, 0.038574667, 0.040162625, 0.041747069, 0.043332028, 0.044908958...</msg>
<status status="PASS" starttime="20201115 22:02:48.197" endtime="20201115 22:02:48.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.214" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:48.213" endtime="20201115 22:02:48.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.216" level="INFO">VALUE: [8.106999999999906e-05, 8.094400000000293e-05, 8.102800000000035e-05, 8.093100000000283e-05, 8.092999999999989e-05, 8.094400000000293e-05, 8.095800000000597e-05, 8.094499999999893e-05, 8.093099999999936e-05, 8.094399999999946e-05, 8.09589999999985e-05, 8.093099999999936e-05, 8.094399999999946e-05, 8.093099999999936e-05, 8.092999999999989e-05, 8.094399999999946e-05, 8.09719999999986e-05, 8.093099999999936e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.095900000000544e-05, 8.095799999999903e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.101399999999037e-05, 8.092999999999295e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.095799999999209e-05, 8.091600000000032e-05, 8.093099999999243e-05, 8.09310000000063e-05, 8.093000000000683e-05, 8.093099999999243e-05, 8.092999999999295e-05, 8.095799999999209e-05, 8.09169999999998e-05, 8.09169999999998e-05, 8.09310000000063e-05, 8.088900000000065e-05, 8.09169999999998e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.09310000000063e-05, 8.092999999999295e-05, 8.092999999999295e-05]</msg>
<status status="PASS" starttime="20201115 22:02:48.215" endtime="20201115 22:02:48.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.210" endtime="20201115 22:02:48.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.219" endtime="20201115 22:02:48.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.223" endtime="20201115 22:02:48.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.221" endtime="20201115 22:02:48.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.218" endtime="20201115 22:02:48.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.781" endtime="20201115 22:02:48.243"></status>
</kw>
<msg timestamp="20201115 22:02:48.244" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.253" endtime="20201115 22:02:48.340"></status>
</kw>
<msg timestamp="20201115 22:02:48.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.251" endtime="20201115 22:02:48.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.342" endtime="20201115 22:02:48.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.344" endtime="20201115 22:02:48.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.248" endtime="20201115 22:02:48.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.246" endtime="20201115 22:02:48.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.354" endtime="20201115 22:02:48.656"></status>
</kw>
<msg timestamp="20201115 22:02:48.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.351" endtime="20201115 22:02:48.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.661" endtime="20201115 22:02:48.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.668" endtime="20201115 22:02:48.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.349" endtime="20201115 22:02:48.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.347" endtime="20201115 22:02:48.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.675" level="INFO">${RESULT} = [{'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.098599999999817e-05, 'source_diff': 8.098599999999817e-05}, {'time': 0.025009847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.672" endtime="20201115 22:02:48.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.688" level="INFO">${OVERHEAD} = {'time': [0.023437903, 0.025009847, 0.026585264, 0.028161986, 0.029741472, 0.031314736, 0.032899486, 0.034476139, 0.036048792, 0.037630167, 0.039213389, 0.040803403, 0.042390597, 0.043966319, 0.045551...</msg>
<status status="PASS" starttime="20201115 22:02:48.676" endtime="20201115 22:02:48.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.692" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:48.691" endtime="20201115 22:02:48.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.695" level="INFO">VALUE: [8.098599999999817e-05, 8.094400000000293e-05, 8.09450000000024e-05, 8.092999999999989e-05, 8.092999999999989e-05, 8.100000000000121e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.088900000000065e-05, 8.094499999999893e-05, 8.093099999999936e-05, 8.09719999999986e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.09589999999985e-05, 8.093099999999936e-05, 8.094499999999893e-05, 8.099999999999774e-05, 8.093099999999936e-05, 8.099999999999774e-05, 8.094500000000587e-05, 8.09719999999986e-05, 8.092999999999989e-05, 8.093099999999243e-05, 8.09169999999998e-05, 8.095900000000544e-05, 8.09719999999986e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.09719999999986e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.094499999999893e-05, 8.09310000000063e-05, 8.088900000000065e-05, 8.09719999999986e-05, 8.094499999999893e-05, 8.094499999999893e-05, 8.09169999999998e-05, 8.094399999999946e-05, 8.088800000000118e-05, 8.094399999999946e-05, 8.093099999999243e-05, 8.092999999999295e-05, 8.093000000000683e-05, 8.097299999999807e-05, 8.090300000000716e-05, 8.093000000000683e-05]</msg>
<status status="PASS" starttime="20201115 22:02:48.694" endtime="20201115 22:02:48.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.689" endtime="20201115 22:02:48.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.698" endtime="20201115 22:02:48.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.701" endtime="20201115 22:02:48.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.700" endtime="20201115 22:02:48.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.696" endtime="20201115 22:02:48.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.244" endtime="20201115 22:02:48.722"></status>
</kw>
<msg timestamp="20201115 22:02:48.722" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.732" endtime="20201115 22:02:48.819"></status>
</kw>
<msg timestamp="20201115 22:02:48.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.730" endtime="20201115 22:02:48.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.822" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.820" endtime="20201115 22:02:48.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.823" endtime="20201115 22:02:48.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.728" endtime="20201115 22:02:48.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.725" endtime="20201115 22:02:48.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.832" endtime="20201115 22:02:49.119"></status>
</kw>
<msg timestamp="20201115 22:02:49.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02344675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:48.830" endtime="20201115 22:02:49.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023365694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02344675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:49.123" endtime="20201115 22:02:49.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.131" endtime="20201115 22:02:49.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.827" endtime="20201115 22:02:49.134"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.826" endtime="20201115 22:02:49.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.138" level="INFO">${RESULT} = [{'time': 0.02344675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105599999999949e-05, 'source_diff': 8.105599999999949e-05}, {'time': 0.025023014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:49.135" endtime="20201115 22:02:49.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.151" level="INFO">${OVERHEAD} = {'time': [0.02344675, 0.025023014, 0.026594569, 0.028174931, 0.02975025, 0.031324611, 0.032897097, 0.034484194, 0.036067667, 0.037650111, 0.039230625, 0.040802708, 0.042393542, 0.043964944, 0.04554587...</msg>
<status status="PASS" starttime="20201115 22:02:49.139" endtime="20201115 22:02:49.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.155" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:49.154" endtime="20201115 22:02:49.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.158" level="INFO">VALUE: [8.105599999999949e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.093099999999936e-05, 8.093099999999936e-05, 8.094400000000293e-05, 8.095799999999903e-05, 8.097200000000554e-05, 8.093099999999936e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.087500000000108e-05, 8.09589999999985e-05, 8.090200000000075e-05, 8.095799999999903e-05, 8.094499999999893e-05, 8.09310000000063e-05, 8.093099999999936e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.090300000000022e-05, 8.094399999999946e-05, 8.094500000000587e-05, 8.09169999999998e-05, 8.092999999999989e-05, 8.094399999999946e-05, 8.090300000000716e-05, 8.09169999999998e-05, 8.09310000000063e-05, 8.09310000000063e-05, 8.091600000000032e-05, 8.088900000000065e-05, 8.090299999999329e-05, 8.09719999999986e-05, 8.091600000000032e-05, 8.09310000000063e-05, 8.09169999999998e-05, 8.093000000000683e-05, 8.088900000000065e-05, 8.09310000000063e-05, 8.094399999999946e-05, 8.087499999999415e-05, 8.095800000000597e-05, 8.09310000000063e-05, 8.09169999999998e-05, 8.093099999999243e-05, 8.088900000000065e-05, 8.094399999999946e-05, 8.09719999999986e-05, 8.093000000000683e-05]</msg>
<status status="PASS" starttime="20201115 22:02:49.156" endtime="20201115 22:02:49.159"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.152" endtime="20201115 22:02:49.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.165" endtime="20201115 22:02:49.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.172" endtime="20201115 22:02:49.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.169" endtime="20201115 22:02:49.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.161" endtime="20201115 22:02:49.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.723" endtime="20201115 22:02:49.197"></status>
</kw>
<msg timestamp="20201115 22:02:49.197" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.215" endtime="20201115 22:02:49.305"></status>
</kw>
<msg timestamp="20201115 22:02:49.306" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.212" endtime="20201115 22:02:49.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.308" endtime="20201115 22:02:49.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.313" endtime="20201115 22:02:49.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.207" endtime="20201115 22:02:49.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.202" endtime="20201115 22:02:49.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.332" endtime="20201115 22:02:49.629"></status>
</kw>
<msg timestamp="20201115 22:02:49.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036919486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.329" endtime="20201115 22:02:49.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036919486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.633" endtime="20201115 22:02:49.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.641" endtime="20201115 22:02:49.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.323" endtime="20201115 22:02:49.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.320" endtime="20201115 22:02:49.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.648" level="INFO">${RESULT} = [{'time': 0.036919486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.106900000000306e-05, 'source_diff': 8.106900000000306e-05}, {'time': 0.038494153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.644" endtime="20201115 22:02:49.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.661" level="INFO">${OVERHEAD} = {'time': [0.036919486, 0.038494153, 0.040081208, 0.041665389, 0.043246556, 0.044835861, 0.046412319, 0.047998167, 0.049582444, 0.051168625, 0.052746639, 0.054333361, 0.055910806, 0.057493472, 0.059073...</msg>
<status status="PASS" starttime="20201115 22:02:49.649" endtime="20201115 22:02:49.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.665" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:49.664" endtime="20201115 22:02:49.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.668" level="INFO">VALUE: [8.106900000000306e-05, 8.09310000000063e-05, 8.092999999999989e-05, 8.099999999999774e-05, 8.094499999999893e-05, 8.099999999999774e-05, 8.09719999999986e-05, 8.093099999999936e-05, 8.09440000000064e-05, 8.087500000000108e-05, 8.09169999999998e-05, 8.092999999999989e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.092999999999989e-05, 8.094499999999893e-05, 8.090300000000716e-05, 8.094499999999893e-05, 8.095799999999209e-05, 8.09169999999998e-05, 8.094399999999946e-05, 8.091600000000032e-05, 8.09169999999998e-05, 8.092999999999295e-05, 8.09169999999998e-05, 8.093099999999243e-05, 8.087500000000802e-05, 8.094499999999893e-05, 8.094399999999946e-05, 8.094399999999946e-05, 8.092999999999295e-05, 8.09719999999986e-05, 8.095899999999157e-05, 8.093000000000683e-05, 8.094399999999946e-05, 8.088900000000065e-05, 8.094399999999946e-05, 8.09310000000063e-05, 8.094399999999946e-05, 8.09310000000063e-05, 8.09310000000063e-05, 8.095800000000597e-05, 8.095800000000597e-05, 8.094400000001334e-05, 8.094399999999946e-05, 8.093000000000683e-05, 8.095799999999209e-05, 8.094399999999946e-05, 8.09719999999986e-05]</msg>
<status status="PASS" starttime="20201115 22:02:49.666" endtime="20201115 22:02:49.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.662" endtime="20201115 22:02:49.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.676" endtime="20201115 22:02:49.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.679" endtime="20201115 22:02:49.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.678" endtime="20201115 22:02:49.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.674" endtime="20201115 22:02:49.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.198" endtime="20201115 22:02:49.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.301" endtime="20201115 22:02:49.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.300" endtime="20201115 22:02:49.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.644" endtime="20201115 22:02:49.701"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.705" endtime="20201115 22:02:49.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.703" endtime="20201115 22:02:49.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.702" endtime="20201115 22:02:49.726"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:55.576" endtime="20201115 22:02:49.726" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.736" endtime="20201115 22:02:49.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.734" endtime="20201115 22:02:49.756"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.769" endtime="20201115 22:02:49.782"></status>
</kw>
<msg timestamp="20201115 22:02:49.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.767" endtime="20201115 22:02:49.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.783" endtime="20201115 22:02:49.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:49.786" endtime="20201115 22:02:49.788"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:49.764" endtime="20201115 22:02:49.789"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:49.762" endtime="20201115 22:02:49.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.761" endtime="20201115 22:02:49.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:49.793" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:49.792" endtime="20201115 22:02:49.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.790" endtime="20201115 22:02:49.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.760" endtime="20201115 22:02:49.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.759" endtime="20201115 22:02:49.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.795" endtime="20201115 22:02:49.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.758" endtime="20201115 22:02:49.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.756" endtime="20201115 22:02:49.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.732" endtime="20201115 22:02:49.797"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.801" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.810" endtime="20201115 22:02:49.835"></status>
</kw>
<msg timestamp="20201115 22:02:49.835" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.809" endtime="20201115 22:02:49.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.836" endtime="20201115 22:02:49.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.839" endtime="20201115 22:02:49.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.806" endtime="20201115 22:02:49.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.803" endtime="20201115 22:02:49.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.848" endtime="20201115 22:02:50.133"></status>
</kw>
<msg timestamp="20201115 22:02:50.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066944194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.846" endtime="20201115 22:02:50.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066944194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.137" endtime="20201115 22:02:50.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.145" endtime="20201115 22:02:50.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.844" endtime="20201115 22:02:50.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.842" endtime="20201115 22:02:50.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.152" level="INFO">${RESULT} = [{'time': 0.066944194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.067270764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.149" endtime="20201115 22:02:50.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.165" level="INFO">${OVERHEAD} = {'time': [0.066944194, 0.067270764, 0.067581111, 0.067905139, 0.06822825, 0.068543583, 0.068871639, 0.069187875, 0.069510653, 0.069837542, 0.070150306, 0.070475903, 0.070791528, 0.071101236, 0.0714295...</msg>
<status status="PASS" starttime="20201115 22:02:50.153" endtime="20201115 22:02:50.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.170" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.169" endtime="20201115 22:02:50.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.172" level="INFO">VALUE: [6.111000000003086e-06, 5.805999999997091e-06, 5.8190000000041264e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.805000000011495e-06, 5.7779999999979514e-06, 5.7919999999905825e-06, 5.806000000010969e-06, 5.860999999995897e-06, 5.7779999999979514e-06, 5.778000000011829e-06, 5.806000000010969e-06, 5.804999999997618e-06, 5.791000000004987e-06, 5.791000000004987e-06, 5.804999999997618e-06, 5.749999999998812e-06, 5.79200000000446e-06, 5.791000000004987e-06, 5.790999999991109e-06, 5.778000000011829e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.8329999999967574e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.735999999992303e-06, 5.79200000000446e-06, 5.7919999999905825e-06, 5.778000000011829e-06, 5.84800000000274e-06, 5.79200000000446e-06, 5.805999999997091e-06, 5.805000000011495e-06, 5.776999999998478e-06, 5.791000000004987e-06, 5.708000000007041e-06, 5.7919999999905825e-06, 5.7919999999905825e-06, 5.79200000000446e-06, 5.7919999999905825e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.79200000000446e-06, 5.7919999999905825e-06, 5.7919999999905825e-06, 5.749999999998812e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.171" endtime="20201115 22:02:50.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.166" endtime="20201115 22:02:50.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.175" endtime="20201115 22:02:50.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.178" endtime="20201115 22:02:50.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.177" endtime="20201115 22:02:50.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.173" endtime="20201115 22:02:50.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.802" endtime="20201115 22:02:50.200"></status>
</kw>
<msg timestamp="20201115 22:02:50.200" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.209" endtime="20201115 22:02:50.233"></status>
</kw>
<msg timestamp="20201115 22:02:50.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.207" endtime="20201115 22:02:50.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.234" endtime="20201115 22:02:50.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.237" endtime="20201115 22:02:50.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.204" endtime="20201115 22:02:50.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.202" endtime="20201115 22:02:50.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.246" endtime="20201115 22:02:50.532"></status>
</kw>
<msg timestamp="20201115 22:02:50.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.244" endtime="20201115 22:02:50.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.537" endtime="20201115 22:02:50.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.545" endtime="20201115 22:02:50.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.242" endtime="20201115 22:02:50.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.240" endtime="20201115 22:02:50.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.551" level="INFO">${RESULT} = [{'time': 0.021911806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022225944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:50.548" endtime="20201115 22:02:50.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.564" level="INFO">${OVERHEAD} = {'time': [0.021911806, 0.022225944, 0.022539722, 0.022852819, 0.023166264, 0.023478736, 0.023801486, 0.024113639, 0.024429222, 0.024740153, 0.025063514, 0.025388486, 0.025714681, 0.026034653, 0.026347...</msg>
<status status="PASS" starttime="20201115 22:02:50.552" endtime="20201115 22:02:50.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.569" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.568" endtime="20201115 22:02:50.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.571" level="INFO">VALUE: [6.0839999999999506e-06, 5.777000000001947e-06, 5.805000000001087e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.7779999999979514e-06, 5.735999999999242e-06, 5.820000000000131e-06, 5.791999999997521e-06, 5.8189999999971875e-06, 5.820000000000131e-06, 5.8339999999997005e-06, 5.791000000001517e-06, 5.749999999998812e-06, 5.791999999997521e-06, 5.750000000002281e-06, 5.805999999997091e-06, 5.805000000001087e-06, 5.737000000002185e-06, 5.820000000000131e-06, 5.778000000001421e-06, 5.792000000000991e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.791000000004987e-06, 5.79200000000446e-06, 5.721999999999672e-06, 5.7779999999979514e-06, 5.8329999999967574e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.791000000004987e-06, 5.791999999997521e-06, 5.833000000003696e-06, 5.805999999997091e-06, 5.80600000000403e-06, 5.83400000000317e-06, 5.791999999997521e-06, 5.861000000002836e-06, 5.735999999999242e-06, 5.8329999999967574e-06, 5.7639999999983815e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.570" endtime="20201115 22:02:50.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.565" endtime="20201115 22:02:50.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.575" endtime="20201115 22:02:50.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.578" endtime="20201115 22:02:50.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.577" endtime="20201115 22:02:50.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.573" endtime="20201115 22:02:50.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.200" endtime="20201115 22:02:50.599"></status>
</kw>
<msg timestamp="20201115 22:02:50.599" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.608" endtime="20201115 22:02:50.632"></status>
</kw>
<msg timestamp="20201115 22:02:50.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.606" endtime="20201115 22:02:50.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.634" endtime="20201115 22:02:50.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.636" endtime="20201115 22:02:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.604" endtime="20201115 22:02:50.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.602" endtime="20201115 22:02:50.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.645" endtime="20201115 22:02:50.931"></status>
</kw>
<msg timestamp="20201115 22:02:50.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.643" endtime="20201115 22:02:50.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.935" endtime="20201115 22:02:50.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.943" endtime="20201115 22:02:50.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.641" endtime="20201115 22:02:50.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.639" endtime="20201115 22:02:50.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.950" level="INFO">${RESULT} = [{'time': 0.021928292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.022237458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:50.947" endtime="20201115 22:02:50.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.965" level="INFO">${OVERHEAD} = {'time': [0.021928292, 0.022237458, 0.022556875, 0.022876889, 0.023191625, 0.023513833, 0.023838847, 0.024151681, 0.024475417, 0.024789222, 0.0251015, 0.025412792, 0.025733111, 0.026053736, 0.02636691...</msg>
<status status="PASS" starttime="20201115 22:02:50.951" endtime="20201115 22:02:50.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.969" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.968" endtime="20201115 22:02:50.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.972" level="INFO">VALUE: [6.0839999999999506e-06, 5.791000000001517e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.791000000001517e-06, 5.805000000001087e-06, 5.806000000000561e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.708000000000102e-06, 5.833000000000227e-06, 5.778000000001421e-06, 5.805000000001087e-06, 5.7779999999979514e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.750000000002281e-06, 5.791000000001517e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.791999999997521e-06, 5.80600000000403e-06, 5.79200000000446e-06, 5.80600000000403e-06, 5.791999999997521e-06, 5.8189999999971875e-06, 5.79200000000446e-06, 5.749999999998812e-06, 5.77800000000489e-06, 5.77800000000489e-06, 5.80600000000403e-06, 5.804999999997618e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.79200000000446e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.80600000000403e-06, 5.76400000000532e-06, 5.804999999997618e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.970" endtime="20201115 22:02:50.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.966" endtime="20201115 22:02:50.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.975" endtime="20201115 22:02:50.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.979" endtime="20201115 22:02:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.977" endtime="20201115 22:02:50.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.973" endtime="20201115 22:02:50.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.600" endtime="20201115 22:02:50.999"></status>
</kw>
<msg timestamp="20201115 22:02:51.000" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.008" endtime="20201115 22:02:51.033"></status>
</kw>
<msg timestamp="20201115 22:02:51.033" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.007" endtime="20201115 22:02:51.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.034" endtime="20201115 22:02:51.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.037" endtime="20201115 22:02:51.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.004" endtime="20201115 22:02:51.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.002" endtime="20201115 22:02:51.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.045" endtime="20201115 22:02:51.332"></status>
</kw>
<msg timestamp="20201115 22:02:51.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.044" endtime="20201115 22:02:51.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.336" endtime="20201115 22:02:51.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.344" endtime="20201115 22:02:51.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.041" endtime="20201115 22:02:51.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.040" endtime="20201115 22:02:51.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.350" level="INFO">${RESULT} = [{'time': 0.022036736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.022362653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.347" endtime="20201115 22:02:51.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.363" level="INFO">${OVERHEAD} = {'time': [0.022036736, 0.022362653, 0.022682403, 0.023002403, 0.023323639, 0.023633056, 0.023949972, 0.024274, 0.024594361, 0.024910278, 0.02523525, 0.025546222, 0.025873083, 0.026183431, 0.026497236,...</msg>
<status status="PASS" starttime="20201115 22:02:51.351" endtime="20201115 22:02:51.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.368" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.367" endtime="20201115 22:02:51.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.370" level="INFO">VALUE: [6.180000000001462e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.764000000001851e-06, 5.736999999998715e-06, 5.805000000001087e-06, 5.778000000001421e-06, 5.833000000000227e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.791000000001517e-06, 5.806000000000561e-06, 5.833000000000227e-06, 5.791000000001517e-06, 5.8189999999971875e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.764000000001851e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791000000001517e-06, 5.749999999998812e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.846999999999797e-06, 5.819000000000657e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.762999999998908e-06, 5.79200000000446e-06, 5.790999999998048e-06, 5.8050000000045565e-06, 5.7779999999979514e-06, 5.860999999995897e-06, 5.8189999999971875e-06, 5.77800000000489e-06, 5.8050000000045565e-06, 5.79200000000446e-06, 5.8189999999971875e-06, 5.804999999997618e-06, 5.735999999999242e-06, 5.804999999997618e-06, 5.7639999999983815e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.369" endtime="20201115 22:02:51.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.364" endtime="20201115 22:02:51.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.374" endtime="20201115 22:02:51.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.377" endtime="20201115 22:02:51.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.376" endtime="20201115 22:02:51.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.372" endtime="20201115 22:02:51.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.000" endtime="20201115 22:02:51.398"></status>
</kw>
<msg timestamp="20201115 22:02:51.398" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.407" endtime="20201115 22:02:51.431"></status>
</kw>
<msg timestamp="20201115 22:02:51.432" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.405" endtime="20201115 22:02:51.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.433" endtime="20201115 22:02:51.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.435" endtime="20201115 22:02:51.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.403" endtime="20201115 22:02:51.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.401" endtime="20201115 22:02:51.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.444" endtime="20201115 22:02:51.731"></status>
</kw>
<msg timestamp="20201115 22:02:51.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.442" endtime="20201115 22:02:51.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.735" endtime="20201115 22:02:51.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.743" endtime="20201115 22:02:51.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.440" endtime="20201115 22:02:51.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.438" endtime="20201115 22:02:51.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.750" level="INFO">${RESULT} = [{'time': 0.021857333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.022184264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.746" endtime="20201115 22:02:51.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.763" level="INFO">${OVERHEAD} = {'time': [0.021857333, 0.022184264, 0.022495861, 0.022809042, 0.023122222, 0.023441306, 0.023751375, 0.024068958, 0.024389264, 0.024698708, 0.025009403, 0.025323208, 0.025635458, 0.025946153, 0.026259...</msg>
<status status="PASS" starttime="20201115 22:02:51.751" endtime="20201115 22:02:51.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.768" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.767" endtime="20201115 22:02:51.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.771" level="INFO">VALUE: [6.110999999999617e-06, 5.805999999997091e-06, 5.749999999998812e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.805000000001087e-06, 5.792000000000991e-06, 5.790999999998048e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.790999999998048e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.791000000001517e-06, 5.806000000000561e-06, 5.778000000001421e-06, 5.790999999998048e-06, 5.777000000001947e-06, 5.776999999998478e-06, 5.708000000000102e-06, 5.8329999999967574e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.8200000000036e-06, 5.79200000000446e-06, 5.804999999997618e-06, 5.790999999998048e-06, 5.819999999996661e-06, 5.804999999997618e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.749999999998812e-06, 5.791999999997521e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.847000000003266e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.790999999998048e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.769" endtime="20201115 22:02:51.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.764" endtime="20201115 22:02:51.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.774" endtime="20201115 22:02:51.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.777" endtime="20201115 22:02:51.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.776" endtime="20201115 22:02:51.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.772" endtime="20201115 22:02:51.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.399" endtime="20201115 22:02:51.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.800" endtime="20201115 22:02:51.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.799" endtime="20201115 22:02:51.799"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.801" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.810" endtime="20201115 22:02:51.835"></status>
</kw>
<msg timestamp="20201115 22:02:51.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.808" endtime="20201115 22:02:51.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.837" endtime="20201115 22:02:51.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.839" endtime="20201115 22:02:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.805" endtime="20201115 22:02:51.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.803" endtime="20201115 22:02:51.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.848" endtime="20201115 22:02:52.136"></status>
</kw>
<msg timestamp="20201115 22:02:52.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:51.847" endtime="20201115 22:02:52.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0243735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:52.140" endtime="20201115 22:02:52.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.148" endtime="20201115 22:02:52.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.844" endtime="20201115 22:02:52.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.842" endtime="20201115 22:02:52.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.155" level="INFO">${RESULT} = [{'time': 0.024380417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.024732583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.151" endtime="20201115 22:02:52.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.168" level="INFO">${OVERHEAD} = {'time': [0.024380417, 0.024732583, 0.025079361, 0.025423042, 0.025768278, 0.026107653, 0.026461333, 0.0267975, 0.027141514, 0.027483319, 0.027825431, 0.028170069, 0.028521819, 0.028858319, 0.02919416...</msg>
<status status="PASS" starttime="20201115 22:02:52.156" endtime="20201115 22:02:52.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.172" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.171" endtime="20201115 22:02:52.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.175" level="INFO">VALUE: [6.917000000002116e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.556000000001311e-06, 6.5969999999970774e-06, 6.639000000002726e-06, 6.651999999999353e-06, 6.5969999999970774e-06, 6.555999999997841e-06, 6.540999999998798e-06, 6.6119999999995904e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.5980000000000205e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.639000000002726e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.5279999999987015e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.638999999995787e-06, 6.611000000003586e-06, 6.568999999997938e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.5969999999970774e-06, 6.667000000001866e-06, 6.58400000000392e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.624999999996217e-06, 6.597000000004016e-06, 6.5969999999970774e-06, 6.57000000000435e-06, 6.624999999996217e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.5829999999975075e-06, 6.611999999996121e-06, 6.5969999999970774e-06, 6.611000000003586e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.173" endtime="20201115 22:02:52.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.169" endtime="20201115 22:02:52.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.178" endtime="20201115 22:02:52.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.182" endtime="20201115 22:02:52.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.180" endtime="20201115 22:02:52.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.177" endtime="20201115 22:02:52.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.801" endtime="20201115 22:02:52.203"></status>
</kw>
<msg timestamp="20201115 22:02:52.203" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.212" endtime="20201115 22:02:52.237"></status>
</kw>
<msg timestamp="20201115 22:02:52.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.210" endtime="20201115 22:02:52.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.240" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.239" endtime="20201115 22:02:52.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.241" endtime="20201115 22:02:52.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.207" endtime="20201115 22:02:52.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.205" endtime="20201115 22:02:52.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.250" endtime="20201115 22:02:52.536"></status>
</kw>
<msg timestamp="20201115 22:02:52.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.248" endtime="20201115 22:02:52.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.541" endtime="20201115 22:02:52.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.550" endtime="20201115 22:02:52.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.246" endtime="20201115 22:02:52.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.244" endtime="20201115 22:02:52.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.557" level="INFO">${RESULT} = [{'time': 0.022002625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.022342306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.553" endtime="20201115 22:02:52.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.572" level="INFO">${OVERHEAD} = {'time': [0.022002625, 0.022342306, 0.022681, 0.023033139, 0.023375597, 0.023726167, 0.024063944, 0.024400486, 0.024741986, 0.025091264, 0.025438056, 0.025776153, 0.026110708, 0.026463403, 0.026803931...</msg>
<status status="PASS" starttime="20201115 22:02:52.558" endtime="20201115 22:02:52.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.577" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.576" endtime="20201115 22:02:52.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.580" level="INFO">VALUE: [6.931000000001686e-06, 6.5980000000000205e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.5829999999975075e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.5980000000000205e-06, 6.6529999999988265e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.5980000000000205e-06, 6.5980000000000205e-06, 6.6119999999995904e-06, 6.555000000001837e-06, 6.570000000000881e-06, 6.6119999999995904e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.5980000000000205e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.653000000002296e-06, 6.5969999999970774e-06, 6.610999999996647e-06, 6.555999999997841e-06, 6.583999999996981e-06, 6.5969999999970774e-06, 6.61200000000306e-06, 6.611000000003586e-06, 6.58400000000392e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.555000000005307e-06, 6.583999999996981e-06, 6.610999999996647e-06, 6.5829999999975075e-06, 6.5969999999970774e-06, 6.57000000000435e-06, 6.5969999999970774e-06, 6.653000000002296e-06, 6.59800000000349e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.59800000000349e-06, 6.5829999999975075e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.578" endtime="20201115 22:02:52.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.574" endtime="20201115 22:02:52.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.583" endtime="20201115 22:02:52.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.586" endtime="20201115 22:02:52.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.585" endtime="20201115 22:02:52.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.581" endtime="20201115 22:02:52.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.203" endtime="20201115 22:02:52.608"></status>
</kw>
<msg timestamp="20201115 22:02:52.608" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.617" endtime="20201115 22:02:52.642"></status>
</kw>
<msg timestamp="20201115 22:02:52.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.615" endtime="20201115 22:02:52.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.644" endtime="20201115 22:02:52.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.646" endtime="20201115 22:02:52.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.613" endtime="20201115 22:02:52.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.611" endtime="20201115 22:02:52.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.655" endtime="20201115 22:02:52.941"></status>
</kw>
<msg timestamp="20201115 22:02:52.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.654" endtime="20201115 22:02:52.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.945" endtime="20201115 22:02:52.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.953" endtime="20201115 22:02:52.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.651" endtime="20201115 22:02:52.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.649" endtime="20201115 22:02:52.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.960" level="INFO">${RESULT} = [{'time': 0.022187681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.022522389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.956" endtime="20201115 22:02:52.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.973" level="INFO">${OVERHEAD} = {'time': [0.022187681, 0.022522389, 0.022868889, 0.023204139, 0.023547861, 0.023893708, 0.024238667, 0.024582667, 0.024926028, 0.025268472, 0.025613444, 0.025953986, 0.026298972, 0.026650722, 0.027004...</msg>
<status status="PASS" starttime="20201115 22:02:52.961" endtime="20201115 22:02:52.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.978" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.977" endtime="20201115 22:02:52.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.980" level="INFO">VALUE: [6.917000000002116e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.638999999999257e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.555999999997841e-06, 6.584000000000451e-06, 6.583000000000977e-06, 6.624999999999687e-06, 6.5969999999970774e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.570000000000881e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.58400000000392e-06, 6.624999999996217e-06, 6.59800000000349e-06, 6.597999999996551e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.667000000001866e-06, 6.58400000000392e-06, 6.55600000000478e-06, 6.583999999996981e-06, 6.5969999999970774e-06, 6.624999999996217e-06, 6.597000000004016e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.597000000004016e-06, 6.5969999999970774e-06, 6.597000000004016e-06, 6.554999999998368e-06, 6.610999999996647e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.555000000005307e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:52.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.974" endtime="20201115 22:02:52.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.983" endtime="20201115 22:02:52.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.987" endtime="20201115 22:02:53.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.985" endtime="20201115 22:02:53.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.982" endtime="20201115 22:02:53.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.608" endtime="20201115 22:02:53.008"></status>
</kw>
<msg timestamp="20201115 22:02:53.008" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.017" endtime="20201115 22:02:53.042"></status>
</kw>
<msg timestamp="20201115 22:02:53.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.015" endtime="20201115 22:02:53.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.044" endtime="20201115 22:02:53.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.046" endtime="20201115 22:02:53.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.013" endtime="20201115 22:02:53.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.010" endtime="20201115 22:02:53.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.055" endtime="20201115 22:02:53.342"></status>
</kw>
<msg timestamp="20201115 22:02:53.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.054" endtime="20201115 22:02:53.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.346" endtime="20201115 22:02:53.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.354" endtime="20201115 22:02:53.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.051" endtime="20201115 22:02:53.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.049" endtime="20201115 22:02:53.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.361" level="INFO">${RESULT} = [{'time': 0.022159833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.915999999999173e-06, 'source_diff': 6.915999999999173e-06}, {'time': 0.022500472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.357" endtime="20201115 22:02:53.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.374" level="INFO">${OVERHEAD} = {'time': [0.022159833, 0.022500472, 0.022844431, 0.023191514, 0.023543292, 0.023886347, 0.024226931, 0.024566861, 0.024916778, 0.025261986, 0.025612542, 0.025961806, 0.026312042, 0.026661319, 0.027011...</msg>
<status status="PASS" starttime="20201115 22:02:53.362" endtime="20201115 22:02:53.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.378" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.377" endtime="20201115 22:02:53.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.381" level="INFO">VALUE: [6.915999999999173e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.624999999999687e-06, 6.556000000001311e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.653000000002296e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.6119999999995904e-06, 6.556000000001311e-06, 6.638999999999257e-06, 6.6529999999988265e-06, 6.6119999999995904e-06, 6.638000000003252e-06, 6.568999999997938e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.61200000000306e-06, 6.597000000004016e-06, 6.554999999998368e-06, 6.59800000000349e-06, 6.583999999996981e-06, 6.555999999997841e-06, 6.611000000003586e-06, 6.5969999999970774e-06, 6.5829999999975075e-06, 6.624999999996217e-06, 6.54200000000521e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.638999999995787e-06, 6.5969999999970774e-06, 6.610999999996647e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.379" endtime="20201115 22:02:53.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.375" endtime="20201115 22:02:53.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.384" endtime="20201115 22:02:53.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.387" endtime="20201115 22:02:53.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.386" endtime="20201115 22:02:53.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.382" endtime="20201115 22:02:53.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.008" endtime="20201115 22:02:53.408"></status>
</kw>
<msg timestamp="20201115 22:02:53.408" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.417" endtime="20201115 22:02:53.443"></status>
</kw>
<msg timestamp="20201115 22:02:53.443" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.416" endtime="20201115 22:02:53.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.444" endtime="20201115 22:02:53.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.447" endtime="20201115 22:02:53.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.413" endtime="20201115 22:02:53.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.411" endtime="20201115 22:02:53.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.456" endtime="20201115 22:02:53.742"></status>
</kw>
<msg timestamp="20201115 22:02:53.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:53.454" endtime="20201115 22:02:53.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:53.746" endtime="20201115 22:02:53.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.754" endtime="20201115 22:02:53.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.452" endtime="20201115 22:02:53.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.450" endtime="20201115 22:02:53.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.761" level="INFO">${RESULT} = [{'time': 0.02204975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.930999999998216e-06, 'source_diff': 6.930999999998216e-06}, {'time': 0.022399972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:53.758" endtime="20201115 22:02:53.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.774" level="INFO">${OVERHEAD} = {'time': [0.02204975, 0.022399972, 0.022740806, 0.023085375, 0.023425319, 0.023767736, 0.024121389, 0.024465722, 0.024813069, 0.025159792, 0.025511861, 0.025861444, 0.026201375, 0.026545972, 0.0268933...</msg>
<status status="PASS" starttime="20201115 22:02:53.762" endtime="20201115 22:02:53.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.779" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.778" endtime="20201115 22:02:53.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.781" level="INFO">VALUE: [6.930999999998216e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.540999999998798e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.6529999999988265e-06, 6.637999999999783e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.624999999999687e-06, 6.584000000000451e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.583999999996981e-06, 6.638999999999257e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.5829999999975075e-06, 6.597000000004016e-06, 6.61200000000306e-06, 6.681000000001436e-06, 6.597000000004016e-06, 6.61200000000306e-06, 6.597000000004016e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.583000000004446e-06, 6.568999999997938e-06, 6.5690000000048765e-06, 6.681000000001436e-06, 6.58400000000392e-06, 6.5969999999970774e-06, 6.6379999999963135e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.5969999999970774e-06, 6.681000000001436e-06, 6.625000000003156e-06, 6.61200000000306e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.780" endtime="20201115 22:02:53.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.775" endtime="20201115 22:02:53.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.785" endtime="20201115 22:02:53.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.788" endtime="20201115 22:02:53.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.787" endtime="20201115 22:02:53.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.783" endtime="20201115 22:02:53.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.409" endtime="20201115 22:02:53.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.800" endtime="20201115 22:02:53.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.799" endtime="20201115 22:02:53.810"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.812" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.821" endtime="20201115 22:02:53.848"></status>
</kw>
<msg timestamp="20201115 22:02:53.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.819" endtime="20201115 22:02:53.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.849" endtime="20201115 22:02:53.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.852" endtime="20201115 22:02:53.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.817" endtime="20201115 22:02:53.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.815" endtime="20201115 22:02:53.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.861" endtime="20201115 22:02:54.149"></status>
</kw>
<msg timestamp="20201115 22:02:54.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.860" endtime="20201115 22:02:54.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.153" endtime="20201115 22:02:54.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.161" endtime="20201115 22:02:54.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.857" endtime="20201115 22:02:54.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.855" endtime="20201115 22:02:54.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.167" level="INFO">${RESULT} = [{'time': 0.024497278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.024872306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.164" endtime="20201115 22:02:54.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.182" level="INFO">${OVERHEAD} = {'time': [0.024497278, 0.024872306, 0.025240736, 0.025603569, 0.025965778, 0.026330542, 0.026700292, 0.027077403, 0.027451792, 0.027826792, 0.028199625, 0.028567125, 0.028935611, 0.029315597, 0.029687...</msg>
<status status="PASS" starttime="20201115 22:02:54.168" endtime="20201115 22:02:54.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.186" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.185" endtime="20201115 22:02:54.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.189" level="INFO">VALUE: [7.486000000000992e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.1529999999993266e-06, 7.138999999999757e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.111000000000617e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.167000000002366e-06, 7.138000000000283e-06, 7.111000000000617e-06, 7.165999999999423e-06, 7.153000000002796e-06, 7.1379999999968136e-06, 7.166999999995427e-06, 7.222000000001172e-06, 7.153000000002796e-06, 7.181000000001936e-06, 7.111999999996621e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.180000000002462e-06, 7.166000000002892e-06, 7.166999999995427e-06, 7.166999999995427e-06, 7.167000000002366e-06, 7.1519999999963835e-06, 7.167000000002366e-06, 7.1519999999963835e-06, 7.165999999995953e-06, 7.166000000002892e-06, 7.1519999999963835e-06, 7.166999999995427e-06, 7.181000000001936e-06, 7.179999999995523e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.208000000001602e-06, 7.181000000001936e-06, 7.180999999994997e-06, 7.167000000002366e-06, 7.153000000002796e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.187" endtime="20201115 22:02:54.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.183" endtime="20201115 22:02:54.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.192" endtime="20201115 22:02:54.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.195" endtime="20201115 22:02:54.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.194" endtime="20201115 22:02:54.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.190" endtime="20201115 22:02:54.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.813" endtime="20201115 22:02:54.216"></status>
</kw>
<msg timestamp="20201115 22:02:54.216" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.225" endtime="20201115 22:02:54.251"></status>
</kw>
<msg timestamp="20201115 22:02:54.252" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.223" endtime="20201115 22:02:54.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.253" endtime="20201115 22:02:54.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.256" endtime="20201115 22:02:54.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.221" endtime="20201115 22:02:54.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.219" endtime="20201115 22:02:54.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.265" endtime="20201115 22:02:54.552"></status>
</kw>
<msg timestamp="20201115 22:02:54.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.263" endtime="20201115 22:02:54.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.556" endtime="20201115 22:02:54.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.564" endtime="20201115 22:02:54.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.261" endtime="20201115 22:02:54.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.259" endtime="20201115 22:02:54.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.571" level="INFO">${RESULT} = [{'time': 0.021821125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.022202444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:54.568" endtime="20201115 22:02:54.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.584" level="INFO">${OVERHEAD} = {'time': [0.021821125, 0.022202444, 0.022575542, 0.022940889, 0.023317139, 0.023682806, 0.024059361, 0.024426264, 0.024801597, 0.025164139, 0.025529819, 0.025894556, 0.026264556, 0.026633306, 0.027004...</msg>
<status status="PASS" starttime="20201115 22:02:54.572" endtime="20201115 22:02:54.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.588" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.587" endtime="20201115 22:02:54.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.591" level="INFO">VALUE: [7.5419999999992715e-06, 7.152000000003322e-06, 7.1669999999988965e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.1529999999993266e-06, 7.166000000002892e-06, 7.138999999999757e-06, 7.151999999999853e-06, 7.180999999998466e-06, 7.167000000002366e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.180999999998466e-06, 7.151999999999853e-06, 7.138999999999757e-06, 7.1669999999988965e-06, 7.179999999998993e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.152000000003322e-06, 7.1380000000037525e-06, 7.222000000001172e-06, 7.222000000001172e-06, 7.180000000002462e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.166999999995427e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.153000000002796e-06, 7.165999999995953e-06, 7.153000000002796e-06, 7.167000000002366e-06, 7.181000000001936e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.111000000004086e-06, 7.166999999995427e-06, 7.138999999996287e-06, 7.152999999995857e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.589" endtime="20201115 22:02:54.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.585" endtime="20201115 22:02:54.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.594" endtime="20201115 22:02:54.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.597" endtime="20201115 22:02:54.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.596" endtime="20201115 22:02:54.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.592" endtime="20201115 22:02:54.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.217" endtime="20201115 22:02:54.618"></status>
</kw>
<msg timestamp="20201115 22:02:54.618" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.627" endtime="20201115 22:02:54.654"></status>
</kw>
<msg timestamp="20201115 22:02:54.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.625" endtime="20201115 22:02:54.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.656" endtime="20201115 22:02:54.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.658" endtime="20201115 22:02:54.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.623" endtime="20201115 22:02:54.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.621" endtime="20201115 22:02:54.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.667" endtime="20201115 22:02:54.954"></status>
</kw>
<msg timestamp="20201115 22:02:54.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.666" endtime="20201115 22:02:54.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.959" endtime="20201115 22:02:54.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.967" endtime="20201115 22:02:54.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.663" endtime="20201115 22:02:54.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.661" endtime="20201115 22:02:54.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.973" level="INFO">${RESULT} = [{'time': 0.022456528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.444999999998286e-06, 'source_diff': 7.444999999998286e-06}, {'time': 0.022837528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.970" endtime="20201115 22:02:54.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.986" level="INFO">${OVERHEAD} = {'time': [0.022456528, 0.022837528, 0.023212847, 0.023582861, 0.023945389, 0.024323833, 0.02469975, 0.025075792, 0.025456042, 0.025833264, 0.026208625, 0.02658425, 0.02695525, 0.027318208, 0.027690972...</msg>
<status status="PASS" starttime="20201115 22:02:54.974" endtime="20201115 22:02:54.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.991" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.990" endtime="20201115 22:02:54.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.993" level="INFO">VALUE: [7.444999999998286e-06, 7.1669999999988965e-06, 7.139000000003226e-06, 7.1669999999988965e-06, 7.138999999999757e-06, 7.179999999998993e-06, 7.138999999999757e-06, 7.250000000000312e-06, 7.167000000002366e-06, 7.167000000002366e-06, 7.180999999998466e-06, 7.1669999999988965e-06, 7.1529999999993266e-06, 7.222000000001172e-06, 7.138999999999757e-06, 7.1669999999988965e-06, 7.179999999998993e-06, 7.165999999999423e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.138000000000283e-06, 7.179999999998993e-06, 7.167000000002366e-06, 7.167000000002366e-06, 7.2230000000006456e-06, 7.153000000002796e-06, 7.1379999999968136e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.194000000002032e-06, 7.180000000002462e-06, 7.139000000003226e-06, 7.181000000001936e-06, 7.152999999995857e-06, 7.166999999995427e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.208000000001602e-06, 7.179999999995523e-06, 7.167000000002366e-06, 7.167000000002366e-06, 7.152999999995857e-06, 7.179999999995523e-06, 7.2230000000006456e-06, 7.152999999995857e-06, 7.125000000003656e-06, 7.235999999993803e-06, 7.166999999995427e-06, 7.139000000003226e-06, 7.167000000002366e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.992" endtime="20201115 22:02:54.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.987" endtime="20201115 22:02:54.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.996" endtime="20201115 22:02:54.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.000" endtime="20201115 22:02:55.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.998" endtime="20201115 22:02:55.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.995" endtime="20201115 22:02:55.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.619" endtime="20201115 22:02:55.021"></status>
</kw>
<msg timestamp="20201115 22:02:55.025" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.034" endtime="20201115 22:02:55.061"></status>
</kw>
<msg timestamp="20201115 22:02:55.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.033" endtime="20201115 22:02:55.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.063" endtime="20201115 22:02:55.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.065" endtime="20201115 22:02:55.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.030" endtime="20201115 22:02:55.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.028" endtime="20201115 22:02:55.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.074" endtime="20201115 22:02:55.362"></status>
</kw>
<msg timestamp="20201115 22:02:55.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026744514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026751986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.073" endtime="20201115 22:02:55.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026744514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026751986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.366" endtime="20201115 22:02:55.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.374" endtime="20201115 22:02:55.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.070" endtime="20201115 22:02:55.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.069" endtime="20201115 22:02:55.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.381" level="INFO">${RESULT} = [{'time': 0.026751986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.027127333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:55.377" endtime="20201115 22:02:55.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.394" level="INFO">${OVERHEAD} = {'time': [0.026751986, 0.027127333, 0.027490792, 0.027859875, 0.028224583, 0.028591819, 0.028955597, 0.029327472, 0.029695333, 0.030068139, 0.030437847, 0.030800667, 0.03116825, 0.031542889, 0.0319122...</msg>
<status status="PASS" starttime="20201115 22:02:55.382" endtime="20201115 22:02:55.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.399" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.398" endtime="20201115 22:02:55.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.401" level="INFO">VALUE: [7.4719999999979525e-06, 7.138999999999757e-06, 7.111000000000617e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.179999999998993e-06, 7.1529999999993266e-06, 7.208000000001602e-06, 7.166999999995427e-06, 7.139000000003226e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.180000000002462e-06, 7.167000000002366e-06, 7.09800000000399e-06, 7.166000000002892e-06, 7.166000000002892e-06, 7.167000000002366e-06, 7.180000000002462e-06, 7.166000000002892e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.195000000001506e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.138999999996287e-06, 7.166999999995427e-06, 7.125000000003656e-06, 7.2230000000006456e-06, 7.152999999995857e-06, 7.152999999995857e-06, 7.0969999999975775e-06, 7.165999999995953e-06, 7.1379999999968136e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.166999999995427e-06, 7.209000000001076e-06, 7.166999999995427e-06, 7.0830000000049465e-06, 7.1519999999963835e-06, 7.152000000003322e-06, 7.166999999995427e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.400" endtime="20201115 22:02:55.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.395" endtime="20201115 22:02:55.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.404" endtime="20201115 22:02:55.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.408" endtime="20201115 22:02:55.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.407" endtime="20201115 22:02:55.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.403" endtime="20201115 22:02:55.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.026" endtime="20201115 22:02:55.429"></status>
</kw>
<msg timestamp="20201115 22:02:55.429" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.438" endtime="20201115 22:02:55.465"></status>
</kw>
<msg timestamp="20201115 22:02:55.466" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.437" endtime="20201115 22:02:55.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.468" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.467" endtime="20201115 22:02:55.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.469" endtime="20201115 22:02:55.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.434" endtime="20201115 22:02:55.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.432" endtime="20201115 22:02:55.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.478" endtime="20201115 22:02:55.777"></status>
</kw>
<msg timestamp="20201115 22:02:55.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.477" endtime="20201115 22:02:55.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.787" endtime="20201115 22:02:55.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.805" endtime="20201115 22:02:55.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.474" endtime="20201115 22:02:55.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.472" endtime="20201115 22:02:55.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.820" level="INFO">${RESULT} = [{'time': 0.022181903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.022559125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.812" endtime="20201115 22:02:55.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.840" level="INFO">${OVERHEAD} = {'time': [0.022181903, 0.022559125, 0.022928833, 0.023292292, 0.023661375, 0.024042861, 0.024404722, 0.024768556, 0.025140431, 0.025516639, 0.025879208, 0.026258639, 0.026638889, 0.027002472, 0.027382...</msg>
<status status="PASS" starttime="20201115 22:02:55.822" endtime="20201115 22:02:55.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.845" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.844" endtime="20201115 22:02:55.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.847" level="INFO">VALUE: [7.500000000000562e-06, 7.1529999999993266e-06, 7.165999999999423e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.0969999999975775e-06, 7.165999999999423e-06, 7.209000000001076e-06, 7.181000000001936e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.222000000001172e-06, 7.1529999999993266e-06, 7.2079999999981326e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.1529999999993266e-06, 7.151999999999853e-06, 7.181000000001936e-06, 7.153000000002796e-06, 7.097000000001047e-06, 7.139000000003226e-06, 7.1669999999988965e-06, 7.165999999999423e-06, 7.166999999995427e-06, 7.180999999994997e-06, 7.166999999995427e-06, 7.166999999995427e-06, 7.111000000004086e-06, 7.152000000003322e-06, 7.180000000002462e-06, 7.167000000002366e-06, 7.139000000003226e-06, 7.167000000002366e-06, 7.152000000003322e-06, 7.152000000003322e-06, 7.180000000002462e-06, 7.153000000002796e-06, 7.180000000002462e-06, 7.179999999995523e-06, 7.1519999999963835e-06, 7.165999999995953e-06, 7.181000000001936e-06, 7.139000000003226e-06, 7.166000000002892e-06, 7.194000000002032e-06, 7.222000000001172e-06, 7.180000000002462e-06, 7.124999999996717e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.846" endtime="20201115 22:02:55.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.841" endtime="20201115 22:02:55.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.851" endtime="20201115 22:02:55.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.854" endtime="20201115 22:02:55.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.853" endtime="20201115 22:02:55.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.849" endtime="20201115 22:02:55.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.430" endtime="20201115 22:02:55.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.811" endtime="20201115 22:02:55.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.810" endtime="20201115 22:02:55.875"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.878" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.886" endtime="20201115 22:02:55.915"></status>
</kw>
<msg timestamp="20201115 22:02:55.915" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.885" endtime="20201115 22:02:55.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.918" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.917" endtime="20201115 22:02:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.919" endtime="20201115 22:02:55.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.882" endtime="20201115 22:02:55.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.880" endtime="20201115 22:02:55.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.928" endtime="20201115 22:02:56.215"></status>
</kw>
<msg timestamp="20201115 22:02:56.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.927" endtime="20201115 22:02:56.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024620417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.220" endtime="20201115 22:02:56.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.228" endtime="20201115 22:02:56.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.924" endtime="20201115 22:02:56.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.922" endtime="20201115 22:02:56.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.234" level="INFO">${RESULT} = [{'time': 0.024620417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.025020972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.231" endtime="20201115 22:02:56.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.248" level="INFO">${OVERHEAD} = {'time': [0.024620417, 0.025020972, 0.025427375, 0.025823222, 0.026225625, 0.026622361, 0.027026903, 0.027424014, 0.027832917, 0.028237903, 0.028635917, 0.029037111, 0.029431708, 0.029842542, 0.030239...</msg>
<status status="PASS" starttime="20201115 22:02:56.235" endtime="20201115 22:02:56.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.252" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.251" endtime="20201115 22:02:56.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.255" level="INFO">VALUE: [8.041999999999772e-06, 7.679999999999493e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.722999999997676e-06, 7.778000000003421e-06, 7.709000000001576e-06, 7.694000000002532e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.791999999999522e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.707999999995163e-06, 7.709000000001576e-06, 7.680000000002962e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.737000000000716e-06, 7.652000000003822e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.737000000000716e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.693999999995593e-06, 7.735999999994303e-06, 7.708000000002102e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.253" endtime="20201115 22:02:56.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.248" endtime="20201115 22:02:56.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.258" endtime="20201115 22:02:56.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.262" endtime="20201115 22:02:56.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.260" endtime="20201115 22:02:56.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.256" endtime="20201115 22:02:56.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.878" endtime="20201115 22:02:56.282"></status>
</kw>
<msg timestamp="20201115 22:02:56.283" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.292" endtime="20201115 22:02:56.320"></status>
</kw>
<msg timestamp="20201115 22:02:56.321" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.290" endtime="20201115 22:02:56.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.322" endtime="20201115 22:02:56.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.324" endtime="20201115 22:02:56.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.287" endtime="20201115 22:02:56.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.285" endtime="20201115 22:02:56.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.333" endtime="20201115 22:02:56.620"></status>
</kw>
<msg timestamp="20201115 22:02:56.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.332" endtime="20201115 22:02:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022355681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.624" endtime="20201115 22:02:56.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.632" endtime="20201115 22:02:56.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.329" endtime="20201115 22:02:56.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.328" endtime="20201115 22:02:56.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.639" level="INFO">${RESULT} = [{'time': 0.022355681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.022759694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.636" endtime="20201115 22:02:56.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.652" level="INFO">${OVERHEAD} = {'time': [0.022355681, 0.022759694, 0.023160236, 0.023566375, 0.023962556, 0.024362778, 0.024767986, 0.025161986, 0.025565319, 0.025965222, 0.026374792, 0.026776569, 0.027181792, 0.027574306, 0.027972...</msg>
<status status="PASS" starttime="20201115 22:02:56.640" endtime="20201115 22:02:56.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.657" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.656" endtime="20201115 22:02:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.660" level="INFO">VALUE: [8.028000000000202e-06, 7.722000000001672e-06, 7.679999999999493e-06, 7.680999999998966e-06, 7.737000000000716e-06, 7.695000000002006e-06, 7.735999999997772e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.708999999998106e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.736000000001242e-06, 7.709000000001576e-06, 7.736000000001242e-06, 7.723000000001146e-06, 7.638999999996787e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.694999999995067e-06, 7.791999999999522e-06, 7.723000000001146e-06, 7.681000000002436e-06, 7.667000000002866e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.708000000002102e-06, 7.708000000002102e-06, 7.723000000001146e-06, 7.777000000000478e-06, 7.709000000001576e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.737000000000716e-06, 7.722000000001672e-06, 7.723000000001146e-06, 7.680000000002962e-06, 7.722000000001672e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.658" endtime="20201115 22:02:56.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.654" endtime="20201115 22:02:56.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.663" endtime="20201115 22:02:56.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.666" endtime="20201115 22:02:56.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.665" endtime="20201115 22:02:56.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.661" endtime="20201115 22:02:56.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.283" endtime="20201115 22:02:56.687"></status>
</kw>
<msg timestamp="20201115 22:02:56.688" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.696" endtime="20201115 22:02:56.725"></status>
</kw>
<msg timestamp="20201115 22:02:56.725" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.695" endtime="20201115 22:02:56.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.728" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.726" endtime="20201115 22:02:56.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.729" endtime="20201115 22:02:56.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.692" endtime="20201115 22:02:56.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.690" endtime="20201115 22:02:56.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.738" endtime="20201115 22:02:57.026"></status>
</kw>
<msg timestamp="20201115 22:02:57.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.736" endtime="20201115 22:02:57.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022248667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.030" endtime="20201115 22:02:57.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.038" endtime="20201115 22:02:57.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.734" endtime="20201115 22:02:57.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.732" endtime="20201115 22:02:57.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.045" level="INFO">${RESULT} = [{'time': 0.022248667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958999999998356e-06, 'source_diff': 7.958999999998356e-06}, {'time': 0.022646778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.041" endtime="20201115 22:02:57.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.058" level="INFO">${OVERHEAD} = {'time': [0.022248667, 0.022646778, 0.023046389, 0.023444722, 0.023840583, 0.024234597, 0.024629833, 0.025039736, 0.025435625, 0.025833972, 0.026235167, 0.026632875, 0.027027833, 0.027438681, 0.027840...</msg>
<status status="PASS" starttime="20201115 22:02:57.046" endtime="20201115 22:02:57.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.063" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.062" endtime="20201115 22:02:57.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.065" level="INFO">VALUE: [7.958999999998356e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.707999999998633e-06, 7.750000000000812e-06, 7.679999999999493e-06, 7.666999999999397e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.693999999999063e-06, 7.736000000001242e-06, 7.680999999998966e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.693999999999063e-06, 7.736000000001242e-06, 7.707999999998633e-06, 7.736000000001242e-06, 7.749999999997342e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.735999999994303e-06, 7.723000000001146e-06, 7.750000000000812e-06, 7.737000000000716e-06, 7.737000000000716e-06, 7.735999999994303e-06, 7.709000000001576e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.709000000001576e-06, 7.791000000000048e-06, 7.694999999995067e-06, 7.777999999999952e-06, 7.639000000003726e-06, 7.708000000002102e-06, 7.709000000001576e-06, 7.736000000001242e-06, 7.723000000001146e-06, 7.707999999995163e-06, 7.777000000000478e-06, 7.723000000001146e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.064" endtime="20201115 22:02:57.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.059" endtime="20201115 22:02:57.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.068" endtime="20201115 22:02:57.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.072" endtime="20201115 22:02:57.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.070" endtime="20201115 22:02:57.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.067" endtime="20201115 22:02:57.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.688" endtime="20201115 22:02:57.093"></status>
</kw>
<msg timestamp="20201115 22:02:57.093" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.102" endtime="20201115 22:02:57.130"></status>
</kw>
<msg timestamp="20201115 22:02:57.131" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.100" endtime="20201115 22:02:57.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.132" endtime="20201115 22:02:57.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.134" endtime="20201115 22:02:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.098" endtime="20201115 22:02:57.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.095" endtime="20201115 22:02:57.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.143" endtime="20201115 22:02:57.429"></status>
</kw>
<msg timestamp="20201115 22:02:57.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.142" endtime="20201115 22:02:57.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.433" endtime="20201115 22:02:57.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.442" endtime="20201115 22:02:57.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.139" endtime="20201115 22:02:57.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.137" endtime="20201115 22:02:57.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.448" level="INFO">${RESULT} = [{'time': 0.022175444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012999999997689e-06, 'source_diff': 8.012999999997689e-06}, {'time': 0.022581403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.445" endtime="20201115 22:02:57.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.463" level="INFO">${OVERHEAD} = {'time': [0.022175444, 0.022581403, 0.022988819, 0.02339375, 0.02380125, 0.0242055, 0.024598569, 0.0249945, 0.025398736, 0.025808667, 0.026208583, 0.026612556, 0.027007236, 0.027409042, 0.027817375, 0...</msg>
<status status="PASS" starttime="20201115 22:02:57.449" endtime="20201115 22:02:57.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.468" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.466" endtime="20201115 22:02:57.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.470" level="INFO">VALUE: [8.012999999997689e-06, 7.750000000000812e-06, 7.708000000002102e-06, 7.722000000001672e-06, 7.777999999999952e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.708999999998106e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.721999999998203e-06, 7.708999999998106e-06, 7.735999999997772e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.722000000001672e-06, 7.750000000000812e-06, 7.694000000002532e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.721999999994733e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.723000000001146e-06, 7.736000000001242e-06, 7.722999999994207e-06, 7.764000000000382e-06, 7.722999999994207e-06, 7.708000000002102e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.707999999995163e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.736000000001242e-06, 7.693999999995593e-06, 7.722000000001672e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.469" endtime="20201115 22:02:57.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.464" endtime="20201115 22:02:57.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.473" endtime="20201115 22:02:57.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.477" endtime="20201115 22:02:57.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.475" endtime="20201115 22:02:57.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.472" endtime="20201115 22:02:57.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.093" endtime="20201115 22:02:57.498"></status>
</kw>
<msg timestamp="20201115 22:02:57.498" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.506" endtime="20201115 22:02:57.535"></status>
</kw>
<msg timestamp="20201115 22:02:57.536" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.505" endtime="20201115 22:02:57.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.537" endtime="20201115 22:02:57.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.539" endtime="20201115 22:02:57.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.502" endtime="20201115 22:02:57.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.500" endtime="20201115 22:02:57.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.548" endtime="20201115 22:02:57.834"></status>
</kw>
<msg timestamp="20201115 22:02:57.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.547" endtime="20201115 22:02:57.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.839" endtime="20201115 22:02:57.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.847" endtime="20201115 22:02:57.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.544" endtime="20201115 22:02:57.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.542" endtime="20201115 22:02:57.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.854" level="INFO">${RESULT} = [{'time': 0.022118069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.022528306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.850" endtime="20201115 22:02:57.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.868" level="INFO">${OVERHEAD} = {'time': [0.022118069, 0.022528306, 0.022935986, 0.023335264, 0.023735792, 0.024127583, 0.024534069, 0.024940778, 0.025344403, 0.025742778, 0.02614675, 0.026546375, 0.026955333, 0.027364597, 0.0277735...</msg>
<status status="PASS" starttime="20201115 22:02:57.855" endtime="20201115 22:02:57.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.872" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.871" endtime="20201115 22:02:57.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.875" level="INFO">VALUE: [8.041000000000298e-06, 7.723000000001146e-06, 7.721999999998203e-06, 7.722000000001672e-06, 7.708999999998106e-06, 7.665999999999923e-06, 7.762999999997439e-06, 7.694999999998536e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.707999999998633e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.722999999997676e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.736000000001242e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.707999999998633e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.722000000001672e-06, 7.805999999999091e-06, 7.693999999995593e-06, 7.695000000002006e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.681000000002436e-06, 7.723000000001146e-06, 7.638999999996787e-06, 7.695000000002006e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.708000000002102e-06, 7.695000000002006e-06, 7.791999999999522e-06, 7.723000000001146e-06, 7.722000000001672e-06, 7.721999999994733e-06, 7.735999999994303e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.764000000000382e-06, 7.722000000001672e-06, 7.736000000001242e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.873" endtime="20201115 22:02:57.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.868" endtime="20201115 22:02:57.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.878" endtime="20201115 22:02:57.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.881" endtime="20201115 22:02:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.880" endtime="20201115 22:02:57.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.876" endtime="20201115 22:02:57.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.498" endtime="20201115 22:02:57.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.877" endtime="20201115 22:02:57.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.876" endtime="20201115 22:02:57.902"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.905" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.913" endtime="20201115 22:02:57.944"></status>
</kw>
<msg timestamp="20201115 22:02:57.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.912" endtime="20201115 22:02:57.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.945" endtime="20201115 22:02:57.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.948" endtime="20201115 22:02:57.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.909" endtime="20201115 22:02:57.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.907" endtime="20201115 22:02:57.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.957" endtime="20201115 22:02:58.244"></status>
</kw>
<msg timestamp="20201115 22:02:58.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024592514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.956" endtime="20201115 22:02:58.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024583917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024592514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.248" endtime="20201115 22:02:58.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.256" endtime="20201115 22:02:58.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.953" endtime="20201115 22:02:58.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.951" endtime="20201115 22:02:58.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.263" level="INFO">${RESULT} = [{'time': 0.024592514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.025036319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.260" endtime="20201115 22:02:58.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.276" level="INFO">${OVERHEAD} = {'time': [0.024592514, 0.025036319, 0.025475403, 0.025914167, 0.026350403, 0.026785736, 0.027223889, 0.027663222, 0.028089236, 0.028525833, 0.028965208, 0.029394958, 0.029838417, 0.030278431, 0.030711...</msg>
<status status="PASS" starttime="20201115 22:02:58.264" endtime="20201115 22:02:58.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.281" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.280" endtime="20201115 22:02:58.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.283" level="INFO">VALUE: [8.596999999999078e-06, 8.250000000001312e-06, 8.319999999999161e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.333000000002727e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.221999999998703e-06, 8.290999999997078e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.305000000000118e-06, 8.319999999999161e-06, 8.292000000000022e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.333999999998731e-06, 8.249999999994373e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.291000000000548e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.305999999999591e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.209000000002076e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.374999999997967e-06, 8.278000000000452e-06, 8.263999999993943e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.250000000001312e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.282" endtime="20201115 22:02:58.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.277" endtime="20201115 22:02:58.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.286" endtime="20201115 22:02:58.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.290" endtime="20201115 22:02:58.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.288" endtime="20201115 22:02:58.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.285" endtime="20201115 22:02:58.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.905" endtime="20201115 22:02:58.311"></status>
</kw>
<msg timestamp="20201115 22:02:58.311" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.320" endtime="20201115 22:02:58.350"></status>
</kw>
<msg timestamp="20201115 22:02:58.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.318" endtime="20201115 22:02:58.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.351" endtime="20201115 22:02:58.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.354" endtime="20201115 22:02:58.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.316" endtime="20201115 22:02:58.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.314" endtime="20201115 22:02:58.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.364" endtime="20201115 22:02:58.650"></status>
</kw>
<msg timestamp="20201115 22:02:58.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.362" endtime="20201115 22:02:58.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.654" endtime="20201115 22:02:58.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.662" endtime="20201115 22:02:58.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.359" endtime="20201115 22:02:58.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.358" endtime="20201115 22:02:58.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.669" level="INFO">${RESULT} = [{'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.022603472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.665" endtime="20201115 22:02:58.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.682" level="INFO">${OVERHEAD} = {'time': [0.022165278, 0.022603472, 0.023045014, 0.023471625, 0.023896319, 0.024338778, 0.024773514, 0.025208778, 0.025645319, 0.026074403, 0.026502556, 0.02694125, 0.027371903, 0.027800361, 0.0282331...</msg>
<status status="PASS" starttime="20201115 22:02:58.670" endtime="20201115 22:02:58.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.687" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.686" endtime="20201115 22:02:58.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.689" level="INFO">VALUE: [8.569999999999411e-06, 8.305000000000118e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.277999999996982e-06, 8.305999999999591e-06, 8.250000000001312e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.236000000001742e-06, 8.250000000001312e-06, 8.277000000000978e-06, 8.250000000001312e-06, 8.194000000003032e-06, 8.236000000001742e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.347999999998301e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.305999999999591e-06, 8.277000000000978e-06, 8.3200000000061e-06, 8.264000000000882e-06, 8.305000000000118e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.318999999999688e-06, 8.292000000000022e-06, 8.346999999998828e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.236000000001742e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.688" endtime="20201115 22:02:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.683" endtime="20201115 22:02:58.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.693" endtime="20201115 22:02:58.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.696" endtime="20201115 22:02:58.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.694" endtime="20201115 22:02:58.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.691" endtime="20201115 22:02:58.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.312" endtime="20201115 22:02:58.717"></status>
</kw>
<msg timestamp="20201115 22:02:58.717" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.726" endtime="20201115 22:02:58.757"></status>
</kw>
<msg timestamp="20201115 22:02:58.757" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.724" endtime="20201115 22:02:58.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.760" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.758" endtime="20201115 22:02:58.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.761" endtime="20201115 22:02:58.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.722" endtime="20201115 22:02:58.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.720" endtime="20201115 22:02:58.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.770" endtime="20201115 22:02:59.056"></status>
</kw>
<msg timestamp="20201115 22:02:59.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.768" endtime="20201115 22:02:59.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.060" endtime="20201115 22:02:59.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.068" endtime="20201115 22:02:59.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.765" endtime="20201115 22:02:59.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.764" endtime="20201115 22:02:59.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.075" level="INFO">${RESULT} = [{'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.023283444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.071" endtime="20201115 22:02:59.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.089" level="INFO">${OVERHEAD} = {'time': [0.022857986, 0.023283444, 0.023718486, 0.024155722, 0.024594861, 0.025021792, 0.025453431, 0.025879208, 0.026310222, 0.026753361, 0.027185931, 0.027629361, 0.028072778, 0.028498458, 0.028927...</msg>
<status status="PASS" starttime="20201115 22:02:59.076" endtime="20201115 22:02:59.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.094" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.093" endtime="20201115 22:02:59.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.096" level="INFO">VALUE: [8.596999999999078e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.305000000000118e-06, 8.209000000002076e-06, 8.249999999997842e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.360999999998397e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.305000000000118e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.276999999994039e-06, 8.305999999999591e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.305999999999591e-06, 8.277000000000978e-06, 8.291000000000548e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.305999999999591e-06, 8.291000000000548e-06, 8.222000000002172e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.292000000000022e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.095" endtime="20201115 22:02:59.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.090" endtime="20201115 22:02:59.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.099" endtime="20201115 22:02:59.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.103" endtime="20201115 22:02:59.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.101" endtime="20201115 22:02:59.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.098" endtime="20201115 22:02:59.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.718" endtime="20201115 22:02:59.124"></status>
</kw>
<msg timestamp="20201115 22:02:59.124" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.133" endtime="20201115 22:02:59.163"></status>
</kw>
<msg timestamp="20201115 22:02:59.164" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.132" endtime="20201115 22:02:59.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.165" endtime="20201115 22:02:59.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.167" endtime="20201115 22:02:59.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.129" endtime="20201115 22:02:59.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.127" endtime="20201115 22:02:59.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.176" endtime="20201115 22:02:59.462"></status>
</kw>
<msg timestamp="20201115 22:02:59.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.175" endtime="20201115 22:02:59.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.466" endtime="20201115 22:02:59.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.474" endtime="20201115 22:02:59.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.172" endtime="20201115 22:02:59.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.170" endtime="20201115 22:02:59.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.481" level="INFO">${RESULT} = [{'time': 0.022511458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597000000002547e-06, 'source_diff': 8.597000000002547e-06}, {'time': 0.022941236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.478" endtime="20201115 22:02:59.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.494" level="INFO">${OVERHEAD} = {'time': [0.022511458, 0.022941236, 0.023366292, 0.023798833, 0.024224833, 0.024665389, 0.025095708, 0.025538528, 0.025977847, 0.026406375, 0.026834764, 0.027263875, 0.027701056, 0.028139472, 0.028570...</msg>
<status status="PASS" starttime="20201115 22:02:59.482" endtime="20201115 22:02:59.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.499" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.498" endtime="20201115 22:02:59.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.501" level="INFO">VALUE: [8.597000000002547e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.290999999997078e-06, 8.333000000002727e-06, 8.305999999999591e-06, 8.291000000000548e-06, 8.347000000002297e-06, 8.277999999996982e-06, 8.346999999998828e-06, 8.236000000001742e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.291000000000548e-06, 8.263999999997412e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.291999999996552e-06, 8.305999999999591e-06, 8.277000000000978e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.333999999998731e-06, 8.264000000000882e-06, 8.305000000000118e-06, 8.277000000000978e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.263999999993943e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.276999999994039e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.318999999999688e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.333999999998731e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.500" endtime="20201115 22:02:59.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.495" endtime="20201115 22:02:59.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.505" endtime="20201115 22:02:59.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.509" endtime="20201115 22:02:59.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.507" endtime="20201115 22:02:59.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.503" endtime="20201115 22:02:59.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.125" endtime="20201115 22:02:59.529"></status>
</kw>
<msg timestamp="20201115 22:02:59.530" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.538" endtime="20201115 22:02:59.568"></status>
</kw>
<msg timestamp="20201115 22:02:59.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.537" endtime="20201115 22:02:59.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.571" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.570" endtime="20201115 22:02:59.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.572" endtime="20201115 22:02:59.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.534" endtime="20201115 22:02:59.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.532" endtime="20201115 22:02:59.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.582" endtime="20201115 22:02:59.867"></status>
</kw>
<msg timestamp="20201115 22:02:59.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.580" endtime="20201115 22:02:59.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.871" endtime="20201115 22:02:59.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.879" endtime="20201115 22:02:59.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.577" endtime="20201115 22:02:59.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.576" endtime="20201115 22:02:59.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.887" level="INFO">${RESULT} = [{'time': 0.022132361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.0225705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:59.883" endtime="20201115 22:02:59.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.900" level="INFO">${OVERHEAD} = {'time': [0.022132361, 0.0225705, 0.022997083, 0.023425194, 0.023853653, 0.024297347, 0.024722042, 0.025150125, 0.025577931, 0.026020097, 0.026447625, 0.026881083, 0.027312014, 0.027748875, 0.02818262...</msg>
<status status="PASS" starttime="20201115 22:02:59.888" endtime="20201115 22:02:59.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.905" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.904" endtime="20201115 22:02:59.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.907" level="INFO">VALUE: [8.555000000000368e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.263000000001408e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.249999999997842e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.333000000002727e-06, 8.292000000000022e-06, 8.263999999997412e-06, 8.221999999998703e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.221999999995233e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.276999999994039e-06, 8.291000000000548e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.332999999999258e-06, 8.276999999994039e-06, 8.263999999993943e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.264000000000882e-06, 8.374999999997967e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.236000000001742e-06, 8.276999999994039e-06, 8.277999999993513e-06, 8.346999999998828e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.292000000000022e-06, 8.250000000001312e-06, 8.291000000000548e-06, 8.221999999995233e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.906" endtime="20201115 22:02:59.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.901" endtime="20201115 22:02:59.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.911" endtime="20201115 22:02:59.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.915" endtime="20201115 22:02:59.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.913" endtime="20201115 22:02:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.909" endtime="20201115 22:02:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.530" endtime="20201115 22:02:59.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.904" endtime="20201115 22:02:59.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.903" endtime="20201115 22:02:59.936"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.938" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.947" endtime="20201115 22:02:59.979"></status>
</kw>
<msg timestamp="20201115 22:02:59.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.945" endtime="20201115 22:02:59.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.980" endtime="20201115 22:02:59.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.983" endtime="20201115 22:02:59.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.943" endtime="20201115 22:02:59.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.941" endtime="20201115 22:02:59.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.992" endtime="20201115 22:03:00.278"></status>
</kw>
<msg timestamp="20201115 22:03:00.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024700222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.990" endtime="20201115 22:03:00.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024700222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.282" endtime="20201115 22:03:00.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.291" endtime="20201115 22:03:00.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.988" endtime="20201115 22:03:00.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.986" endtime="20201115 22:03:00.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.297" level="INFO">${RESULT} = [{'time': 0.024709444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.025172611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.294" endtime="20201115 22:03:00.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.311" level="INFO">${OVERHEAD} = {'time': [0.024709444, 0.025172611, 0.025642014, 0.026111778, 0.026587694, 0.027066125, 0.027532736, 0.027998403, 0.028469278, 0.028929056, 0.029397417, 0.029874889, 0.030349569, 0.030809597, 0.031287...</msg>
<status status="PASS" starttime="20201115 22:03:00.298" endtime="20201115 22:03:00.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.315" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.314" endtime="20201115 22:03:00.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.322" level="INFO">VALUE: [9.221999999999703e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.778000000000952e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.833999999999231e-06, 8.903000000001077e-06, 8.763999999997912e-06, 8.847000000002797e-06, 8.832999999999758e-06, 8.847000000002797e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.847000000006267e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.833999999999231e-06, 8.763999999994443e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.778000000000952e-06, 8.901999999998134e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.887999999998564e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.84800000000574e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.84800000000574e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.846999999999328e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.316" endtime="20201115 22:03:00.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.312" endtime="20201115 22:03:00.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.325" endtime="20201115 22:03:00.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.329" endtime="20201115 22:03:00.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.327" endtime="20201115 22:03:00.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.323" endtime="20201115 22:03:00.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.939" endtime="20201115 22:03:00.349"></status>
</kw>
<msg timestamp="20201115 22:03:00.350" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.359" endtime="20201115 22:03:00.390"></status>
</kw>
<msg timestamp="20201115 22:03:00.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.357" endtime="20201115 22:03:00.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.392" endtime="20201115 22:03:00.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.394" endtime="20201115 22:03:00.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.354" endtime="20201115 22:03:00.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.352" endtime="20201115 22:03:00.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.403" endtime="20201115 22:03:00.690"></status>
</kw>
<msg timestamp="20201115 22:03:00.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.402" endtime="20201115 22:03:00.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.694" endtime="20201115 22:03:00.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.702" endtime="20201115 22:03:00.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.399" endtime="20201115 22:03:00.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.397" endtime="20201115 22:03:00.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.709" level="INFO">${RESULT} = [{'time': 0.022214028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.022673847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.706" endtime="20201115 22:03:00.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.724" level="INFO">${OVERHEAD} = {'time': [0.022214028, 0.022673847, 0.023147639, 0.023618319, 0.024090236, 0.024566208, 0.025039319, 0.025502181, 0.025962264, 0.026439778, 0.026913583, 0.027389181, 0.027867653, 0.028331833, 0.028800...</msg>
<status status="PASS" starttime="20201115 22:03:00.710" endtime="20201115 22:03:00.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.729" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.728" endtime="20201115 22:03:00.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.731" level="INFO">VALUE: [9.110999999999148e-06, 8.846999999999328e-06, 8.847000000002797e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.777999999997482e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.763999999997912e-06, 8.875000000001937e-06, 8.84800000000227e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.806000000000092e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.84800000000574e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847000000006267e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.833999999999231e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.861999999998371e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.730" endtime="20201115 22:03:00.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.725" endtime="20201115 22:03:00.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.734" endtime="20201115 22:03:00.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.738" endtime="20201115 22:03:00.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.736" endtime="20201115 22:03:00.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.733" endtime="20201115 22:03:00.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.350" endtime="20201115 22:03:00.759"></status>
</kw>
<msg timestamp="20201115 22:03:00.759" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.768" endtime="20201115 22:03:00.800"></status>
</kw>
<msg timestamp="20201115 22:03:00.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.766" endtime="20201115 22:03:00.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.801" endtime="20201115 22:03:00.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.804" endtime="20201115 22:03:00.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.764" endtime="20201115 22:03:00.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.762" endtime="20201115 22:03:00.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.813" endtime="20201115 22:03:01.100"></status>
</kw>
<msg timestamp="20201115 22:03:01.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:00.811" endtime="20201115 22:03:01.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:01.104" endtime="20201115 22:03:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.112" endtime="20201115 22:03:01.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.809" endtime="20201115 22:03:01.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.807" endtime="20201115 22:03:01.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.119" level="INFO">${RESULT} = [{'time': 0.022232111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.022694139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.116" endtime="20201115 22:03:01.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.133" level="INFO">${OVERHEAD} = {'time': [0.022232111, 0.022694139, 0.023156111, 0.023619958, 0.024089403, 0.024565056, 0.025023847, 0.025487653, 0.025954917, 0.026421833, 0.026885639, 0.027350375, 0.02781825, 0.028278375, 0.0287431...</msg>
<status status="PASS" starttime="20201115 22:03:01.121" endtime="20201115 22:03:01.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.137" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.136" endtime="20201115 22:03:01.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.140" level="INFO">VALUE: [9.110999999999148e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.805999999996622e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.861000000002367e-06, 8.763999999997912e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.847000000002797e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.819000000000188e-06, 8.8340000000027e-06, 8.749999999998342e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.903000000004546e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.791000000001048e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.819000000000188e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.819999999999661e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.861999999998371e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.139" endtime="20201115 22:03:01.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.134" endtime="20201115 22:03:01.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.143" endtime="20201115 22:03:01.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.147" endtime="20201115 22:03:01.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.145" endtime="20201115 22:03:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.141" endtime="20201115 22:03:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.760" endtime="20201115 22:03:01.167"></status>
</kw>
<msg timestamp="20201115 22:03:01.168" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.176" endtime="20201115 22:03:01.209"></status>
</kw>
<msg timestamp="20201115 22:03:01.209" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.175" endtime="20201115 22:03:01.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.212" endtime="20201115 22:03:01.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.216" endtime="20201115 22:03:01.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.172" endtime="20201115 22:03:01.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.170" endtime="20201115 22:03:01.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.231" endtime="20201115 22:03:01.531"></status>
</kw>
<msg timestamp="20201115 22:03:01.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.229" endtime="20201115 22:03:01.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.540" endtime="20201115 22:03:01.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.558" endtime="20201115 22:03:01.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.224" endtime="20201115 22:03:01.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.222" endtime="20201115 22:03:01.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.572" level="INFO">${RESULT} = [{'time': 0.022348958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.022815375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.565" endtime="20201115 22:03:01.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.595" level="INFO">${OVERHEAD} = {'time': [0.022348958, 0.022815375, 0.023280333, 0.023756569, 0.024221944, 0.024682319, 0.025150819, 0.025627083, 0.026086556, 0.026564097, 0.027023569, 0.027490833, 0.027965597, 0.028431944, 0.028893...</msg>
<status status="PASS" starttime="20201115 22:03:01.574" endtime="20201115 22:03:01.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.599" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.598" endtime="20201115 22:03:01.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.602" level="INFO">VALUE: [9.151999999998384e-06, 8.916999999997177e-06, 8.860999999998898e-06, 8.833000000003227e-06, 8.762999999998439e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.917000000000647e-06, 8.861000000002367e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.792000000000522e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.847000000006267e-06, 8.847999999998801e-06, 8.861000000005836e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.847999999998801e-06, 8.764000000001382e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.778000000000952e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.600" endtime="20201115 22:03:01.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.596" endtime="20201115 22:03:01.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.605" endtime="20201115 22:03:01.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.608" endtime="20201115 22:03:01.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.607" endtime="20201115 22:03:01.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.603" endtime="20201115 22:03:01.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.168" endtime="20201115 22:03:01.629"></status>
</kw>
<msg timestamp="20201115 22:03:01.629" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.638" endtime="20201115 22:03:01.670"></status>
</kw>
<msg timestamp="20201115 22:03:01.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.636" endtime="20201115 22:03:01.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.671" endtime="20201115 22:03:01.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.674" endtime="20201115 22:03:01.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.634" endtime="20201115 22:03:01.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.632" endtime="20201115 22:03:01.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.683" endtime="20201115 22:03:01.970"></status>
</kw>
<msg timestamp="20201115 22:03:01.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.681" endtime="20201115 22:03:01.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.974" endtime="20201115 22:03:01.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.983" endtime="20201115 22:03:01.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.679" endtime="20201115 22:03:01.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.677" endtime="20201115 22:03:01.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.989" level="INFO">${RESULT} = [{'time': 0.022031278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000000897e-06, 'source_diff': 9.167000000000897e-06}, {'time': 0.022498903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.986" endtime="20201115 22:03:01.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.003" level="INFO">${OVERHEAD} = {'time': [0.022031278, 0.022498903, 0.022958056, 0.023420361, 0.023882042, 0.024359931, 0.024820042, 0.025297917, 0.025759278, 0.026228403, 0.026689736, 0.027166597, 0.027645083, 0.028113264, 0.028582...</msg>
<status status="PASS" starttime="20201115 22:03:01.990" endtime="20201115 22:03:02.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.007" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.006" endtime="20201115 22:03:02.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.010" level="INFO">VALUE: [9.167000000000897e-06, 8.819999999999661e-06, 8.84800000000227e-06, 8.846999999999328e-06, 8.819999999999661e-06, 8.84800000000227e-06, 8.833999999999231e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.861000000002367e-06, 8.832999999999758e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.791999999997052e-06, 8.819999999999661e-06, 8.84800000000227e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.861999999998371e-06, 8.917000000004116e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.833000000006697e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.874999999998467e-06, 8.777999999994013e-06, 8.874999999998467e-06, 8.847999999998801e-06, 8.847000000006267e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.860999999998898e-06, 8.792000000000522e-06, 8.83400000000617e-06, 8.819000000000188e-06, 8.83400000000617e-06, 8.791999999993583e-06, 8.861999999998371e-06, 8.846999999999328e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.008" endtime="20201115 22:03:02.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.003" endtime="20201115 22:03:02.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.013" endtime="20201115 22:03:02.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.016" endtime="20201115 22:03:02.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.014" endtime="20201115 22:03:02.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.011" endtime="20201115 22:03:02.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.630" endtime="20201115 22:03:02.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.937" endtime="20201115 22:03:02.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.936" endtime="20201115 22:03:02.037"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.039" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.048" endtime="20201115 22:03:02.082"></status>
</kw>
<msg timestamp="20201115 22:03:02.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.046" endtime="20201115 22:03:02.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.083" endtime="20201115 22:03:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.086" endtime="20201115 22:03:02.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.044" endtime="20201115 22:03:02.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.042" endtime="20201115 22:03:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.096" endtime="20201115 22:03:02.382"></status>
</kw>
<msg timestamp="20201115 22:03:02.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024419083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.094" endtime="20201115 22:03:02.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024419083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024428833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.387" endtime="20201115 22:03:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.394" endtime="20201115 22:03:02.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.092" endtime="20201115 22:03:02.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.090" endtime="20201115 22:03:02.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.401" level="INFO">${RESULT} = [{'time': 0.024428833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.024943597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.398" endtime="20201115 22:03:02.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.416" level="INFO">${OVERHEAD} = {'time': [0.024428833, 0.024943597, 0.025457681, 0.025955278, 0.026463472, 0.0269735, 0.027479181, 0.027983319, 0.028489333, 0.028991569, 0.029501611, 0.030008181, 0.030517847, 0.031016722, 0.03151430...</msg>
<status status="PASS" starttime="20201115 22:03:02.402" endtime="20201115 22:03:02.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.420" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.419" endtime="20201115 22:03:02.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.423" level="INFO">VALUE: [9.749999999999343e-06, 9.416000000001673e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.389000000002007e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.429999999997773e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.417000000004616e-06, 9.389000000005476e-06, 9.403000000005046e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.402999999998107e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.401999999998634e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.388999999998537e-06, 9.346999999999828e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.457999999996913e-06, 9.415999999998204e-06, 9.375000000005906e-06, 9.402999999998107e-06, 9.402999999998107e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.421" endtime="20201115 22:03:02.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.416" endtime="20201115 22:03:02.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.426" endtime="20201115 22:03:02.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.429" endtime="20201115 22:03:02.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.427" endtime="20201115 22:03:02.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.424" endtime="20201115 22:03:02.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.040" endtime="20201115 22:03:02.450"></status>
</kw>
<msg timestamp="20201115 22:03:02.450" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.459" endtime="20201115 22:03:02.492"></status>
</kw>
<msg timestamp="20201115 22:03:02.493" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.457" endtime="20201115 22:03:02.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.494" endtime="20201115 22:03:02.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.497" endtime="20201115 22:03:02.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.455" endtime="20201115 22:03:02.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.453" endtime="20201115 22:03:02.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.506" endtime="20201115 22:03:02.793"></status>
</kw>
<msg timestamp="20201115 22:03:02.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:02.504" endtime="20201115 22:03:02.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:02.797" endtime="20201115 22:03:02.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.805" endtime="20201115 22:03:02.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.502" endtime="20201115 22:03:02.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.500" endtime="20201115 22:03:02.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.812" level="INFO">${RESULT} = [{'time': 0.021991986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.022501125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.809" endtime="20201115 22:03:02.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.825" level="INFO">${OVERHEAD} = {'time': [0.021991986, 0.022501125, 0.023016486, 0.023512458, 0.024020597, 0.024522528, 0.025025708, 0.025537278, 0.026042333, 0.026554194, 0.027051153, 0.027563361, 0.028073042, 0.028578431, 0.029088...</msg>
<status status="PASS" starttime="20201115 22:03:02.813" endtime="20201115 22:03:02.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.830" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.828" endtime="20201115 22:03:02.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.832" level="INFO">VALUE: [9.736000000003242e-06, 9.389000000002007e-06, 9.402999999998107e-06, 9.416000000001673e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.402000000002103e-06, 9.403000000001577e-06, 9.416000000001673e-06, 9.401999999998634e-06, 9.403000000001577e-06, 9.375000000002437e-06, 9.374999999998967e-06, 9.403000000001577e-06, 9.387999999999064e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.401999999998634e-06, 9.360999999999398e-06, 9.388999999998537e-06, 9.389000000005476e-06, 9.415999999998204e-06, 9.403000000005046e-06, 9.401999999998634e-06, 9.374999999998967e-06, 9.444999999996817e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.388000000006003e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.415999999998204e-06, 9.374999999998967e-06, 9.430999999997247e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.388999999998537e-06, 9.389000000005476e-06, 9.402999999998107e-06, 9.402000000005573e-06, 9.388999999998537e-06, 9.417000000004616e-06, 9.402999999998107e-06, 9.417000000004616e-06, 9.416999999997677e-06, 9.416999999997677e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.831" endtime="20201115 22:03:02.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.826" endtime="20201115 22:03:02.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.835" endtime="20201115 22:03:02.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.838" endtime="20201115 22:03:02.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.837" endtime="20201115 22:03:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.833" endtime="20201115 22:03:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.451" endtime="20201115 22:03:02.859"></status>
</kw>
<msg timestamp="20201115 22:03:02.859" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.869" endtime="20201115 22:03:02.902"></status>
</kw>
<msg timestamp="20201115 22:03:02.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.867" endtime="20201115 22:03:02.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.904" endtime="20201115 22:03:02.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.906" endtime="20201115 22:03:02.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.864" endtime="20201115 22:03:02.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.862" endtime="20201115 22:03:02.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.915" endtime="20201115 22:03:03.201"></status>
</kw>
<msg timestamp="20201115 22:03:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.914" endtime="20201115 22:03:03.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.206" endtime="20201115 22:03:03.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.214" endtime="20201115 22:03:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.911" endtime="20201115 22:03:03.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.909" endtime="20201115 22:03:03.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.220" level="INFO">${RESULT} = [{'time': 0.022486792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.022997528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.217" endtime="20201115 22:03:03.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.233" level="INFO">${OVERHEAD} = {'time': [0.022486792, 0.022997528, 0.023509736, 0.024013847, 0.024520444, 0.025021111, 0.025533611, 0.026041431, 0.026542389, 0.027057986, 0.027557111, 0.028063681, 0.028578972, 0.029082708, 0.029587...</msg>
<status status="PASS" starttime="20201115 22:03:03.221" endtime="20201115 22:03:03.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.238" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.237" endtime="20201115 22:03:03.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.240" level="INFO">VALUE: [9.722999999999676e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.416000000001673e-06, 9.401999999998634e-06, 9.402999999998107e-06, 9.333000000000258e-06, 9.403000000001577e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.346999999999828e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.444000000000813e-06, 9.347999999999301e-06, 9.388999999998537e-06, 9.389000000002007e-06, 9.375000000005906e-06, 9.402999999998107e-06, 9.403000000005046e-06, 9.429999999997773e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.401999999998634e-06, 9.403000000005046e-06, 9.360999999999398e-06, 9.459000000003326e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.457999999996913e-06, 9.389000000005476e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.457999999996913e-06, 9.444000000004282e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.401999999998634e-06, 9.403000000005046e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.389000000005476e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.239" endtime="20201115 22:03:03.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.234" endtime="20201115 22:03:03.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.243" endtime="20201115 22:03:03.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.247" endtime="20201115 22:03:03.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.245" endtime="20201115 22:03:03.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.242" endtime="20201115 22:03:03.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.860" endtime="20201115 22:03:03.267"></status>
</kw>
<msg timestamp="20201115 22:03:03.268" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.277" endtime="20201115 22:03:03.310"></status>
</kw>
<msg timestamp="20201115 22:03:03.311" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.275" endtime="20201115 22:03:03.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.313" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.312" endtime="20201115 22:03:03.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.314" endtime="20201115 22:03:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.273" endtime="20201115 22:03:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.271" endtime="20201115 22:03:03.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.323" endtime="20201115 22:03:03.609"></status>
</kw>
<msg timestamp="20201115 22:03:03.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.322" endtime="20201115 22:03:03.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.613" endtime="20201115 22:03:03.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.621" endtime="20201115 22:03:03.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.319" endtime="20201115 22:03:03.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.318" endtime="20201115 22:03:03.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.628" level="INFO">${RESULT} = [{'time': 0.022461944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.022975819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.625" endtime="20201115 22:03:03.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.641" level="INFO">${OVERHEAD} = {'time': [0.022461944, 0.022975819, 0.023484972, 0.023991958, 0.024487958, 0.024994639, 0.025495708, 0.025994278, 0.02650775, 0.027010639, 0.027511653, 0.028020125, 0.028517417, 0.029019042, 0.0295222...</msg>
<status status="PASS" starttime="20201115 22:03:03.629" endtime="20201115 22:03:03.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.646" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.645" endtime="20201115 22:03:03.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.648" level="INFO">VALUE: [9.708000000000633e-06, 9.402000000002103e-06, 9.388999999998537e-06, 9.416000000001673e-06, 9.402000000002103e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.374999999998967e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.333000000000258e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.417000000001147e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.374999999998967e-06, 9.403000000005046e-06, 9.416999999997677e-06, 9.333000000000258e-06, 9.416999999997677e-06, 9.389000000005476e-06, 9.388999999998537e-06, 9.415999999998204e-06, 9.485999999996053e-06, 9.403000000005046e-06, 9.389000000005476e-06, 9.403000000005046e-06, 9.430000000004712e-06, 9.403000000005046e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.403000000005046e-06, 9.360999999999398e-06, 9.416000000005142e-06, 9.403000000005046e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.333000000000258e-06, 9.443999999997343e-06, 9.333000000000258e-06, 9.374999999998967e-06, 9.389000000005476e-06, 9.402999999998107e-06, 9.319000000000688e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.647" endtime="20201115 22:03:03.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.642" endtime="20201115 22:03:03.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.651" endtime="20201115 22:03:03.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.655" endtime="20201115 22:03:03.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.653" endtime="20201115 22:03:03.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.649" endtime="20201115 22:03:03.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.269" endtime="20201115 22:03:03.676"></status>
</kw>
<msg timestamp="20201115 22:03:03.676" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.685" endtime="20201115 22:03:03.718"></status>
</kw>
<msg timestamp="20201115 22:03:03.719" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.683" endtime="20201115 22:03:03.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.720" endtime="20201115 22:03:03.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.722" endtime="20201115 22:03:03.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.681" endtime="20201115 22:03:03.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.678" endtime="20201115 22:03:03.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.731" endtime="20201115 22:03:04.018"></status>
</kw>
<msg timestamp="20201115 22:03:04.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.730" endtime="20201115 22:03:04.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.022" endtime="20201115 22:03:04.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.030" endtime="20201115 22:03:04.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.727" endtime="20201115 22:03:04.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.725" endtime="20201115 22:03:04.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.037" level="INFO">${RESULT} = [{'time': 0.022266431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.722999999999676e-06, 'source_diff': 9.722999999999676e-06}, {'time': 0.022782083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.033" endtime="20201115 22:03:04.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.051" level="INFO">${OVERHEAD} = {'time': [0.022266431, 0.022782083, 0.023284653, 0.023793083, 0.024305, 0.024820625, 0.025331569, 0.025839708, 0.02633975, 0.026837319, 0.027346347, 0.027847653, 0.028348042, 0.028860861, 0.029374931,...</msg>
<status status="PASS" starttime="20201115 22:03:04.038" endtime="20201115 22:03:04.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.056" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.055" endtime="20201115 22:03:04.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.058" level="INFO">VALUE: [9.722999999999676e-06, 9.389000000002007e-06, 9.416999999997677e-06, 9.360999999999398e-06, 9.431000000000717e-06, 9.416999999997677e-06, 9.388000000002533e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.415999999998204e-06, 9.403000000001577e-06, 9.388999999998537e-06, 9.403000000001577e-06, 9.389000000002007e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.458000000000383e-06, 9.402000000002103e-06, 9.360999999999398e-06, 9.401999999998634e-06, 9.388999999998537e-06, 9.416999999997677e-06, 9.401999999998634e-06, 9.387999999999064e-06, 9.360999999999398e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.374999999998967e-06, 9.389000000005476e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.401999999998634e-06, 9.416000000005142e-06, 9.416999999997677e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.402999999998107e-06, 9.402000000005573e-06, 9.402000000005573e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.389000000005476e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.415999999998204e-06, 9.402999999998107e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.057" endtime="20201115 22:03:04.059"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.052" endtime="20201115 22:03:04.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.062" endtime="20201115 22:03:04.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.065" endtime="20201115 22:03:04.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.063" endtime="20201115 22:03:04.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.060" endtime="20201115 22:03:04.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.676" endtime="20201115 22:03:04.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.038" endtime="20201115 22:03:04.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.038" endtime="20201115 22:03:04.086"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.089" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.098" endtime="20201115 22:03:04.134"></status>
</kw>
<msg timestamp="20201115 22:03:04.134" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.096" endtime="20201115 22:03:04.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.137" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.135" endtime="20201115 22:03:04.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.138" endtime="20201115 22:03:04.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.094" endtime="20201115 22:03:04.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.092" endtime="20201115 22:03:04.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.147" endtime="20201115 22:03:04.434"></status>
</kw>
<msg timestamp="20201115 22:03:04.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025611875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.145" endtime="20201115 22:03:04.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025611875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.438" endtime="20201115 22:03:04.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.446" endtime="20201115 22:03:04.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.143" endtime="20201115 22:03:04.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.141" endtime="20201115 22:03:04.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.452" level="INFO">${RESULT} = [{'time': 0.025611875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0277999999998982e-05, 'source_diff': 1.0277999999998982e-05}, {'time': 0.026155014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.449" endtime="20201115 22:03:04.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.465" level="INFO">${OVERHEAD} = {'time': [0.025611875, 0.026155014, 0.026698472, 0.027248722, 0.027799944, 0.028355236, 0.028898653, 0.029449014, 0.029997736, 0.030549278, 0.031096222, 0.0316365, 0.032179653, 0.032734639, 0.03328094...</msg>
<status status="PASS" starttime="20201115 22:03:04.453" endtime="20201115 22:03:04.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.470" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.469" endtime="20201115 22:03:04.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.473" level="INFO">VALUE: [1.0277999999998982e-05, 9.931000000001217e-06, 9.986000000000023e-06, 9.958000000000883e-06, 9.958000000000883e-06, 1.0013999999999162e-05, 9.972000000000453e-06, 9.986000000000023e-06, 9.958000000000883e-06, 9.972000000000453e-06, 1.0040999999998829e-05, 9.971999999996983e-06, 9.972000000003922e-06, 9.945000000004256e-06, 9.971999999996983e-06, 9.959000000003826e-06, 1.0000000000003062e-05, 9.958999999996887e-06, 9.957999999997413e-06, 9.973000000003396e-06, 9.973000000003396e-06, 9.917000000005116e-06, 9.957999999997413e-06, 9.957999999997413e-06, 9.972000000003922e-06, 9.958000000004352e-06, 9.958999999996887e-06, 9.972000000003922e-06, 9.986000000003492e-06, 9.944000000004782e-06, 9.944999999997317e-06, 9.957999999997413e-06, 9.958000000004352e-06, 9.985999999996553e-06, 9.958999999996887e-06, 9.985999999996553e-06, 9.972000000003922e-06, 9.957999999997413e-06, 9.958000000004352e-06, 9.958999999996887e-06, 9.971999999996983e-06, 9.972000000003922e-06, 9.958999999996887e-06, 9.903000000005546e-06, 9.944000000004782e-06, 9.971999999996983e-06, 9.971999999996983e-06, 9.986000000003492e-06, 9.985999999996553e-06, 9.958000000004352e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.471" endtime="20201115 22:03:04.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.466" endtime="20201115 22:03:04.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.476" endtime="20201115 22:03:04.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.479" endtime="20201115 22:03:04.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.478" endtime="20201115 22:03:04.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.474" endtime="20201115 22:03:04.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.090" endtime="20201115 22:03:04.500"></status>
</kw>
<msg timestamp="20201115 22:03:04.500" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.509" endtime="20201115 22:03:04.545"></status>
</kw>
<msg timestamp="20201115 22:03:04.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.508" endtime="20201115 22:03:04.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.546" endtime="20201115 22:03:04.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.549" endtime="20201115 22:03:04.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.505" endtime="20201115 22:03:04.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.503" endtime="20201115 22:03:04.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.558" endtime="20201115 22:03:04.844"></status>
</kw>
<msg timestamp="20201115 22:03:04.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.556" endtime="20201115 22:03:04.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.848" endtime="20201115 22:03:04.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.856" endtime="20201115 22:03:04.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.554" endtime="20201115 22:03:04.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.552" endtime="20201115 22:03:04.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.863" level="INFO">${RESULT} = [{'time': 0.022130403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.022685694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:04.860" endtime="20201115 22:03:04.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.877" level="INFO">${OVERHEAD} = {'time': [0.022130403, 0.022685694, 0.023238, 0.023786639, 0.024334042, 0.024874292, 0.025427611, 0.025975958, 0.026520278, 0.027062472, 0.027611139, 0.028152361, 0.028693569, 0.029241361, 0.029788194...</msg>
<status status="PASS" starttime="20201115 22:03:04.864" endtime="20201115 22:03:04.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.882" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.881" endtime="20201115 22:03:04.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.884" level="INFO">VALUE: [1.0263999999999412e-05, 1.0012999999999689e-05, 9.972000000000453e-06, 9.944999999997317e-06, 9.945000000000787e-06, 9.972999999999926e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.958000000000883e-06, 9.945000000000787e-06, 9.944000000001313e-06, 9.971999999996983e-06, 9.958000000000883e-06, 9.916000000002173e-06, 9.972999999999926e-06, 9.972000000000453e-06, 9.971999999996983e-06, 9.903000000005546e-06, 9.958999999996887e-06, 9.943999999997843e-06, 9.945000000004256e-06, 9.986000000003492e-06, 9.971999999996983e-06, 9.986000000003492e-06, 9.972000000003922e-06, 9.971999999996983e-06, 9.972999999996457e-06, 9.971999999996983e-06, 1.0000000000003062e-05, 9.888999999999037e-06, 9.957999999997413e-06, 9.959000000003826e-06, 9.957999999997413e-06, 9.985999999996553e-06, 9.972000000003922e-06, 9.958000000004352e-06, 9.944999999997317e-06, 9.958000000004352e-06, 9.985999999996553e-06, 9.958000000004352e-06, 1.0000000000003062e-05, 9.972000000003922e-06, 9.945000000004256e-06, 9.973000000003396e-06, 9.971999999996983e-06, 9.874999999999468e-06, 9.957999999997413e-06, 9.971999999996983e-06, 9.971999999996983e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.883" endtime="20201115 22:03:04.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.878" endtime="20201115 22:03:04.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.887" endtime="20201115 22:03:04.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.891" endtime="20201115 22:03:04.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.889" endtime="20201115 22:03:04.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.886" endtime="20201115 22:03:04.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.501" endtime="20201115 22:03:04.912"></status>
</kw>
<msg timestamp="20201115 22:03:04.912" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.921" endtime="20201115 22:03:04.956"></status>
</kw>
<msg timestamp="20201115 22:03:04.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.919" endtime="20201115 22:03:04.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.958" endtime="20201115 22:03:04.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.961" endtime="20201115 22:03:04.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.916" endtime="20201115 22:03:04.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.914" endtime="20201115 22:03:04.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.971" endtime="20201115 22:03:05.280"></status>
</kw>
<msg timestamp="20201115 22:03:05.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.969" endtime="20201115 22:03:05.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.284" endtime="20201115 22:03:05.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.292" endtime="20201115 22:03:05.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.966" endtime="20201115 22:03:05.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.964" endtime="20201115 22:03:05.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.299" level="INFO">${RESULT} = [{'time': 0.022315597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0263999999999412e-05, 'source_diff': 1.0263999999999412e-05}, {'time': 0.022861569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.295" endtime="20201115 22:03:05.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.312" level="INFO">${OVERHEAD} = {'time': [0.022315597, 0.022861569, 0.023398458, 0.023949667, 0.024500556, 0.025052667, 0.025606694, 0.026156958, 0.026711903, 0.027249681, 0.027804889, 0.028344208, 0.028890069, 0.029439389, 0.029980...</msg>
<status status="PASS" starttime="20201115 22:03:05.300" endtime="20201115 22:03:05.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.317" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.316" endtime="20201115 22:03:05.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.320" level="INFO">VALUE: [1.0263999999999412e-05, 9.958000000000883e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.986999999999496e-06, 9.945000000000787e-06, 9.958000000000883e-06, 9.944000000001313e-06, 9.986000000000023e-06, 9.972999999999926e-06, 9.958000000000883e-06, 9.943999999997843e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.945000000000787e-06, 9.958000000000883e-06, 9.971999999996983e-06, 1.0000000000003062e-05, 9.958000000004352e-06, 9.929999999998274e-06, 9.972000000003922e-06, 9.973000000003396e-06, 9.917000000005116e-06, 9.957999999997413e-06, 9.971999999996983e-06, 9.944999999997317e-06, 9.943999999997843e-06, 9.929999999998274e-06, 9.973000000003396e-06, 9.959000000003826e-06, 9.971999999996983e-06, 9.958000000004352e-06, 9.973000000003396e-06, 9.958999999996887e-06, 9.943999999997843e-06, 9.987000000002966e-06, 9.930999999997747e-06, 9.944999999997317e-06, 9.957999999997413e-06, 9.971999999996983e-06, 9.985999999996553e-06, 9.985999999996553e-06, 9.943999999997843e-06, 9.959000000003826e-06, 9.944999999997317e-06, 9.958000000004352e-06, 9.985999999996553e-06, 9.957999999997413e-06, 9.958000000004352e-06, 9.972000000003922e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.318" endtime="20201115 22:03:05.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.313" endtime="20201115 22:03:05.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.323" endtime="20201115 22:03:05.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.326" endtime="20201115 22:03:05.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.324" endtime="20201115 22:03:05.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.321" endtime="20201115 22:03:05.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.912" endtime="20201115 22:03:05.347"></status>
</kw>
<msg timestamp="20201115 22:03:05.347" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.356" endtime="20201115 22:03:05.392"></status>
</kw>
<msg timestamp="20201115 22:03:05.392" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.354" endtime="20201115 22:03:05.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.395" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.393" endtime="20201115 22:03:05.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.396" endtime="20201115 22:03:05.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.352" endtime="20201115 22:03:05.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.350" endtime="20201115 22:03:05.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.405" endtime="20201115 22:03:05.692"></status>
</kw>
<msg timestamp="20201115 22:03:05.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.403" endtime="20201115 22:03:05.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.696" endtime="20201115 22:03:05.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.711" endtime="20201115 22:03:05.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.401" endtime="20201115 22:03:05.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.399" endtime="20201115 22:03:05.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.719" level="INFO">${RESULT} = [{'time': 0.022410444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.022956056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.715" endtime="20201115 22:03:05.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.733" level="INFO">${OVERHEAD} = {'time': [0.022410444, 0.022956056, 0.023491972, 0.024031694, 0.024567236, 0.025106931, 0.025648208, 0.026198167, 0.026743236, 0.027283403, 0.027829014, 0.028371472, 0.028926361, 0.029477806, 0.030027...</msg>
<status status="PASS" starttime="20201115 22:03:05.720" endtime="20201115 22:03:05.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.738" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.737" endtime="20201115 22:03:05.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.740" level="INFO">VALUE: [1.0277000000002978e-05, 9.944999999997317e-06, 9.958000000000883e-06, 9.999999999999593e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.986000000000023e-06, 9.903000000002077e-06, 1.0042000000001772e-05, 9.959000000000356e-06, 9.972000000000453e-06, 9.957999999997413e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.972000000000453e-06, 9.986000000000023e-06, 9.972000000000453e-06, 9.959000000003826e-06, 9.971999999996983e-06, 9.958000000004352e-06, 9.972000000003922e-06, 9.917000000005116e-06, 9.957999999997413e-06, 9.944000000004782e-06, 9.958000000004352e-06, 9.957999999997413e-06, 9.973000000003396e-06, 9.943999999997843e-06, 9.943999999997843e-06, 9.972000000003922e-06, 9.944999999997317e-06, 9.959000000003826e-06, 9.958999999996887e-06, 9.929999999998274e-06, 9.986000000003492e-06, 9.972999999996457e-06, 9.972000000003922e-06, 9.986000000003492e-06, 9.972999999996457e-06, 1.0000000000003062e-05, 1.0028000000002202e-05, 9.957999999997413e-06, 9.986000000003492e-06, 9.971999999996983e-06, 9.957999999997413e-06, 9.958999999996887e-06, 9.915999999998704e-06, 9.972999999996457e-06, 9.889000000005976e-06, 9.958000000004352e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.739" endtime="20201115 22:03:05.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.734" endtime="20201115 22:03:05.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.743" endtime="20201115 22:03:05.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.747" endtime="20201115 22:03:05.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.745" endtime="20201115 22:03:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.742" endtime="20201115 22:03:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.348" endtime="20201115 22:03:05.768"></status>
</kw>
<msg timestamp="20201115 22:03:05.768" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.777" endtime="20201115 22:03:05.812"></status>
</kw>
<msg timestamp="20201115 22:03:05.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.775" endtime="20201115 22:03:05.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.814" endtime="20201115 22:03:05.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.816" endtime="20201115 22:03:05.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.773" endtime="20201115 22:03:05.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.771" endtime="20201115 22:03:05.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.825" endtime="20201115 22:03:06.114"></status>
</kw>
<msg timestamp="20201115 22:03:06.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.824" endtime="20201115 22:03:06.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.119" endtime="20201115 22:03:06.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.127" endtime="20201115 22:03:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.821" endtime="20201115 22:03:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.820" endtime="20201115 22:03:06.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.134" level="INFO">${RESULT} = [{'time': 0.022362042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0277999999998982e-05, 'source_diff': 1.0277999999998982e-05}, {'time': 0.022900625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.130" endtime="20201115 22:03:06.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.147" level="INFO">${OVERHEAD} = {'time': [0.022362042, 0.022900625, 0.023437278, 0.023984514, 0.024524236, 0.025060875, 0.025605611, 0.026145347, 0.026700319, 0.027241597, 0.027786639, 0.028322208, 0.028865375, 0.029410139, 0.029964...</msg>
<status status="PASS" starttime="20201115 22:03:06.135" endtime="20201115 22:03:06.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.152" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.151" endtime="20201115 22:03:06.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.154" level="INFO">VALUE: [1.0277999999998982e-05, 9.972000000000453e-06, 9.874999999999468e-06, 9.971999999996983e-06, 9.958000000000883e-06, 9.931000000001217e-06, 9.972000000000453e-06, 9.958000000000883e-06, 9.958000000000883e-06, 9.943999999997843e-06, 1.0013999999999162e-05, 9.972000000000453e-06, 9.943999999997843e-06, 9.971999999996983e-06, 1.0013999999999162e-05, 9.959000000000356e-06, 9.959000000000356e-06, 9.945000000004256e-06, 1.0055000000001868e-05, 9.971999999996983e-06, 9.986000000003492e-06, 9.972000000003922e-06, 9.972000000003922e-06, 9.958999999996887e-06, 9.944999999997317e-06, 9.916999999998177e-06, 9.945000000004256e-06, 9.931000000004686e-06, 9.959000000003826e-06, 9.958000000004352e-06, 9.972999999996457e-06, 9.957999999997413e-06, 9.971999999996983e-06, 1.0027999999995263e-05, 9.943999999997843e-06, 1.0014000000002632e-05, 9.971999999996983e-06, 9.957999999997413e-06, 1.0014000000002632e-05, 9.971999999996983e-06, 9.957999999997413e-06, 9.957999999997413e-06, 9.958999999996887e-06, 1.0000000000003062e-05, 9.972000000003922e-06, 1.0000000000003062e-05, 9.930999999997747e-06, 9.957999999997413e-06, 9.986999999996027e-06, 9.943999999997843e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.153" endtime="20201115 22:03:06.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.148" endtime="20201115 22:03:06.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.157" endtime="20201115 22:03:06.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.161" endtime="20201115 22:03:06.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.159" endtime="20201115 22:03:06.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.156" endtime="20201115 22:03:06.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.769" endtime="20201115 22:03:06.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.088" endtime="20201115 22:03:06.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.086" endtime="20201115 22:03:06.182"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.184" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.193" endtime="20201115 22:03:06.231"></status>
</kw>
<msg timestamp="20201115 22:03:06.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.191" endtime="20201115 22:03:06.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.232" endtime="20201115 22:03:06.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.235" endtime="20201115 22:03:06.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.189" endtime="20201115 22:03:06.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.187" endtime="20201115 22:03:06.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.244" endtime="20201115 22:03:06.533"></status>
</kw>
<msg timestamp="20201115 22:03:06.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024696125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.243" endtime="20201115 22:03:06.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024696125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.537" endtime="20201115 22:03:06.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.545" endtime="20201115 22:03:06.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.240" endtime="20201115 22:03:06.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.238" endtime="20201115 22:03:06.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.552" level="INFO">${RESULT} = [{'time': 0.024706958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.025289667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:06.548" endtime="20201115 22:03:06.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.565" level="INFO">${OVERHEAD} = {'time': [0.024706958, 0.025289667, 0.025883903, 0.026470236, 0.027048861, 0.027642111, 0.028230667, 0.028816431, 0.029406542, 0.030001583, 0.030597306, 0.031190833, 0.031782514, 0.032368597, 0.032954...</msg>
<status status="PASS" starttime="20201115 22:03:06.553" endtime="20201115 22:03:06.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.570" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.569" endtime="20201115 22:03:06.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.572" level="INFO">VALUE: [1.0833000000001758e-05, 1.0499999999996623e-05, 1.0570000000001412e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0473000000000426e-05, 1.0527999999999232e-05, 1.0542000000002272e-05, 1.0526999999999759e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0569999999994473e-05, 1.0527999999995763e-05, 1.0527999999995763e-05, 1.0527000000003228e-05, 1.0513999999996193e-05, 1.0528000000002702e-05, 1.0542000000002272e-05, 1.0528000000002702e-05, 1.0499999999996623e-05, 1.0568999999994999e-05, 1.0583000000001508e-05, 1.0527000000003228e-05, 1.0459000000004326e-05, 1.0527999999995763e-05, 1.0499999999996623e-05, 1.0513999999996193e-05, 1.0514000000003132e-05, 1.0527000000003228e-05, 1.0541999999995333e-05, 1.0513999999996193e-05, 1.0514000000003132e-05, 1.0541000000002798e-05, 1.0514000000003132e-05, 1.0459000000004326e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0527999999995763e-05, 1.0528000000002702e-05, 1.0458999999997387e-05, 1.0514000000003132e-05, 1.0514000000003132e-05, 1.052699999999629e-05, 1.0514000000003132e-05, 1.0542000000002272e-05, 1.0556000000001842e-05, 1.0528000000002702e-05, 1.0528000000002702e-05, 1.0528000000002702e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.571" endtime="20201115 22:03:06.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.566" endtime="20201115 22:03:06.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.575" endtime="20201115 22:03:06.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.579" endtime="20201115 22:03:06.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.577" endtime="20201115 22:03:06.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.573" endtime="20201115 22:03:06.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.185" endtime="20201115 22:03:06.599"></status>
</kw>
<msg timestamp="20201115 22:03:06.600" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.608" endtime="20201115 22:03:06.646"></status>
</kw>
<msg timestamp="20201115 22:03:06.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.607" endtime="20201115 22:03:06.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.648" endtime="20201115 22:03:06.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.651" endtime="20201115 22:03:06.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.604" endtime="20201115 22:03:06.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.602" endtime="20201115 22:03:06.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.660" endtime="20201115 22:03:06.946"></status>
</kw>
<msg timestamp="20201115 22:03:06.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:06.658" endtime="20201115 22:03:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:06.950" endtime="20201115 22:03:06.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.958" endtime="20201115 22:03:06.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.656" endtime="20201115 22:03:06.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.654" endtime="20201115 22:03:06.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.965" level="INFO">${RESULT} = [{'time': 0.02227825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0832999999998288e-05, 'source_diff': 1.0832999999998288e-05}, {'time': 0.022866542, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:06.962" endtime="20201115 22:03:06.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.978" level="INFO">${OVERHEAD} = {'time': [0.02227825, 0.022866542, 0.023449097, 0.024032972, 0.024625333, 0.025206472, 0.025788819, 0.026368653, 0.026952542, 0.027531833, 0.028114417, 0.028707694, 0.029297222, 0.029891417, 0.0304809...</msg>
<status status="PASS" starttime="20201115 22:03:06.966" endtime="20201115 22:03:06.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.983" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.982" endtime="20201115 22:03:06.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.986" level="INFO">VALUE: [1.0832999999998288e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0596999999997608e-05, 1.0513999999999663e-05, 1.0540999999999329e-05, 1.0528000000002702e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0598000000000551e-05, 1.0527999999995763e-05, 1.051299999999672e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.0527999999995763e-05, 1.0555000000002368e-05, 1.0514000000003132e-05, 1.0500000000003562e-05, 1.0499999999996623e-05, 1.0513999999996193e-05, 1.0542000000002272e-05, 1.0513999999996193e-05, 1.0499999999996623e-05, 1.0542000000002272e-05, 1.0597000000001078e-05, 1.0542000000002272e-05, 1.0528000000002702e-05, 1.0528000000002702e-05, 1.0570000000001412e-05, 1.0541000000002798e-05, 1.0542000000002272e-05, 1.0500000000003562e-05, 1.0527999999995763e-05, 1.0513999999996193e-05, 1.0444999999997817e-05, 1.0570000000001412e-05, 1.0597000000001078e-05, 1.0556000000001842e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.052699999999629e-05, 1.0528000000002702e-05, 1.054099999999586e-05]</msg>
<status status="PASS" starttime="20201115 22:03:06.984" endtime="20201115 22:03:06.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.979" endtime="20201115 22:03:06.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.989" endtime="20201115 22:03:06.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.993" endtime="20201115 22:03:07.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.991" endtime="20201115 22:03:07.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.987" endtime="20201115 22:03:07.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.600" endtime="20201115 22:03:07.014"></status>
</kw>
<msg timestamp="20201115 22:03:07.014" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.024" endtime="20201115 22:03:07.061"></status>
</kw>
<msg timestamp="20201115 22:03:07.062" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.022" endtime="20201115 22:03:07.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.063" endtime="20201115 22:03:07.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.065" endtime="20201115 22:03:07.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.019" endtime="20201115 22:03:07.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.017" endtime="20201115 22:03:07.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.075" endtime="20201115 22:03:07.361"></status>
</kw>
<msg timestamp="20201115 22:03:07.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023032889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.073" endtime="20201115 22:03:07.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023032889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.365" endtime="20201115 22:03:07.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.373" endtime="20201115 22:03:07.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.071" endtime="20201115 22:03:07.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.069" endtime="20201115 22:03:07.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.380" level="INFO">${RESULT} = [{'time': 0.023032889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.023614639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:07.377" endtime="20201115 22:03:07.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.395" level="INFO">${OVERHEAD} = {'time': [0.023032889, 0.023614639, 0.024206306, 0.024792972, 0.025388681, 0.025979069, 0.026566347, 0.027162042, 0.027753958, 0.028338722, 0.028930014, 0.029523819, 0.030112083, 0.030700958, 0.031280...</msg>
<status status="PASS" starttime="20201115 22:03:07.381" endtime="20201115 22:03:07.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.399" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.398" endtime="20201115 22:03:07.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.402" level="INFO">VALUE: [1.0820000000001662e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0513000000000189e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0458000000001383e-05, 1.0541000000002798e-05, 1.0526999999999759e-05, 1.0528000000002702e-05, 1.051299999999672e-05, 1.0528000000002702e-05, 1.051299999999672e-05, 1.0527999999995763e-05, 1.0527000000003228e-05, 1.0556000000001842e-05, 1.051299999999672e-05, 1.051299999999672e-05, 1.0527999999995763e-05, 1.0500000000003562e-05, 1.0457999999997913e-05, 1.052699999999629e-05, 1.0528000000002702e-05, 1.0458000000004852e-05, 1.0527999999995763e-05, 1.0610999999993709e-05, 1.0527999999995763e-05, 1.054099999999586e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.0569000000001938e-05, 1.0527999999995763e-05, 1.0541000000002798e-05, 1.0499999999996623e-05, 1.0500000000003562e-05, 1.0527999999995763e-05, 1.0513999999996193e-05, 1.0528000000002702e-05, 1.0514000000003132e-05, 1.0542000000002272e-05, 1.0528000000002702e-05, 1.0542000000002272e-05, 1.0542000000002272e-05, 1.0541000000002798e-05, 1.0570000000001412e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.400" endtime="20201115 22:03:07.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.396" endtime="20201115 22:03:07.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.405" endtime="20201115 22:03:07.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.408" endtime="20201115 22:03:07.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.407" endtime="20201115 22:03:07.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.403" endtime="20201115 22:03:07.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.015" endtime="20201115 22:03:07.430"></status>
</kw>
<msg timestamp="20201115 22:03:07.430" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.439" endtime="20201115 22:03:07.476"></status>
</kw>
<msg timestamp="20201115 22:03:07.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.437" endtime="20201115 22:03:07.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.479" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.478" endtime="20201115 22:03:07.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.480" endtime="20201115 22:03:07.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.434" endtime="20201115 22:03:07.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.432" endtime="20201115 22:03:07.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.490" endtime="20201115 22:03:07.778"></status>
</kw>
<msg timestamp="20201115 22:03:07.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.488" endtime="20201115 22:03:07.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.782" endtime="20201115 22:03:07.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.790" endtime="20201115 22:03:07.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.485" endtime="20201115 22:03:07.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.484" endtime="20201115 22:03:07.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.797" level="INFO">${RESULT} = [{'time': 0.022808667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.023405403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:07.793" endtime="20201115 22:03:07.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.810" level="INFO">${OVERHEAD} = {'time': [0.022808667, 0.023405403, 0.023984972, 0.024569528, 0.025156319, 0.025747014, 0.026332208, 0.026928597, 0.027524514, 0.028120236, 0.028707264, 0.029291819, 0.029878861, 0.030465903, 0.031057...</msg>
<status status="PASS" starttime="20201115 22:03:07.798" endtime="20201115 22:03:07.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.815" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.814" endtime="20201115 22:03:07.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.817" level="INFO">VALUE: [1.0820000000001662e-05, 1.0528000000002702e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0568999999998469e-05, 1.0500000000000093e-05, 1.0568999999998469e-05, 1.0582999999998038e-05, 1.0458000000001383e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0513000000000189e-05, 1.0500000000000093e-05, 1.0513999999999663e-05, 1.0500000000000093e-05, 1.0527999999995763e-05, 1.0542000000002272e-05, 1.051299999999672e-05, 1.0528000000002702e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0513000000003658e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.0500000000003562e-05, 1.0541999999995333e-05, 1.0527000000003228e-05, 1.0513000000003658e-05, 1.0486000000003992e-05, 1.0583000000001508e-05, 1.0528000000002702e-05, 1.0471999999997483e-05, 1.0528000000002702e-05, 1.0500000000003562e-05, 1.0528000000002702e-05, 1.0541999999995333e-05, 1.0542000000002272e-05, 1.0514000000003132e-05, 1.052699999999629e-05, 1.052699999999629e-05, 1.0500000000003562e-05, 1.0500000000003562e-05, 1.0514000000003132e-05, 1.0513999999996193e-05, 1.0513999999996193e-05, 1.0527999999995763e-05, 1.0569000000001938e-05, 1.0485999999997053e-05, 1.0527999999995763e-05, 1.0527999999995763e-05]</msg>
<status status="PASS" starttime="20201115 22:03:07.816" endtime="20201115 22:03:07.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.811" endtime="20201115 22:03:07.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.821" endtime="20201115 22:03:07.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.824" endtime="20201115 22:03:07.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.823" endtime="20201115 22:03:07.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.819" endtime="20201115 22:03:07.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.430" endtime="20201115 22:03:07.845"></status>
</kw>
<msg timestamp="20201115 22:03:07.845" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.854" endtime="20201115 22:03:07.892"></status>
</kw>
<msg timestamp="20201115 22:03:07.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.852" endtime="20201115 22:03:07.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.893" endtime="20201115 22:03:07.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.896" endtime="20201115 22:03:07.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.850" endtime="20201115 22:03:07.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.848" endtime="20201115 22:03:07.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.905" endtime="20201115 22:03:08.193"></status>
</kw>
<msg timestamp="20201115 22:03:08.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.903" endtime="20201115 22:03:08.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.197" endtime="20201115 22:03:08.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.205" endtime="20201115 22:03:08.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.901" endtime="20201115 22:03:08.207"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.899" endtime="20201115 22:03:08.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.212" level="INFO">${RESULT} = [{'time': 0.022299792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0847999999997332e-05, 'source_diff': 1.0847999999997332e-05}, {'time': 0.022896736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.209" endtime="20201115 22:03:08.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.225" level="INFO">${OVERHEAD} = {'time': [0.022299792, 0.022896736, 0.023479681, 0.024071319, 0.024652681, 0.025232194, 0.025812639, 0.026399319, 0.026981028, 0.027568056, 0.028157875, 0.028739875, 0.029324986, 0.029910111, 0.030500...</msg>
<status status="PASS" starttime="20201115 22:03:08.213" endtime="20201115 22:03:08.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.230" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.229" endtime="20201115 22:03:08.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.232" level="INFO">VALUE: [1.0847999999997332e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0472000000000953e-05, 1.0541999999998802e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0500000000000093e-05, 1.0542000000002272e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0528000000002702e-05, 1.0471999999997483e-05, 1.0528000000002702e-05, 1.052699999999629e-05, 1.0555000000002368e-05, 1.0556000000001842e-05, 1.0472000000004422e-05, 1.0527999999995763e-05, 1.0527000000003228e-05, 1.0514000000003132e-05, 1.0569000000001938e-05, 1.0514000000003132e-05, 1.0528000000002702e-05, 1.0513999999996193e-05, 1.0458999999997387e-05, 1.0542000000002272e-05, 1.054099999999586e-05, 1.0527999999995763e-05, 1.0514000000003132e-05, 1.0527999999995763e-05, 1.0570000000001412e-05, 1.0527999999995763e-05, 1.0513999999996193e-05, 1.0542000000002272e-05, 1.0514000000003132e-05, 1.0472999999996957e-05, 1.0541000000002798e-05, 1.054099999999586e-05, 1.0528000000002702e-05, 1.0513000000003658e-05, 1.0527999999995763e-05, 1.0485999999997053e-05, 1.0528000000002702e-05, 1.0486000000003992e-05, 1.0528000000002702e-05]</msg>
<status status="PASS" starttime="20201115 22:03:08.231" endtime="20201115 22:03:08.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.226" endtime="20201115 22:03:08.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.236" endtime="20201115 22:03:08.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.239" endtime="20201115 22:03:08.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.238" endtime="20201115 22:03:08.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.234" endtime="20201115 22:03:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.846" endtime="20201115 22:03:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.183" endtime="20201115 22:03:08.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.182" endtime="20201115 22:03:08.261"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.263" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.272" endtime="20201115 22:03:08.312"></status>
</kw>
<msg timestamp="20201115 22:03:08.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.270" endtime="20201115 22:03:08.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.315" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.313" endtime="20201115 22:03:08.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.316" endtime="20201115 22:03:08.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.268" endtime="20201115 22:03:08.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.265" endtime="20201115 22:03:08.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.325" endtime="20201115 22:03:08.612"></status>
</kw>
<msg timestamp="20201115 22:03:08.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024880972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.323" endtime="20201115 22:03:08.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024880972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.616" endtime="20201115 22:03:08.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.624" endtime="20201115 22:03:08.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.321" endtime="20201115 22:03:08.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.319" endtime="20201115 22:03:08.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.631" level="INFO">${RESULT} = [{'time': 0.024892375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.025522569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.627" endtime="20201115 22:03:08.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.644" level="INFO">${OVERHEAD} = {'time': [0.024892375, 0.025522569, 0.026152069, 0.026782833, 0.027422653, 0.028061833, 0.028699806, 0.029329667, 0.029960444, 0.030590319, 0.031227333, 0.031866222, 0.032507972, 0.033131222, 0.033757...</msg>
<status status="PASS" starttime="20201115 22:03:08.632" endtime="20201115 22:03:08.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.648" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.647" endtime="20201115 22:03:08.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.651" level="INFO">VALUE: [1.1403000000000107e-05, 1.1040999999999829e-05, 1.1068999999998969e-05, 1.1082999999998538e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1098000000001051e-05, 1.1070000000001912e-05, 1.1082999999998538e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1041999999995833e-05, 1.1084000000001482e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1069000000002438e-05, 1.1084000000001482e-05, 1.1013999999996693e-05, 1.1042000000002772e-05, 1.1069999999994973e-05, 1.1110999999994209e-05, 1.1083999999994543e-05, 1.1028000000003202e-05, 1.1069999999994973e-05, 1.1083000000002008e-05, 1.1082999999995069e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1096999999994639e-05, 1.1069999999994973e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1083000000002008e-05]</msg>
<status status="PASS" starttime="20201115 22:03:08.650" endtime="20201115 22:03:08.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.645" endtime="20201115 22:03:08.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.655" endtime="20201115 22:03:08.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.658" endtime="20201115 22:03:08.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.656" endtime="20201115 22:03:08.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.653" endtime="20201115 22:03:08.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.263" endtime="20201115 22:03:08.679"></status>
</kw>
<msg timestamp="20201115 22:03:08.679" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.688" endtime="20201115 22:03:08.728"></status>
</kw>
<msg timestamp="20201115 22:03:08.729" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.686" endtime="20201115 22:03:08.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.730" endtime="20201115 22:03:08.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.732" endtime="20201115 22:03:08.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.684" endtime="20201115 22:03:08.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.682" endtime="20201115 22:03:08.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.741" endtime="20201115 22:03:09.028"></status>
</kw>
<msg timestamp="20201115 22:03:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.740" endtime="20201115 22:03:09.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.032" endtime="20201115 22:03:09.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.040" endtime="20201115 22:03:09.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.737" endtime="20201115 22:03:09.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.735" endtime="20201115 22:03:09.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.047" level="INFO">${RESULT} = [{'time': 0.022608792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.023243097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.044" endtime="20201115 22:03:09.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.062" level="INFO">${OVERHEAD} = {'time': [0.022608792, 0.023243097, 0.023873986, 0.024503569, 0.025143208, 0.025780083, 0.026421431, 0.027051333, 0.027679097, 0.028313431, 0.028952722, 0.029576431, 0.030217917, 0.0308525, 0.03148143...</msg>
<status status="PASS" starttime="20201115 22:03:09.048" endtime="20201115 22:03:09.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.067" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.066" endtime="20201115 22:03:09.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.069" level="INFO">VALUE: [1.1403000000000107e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1082999999998538e-05, 1.1027000000000259e-05, 1.1165999999999954e-05, 1.1083999999998012e-05, 1.1027000000000259e-05, 1.1068999999998969e-05, 1.1069999999998442e-05, 1.1068999999998969e-05, 1.1070000000001912e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1097999999994113e-05, 1.1111000000001148e-05, 1.1027999999996263e-05, 1.1068999999995499e-05, 1.1041999999995833e-05, 1.1097000000001578e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1084000000001482e-05, 1.1152999999999857e-05, 1.1084000000001482e-05, 1.1083999999994543e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1069999999994973e-05, 1.1097000000001578e-05, 1.1028000000003202e-05, 1.1097000000001578e-05, 1.1070000000001912e-05, 1.1111000000001148e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1013999999996693e-05, 1.1111000000001148e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1070000000001912e-05, 1.1139000000000288e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1068999999995499e-05, 1.1070000000001912e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1056000000002342e-05, 1.1097000000001578e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.068" endtime="20201115 22:03:09.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.063" endtime="20201115 22:03:09.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.072" endtime="20201115 22:03:09.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.076" endtime="20201115 22:03:09.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.074" endtime="20201115 22:03:09.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.071" endtime="20201115 22:03:09.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.680" endtime="20201115 22:03:09.097"></status>
</kw>
<msg timestamp="20201115 22:03:09.097" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.106" endtime="20201115 22:03:09.146"></status>
</kw>
<msg timestamp="20201115 22:03:09.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.104" endtime="20201115 22:03:09.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.149" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.147" endtime="20201115 22:03:09.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.150" endtime="20201115 22:03:09.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.102" endtime="20201115 22:03:09.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.100" endtime="20201115 22:03:09.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.159" endtime="20201115 22:03:09.446"></status>
</kw>
<msg timestamp="20201115 22:03:09.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.158" endtime="20201115 22:03:09.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.450" endtime="20201115 22:03:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.458" endtime="20201115 22:03:09.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.155" endtime="20201115 22:03:09.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.153" endtime="20201115 22:03:09.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.465" level="INFO">${RESULT} = [{'time': 0.022492111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.023118861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.461" endtime="20201115 22:03:09.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.478" level="INFO">${OVERHEAD} = {'time': [0.022492111, 0.023118861, 0.023749931, 0.0243745, 0.025013681, 0.025639792, 0.026268722, 0.026909236, 0.027549972, 0.028175792, 0.028807556, 0.029438333, 0.030070319, 0.030710403, 0.03133247...</msg>
<status status="PASS" starttime="20201115 22:03:09.466" endtime="20201115 22:03:09.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.483" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.482" endtime="20201115 22:03:09.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.485" level="INFO">VALUE: [1.1403000000000107e-05, 1.1069000000002438e-05, 1.1083999999998012e-05, 1.1097000000001578e-05, 1.1083999999998012e-05, 1.1084000000001482e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1068999999998969e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1068999999998969e-05, 1.1069000000002438e-05, 1.1084000000001482e-05, 1.1111000000001148e-05, 1.1070000000001912e-05, 1.1083999999994543e-05, 1.102699999999679e-05, 1.1082999999995069e-05, 1.1083999999994543e-05, 1.1070000000001912e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1082999999995069e-05, 1.1068999999995499e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1028000000003202e-05, 1.1069999999994973e-05, 1.1098000000001051e-05, 1.1110999999994209e-05, 1.1056000000002342e-05, 1.1084000000001482e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1027999999996263e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1097000000001578e-05, 1.1082999999995069e-05, 1.1042000000002772e-05, 1.1083000000002008e-05, 1.0999999999997123e-05, 1.1069999999994973e-05, 1.1083999999994543e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.484" endtime="20201115 22:03:09.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.479" endtime="20201115 22:03:09.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.488" endtime="20201115 22:03:09.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.492" endtime="20201115 22:03:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.490" endtime="20201115 22:03:09.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.487" endtime="20201115 22:03:09.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.098" endtime="20201115 22:03:09.513"></status>
</kw>
<msg timestamp="20201115 22:03:09.513" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.522" endtime="20201115 22:03:09.562"></status>
</kw>
<msg timestamp="20201115 22:03:09.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.520" endtime="20201115 22:03:09.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.564" endtime="20201115 22:03:09.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.566" endtime="20201115 22:03:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.518" endtime="20201115 22:03:09.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.516" endtime="20201115 22:03:09.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.575" endtime="20201115 22:03:09.862"></status>
</kw>
<msg timestamp="20201115 22:03:09.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.574" endtime="20201115 22:03:09.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.866" endtime="20201115 22:03:09.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.875" endtime="20201115 22:03:09.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.571" endtime="20201115 22:03:09.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.569" endtime="20201115 22:03:09.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.882" level="INFO">${RESULT} = [{'time': 0.022536042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.023167472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.878" endtime="20201115 22:03:09.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.895" level="INFO">${OVERHEAD} = {'time': [0.022536042, 0.023167472, 0.023790431, 0.024431833, 0.025054486, 0.025689903, 0.026322208, 0.026957889, 0.027597667, 0.028235833, 0.028869708, 0.029502375, 0.030135556, 0.030775028, 0.031407...</msg>
<status status="PASS" starttime="20201115 22:03:09.883" endtime="20201115 22:03:09.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.900" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.899" endtime="20201115 22:03:09.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.902" level="INFO">VALUE: [1.1403000000000107e-05, 1.1014000000000163e-05, 1.1070000000001912e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1069999999998442e-05, 1.1096999999998108e-05, 1.1069999999998442e-05, 1.1083999999998012e-05, 1.1082999999998538e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1084000000001482e-05, 1.1041999999999302e-05, 1.1069000000002438e-05, 1.1069999999994973e-05, 1.1068999999995499e-05, 1.1152999999999857e-05, 1.1125000000000718e-05, 1.1069000000002438e-05, 1.1084000000001482e-05, 1.1097000000001578e-05, 1.1000000000004062e-05, 1.1056000000002342e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.0999999999997123e-05, 1.1083000000002008e-05, 1.1139000000000288e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1096999999994639e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1152999999999857e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.1000000000004062e-05, 1.1069000000002438e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1083000000002008e-05, 1.1070000000001912e-05, 1.1041000000003298e-05]</msg>
<status status="PASS" starttime="20201115 22:03:09.901" endtime="20201115 22:03:09.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.896" endtime="20201115 22:03:09.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.905" endtime="20201115 22:03:09.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.909" endtime="20201115 22:03:09.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.907" endtime="20201115 22:03:09.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.904" endtime="20201115 22:03:09.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.514" endtime="20201115 22:03:09.929"></status>
</kw>
<msg timestamp="20201115 22:03:09.930" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.939" endtime="20201115 22:03:09.979"></status>
</kw>
<msg timestamp="20201115 22:03:09.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.937" endtime="20201115 22:03:09.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.980" endtime="20201115 22:03:09.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.983" endtime="20201115 22:03:09.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.935" endtime="20201115 22:03:09.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.932" endtime="20201115 22:03:09.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.992" endtime="20201115 22:03:10.279"></status>
</kw>
<msg timestamp="20201115 22:03:10.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:09.990" endtime="20201115 22:03:10.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:10.283" endtime="20201115 22:03:10.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.292" endtime="20201115 22:03:10.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.988" endtime="20201115 22:03:10.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.986" endtime="20201115 22:03:10.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.299" level="INFO">${RESULT} = [{'time': 0.022729167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1417000000003147e-05, 'source_diff': 1.1417000000003147e-05}, {'time': 0.023359028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.295" endtime="20201115 22:03:10.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.312" level="INFO">${OVERHEAD} = {'time': [0.022729167, 0.023359028, 0.023990403, 0.024627069, 0.025256514, 0.025897903, 0.026521778, 0.027148528, 0.027771819, 0.028396944, 0.029029569, 0.029661861, 0.030298569, 0.030937403, 0.031577...</msg>
<status status="PASS" starttime="20201115 22:03:10.300" endtime="20201115 22:03:10.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.316" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.315" endtime="20201115 22:03:10.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.319" level="INFO">VALUE: [1.1417000000003147e-05, 1.1084000000001482e-05, 1.1041999999999302e-05, 1.1111000000001148e-05, 1.1083000000002008e-05, 1.1139000000000288e-05, 1.1069999999998442e-05, 1.1084000000001482e-05, 1.1082999999998538e-05, 1.1068999999998969e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1111000000001148e-05, 1.1110999999997678e-05, 1.1083000000002008e-05, 1.1083999999994543e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1041999999995833e-05, 1.1125000000000718e-05, 1.1068999999995499e-05, 1.1097000000001578e-05, 1.1084000000001482e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.1097000000001578e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1125000000000718e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1041999999995833e-05, 1.1084000000001482e-05, 1.1055999999995403e-05, 1.1069000000002438e-05, 1.1097999999994113e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1125000000000718e-05, 1.1000000000004062e-05, 1.1083999999994543e-05, 1.1055999999995403e-05, 1.1083000000002008e-05, 1.1084000000001482e-05, 1.1069999999994973e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.317" endtime="20201115 22:03:10.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.313" endtime="20201115 22:03:10.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.322" endtime="20201115 22:03:10.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.325" endtime="20201115 22:03:10.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.324" endtime="20201115 22:03:10.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.320" endtime="20201115 22:03:10.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.930" endtime="20201115 22:03:10.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.262" endtime="20201115 22:03:10.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.261" endtime="20201115 22:03:10.347"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.349" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.358" endtime="20201115 22:03:10.400"></status>
</kw>
<msg timestamp="20201115 22:03:10.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.356" endtime="20201115 22:03:10.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.403" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.402" endtime="20201115 22:03:10.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.404" endtime="20201115 22:03:10.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.353" endtime="20201115 22:03:10.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.351" endtime="20201115 22:03:10.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.414" endtime="20201115 22:03:10.699"></status>
</kw>
<msg timestamp="20201115 22:03:10.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:10.412" endtime="20201115 22:03:10.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025069972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:10.703" endtime="20201115 22:03:10.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.712" endtime="20201115 22:03:10.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.410" endtime="20201115 22:03:10.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.408" endtime="20201115 22:03:10.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.718" level="INFO">${RESULT} = [{'time': 0.025069972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.025754875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:10.715" endtime="20201115 22:03:10.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.733" level="INFO">${OVERHEAD} = {'time': [0.025069972, 0.025754875, 0.026442875, 0.027121861, 0.027791264, 0.028471431, 0.029149819, 0.029826292, 0.030511764, 0.031187903, 0.031858458, 0.032540208, 0.033224125, 0.033905931, 0.034586...</msg>
<status status="PASS" starttime="20201115 22:03:10.719" endtime="20201115 22:03:10.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.738" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.737" endtime="20201115 22:03:10.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.741" level="INFO">VALUE: [1.1971999999998983e-05, 1.1639000000000788e-05, 1.1611000000001648e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1638999999997318e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1652000000000884e-05, 1.1611000000001648e-05, 1.1625000000001218e-05, 1.1652000000000884e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1597000000002078e-05, 1.1653000000000358e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1722999999998207e-05, 1.1680999999999497e-05, 1.1652000000000884e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1666999999999927e-05, 1.1638999999993849e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1583000000002508e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1651999999993945e-05, 1.1666000000000454e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1652000000000884e-05, 1.1639000000000788e-05, 1.1680000000000024e-05, 1.1666000000000454e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1652000000000884e-05, 1.1638999999993849e-05]</msg>
<status status="PASS" starttime="20201115 22:03:10.739" endtime="20201115 22:03:10.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.734" endtime="20201115 22:03:10.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.744" endtime="20201115 22:03:10.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.747" endtime="20201115 22:03:10.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.746" endtime="20201115 22:03:10.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.742" endtime="20201115 22:03:10.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.349" endtime="20201115 22:03:10.768"></status>
</kw>
<msg timestamp="20201115 22:03:10.768" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.777" endtime="20201115 22:03:10.820"></status>
</kw>
<msg timestamp="20201115 22:03:10.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.776" endtime="20201115 22:03:10.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.829" endtime="20201115 22:03:10.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.832" endtime="20201115 22:03:10.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.773" endtime="20201115 22:03:10.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.771" endtime="20201115 22:03:10.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.841" endtime="20201115 22:03:11.128"></status>
</kw>
<msg timestamp="20201115 22:03:11.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.839" endtime="20201115 22:03:11.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.132" endtime="20201115 22:03:11.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.140" endtime="20201115 22:03:11.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.836" endtime="20201115 22:03:11.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.835" endtime="20201115 22:03:11.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.147" level="INFO">${RESULT} = [{'time': 0.022693514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.023371208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.143" endtime="20201115 22:03:11.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.160" level="INFO">${OVERHEAD} = {'time': [0.022693514, 0.023371208, 0.024040375, 0.024717, 0.025390514, 0.026073681, 0.026756861, 0.027427264, 0.028107069, 0.028781542, 0.029463764, 0.030140403, 0.030814556, 0.031491208, 0.032168792...</msg>
<status status="PASS" starttime="20201115 22:03:11.148" endtime="20201115 22:03:11.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.164" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.163" endtime="20201115 22:03:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.167" level="INFO">VALUE: [1.1930999999999747e-05, 1.1639000000000788e-05, 1.1610999999998178e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1596999999998608e-05, 1.1665999999996984e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1611000000001648e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1625000000001218e-05, 1.1611000000001648e-05, 1.1666999999999927e-05, 1.1653000000000358e-05, 1.1693999999999594e-05, 1.1653000000000358e-05, 1.1611999999994183e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1637999999994375e-05, 1.1638000000001314e-05, 1.1653000000000358e-05, 1.1637999999994375e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1611000000001648e-05, 1.1639000000000788e-05, 1.1611000000001648e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1638000000001314e-05, 1.1625000000001218e-05, 1.1707999999999164e-05, 1.1680000000000024e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1693999999999594e-05, 1.1666999999999927e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1666999999999927e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.165" endtime="20201115 22:03:11.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.161" endtime="20201115 22:03:11.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.170" endtime="20201115 22:03:11.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.173" endtime="20201115 22:03:11.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.172" endtime="20201115 22:03:11.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.168" endtime="20201115 22:03:11.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.769" endtime="20201115 22:03:11.194"></status>
</kw>
<msg timestamp="20201115 22:03:11.194" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.203" endtime="20201115 22:03:11.246"></status>
</kw>
<msg timestamp="20201115 22:03:11.246" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.202" endtime="20201115 22:03:11.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.249" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.247" endtime="20201115 22:03:11.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.250" endtime="20201115 22:03:11.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.199" endtime="20201115 22:03:11.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.197" endtime="20201115 22:03:11.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.259" endtime="20201115 22:03:11.545"></status>
</kw>
<msg timestamp="20201115 22:03:11.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.257" endtime="20201115 22:03:11.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022817292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.550" endtime="20201115 22:03:11.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.558" endtime="20201115 22:03:11.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.255" endtime="20201115 22:03:11.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.253" endtime="20201115 22:03:11.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.564" level="INFO">${RESULT} = [{'time': 0.022817292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1958999999998887e-05, 'source_diff': 1.1958999999998887e-05}, {'time': 0.023488403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:11.561" endtime="20201115 22:03:11.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.577" level="INFO">${OVERHEAD} = {'time': [0.022817292, 0.023488403, 0.024162931, 0.024843083, 0.025525958, 0.026208847, 0.026877611, 0.027562028, 0.028233403, 0.028921264, 0.029600083, 0.030283611, 0.030960319, 0.031637625, 0.032323...</msg>
<status status="PASS" starttime="20201115 22:03:11.565" endtime="20201115 22:03:11.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.582" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.581" endtime="20201115 22:03:11.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.584" level="INFO">VALUE: [1.1958999999998887e-05, 1.1639000000000788e-05, 1.1624999999997748e-05, 1.1638999999997318e-05, 1.1611000000001648e-05, 1.1653000000000358e-05, 1.1610999999998178e-05, 1.1638999999997318e-05, 1.1639000000000788e-05, 1.1596999999998608e-05, 1.1639000000000788e-05, 1.1652999999996888e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1610999999994709e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1625000000001218e-05, 1.1680999999999497e-05, 1.1568999999995999e-05, 1.1652000000000884e-05, 1.1667000000006866e-05, 1.1638000000001314e-05, 1.1637999999994375e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1596999999995139e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1597000000002078e-05, 1.1652000000000884e-05, 1.1639000000000788e-05, 1.1666000000000454e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1624999999994279e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1707999999999164e-05, 1.1639000000000788e-05, 1.1652000000000884e-05, 1.1639000000000788e-05, 1.1652000000000884e-05]</msg>
<status status="PASS" starttime="20201115 22:03:11.583" endtime="20201115 22:03:11.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.578" endtime="20201115 22:03:11.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.587" endtime="20201115 22:03:11.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.595" endtime="20201115 22:03:11.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.591" endtime="20201115 22:03:11.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.586" endtime="20201115 22:03:11.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.195" endtime="20201115 22:03:11.619"></status>
</kw>
<msg timestamp="20201115 22:03:11.620" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.638" endtime="20201115 22:03:11.683"></status>
</kw>
<msg timestamp="20201115 22:03:11.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.635" endtime="20201115 22:03:11.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.686" endtime="20201115 22:03:11.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.691" endtime="20201115 22:03:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.629" endtime="20201115 22:03:11.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.625" endtime="20201115 22:03:11.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.699" endtime="20201115 22:03:11.986"></status>
</kw>
<msg timestamp="20201115 22:03:11.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036583083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036595056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.698" endtime="20201115 22:03:11.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036583083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036595056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.991" endtime="20201115 22:03:11.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.998" endtime="20201115 22:03:12.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.695" endtime="20201115 22:03:12.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.694" endtime="20201115 22:03:12.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.005" level="INFO">${RESULT} = [{'time': 0.036595056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1972999999998457e-05, 'source_diff': 1.1972999999998457e-05}, {'time': 0.037274917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.002" endtime="20201115 22:03:12.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.018" level="INFO">${OVERHEAD} = {'time': [0.036595056, 0.037274917, 0.037947292, 0.038634333, 0.039312306, 0.039984681, 0.040672861, 0.041348653, 0.042032264, 0.042709347, 0.043390792, 0.044060417, 0.044741236, 0.045427014, 0.046108...</msg>
<status status="PASS" starttime="20201115 22:03:12.006" endtime="20201115 22:03:12.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.023" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.022" endtime="20201115 22:03:12.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.025" level="INFO">VALUE: [1.1972999999998457e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1583000000002508e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1652999999993419e-05, 1.1597000000002078e-05, 1.1625000000001218e-05, 1.1638000000001314e-05, 1.1652000000000884e-05, 1.1597000000002078e-05, 1.1652999999993419e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1638999999993849e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1625000000001218e-05, 1.1625000000001218e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1611000000001648e-05, 1.1639000000000788e-05, 1.1638999999993849e-05, 1.1638999999993849e-05, 1.1638999999993849e-05, 1.1610999999994709e-05, 1.1611000000008587e-05, 1.1625000000001218e-05, 1.1639000000007726e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1638999999993849e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.024" endtime="20201115 22:03:12.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.019" endtime="20201115 22:03:12.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.029" endtime="20201115 22:03:12.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.032" endtime="20201115 22:03:12.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.031" endtime="20201115 22:03:12.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.027" endtime="20201115 22:03:12.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.621" endtime="20201115 22:03:12.053"></status>
</kw>
<msg timestamp="20201115 22:03:12.053" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.062" endtime="20201115 22:03:12.105"></status>
</kw>
<msg timestamp="20201115 22:03:12.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.060" endtime="20201115 22:03:12.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.106" endtime="20201115 22:03:12.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.109" endtime="20201115 22:03:12.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.058" endtime="20201115 22:03:12.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.056" endtime="20201115 22:03:12.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.118" endtime="20201115 22:03:12.404"></status>
</kw>
<msg timestamp="20201115 22:03:12.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.116" endtime="20201115 22:03:12.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.409" endtime="20201115 22:03:12.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.416" endtime="20201115 22:03:12.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.113" endtime="20201115 22:03:12.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.112" endtime="20201115 22:03:12.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.423" level="INFO">${RESULT} = [{'time': 0.022837181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1945000000002787e-05, 'source_diff': 1.1945000000002787e-05}, {'time': 0.023513069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.420" endtime="20201115 22:03:12.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.438" level="INFO">${OVERHEAD} = {'time': [0.022837181, 0.023513069, 0.024186347, 0.024868722, 0.025542958, 0.026212542, 0.026890236, 0.027565153, 0.028252458, 0.028923292, 0.029596917, 0.030272722, 0.0309585, 0.03163775, 0.032307681...</msg>
<status status="PASS" starttime="20201115 22:03:12.424" endtime="20201115 22:03:12.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.442" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.441" endtime="20201115 22:03:12.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.444" level="INFO">VALUE: [1.1945000000002787e-05, 1.1693999999999594e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1638999999997318e-05, 1.1611000000001648e-05, 1.1624999999997748e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1638999999997318e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1638999999993849e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1652000000000884e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1611000000001648e-05, 1.1652000000000884e-05, 1.1583000000002508e-05, 1.1707999999999164e-05, 1.1653000000000358e-05, 1.1611000000001648e-05, 1.1666000000000454e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1708999999998637e-05, 1.1639000000000788e-05, 1.1666000000000454e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1611000000001648e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1666000000000454e-05, 1.1653000000000358e-05, 1.1653000000000358e-05, 1.1639000000000788e-05, 1.1625000000001218e-05, 1.1653000000000358e-05, 1.1638000000001314e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.443" endtime="20201115 22:03:12.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.438" endtime="20201115 22:03:12.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.448" endtime="20201115 22:03:12.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.451" endtime="20201115 22:03:12.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.450" endtime="20201115 22:03:12.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.446" endtime="20201115 22:03:12.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.054" endtime="20201115 22:03:12.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.348" endtime="20201115 22:03:12.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.347" endtime="20201115 22:03:12.473"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.475" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.483" endtime="20201115 22:03:12.528"></status>
</kw>
<msg timestamp="20201115 22:03:12.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.482" endtime="20201115 22:03:12.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.530" endtime="20201115 22:03:12.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.532" endtime="20201115 22:03:12.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.479" endtime="20201115 22:03:12.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.477" endtime="20201115 22:03:12.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.541" endtime="20201115 22:03:12.828"></status>
</kw>
<msg timestamp="20201115 22:03:12.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.540" endtime="20201115 22:03:12.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.832" endtime="20201115 22:03:12.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.840" endtime="20201115 22:03:12.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.537" endtime="20201115 22:03:12.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.535" endtime="20201115 22:03:12.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.847" level="INFO">${RESULT} = [{'time': 0.024693611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.025414083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:12.843" endtime="20201115 22:03:12.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.860" level="INFO">${OVERHEAD} = {'time': [0.024693611, 0.025414083, 0.026135444, 0.026868, 0.02760525, 0.028339403, 0.029074306, 0.029808472, 0.030544528, 0.031281569, 0.032016431, 0.032752819, 0.033489542, 0.034210139, 0.03494675, ...</msg>
<status status="PASS" starttime="20201115 22:03:12.848" endtime="20201115 22:03:12.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.864" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.863" endtime="20201115 22:03:12.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.867" level="INFO">VALUE: [1.2500000000002093e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2223000000002177e-05, 1.2194000000000094e-05, 1.2195000000003037e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2263999999997943e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2236999999998277e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2263999999997943e-05, 1.2208999999999137e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2125000000001718e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2153000000000858e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2138999999994349e-05, 1.2180999999999997e-05, 1.2221999999999233e-05, 1.2264000000004882e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201115 22:03:12.865" endtime="20201115 22:03:12.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.861" endtime="20201115 22:03:12.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.870" endtime="20201115 22:03:12.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.874" endtime="20201115 22:03:12.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.872" endtime="20201115 22:03:12.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.869" endtime="20201115 22:03:12.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.475" endtime="20201115 22:03:12.894"></status>
</kw>
<msg timestamp="20201115 22:03:12.895" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.903" endtime="20201115 22:03:12.948"></status>
</kw>
<msg timestamp="20201115 22:03:12.949" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.902" endtime="20201115 22:03:12.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.951" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.950" endtime="20201115 22:03:12.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.952" endtime="20201115 22:03:12.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.899" endtime="20201115 22:03:12.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.897" endtime="20201115 22:03:12.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.961" endtime="20201115 22:03:13.248"></status>
</kw>
<msg timestamp="20201115 22:03:13.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.960" endtime="20201115 22:03:13.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.252" endtime="20201115 22:03:13.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.260" endtime="20201115 22:03:13.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.957" endtime="20201115 22:03:13.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.955" endtime="20201115 22:03:13.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.267" level="INFO">${RESULT} = [{'time': 0.022481097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.023205319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.263" endtime="20201115 22:03:13.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.280" level="INFO">${OVERHEAD} = {'time': [0.022481097, 0.023205319, 0.02393075, 0.024650528, 0.025378125, 0.026114139, 0.026843903, 0.027574278, 0.028310264, 0.029030069, 0.029756042, 0.030477097, 0.031199653, 0.031921306, 0.0326475...</msg>
<status status="PASS" starttime="20201115 22:03:13.268" endtime="20201115 22:03:13.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.285" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.284" endtime="20201115 22:03:13.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.287" level="INFO">VALUE: [1.2527999999997763e-05, 1.2179999999997054e-05, 1.2221999999999233e-05, 1.2222000000002703e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2223000000005646e-05, 1.2222999999998707e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.2208000000006602e-05, 1.2291999999997083e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2139000000001288e-05, 1.2208000000006602e-05, 1.2235999999998803e-05, 1.2263999999997943e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2180000000000524e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.286" endtime="20201115 22:03:13.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.281" endtime="20201115 22:03:13.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.290" endtime="20201115 22:03:13.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.294" endtime="20201115 22:03:13.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.292" endtime="20201115 22:03:13.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.289" endtime="20201115 22:03:13.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.895" endtime="20201115 22:03:13.315"></status>
</kw>
<msg timestamp="20201115 22:03:13.315" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.324" endtime="20201115 22:03:13.368"></status>
</kw>
<msg timestamp="20201115 22:03:13.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.322" endtime="20201115 22:03:13.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.370" endtime="20201115 22:03:13.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.372" endtime="20201115 22:03:13.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.320" endtime="20201115 22:03:13.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.317" endtime="20201115 22:03:13.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.381" endtime="20201115 22:03:13.668"></status>
</kw>
<msg timestamp="20201115 22:03:13.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.380" endtime="20201115 22:03:13.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.672" endtime="20201115 22:03:13.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.680" endtime="20201115 22:03:13.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.377" endtime="20201115 22:03:13.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.376" endtime="20201115 22:03:13.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.687" level="INFO">${RESULT} = [{'time': 0.022461042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.023188819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:13.683" endtime="20201115 22:03:13.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.700" level="INFO">${OVERHEAD} = {'time': [0.022461042, 0.023188819, 0.023917694, 0.024639417, 0.025364292, 0.026089514, 0.026819569, 0.0275385, 0.028268278, 0.028999681, 0.029737194, 0.030465792, 0.031192792, 0.031914278, 0.03263945...</msg>
<status status="PASS" starttime="20201115 22:03:13.688" endtime="20201115 22:03:13.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.705" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.704" endtime="20201115 22:03:13.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.707" level="INFO">VALUE: [1.2485999999999053e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2222999999998707e-05, 1.2250000000001843e-05, 1.2208000000003133e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2249999999998373e-05, 1.2208000000003133e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2263999999997943e-05, 1.2180999999999997e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2208999999999137e-05]</msg>
<status status="PASS" starttime="20201115 22:03:13.706" endtime="20201115 22:03:13.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.701" endtime="20201115 22:03:13.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.710" endtime="20201115 22:03:13.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.714" endtime="20201115 22:03:13.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.712" endtime="20201115 22:03:13.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.709" endtime="20201115 22:03:13.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.315" endtime="20201115 22:03:13.734"></status>
</kw>
<msg timestamp="20201115 22:03:13.735" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.743" endtime="20201115 22:03:13.788"></status>
</kw>
<msg timestamp="20201115 22:03:13.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.742" endtime="20201115 22:03:13.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.791" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.790" endtime="20201115 22:03:13.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.792" endtime="20201115 22:03:13.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.739" endtime="20201115 22:03:13.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.737" endtime="20201115 22:03:13.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.801" endtime="20201115 22:03:14.087"></status>
</kw>
<msg timestamp="20201115 22:03:14.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.799" endtime="20201115 22:03:14.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.091" endtime="20201115 22:03:14.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.100" endtime="20201115 22:03:14.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.797" endtime="20201115 22:03:14.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.795" endtime="20201115 22:03:14.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.107" level="INFO">${RESULT} = [{'time': 0.022375931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.023104833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.103" endtime="20201115 22:03:14.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.121" level="INFO">${OVERHEAD} = {'time': [0.022375931, 0.023104833, 0.023827153, 0.024563153, 0.025285111, 0.026010819, 0.026739069, 0.027475375, 0.028207472, 0.028929417, 0.029661986, 0.030386806, 0.031115875, 0.031848111, 0.032581...</msg>
<status status="PASS" starttime="20201115 22:03:14.108" endtime="20201115 22:03:14.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.126" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.125" endtime="20201115 22:03:14.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.128" level="INFO">VALUE: [1.2500000000002093e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2222000000002703e-05, 1.2250000000001843e-05, 1.2221999999999233e-05, 1.2264000000001413e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2222000000006172e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2153000000000858e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2167000000000427e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2277999999997513e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.127" endtime="20201115 22:03:14.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.122" endtime="20201115 22:03:14.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.131" endtime="20201115 22:03:14.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.135" endtime="20201115 22:03:14.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.133" endtime="20201115 22:03:14.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.130" endtime="20201115 22:03:14.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.735" endtime="20201115 22:03:14.155"></status>
</kw>
<msg timestamp="20201115 22:03:14.156" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.164" endtime="20201115 22:03:14.209"></status>
</kw>
<msg timestamp="20201115 22:03:14.210" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.163" endtime="20201115 22:03:14.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.212" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.211" endtime="20201115 22:03:14.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.213" endtime="20201115 22:03:14.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.160" endtime="20201115 22:03:14.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.158" endtime="20201115 22:03:14.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.222" endtime="20201115 22:03:14.508"></status>
</kw>
<msg timestamp="20201115 22:03:14.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.221" endtime="20201115 22:03:14.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.513" endtime="20201115 22:03:14.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.524" endtime="20201115 22:03:14.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.218" endtime="20201115 22:03:14.529"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.216" endtime="20201115 22:03:14.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.539" level="INFO">${RESULT} = [{'time': 0.022359917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.023082681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:14.531" endtime="20201115 22:03:14.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.568" level="INFO">${OVERHEAD} = {'time': [0.022359917, 0.023082681, 0.023818458, 0.024538986, 0.025264139, 0.025997444, 0.026731042, 0.02746275, 0.028188889, 0.028920653, 0.029644903, 0.030366694, 0.031089708, 0.031815889, 0.0325466...</msg>
<status status="PASS" starttime="20201115 22:03:14.541" endtime="20201115 22:03:14.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.577" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.575" endtime="20201115 22:03:14.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.582" level="INFO">VALUE: [1.2514000000001663e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2208000000003133e-05, 1.2167000000000427e-05, 1.2207999999999664e-05, 1.2208000000003133e-05, 1.2209000000002607e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2125000000001718e-05, 1.2194000000000094e-05, 1.2195000000006506e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2153000000000858e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2167000000000427e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2263999999997943e-05, 1.2180000000000524e-05, 1.2180000000000524e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2209000000006076e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.2152000000001384e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2165999999994015e-05]</msg>
<status status="PASS" starttime="20201115 22:03:14.580" endtime="20201115 22:03:14.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.570" endtime="20201115 22:03:14.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.589" endtime="20201115 22:03:14.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.596" endtime="20201115 22:03:14.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.593" endtime="20201115 22:03:14.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.586" endtime="20201115 22:03:14.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.156" endtime="20201115 22:03:14.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.474" endtime="20201115 22:03:14.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.473" endtime="20201115 22:03:14.621"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.626" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.636" endtime="20201115 22:03:14.684"></status>
</kw>
<msg timestamp="20201115 22:03:14.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.635" endtime="20201115 22:03:14.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.687" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.685" endtime="20201115 22:03:14.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.688" endtime="20201115 22:03:14.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.632" endtime="20201115 22:03:14.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.630" endtime="20201115 22:03:14.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.697" endtime="20201115 22:03:14.984"></status>
</kw>
<msg timestamp="20201115 22:03:14.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032411653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032424764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.696" endtime="20201115 22:03:14.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032411653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032424764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.988" endtime="20201115 22:03:14.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.996" endtime="20201115 22:03:14.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.693" endtime="20201115 22:03:14.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.691" endtime="20201115 22:03:14.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.003" level="INFO">${RESULT} = [{'time': 0.032424764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3111000000003148e-05, 'source_diff': 1.3111000000003148e-05}, {'time': 0.033196056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.000" endtime="20201115 22:03:15.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.016" level="INFO">${OVERHEAD} = {'time': [0.032424764, 0.033196056, 0.033977972, 0.034762597, 0.035551083, 0.036339222, 0.037119569, 0.037895583, 0.038671847, 0.039450972, 0.040226917, 0.041006833, 0.041789681, 0.042573736, 0.043352...</msg>
<status status="PASS" starttime="20201115 22:03:15.004" endtime="20201115 22:03:15.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.021" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.020" endtime="20201115 22:03:15.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.023" level="INFO">VALUE: [1.3111000000003148e-05, 1.2749999999998873e-05, 1.2805000000004618e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2708000000000164e-05, 1.277699999999854e-05, 1.2764000000005382e-05, 1.279099999999811e-05, 1.2834000000003232e-05, 1.2763999999998443e-05, 1.2806000000004092e-05, 1.2791999999997583e-05, 1.276299999999897e-05, 1.276299999999897e-05, 1.2792000000004522e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2791999999997583e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2764000000005382e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2778000000004952e-05, 1.2778000000004952e-05, 1.2749999999998873e-05, 1.2764000000005382e-05, 1.283299999999682e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2777999999991074e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.022" endtime="20201115 22:03:15.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.017" endtime="20201115 22:03:15.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.026" endtime="20201115 22:03:15.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.029" endtime="20201115 22:03:15.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.028" endtime="20201115 22:03:15.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.024" endtime="20201115 22:03:15.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.627" endtime="20201115 22:03:15.050"></status>
</kw>
<msg timestamp="20201115 22:03:15.050" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.059" endtime="20201115 22:03:15.107"></status>
</kw>
<msg timestamp="20201115 22:03:15.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.058" endtime="20201115 22:03:15.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.109" endtime="20201115 22:03:15.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.112" endtime="20201115 22:03:15.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.055" endtime="20201115 22:03:15.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.053" endtime="20201115 22:03:15.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.121" endtime="20201115 22:03:15.428"></status>
</kw>
<msg timestamp="20201115 22:03:15.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.120" endtime="20201115 22:03:15.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.437" endtime="20201115 22:03:15.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.446" endtime="20201115 22:03:15.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.117" endtime="20201115 22:03:15.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.115" endtime="20201115 22:03:15.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.453" level="INFO">${RESULT} = [{'time': 0.022471153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3097000000000109e-05, 'source_diff': 1.3097000000000109e-05}, {'time': 0.023245167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.449" endtime="20201115 22:03:15.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.466" level="INFO">${OVERHEAD} = {'time': [0.022471153, 0.023245167, 0.024018278, 0.024796125, 0.025581625, 0.026357556, 0.027127903, 0.027897903, 0.028672472, 0.029458986, 0.030243917, 0.031017667, 0.031790764, 0.032576625, 0.033353...</msg>
<status status="PASS" starttime="20201115 22:03:15.454" endtime="20201115 22:03:15.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.470" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.469" endtime="20201115 22:03:15.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.473" level="INFO">VALUE: [1.3097000000000109e-05, 1.2764000000001913e-05, 1.2735999999999303e-05, 1.281899999999725e-05, 1.2778000000001483e-05, 1.2750000000002343e-05, 1.2777999999998013e-05, 1.2847000000003328e-05, 1.2750000000002343e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2750000000005812e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2833999999996293e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.277699999999854e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2764000000005382e-05, 1.2764000000005382e-05, 1.2763999999998443e-05, 1.2819999999996723e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2695000000000067e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.276299999999897e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2833000000003758e-05, 1.277699999999854e-05, 1.2749999999998873e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.471" endtime="20201115 22:03:15.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.467" endtime="20201115 22:03:15.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.476" endtime="20201115 22:03:15.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.479" endtime="20201115 22:03:15.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.478" endtime="20201115 22:03:15.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.474" endtime="20201115 22:03:15.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.051" endtime="20201115 22:03:15.500"></status>
</kw>
<msg timestamp="20201115 22:03:15.500" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.510" endtime="20201115 22:03:15.557"></status>
</kw>
<msg timestamp="20201115 22:03:15.558" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.508" endtime="20201115 22:03:15.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.560" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.559" endtime="20201115 22:03:15.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.561" endtime="20201115 22:03:15.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.505" endtime="20201115 22:03:15.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.503" endtime="20201115 22:03:15.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.570" endtime="20201115 22:03:15.856"></status>
</kw>
<msg timestamp="20201115 22:03:15.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.568" endtime="20201115 22:03:15.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.860" endtime="20201115 22:03:15.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.868" endtime="20201115 22:03:15.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.566" endtime="20201115 22:03:15.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.564" endtime="20201115 22:03:15.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.875" level="INFO">${RESULT} = [{'time': 0.023104472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3055000000001399e-05, 'source_diff': 1.3055000000001399e-05}, {'time': 0.023880111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.871" endtime="20201115 22:03:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.889" level="INFO">${OVERHEAD} = {'time': [0.023104472, 0.023880111, 0.024662222, 0.025451542, 0.026234389, 0.027007014, 0.027792569, 0.028579139, 0.029364042, 0.030140917, 0.030929625, 0.031701208, 0.032482403, 0.033266472, 0.034040...</msg>
<status status="PASS" starttime="20201115 22:03:15.876" endtime="20201115 22:03:15.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.894" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.893" endtime="20201115 22:03:15.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.896" level="INFO">VALUE: [1.3055000000001399e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2764000000001913e-05, 1.2749999999998873e-05, 1.2833000000000289e-05, 1.276299999999897e-05, 1.2778000000001483e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2681000000000497e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.2695000000000067e-05, 1.2764000000005382e-05, 1.2750000000005812e-05, 1.2777999999998013e-05, 1.2749999999998873e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2848000000002802e-05, 1.276299999999897e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.2806000000004092e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.2777999999998013e-05, 1.2778000000004952e-05, 1.279099999999811e-05, 1.2777999999998013e-05, 1.2778000000004952e-05, 1.2777999999998013e-05, 1.2721999999999734e-05, 1.2749999999998873e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201115 22:03:15.895" endtime="20201115 22:03:15.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.890" endtime="20201115 22:03:15.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.899" endtime="20201115 22:03:15.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.907" endtime="20201115 22:03:15.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.901" endtime="20201115 22:03:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.898" endtime="20201115 22:03:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.501" endtime="20201115 22:03:15.928"></status>
</kw>
<msg timestamp="20201115 22:03:15.929" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.937" endtime="20201115 22:03:15.985"></status>
</kw>
<msg timestamp="20201115 22:03:15.985" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.936" endtime="20201115 22:03:15.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.986" endtime="20201115 22:03:15.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.989" endtime="20201115 22:03:15.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.933" endtime="20201115 22:03:15.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.931" endtime="20201115 22:03:15.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.998" endtime="20201115 22:03:16.285"></status>
</kw>
<msg timestamp="20201115 22:03:16.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.996" endtime="20201115 22:03:16.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.289" endtime="20201115 22:03:16.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.298" endtime="20201115 22:03:16.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.994" endtime="20201115 22:03:16.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.992" endtime="20201115 22:03:16.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.304" level="INFO">${RESULT} = [{'time': 0.022531306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3070000000000442e-05, 'source_diff': 1.3070000000000442e-05}, {'time': 0.023321042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.301" endtime="20201115 22:03:16.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.317" level="INFO">${OVERHEAD} = {'time': [0.022531306, 0.023321042, 0.024107056, 0.024882458, 0.025669292, 0.026449347, 0.027234, 0.028014639, 0.028796236, 0.029577778, 0.030356542, 0.031140958, 0.031911306, 0.032700375, 0.033473444...</msg>
<status status="PASS" starttime="20201115 22:03:16.305" endtime="20201115 22:03:16.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.322" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.321" endtime="20201115 22:03:16.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.324" level="INFO">VALUE: [1.3070000000000442e-05, 1.2749999999998873e-05, 1.2778000000001483e-05, 1.277699999999854e-05, 1.2763999999998443e-05, 1.2805000000001149e-05, 1.2764000000001913e-05, 1.2764000000001913e-05, 1.280499999999768e-05, 1.2777999999998013e-05, 1.2764000000001913e-05, 1.279099999999811e-05, 1.2722999999999207e-05, 1.2777999999998013e-05, 1.276299999999897e-05, 1.2764000000005382e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.279099999999811e-05, 1.2749999999998873e-05, 1.2750000000005812e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.280499999999768e-05, 1.2763999999998443e-05, 1.2805000000004618e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.276299999999897e-05, 1.2735999999999303e-05, 1.276299999999897e-05, 1.2777999999998013e-05, 1.280499999999768e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.279099999999811e-05, 1.280499999999768e-05, 1.2749999999998873e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.2749999999998873e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.323" endtime="20201115 22:03:16.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.318" endtime="20201115 22:03:16.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.328" endtime="20201115 22:03:16.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.331" endtime="20201115 22:03:16.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.330" endtime="20201115 22:03:16.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.326" endtime="20201115 22:03:16.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.929" endtime="20201115 22:03:16.352"></status>
</kw>
<msg timestamp="20201115 22:03:16.352" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.361" endtime="20201115 22:03:16.408"></status>
</kw>
<msg timestamp="20201115 22:03:16.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.359" endtime="20201115 22:03:16.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.411" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.410" endtime="20201115 22:03:16.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.412" endtime="20201115 22:03:16.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.357" endtime="20201115 22:03:16.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.355" endtime="20201115 22:03:16.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.421" endtime="20201115 22:03:16.708"></status>
</kw>
<msg timestamp="20201115 22:03:16.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.420" endtime="20201115 22:03:16.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.712" endtime="20201115 22:03:16.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.720" endtime="20201115 22:03:16.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.417" endtime="20201115 22:03:16.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.415" endtime="20201115 22:03:16.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.727" level="INFO">${RESULT} = [{'time': 0.022567806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3070000000000442e-05, 'source_diff': 1.3070000000000442e-05}, {'time': 0.023350042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:16.723" endtime="20201115 22:03:16.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.740" level="INFO">${OVERHEAD} = {'time': [0.022567806, 0.023350042, 0.024134347, 0.024920208, 0.025699208, 0.026480111, 0.027253486, 0.0280275, 0.028811847, 0.0295955, 0.030384778, 0.031164722, 0.031953722, 0.032739583, 0.033524181,...</msg>
<status status="PASS" starttime="20201115 22:03:16.728" endtime="20201115 22:03:16.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.744" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.743" endtime="20201115 22:03:16.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.747" level="INFO">VALUE: [1.3070000000000442e-05, 1.2792000000001053e-05, 1.2764000000001913e-05, 1.2763999999998443e-05, 1.2777000000002009e-05, 1.2805000000001149e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2791000000001579e-05, 1.2764000000001913e-05, 1.2721999999999734e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2764000000005382e-05, 1.2749999999998873e-05, 1.2777000000005478e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.2764000000005382e-05, 1.2763999999998443e-05, 1.2791000000005048e-05, 1.2708999999999637e-05, 1.2763999999998443e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2764000000005382e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.277699999999854e-05, 1.2777000000005478e-05, 1.2792000000004522e-05, 1.2735999999999303e-05, 1.2749999999998873e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2749999999998873e-05, 1.277699999999854e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2778000000004952e-05, 1.2735999999999303e-05, 1.281899999999725e-05]</msg>
<status status="PASS" starttime="20201115 22:03:16.745" endtime="20201115 22:03:16.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.741" endtime="20201115 22:03:16.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.750" endtime="20201115 22:03:16.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.754" endtime="20201115 22:03:16.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.752" endtime="20201115 22:03:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.749" endtime="20201115 22:03:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.353" endtime="20201115 22:03:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.624" endtime="20201115 22:03:16.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.622" endtime="20201115 22:03:16.775"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.777" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.786" endtime="20201115 22:03:16.836"></status>
</kw>
<msg timestamp="20201115 22:03:16.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.784" endtime="20201115 22:03:16.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.839" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.837" endtime="20201115 22:03:16.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.840" endtime="20201115 22:03:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.782" endtime="20201115 22:03:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.780" endtime="20201115 22:03:16.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.849" endtime="20201115 22:03:17.135"></status>
</kw>
<msg timestamp="20201115 22:03:17.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.847" endtime="20201115 22:03:17.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024813681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.140" endtime="20201115 22:03:17.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.148" endtime="20201115 22:03:17.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.845" endtime="20201115 22:03:17.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.843" endtime="20201115 22:03:17.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.155" level="INFO">${RESULT} = [{'time': 0.024827319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3637999999999845e-05, 'source_diff': 1.3637999999999845e-05}, {'time': 0.025657833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:17.152" endtime="20201115 22:03:17.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.168" level="INFO">${OVERHEAD} = {'time': [0.024827319, 0.025657833, 0.026495361, 0.027329486, 0.028161139, 0.029001542, 0.029827833, 0.030662, 0.031493667, 0.032326528, 0.033159681, 0.033990361, 0.034816764, 0.035651556, 0.036482958...</msg>
<status status="PASS" starttime="20201115 22:03:17.156" endtime="20201115 22:03:17.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.173" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.172" endtime="20201115 22:03:17.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.176" level="INFO">VALUE: [1.3637999999999845e-05, 1.3333000000000789e-05, 1.3263999999998943e-05, 1.3305000000001649e-05, 1.3306000000001122e-05, 1.3320000000000692e-05, 1.3333000000000789e-05, 1.333299999999732e-05, 1.3320000000004162e-05, 1.3319999999997223e-05, 1.3278000000005452e-05, 1.3263999999998943e-05, 1.3319999999997223e-05, 1.3277999999998513e-05, 1.3305000000005118e-05, 1.3263999999998943e-05, 1.3305000000005118e-05, 1.333299999999732e-05, 1.333299999999732e-05, 1.327699999999904e-05, 1.331899999999775e-05, 1.330499999999818e-05, 1.3333000000004258e-05, 1.3333999999996793e-05, 1.333299999999732e-05, 1.3333000000004258e-05, 1.3375000000002968e-05, 1.3263999999998943e-05, 1.3306000000004592e-05, 1.333299999999732e-05, 1.3333999999996793e-05, 1.330499999999818e-05, 1.3320000000004162e-05, 1.3347999999996363e-05, 1.333299999999732e-05, 1.3320000000004162e-05, 1.3319999999997223e-05, 1.3346999999996889e-05, 1.3346999999996889e-05, 1.3305999999997653e-05, 1.333299999999732e-05, 1.330499999999818e-05, 1.3319000000004688e-05, 1.331899999999775e-05, 1.3319999999997223e-05, 1.3305999999997653e-05, 1.331899999999775e-05, 1.331899999999775e-05, 1.3333000000004258e-05, 1.3306000000004592e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.174" endtime="20201115 22:03:17.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.169" endtime="20201115 22:03:17.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.179" endtime="20201115 22:03:17.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.182" endtime="20201115 22:03:17.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.181" endtime="20201115 22:03:17.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.177" endtime="20201115 22:03:17.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.778" endtime="20201115 22:03:17.203"></status>
</kw>
<msg timestamp="20201115 22:03:17.203" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.212" endtime="20201115 22:03:17.262"></status>
</kw>
<msg timestamp="20201115 22:03:17.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.210" endtime="20201115 22:03:17.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.264" endtime="20201115 22:03:17.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.266" endtime="20201115 22:03:17.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.208" endtime="20201115 22:03:17.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.206" endtime="20201115 22:03:17.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.275" endtime="20201115 22:03:17.562"></status>
</kw>
<msg timestamp="20201115 22:03:17.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.273" endtime="20201115 22:03:17.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.571" endtime="20201115 22:03:17.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.588" endtime="20201115 22:03:17.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.271" endtime="20201115 22:03:17.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.269" endtime="20201115 22:03:17.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.602" level="INFO">${RESULT} = [{'time': 0.022654069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.023482222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.595" endtime="20201115 22:03:17.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.635" level="INFO">${OVERHEAD} = {'time': [0.022654069, 0.023482222, 0.024323153, 0.025159111, 0.025991903, 0.02682075, 0.027656708, 0.028486389, 0.029322375, 0.030152431, 0.030994903, 0.031837069, 0.032673639, 0.033499319, 0.0343252...</msg>
<status status="PASS" starttime="20201115 22:03:17.604" endtime="20201115 22:03:17.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.644" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.642" endtime="20201115 22:03:17.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.650" level="INFO">VALUE: [1.358299999999757e-05, 1.3333000000000789e-05, 1.3277999999998513e-05, 1.3333000000000789e-05, 1.3334000000000262e-05, 1.3319000000001219e-05, 1.333299999999732e-05, 1.3320000000000692e-05, 1.3319000000001219e-05, 1.3334000000000262e-05, 1.3334000000000262e-05, 1.3319000000004688e-05, 1.3319999999997223e-05, 1.3346999999996889e-05, 1.3347000000003828e-05, 1.3305000000005118e-05, 1.3291999999998083e-05, 1.3291999999998083e-05, 1.333299999999732e-05, 1.331899999999775e-05, 1.3347999999996363e-05, 1.3375000000002968e-05, 1.3334000000003732e-05, 1.3291999999998083e-05, 1.3305999999997653e-05, 1.333299999999732e-05, 1.3292000000005022e-05, 1.3319000000004688e-05, 1.3333000000004258e-05, 1.3319999999997223e-05, 1.3360999999996459e-05, 1.327699999999904e-05, 1.331899999999775e-05, 1.331899999999775e-05, 1.3320000000004162e-05, 1.3333000000004258e-05, 1.3346999999996889e-05, 1.3333000000004258e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.330499999999818e-05, 1.3333000000004258e-05, 1.3347000000003828e-05, 1.3319000000004688e-05, 1.330499999999818e-05, 1.3346999999996889e-05, 1.3320000000004162e-05, 1.3319999999997223e-05, 1.3333000000004258e-05, 1.3374999999996029e-05]</msg>
<status status="PASS" starttime="20201115 22:03:17.647" endtime="20201115 22:03:17.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.637" endtime="20201115 22:03:17.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.656" endtime="20201115 22:03:17.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.661" endtime="20201115 22:03:17.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.660" endtime="20201115 22:03:17.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.653" endtime="20201115 22:03:17.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.204" endtime="20201115 22:03:17.682"></status>
</kw>
<msg timestamp="20201115 22:03:17.682" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.691" endtime="20201115 22:03:17.741"></status>
</kw>
<msg timestamp="20201115 22:03:17.742" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.689" endtime="20201115 22:03:17.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.743" endtime="20201115 22:03:17.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.745" endtime="20201115 22:03:17.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.687" endtime="20201115 22:03:17.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.685" endtime="20201115 22:03:17.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.754" endtime="20201115 22:03:18.041"></status>
</kw>
<msg timestamp="20201115 22:03:18.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.752" endtime="20201115 22:03:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.045" endtime="20201115 22:03:18.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.053" endtime="20201115 22:03:18.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.750" endtime="20201115 22:03:18.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.748" endtime="20201115 22:03:18.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.060" level="INFO">${RESULT} = [{'time': 0.022540653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.023379167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.056" endtime="20201115 22:03:18.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.073" level="INFO">${OVERHEAD} = {'time': [0.022540653, 0.023379167, 0.024220778, 0.025058028, 0.025896861, 0.026734764, 0.027561208, 0.028391625, 0.029218319, 0.030053028, 0.030878042, 0.031714944, 0.032540042, 0.033369153, 0.034197...</msg>
<status status="PASS" starttime="20201115 22:03:18.061" endtime="20201115 22:03:18.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.078" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.076" endtime="20201115 22:03:18.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.080" level="INFO">VALUE: [1.3638999999999318e-05, 1.3320000000000692e-05, 1.3333999999996793e-05, 1.3320000000000692e-05, 1.3319000000001219e-05, 1.3320000000000692e-05, 1.3360999999999928e-05, 1.3333000000000789e-05, 1.3347000000000359e-05, 1.3334000000000262e-05, 1.3334000000000262e-05, 1.3319000000004688e-05, 1.3347999999996363e-05, 1.3333999999996793e-05, 1.330499999999818e-05, 1.3320000000004162e-05, 1.330499999999818e-05, 1.3360999999996459e-05, 1.3319000000004688e-05, 1.3305999999997653e-05, 1.331899999999775e-05, 1.3361000000003398e-05, 1.3319000000004688e-05, 1.3305999999997653e-05, 1.3306000000004592e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.330499999999818e-05, 1.331899999999775e-05, 1.3305999999997653e-05, 1.3249999999999373e-05, 1.331899999999775e-05, 1.3388999999995599e-05, 1.3333999999996793e-05, 1.3319000000004688e-05, 1.3263999999998943e-05, 1.3320000000004162e-05, 1.331899999999775e-05, 1.3333000000004258e-05, 1.3305000000005118e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.3319999999997223e-05, 1.3333999999996793e-05, 1.331899999999775e-05, 1.336099999998952e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.079" endtime="20201115 22:03:18.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.074" endtime="20201115 22:03:18.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.083" endtime="20201115 22:03:18.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.086" endtime="20201115 22:03:18.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.085" endtime="20201115 22:03:18.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.081" endtime="20201115 22:03:18.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.683" endtime="20201115 22:03:18.107"></status>
</kw>
<msg timestamp="20201115 22:03:18.107" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.116" endtime="20201115 22:03:18.166"></status>
</kw>
<msg timestamp="20201115 22:03:18.167" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.114" endtime="20201115 22:03:18.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.168" endtime="20201115 22:03:18.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.170" endtime="20201115 22:03:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.112" endtime="20201115 22:03:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.110" endtime="20201115 22:03:18.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.179" endtime="20201115 22:03:18.482"></status>
</kw>
<msg timestamp="20201115 22:03:18.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.178" endtime="20201115 22:03:18.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.486" endtime="20201115 22:03:18.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.495" endtime="20201115 22:03:18.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.175" endtime="20201115 22:03:18.497"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.173" endtime="20201115 22:03:18.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.502" level="INFO">${RESULT} = [{'time': 0.022527819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3637999999999845e-05, 'source_diff': 1.3637999999999845e-05}, {'time': 0.023354889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:18.498" endtime="20201115 22:03:18.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.515" level="INFO">${OVERHEAD} = {'time': [0.022527819, 0.023354889, 0.024185667, 0.025010542, 0.025840458, 0.026670097, 0.027496236, 0.028333306, 0.029176889, 0.030016694, 0.030855264, 0.031685153, 0.032511958, 0.033346181, 0.034178...</msg>
<status status="PASS" starttime="20201115 22:03:18.503" endtime="20201115 22:03:18.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.519" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.518" endtime="20201115 22:03:18.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.522" level="INFO">VALUE: [1.3637999999999845e-05, 1.3333000000000789e-05, 1.3320000000000692e-05, 1.3320000000000692e-05, 1.3347000000000359e-05, 1.3374999999999498e-05, 1.3319000000001219e-05, 1.3320000000000692e-05, 1.3347000000000359e-05, 1.3305000000001649e-05, 1.3278000000001983e-05, 1.3319999999997223e-05, 1.329099999999861e-05, 1.3362000000002872e-05, 1.3333000000004258e-05, 1.331899999999775e-05, 1.3347000000003828e-05, 1.333299999999732e-05, 1.3249999999999373e-05, 1.3333999999996793e-05, 1.3333999999996793e-05, 1.3319999999997223e-05, 1.3320000000004162e-05, 1.3334000000003732e-05, 1.331899999999775e-05, 1.3277999999998513e-05, 1.3306000000004592e-05, 1.3333000000004258e-05, 1.3333000000004258e-05, 1.331899999999775e-05, 1.3333000000004258e-05, 1.331899999999775e-05, 1.3306000000004592e-05, 1.3347000000003828e-05, 1.333299999999732e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.3277999999998513e-05, 1.330499999999818e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.333299999999732e-05, 1.3235999999999803e-05, 1.3319999999997223e-05, 1.3333000000004258e-05, 1.3333999999996793e-05, 1.3305999999997653e-05, 1.333299999999038e-05, 1.3346999999996889e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.520" endtime="20201115 22:03:18.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.516" endtime="20201115 22:03:18.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.525" endtime="20201115 22:03:18.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.528" endtime="20201115 22:03:18.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.527" endtime="20201115 22:03:18.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.523" endtime="20201115 22:03:18.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.108" endtime="20201115 22:03:18.549"></status>
</kw>
<msg timestamp="20201115 22:03:18.549" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.558" endtime="20201115 22:03:18.608"></status>
</kw>
<msg timestamp="20201115 22:03:18.609" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.556" endtime="20201115 22:03:18.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.610" endtime="20201115 22:03:18.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.612" endtime="20201115 22:03:18.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.554" endtime="20201115 22:03:18.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.552" endtime="20201115 22:03:18.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.621" endtime="20201115 22:03:18.907"></status>
</kw>
<msg timestamp="20201115 22:03:18.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.619" endtime="20201115 22:03:18.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.911" endtime="20201115 22:03:18.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.919" endtime="20201115 22:03:18.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.617" endtime="20201115 22:03:18.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.615" endtime="20201115 22:03:18.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.926" level="INFO">${RESULT} = [{'time': 0.022553278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.023395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:18.922" endtime="20201115 22:03:18.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.939" level="INFO">${OVERHEAD} = {'time': [0.022553278, 0.023395, 0.024227014, 0.025057083, 0.025887458, 0.026713514, 0.027555431, 0.028398292, 0.029224319, 0.030050069, 0.030891681, 0.031725153, 0.032553583, 0.033382667, 0.034214556...</msg>
<status status="PASS" starttime="20201115 22:03:18.927" endtime="20201115 22:03:18.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.943" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.942" endtime="20201115 22:03:18.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.946" level="INFO">VALUE: [1.3638999999999318e-05, 1.3333000000000789e-05, 1.3292000000001553e-05, 1.3319000000001219e-05, 1.333299999999732e-05, 1.3320000000000692e-05, 1.3319999999997223e-05, 1.3334000000000262e-05, 1.333299999999732e-05, 1.331899999999775e-05, 1.3347999999999832e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.3305999999997653e-05, 1.3305999999997653e-05, 1.3305999999997653e-05, 1.3346999999996889e-05, 1.3333999999996793e-05, 1.3319000000004688e-05, 1.333299999999732e-05, 1.3319000000004688e-05, 1.3320000000004162e-05, 1.3333000000004258e-05, 1.3319999999997223e-05, 1.329099999999861e-05, 1.3374999999996029e-05, 1.3346999999996889e-05, 1.330499999999818e-05, 1.331899999999775e-05, 1.3360999999996459e-05, 1.3319000000004688e-05, 1.331899999999775e-05, 1.3249999999999373e-05, 1.329099999999861e-05, 1.3320000000004162e-05, 1.3389000000002538e-05, 1.3346999999996889e-05, 1.3320000000004162e-05, 1.3360999999996459e-05, 1.331899999999775e-05, 1.333299999999732e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.3319000000004688e-05, 1.3334000000003732e-05, 1.3305000000005118e-05, 1.3402000000002634e-05, 1.3319999999997223e-05, 1.331899999999775e-05, 1.3333000000004258e-05]</msg>
<status status="PASS" starttime="20201115 22:03:18.944" endtime="20201115 22:03:18.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.940" endtime="20201115 22:03:18.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.949" endtime="20201115 22:03:18.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.952" endtime="20201115 22:03:18.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.951" endtime="20201115 22:03:18.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.947" endtime="20201115 22:03:18.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.550" endtime="20201115 22:03:18.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.776" endtime="20201115 22:03:18.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.775" endtime="20201115 22:03:18.973"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.975" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.984" endtime="20201115 22:03:19.037"></status>
</kw>
<msg timestamp="20201115 22:03:19.038" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.983" endtime="20201115 22:03:19.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.039" endtime="20201115 22:03:19.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.041" endtime="20201115 22:03:19.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.980" endtime="20201115 22:03:19.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.978" endtime="20201115 22:03:19.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.051" endtime="20201115 22:03:19.337"></status>
</kw>
<msg timestamp="20201115 22:03:19.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.049" endtime="20201115 22:03:19.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024869944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024884139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.341" endtime="20201115 22:03:19.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.349" endtime="20201115 22:03:19.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.046" endtime="20201115 22:03:19.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.045" endtime="20201115 22:03:19.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.355" level="INFO">${RESULT} = [{'time': 0.024884139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4194999999998098e-05, 'source_diff': 1.4194999999998098e-05}, {'time': 0.025780153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.352" endtime="20201115 22:03:19.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.370" level="INFO">${OVERHEAD} = {'time': [0.024884139, 0.025780153, 0.026678931, 0.027560514, 0.028448417, 0.029337542, 0.030220389, 0.031103264, 0.031997986, 0.032880833, 0.033777097, 0.034662444, 0.035545278, 0.036439722, 0.037339...</msg>
<status status="PASS" starttime="20201115 22:03:19.356" endtime="20201115 22:03:19.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.374" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.373" endtime="20201115 22:03:19.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.377" level="INFO">VALUE: [1.4194999999998098e-05, 1.3847000000000859e-05, 1.3944999999997848e-05, 1.3874999999999998e-05, 1.3916999999998708e-05, 1.3888999999999568e-05, 1.3833000000001289e-05, 1.3902999999999138e-05, 1.3917000000002178e-05, 1.383299999999782e-05, 1.3902999999995669e-05, 1.3930000000002274e-05, 1.3874999999996529e-05, 1.3916000000002704e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3931000000001748e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3860999999996959e-05, 1.3875000000003468e-05, 1.3889000000003038e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.384699999999739e-05, 1.3874999999996529e-05, 1.3902999999995669e-05, 1.3888999999996099e-05, 1.3860999999996959e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3875000000003468e-05, 1.3930000000002274e-05, 1.384699999999739e-05, 1.3874999999996529e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3888000000003564e-05, 1.3916000000002704e-05, 1.3862000000003372e-05, 1.3903000000009547e-05, 1.3819999999997723e-05, 1.3902000000010073e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.376" endtime="20201115 22:03:19.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.371" endtime="20201115 22:03:19.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.380" endtime="20201115 22:03:19.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.383" endtime="20201115 22:03:19.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.382" endtime="20201115 22:03:19.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.378" endtime="20201115 22:03:19.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.976" endtime="20201115 22:03:19.404"></status>
</kw>
<msg timestamp="20201115 22:03:19.404" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.413" endtime="20201115 22:03:19.466"></status>
</kw>
<msg timestamp="20201115 22:03:19.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.411" endtime="20201115 22:03:19.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.468" endtime="20201115 22:03:19.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.470" endtime="20201115 22:03:19.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.409" endtime="20201115 22:03:19.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.407" endtime="20201115 22:03:19.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.479" endtime="20201115 22:03:19.767"></status>
</kw>
<msg timestamp="20201115 22:03:19.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.478" endtime="20201115 22:03:19.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.771" endtime="20201115 22:03:19.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.779" endtime="20201115 22:03:19.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.475" endtime="20201115 22:03:19.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.474" endtime="20201115 22:03:19.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.785" level="INFO">${RESULT} = [{'time': 0.022605153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.023495278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:19.782" endtime="20201115 22:03:19.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.798" level="INFO">${OVERHEAD} = {'time': [0.022605153, 0.023495278, 0.024386375, 0.025285847, 0.026167264, 0.027060153, 0.027958111, 0.028847556, 0.029739264, 0.030634056, 0.031527875, 0.032409264, 0.033309764, 0.034195208, 0.035085...</msg>
<status status="PASS" starttime="20201115 22:03:19.786" endtime="20201115 22:03:19.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.803" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.802" endtime="20201115 22:03:19.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.805" level="INFO">VALUE: [1.4138999999999818e-05, 1.3889000000003038e-05, 1.381899999999825e-05, 1.3902999999999138e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3930000000002274e-05, 1.3888999999999568e-05, 1.3917000000002178e-05, 1.3930999999998278e-05, 1.3874999999996529e-05, 1.3860999999996959e-05, 1.3916999999995239e-05, 1.3874999999996529e-05, 1.3888999999996099e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3875000000003468e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3901999999996195e-05, 1.3917000000002178e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3903000000002608e-05, 1.3875000000003468e-05, 1.3930000000002274e-05, 1.3903000000002608e-05, 1.3874999999996529e-05, 1.3929999999995335e-05, 1.380499999999868e-05, 1.3847000000004328e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.3902000000003134e-05, 1.3901999999996195e-05, 1.3875000000003468e-05, 1.3902999999995669e-05, 1.3819999999997723e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3860999999996959e-05, 1.3874999999996529e-05, 1.3888999999996099e-05, 1.3875000000010407e-05, 1.3874999999996529e-05, 1.3887999999989686e-05, 1.3917000000002178e-05, 1.3930999999994809e-05]</msg>
<status status="PASS" starttime="20201115 22:03:19.804" endtime="20201115 22:03:19.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.799" endtime="20201115 22:03:19.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.808" endtime="20201115 22:03:19.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.812" endtime="20201115 22:03:19.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.810" endtime="20201115 22:03:19.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.807" endtime="20201115 22:03:19.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.405" endtime="20201115 22:03:19.833"></status>
</kw>
<msg timestamp="20201115 22:03:19.833" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.842" endtime="20201115 22:03:19.896"></status>
</kw>
<msg timestamp="20201115 22:03:19.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.840" endtime="20201115 22:03:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.899" endtime="20201115 22:03:19.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.904" endtime="20201115 22:03:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.838" endtime="20201115 22:03:19.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.835" endtime="20201115 22:03:19.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.922" endtime="20201115 22:03:20.214"></status>
</kw>
<msg timestamp="20201115 22:03:20.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.919" endtime="20201115 22:03:20.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.219" endtime="20201115 22:03:20.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.226" endtime="20201115 22:03:20.228"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.914" endtime="20201115 22:03:20.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.910" endtime="20201115 22:03:20.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.233" level="INFO">${RESULT} = [{'time': 0.023046236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.023929264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:20.230" endtime="20201115 22:03:20.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.246" level="INFO">${OVERHEAD} = {'time': [0.023046236, 0.023929264, 0.024824708, 0.025714514, 0.026596583, 0.027479306, 0.028362861, 0.029249569, 0.030133083, 0.031024111, 0.031913194, 0.032797736, 0.033687514, 0.034569778, 0.035459...</msg>
<status status="PASS" starttime="20201115 22:03:20.234" endtime="20201115 22:03:20.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.251" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.250" endtime="20201115 22:03:20.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.253" level="INFO">VALUE: [1.4180000000002524e-05, 1.3874999999999998e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3861999999999902e-05, 1.3874999999999998e-05, 1.3929999999998804e-05, 1.3874999999999998e-05, 1.3888999999999568e-05, 1.3887999999996625e-05, 1.3875000000003468e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3930000000002274e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3902999999995669e-05, 1.3888999999996099e-05, 1.3917000000002178e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3875000000003468e-05, 1.3903000000002608e-05, 1.3901999999996195e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3903000000002608e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3861000000003898e-05, 1.3889000000003038e-05, 1.3875000000003468e-05, 1.3875000000003468e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3860999999996959e-05, 1.3930999999994809e-05, 1.3888999999996099e-05, 1.3929999999995335e-05, 1.380499999999868e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3874999999996529e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3874999999996529e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.252" endtime="20201115 22:03:20.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.247" endtime="20201115 22:03:20.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.256" endtime="20201115 22:03:20.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.260" endtime="20201115 22:03:20.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.258" endtime="20201115 22:03:20.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.255" endtime="20201115 22:03:20.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.833" endtime="20201115 22:03:20.281"></status>
</kw>
<msg timestamp="20201115 22:03:20.281" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.290" endtime="20201115 22:03:20.343"></status>
</kw>
<msg timestamp="20201115 22:03:20.344" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.288" endtime="20201115 22:03:20.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.346" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.345" endtime="20201115 22:03:20.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.347" endtime="20201115 22:03:20.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.286" endtime="20201115 22:03:20.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.284" endtime="20201115 22:03:20.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.356" endtime="20201115 22:03:20.642"></status>
</kw>
<msg timestamp="20201115 22:03:20.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:20.354" endtime="20201115 22:03:20.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:20.646" endtime="20201115 22:03:20.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.654" endtime="20201115 22:03:20.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.352" endtime="20201115 22:03:20.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.350" endtime="20201115 22:03:20.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.660" level="INFO">${RESULT} = [{'time': 0.0227965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.023692792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.657" endtime="20201115 22:03:20.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.673" level="INFO">${OVERHEAD} = {'time': [0.0227965, 0.023692792, 0.024587222, 0.025471014, 0.026364236, 0.027260875, 0.028144403, 0.029030708, 0.029921139, 0.030816514, 0.031714361, 0.032612514, 0.033509139, 0.034394847, 0.03528462...</msg>
<status status="PASS" starttime="20201115 22:03:20.661" endtime="20201115 22:03:20.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.678" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.677" endtime="20201115 22:03:20.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.680" level="INFO">VALUE: [1.4194000000002094e-05, 1.3861000000000429e-05, 1.3902999999999138e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3916999999998708e-05, 1.3902999999999138e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3902999999999138e-05, 1.3889000000003038e-05, 1.3820000000004662e-05, 1.3860999999996959e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.383299999999782e-05, 1.3916000000002704e-05, 1.3889000000003038e-05, 1.3860999999996959e-05, 1.3875000000003468e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3888000000003564e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3888999999996099e-05, 1.3903000000002608e-05, 1.3861000000003898e-05, 1.3888999999996099e-05, 1.3875000000003468e-05, 1.3931000000001748e-05, 1.3889000000003038e-05, 1.381899999999825e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3889000000003038e-05, 1.3887999999996625e-05, 1.3917000000002178e-05, 1.3888999999996099e-05, 1.3847000000004328e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3915999999995765e-05, 1.3875000000003468e-05, 1.3820000000004662e-05, 1.3861000000003898e-05, 1.3902999999995669e-05, 1.3903000000009547e-05, 1.3889000000003038e-05, 1.3875000000010407e-05]</msg>
<status status="PASS" starttime="20201115 22:03:20.679" endtime="20201115 22:03:20.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.674" endtime="20201115 22:03:20.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.684" endtime="20201115 22:03:20.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.687" endtime="20201115 22:03:20.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.686" endtime="20201115 22:03:20.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.682" endtime="20201115 22:03:20.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.282" endtime="20201115 22:03:20.708"></status>
</kw>
<msg timestamp="20201115 22:03:20.708" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.717" endtime="20201115 22:03:20.770"></status>
</kw>
<msg timestamp="20201115 22:03:20.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.715" endtime="20201115 22:03:20.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.772" endtime="20201115 22:03:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.774" endtime="20201115 22:03:20.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.713" endtime="20201115 22:03:20.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.711" endtime="20201115 22:03:20.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.783" endtime="20201115 22:03:21.068"></status>
</kw>
<msg timestamp="20201115 22:03:21.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.781" endtime="20201115 22:03:21.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.072" endtime="20201115 22:03:21.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.080" endtime="20201115 22:03:21.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.779" endtime="20201115 22:03:21.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.777" endtime="20201115 22:03:21.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.087" level="INFO">${RESULT} = [{'time': 0.022704625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4180999999998528e-05, 'source_diff': 1.4180999999998528e-05}, {'time': 0.023595069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:21.083" endtime="20201115 22:03:21.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.101" level="INFO">${OVERHEAD} = {'time': [0.022704625, 0.023595069, 0.024483347, 0.025380847, 0.026279069, 0.027162319, 0.028048736, 0.0289435, 0.029838583, 0.030737639, 0.031631486, 0.032526278, 0.033413611, 0.034309278, 0.03520805...</msg>
<status status="PASS" starttime="20201115 22:03:21.088" endtime="20201115 22:03:21.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.106" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.105" endtime="20201115 22:03:21.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.108" level="INFO">VALUE: [1.4180999999998528e-05, 1.3833000000001289e-05, 1.3943999999998374e-05, 1.3874999999999998e-05, 1.3888000000000095e-05, 1.3888000000000095e-05, 1.3903000000002608e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3888999999999568e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3888999999996099e-05, 1.3862000000003372e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3945000000001317e-05, 1.3875000000003468e-05, 1.3861000000003898e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3888999999996099e-05, 1.384699999999739e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3875000000003468e-05, 1.3902999999995669e-05, 1.3930999999994809e-05, 1.3917000000002178e-05, 1.381899999999825e-05, 1.3875000000003468e-05, 1.3862000000003372e-05, 1.3902999999995669e-05, 1.3916999999995239e-05, 1.3889000000003038e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3887999999996625e-05, 1.3874999999996529e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3902999999995669e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.107" endtime="20201115 22:03:21.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.102" endtime="20201115 22:03:21.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.112" endtime="20201115 22:03:21.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.115" endtime="20201115 22:03:21.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.114" endtime="20201115 22:03:21.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.110" endtime="20201115 22:03:21.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.709" endtime="20201115 22:03:21.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.974" endtime="20201115 22:03:21.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.974" endtime="20201115 22:03:21.136"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.139" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.147" endtime="20201115 22:03:21.203"></status>
</kw>
<msg timestamp="20201115 22:03:21.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.146" endtime="20201115 22:03:21.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.206" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.205" endtime="20201115 22:03:21.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.208" endtime="20201115 22:03:21.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.143" endtime="20201115 22:03:21.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.141" endtime="20201115 22:03:21.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.217" endtime="20201115 22:03:21.519"></status>
</kw>
<msg timestamp="20201115 22:03:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024958861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.215" endtime="20201115 22:03:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024958861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.523" endtime="20201115 22:03:21.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.531" endtime="20201115 22:03:21.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.213" endtime="20201115 22:03:21.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.211" endtime="20201115 22:03:21.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.538" level="INFO">${RESULT} = [{'time': 0.024958861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.025910125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:21.535" endtime="20201115 22:03:21.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.551" level="INFO">${OVERHEAD} = {'time': [0.024958861, 0.025910125, 0.026859167, 0.027815667, 0.028763125, 0.029702847, 0.030643417, 0.031598056, 0.032551125, 0.033506389, 0.034460472, 0.035407694, 0.036350194, 0.037289806, 0.038239...</msg>
<status status="PASS" starttime="20201115 22:03:21.539" endtime="20201115 22:03:21.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.556" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.555" endtime="20201115 22:03:21.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.558" level="INFO">VALUE: [1.4764000000000443e-05, 1.4457999999998444e-05, 1.4473000000000957e-05, 1.4458999999997918e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.4458999999997918e-05, 1.4459000000001387e-05, 1.4444000000002344e-05, 1.4374999999997029e-05, 1.4486000000001054e-05, 1.4388000000004064e-05, 1.4430000000002774e-05, 1.4445000000001817e-05, 1.4417000000002678e-05, 1.4457999999994975e-05, 1.4430000000002774e-05, 1.4445000000001817e-05, 1.4417000000002678e-05, 1.4458000000001914e-05, 1.4444999999994879e-05, 1.4471999999994545e-05, 1.4444999999994879e-05, 1.4457999999994975e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.4416999999995739e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.4374999999997029e-05, 1.4416999999995739e-05, 1.4429999999995835e-05, 1.4431000000002248e-05, 1.4431000000002248e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4444999999994879e-05, 1.4445000000001817e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4429999999995835e-05, 1.4431000000009186e-05, 1.4458000000008853e-05, 1.4473000000000957e-05, 1.4431000000009186e-05, 1.4444000000002344e-05, 1.4429999999995835e-05, 1.4445000000001817e-05, 1.4457999999994975e-05, 1.4457999999994975e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.557" endtime="20201115 22:03:21.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.552" endtime="20201115 22:03:21.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.562" endtime="20201115 22:03:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.565" endtime="20201115 22:03:21.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.564" endtime="20201115 22:03:21.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.560" endtime="20201115 22:03:21.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.139" endtime="20201115 22:03:21.586"></status>
</kw>
<msg timestamp="20201115 22:03:21.586" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.595" endtime="20201115 22:03:21.651"></status>
</kw>
<msg timestamp="20201115 22:03:21.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.593" endtime="20201115 22:03:21.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.652" endtime="20201115 22:03:21.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.655" endtime="20201115 22:03:21.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.591" endtime="20201115 22:03:21.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.589" endtime="20201115 22:03:21.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.664" endtime="20201115 22:03:21.951"></status>
</kw>
<msg timestamp="20201115 22:03:21.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.662" endtime="20201115 22:03:21.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.955" endtime="20201115 22:03:21.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.963" endtime="20201115 22:03:21.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.659" endtime="20201115 22:03:21.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.658" endtime="20201115 22:03:21.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.969" level="INFO">${RESULT} = [{'time': 0.022632944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.480499999999968e-05, 'source_diff': 1.480499999999968e-05}, {'time': 0.023583889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.966" endtime="20201115 22:03:21.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.982" level="INFO">${OVERHEAD} = {'time': [0.022632944, 0.023583889, 0.024529875, 0.025481431, 0.026425583, 0.027381236, 0.028324097, 0.029277208, 0.030227639, 0.03117925, 0.032136806, 0.033083778, 0.034040111, 0.034988347, 0.0359471...</msg>
<status status="PASS" starttime="20201115 22:03:21.970" endtime="20201115 22:03:21.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.987" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.986" endtime="20201115 22:03:21.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.990" level="INFO">VALUE: [1.480499999999968e-05, 1.4430999999998778e-05, 1.4389000000000068e-05, 1.4430999999998778e-05, 1.4429999999999304e-05, 1.4389000000000068e-05, 1.4443999999998874e-05, 1.4443999999998874e-05, 1.4431000000002248e-05, 1.4402999999999638e-05, 1.4444999999994879e-05, 1.4445000000001817e-05, 1.4443999999995405e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.4431000000002248e-05, 1.4444000000002344e-05, 1.4416000000003204e-05, 1.4444000000002344e-05, 1.4444999999994879e-05, 1.4431000000002248e-05, 1.4500000000000624e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.4486000000001054e-05, 1.4445000000001817e-05, 1.4458000000001914e-05, 1.4527999999999763e-05, 1.4486000000001054e-05, 1.4430000000002774e-05, 1.4472000000001484e-05, 1.4444000000002344e-05, 1.4429999999995835e-05, 1.4458000000001914e-05, 1.4387999999997125e-05, 1.4459000000001387e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4459000000001387e-05, 1.4445000000001817e-05, 1.4375000000003968e-05, 1.4458000000001914e-05, 1.4431000000009186e-05, 1.4374999999997029e-05, 1.4443999999988466e-05, 1.4429999999995835e-05, 1.4457999999994975e-05, 1.4431000000009186e-05, 1.4458000000008853e-05, 1.4458000000008853e-05]</msg>
<status status="PASS" starttime="20201115 22:03:21.988" endtime="20201115 22:03:21.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.984" endtime="20201115 22:03:21.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.993" endtime="20201115 22:03:21.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.996" endtime="20201115 22:03:22.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.995" endtime="20201115 22:03:22.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.991" endtime="20201115 22:03:22.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.586" endtime="20201115 22:03:22.017"></status>
</kw>
<msg timestamp="20201115 22:03:22.017" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.026" endtime="20201115 22:03:22.082"></status>
</kw>
<msg timestamp="20201115 22:03:22.082" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.024" endtime="20201115 22:03:22.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.085" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.083" endtime="20201115 22:03:22.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.086" endtime="20201115 22:03:22.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.022" endtime="20201115 22:03:22.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.020" endtime="20201115 22:03:22.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.094" endtime="20201115 22:03:22.395"></status>
</kw>
<msg timestamp="20201115 22:03:22.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.093" endtime="20201115 22:03:22.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.399" endtime="20201115 22:03:22.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.407" endtime="20201115 22:03:22.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.090" endtime="20201115 22:03:22.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.089" endtime="20201115 22:03:22.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.414" level="INFO">${RESULT} = [{'time': 0.022684347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.023624042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.410" endtime="20201115 22:03:22.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.427" level="INFO">${OVERHEAD} = {'time': [0.022684347, 0.023624042, 0.024579639, 0.025522444, 0.026465861, 0.027417403, 0.028372833, 0.029322583, 0.030262694, 0.031208667, 0.032150542, 0.033095875, 0.034039042, 0.034991306, 0.035943...</msg>
<status status="PASS" starttime="20201115 22:03:22.415" endtime="20201115 22:03:22.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.431" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.430" endtime="20201115 22:03:22.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.434" level="INFO">VALUE: [1.4764000000000443e-05, 1.4445000000001817e-05, 1.4430999999998778e-05, 1.4429999999999304e-05, 1.4458000000001914e-05, 1.4416999999999208e-05, 1.4429999999999304e-05, 1.4457999999998444e-05, 1.4429999999999304e-05, 1.4444999999998348e-05, 1.4430999999995309e-05, 1.4443999999995405e-05, 1.4445000000001817e-05, 1.4431000000002248e-05, 1.4416999999995739e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4444999999994879e-05, 1.4444000000002344e-05, 1.4443999999995405e-05, 1.4445000000001817e-05, 1.4430000000002774e-05, 1.4457999999994975e-05, 1.4402999999996169e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4443999999995405e-05, 1.4443999999995405e-05, 1.4486000000001054e-05, 1.4473000000000957e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4415999999996265e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4429999999995835e-05, 1.4444000000002344e-05, 1.4459000000001387e-05, 1.4472000000001484e-05, 1.4430999999995309e-05, 1.4445000000001817e-05, 1.4458000000008853e-05, 1.44169999999888e-05, 1.4430000000009713e-05, 1.4430999999995309e-05, 1.4457999999994975e-05, 1.4445000000001817e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.432" endtime="20201115 22:03:22.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.428" endtime="20201115 22:03:22.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.437" endtime="20201115 22:03:22.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.440" endtime="20201115 22:03:22.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.439" endtime="20201115 22:03:22.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.435" endtime="20201115 22:03:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.018" endtime="20201115 22:03:22.461"></status>
</kw>
<msg timestamp="20201115 22:03:22.461" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.470" endtime="20201115 22:03:22.526"></status>
</kw>
<msg timestamp="20201115 22:03:22.526" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.469" endtime="20201115 22:03:22.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.528" endtime="20201115 22:03:22.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.530" endtime="20201115 22:03:22.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.466" endtime="20201115 22:03:22.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.464" endtime="20201115 22:03:22.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.539" endtime="20201115 22:03:22.826"></status>
</kw>
<msg timestamp="20201115 22:03:22.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.537" endtime="20201115 22:03:22.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.830" endtime="20201115 22:03:22.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.849" endtime="20201115 22:03:22.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.535" endtime="20201115 22:03:22.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.533" endtime="20201115 22:03:22.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.856" level="INFO">${RESULT} = [{'time': 0.022676139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.023632667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:22.852" endtime="20201115 22:03:22.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.870" level="INFO">${OVERHEAD} = {'time': [0.022676139, 0.023632667, 0.024583236, 0.025539153, 0.026482042, 0.027433583, 0.0283755, 0.029322708, 0.030280764, 0.031239167, 0.032186708, 0.033143264, 0.034089875, 0.035035889, 0.03599176...</msg>
<status status="PASS" starttime="20201115 22:03:22.857" endtime="20201115 22:03:22.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.875" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.874" endtime="20201115 22:03:22.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.877" level="INFO">VALUE: [1.4708000000002164e-05, 1.4444999999998348e-05, 1.4458000000001914e-05, 1.4444999999998348e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.4389000000000068e-05, 1.4457999999998444e-05, 1.4431000000002248e-05, 1.4431000000002248e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4430999999995309e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4431000000002248e-05, 1.4431000000002248e-05, 1.4458000000001914e-05, 1.4430999999995309e-05, 1.4431000000002248e-05, 1.4389000000003538e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4457999999994975e-05, 1.4444000000002344e-05, 1.4431000000002248e-05, 1.4444000000002344e-05, 1.4416000000003204e-05, 1.4443999999995405e-05, 1.4444999999994879e-05, 1.4443999999995405e-05, 1.4444999999994879e-05, 1.4457999999994975e-05, 1.4459000000001387e-05, 1.4417000000002678e-05, 1.4500000000000624e-05, 1.4431000000002248e-05, 1.4416000000003204e-05, 1.4444000000002344e-05, 1.4430000000002774e-05, 1.4431000000002248e-05, 1.4445000000001817e-05, 1.4457999999994975e-05, 1.4458999999994449e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4458999999994449e-05, 1.4485999999994115e-05, 1.4444000000002344e-05]</msg>
<status status="PASS" starttime="20201115 22:03:22.876" endtime="20201115 22:03:22.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.871" endtime="20201115 22:03:22.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.880" endtime="20201115 22:03:22.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.884" endtime="20201115 22:03:22.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.882" endtime="20201115 22:03:22.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.879" endtime="20201115 22:03:22.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.462" endtime="20201115 22:03:22.905"></status>
</kw>
<msg timestamp="20201115 22:03:22.905" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.914" endtime="20201115 22:03:22.969"></status>
</kw>
<msg timestamp="20201115 22:03:22.970" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.912" endtime="20201115 22:03:22.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.971" endtime="20201115 22:03:22.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.973" endtime="20201115 22:03:22.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.909" endtime="20201115 22:03:22.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.907" endtime="20201115 22:03:22.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.982" endtime="20201115 22:03:23.285"></status>
</kw>
<msg timestamp="20201115 22:03:23.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.981" endtime="20201115 22:03:23.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.290" endtime="20201115 22:03:23.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.298" endtime="20201115 22:03:23.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.978" endtime="20201115 22:03:23.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.976" endtime="20201115 22:03:23.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.305" level="INFO">${RESULT} = [{'time': 0.022642208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.023600653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.301" endtime="20201115 22:03:23.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.318" level="INFO">${OVERHEAD} = {'time': [0.022642208, 0.023600653, 0.024550667, 0.025494694, 0.026436889, 0.027386333, 0.028336333, 0.029287542, 0.030242542, 0.031191944, 0.032131972, 0.033078153, 0.034022458, 0.034978931, 0.035934...</msg>
<status status="PASS" starttime="20201115 22:03:23.306" endtime="20201115 22:03:23.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.322" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.321" endtime="20201115 22:03:23.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.325" level="INFO">VALUE: [1.4750000000000874e-05, 1.4444999999998348e-05, 1.4445000000001817e-05, 1.4443999999998874e-05, 1.4431000000002248e-05, 1.4457999999998444e-05, 1.4471999999998014e-05, 1.4416999999999208e-05, 1.4445000000001817e-05, 1.4443999999998874e-05, 1.4430000000002774e-05, 1.4431000000002248e-05, 1.4429999999995835e-05, 1.4430999999995309e-05, 1.4416000000003204e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.4514000000000193e-05, 1.4444000000002344e-05, 1.4444000000002344e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4459000000001387e-05, 1.4444999999994879e-05, 1.4499999999993685e-05, 1.4431000000002248e-05, 1.4500000000000624e-05, 1.4430000000002774e-05, 1.4472000000001484e-05, 1.4471999999994545e-05, 1.4416999999995739e-05, 1.4443999999995405e-05, 1.4445000000001817e-05, 1.4485999999994115e-05, 1.4402999999996169e-05, 1.4514000000000193e-05, 1.4458000000001914e-05, 1.4429999999995835e-05, 1.4457999999994975e-05, 1.4459000000001387e-05, 1.4443999999995405e-05, 1.4430000000002774e-05, 1.4459000000001387e-05, 1.4500000000000624e-05, 1.4445000000001817e-05, 1.4513999999993255e-05, 1.4458999999994449e-05, 1.4430999999995309e-05, 1.4429999999995835e-05, 1.4513999999993255e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.323" endtime="20201115 22:03:23.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.319" endtime="20201115 22:03:23.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.328" endtime="20201115 22:03:23.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.331" endtime="20201115 22:03:23.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.330" endtime="20201115 22:03:23.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.326" endtime="20201115 22:03:23.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.905" endtime="20201115 22:03:23.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.137" endtime="20201115 22:03:23.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.137" endtime="20201115 22:03:23.352"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.354" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.363" endtime="20201115 22:03:23.422"></status>
</kw>
<msg timestamp="20201115 22:03:23.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.361" endtime="20201115 22:03:23.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.423" endtime="20201115 22:03:23.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.426" endtime="20201115 22:03:23.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.359" endtime="20201115 22:03:23.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.357" endtime="20201115 22:03:23.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.435" endtime="20201115 22:03:23.720"></status>
</kw>
<msg timestamp="20201115 22:03:23.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.434" endtime="20201115 22:03:23.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024902306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.724" endtime="20201115 22:03:23.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.732" endtime="20201115 22:03:23.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.431" endtime="20201115 22:03:23.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.430" endtime="20201115 22:03:23.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.739" level="INFO">${RESULT} = [{'time': 0.024917556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5250000000001374e-05, 'source_diff': 1.5250000000001374e-05}, {'time': 0.025932111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:23.736" endtime="20201115 22:03:23.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.752" level="INFO">${OVERHEAD} = {'time': [0.024917556, 0.025932111, 0.026937611, 0.027942861, 0.028950264, 0.029962681, 0.030980403, 0.031997833, 0.033005583, 0.034014264, 0.035026667, 0.03604, 0.037050264, 0.038052375, 0.0390645, 0...</msg>
<status status="PASS" starttime="20201115 22:03:23.740" endtime="20201115 22:03:23.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.757" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.756" endtime="20201115 22:03:23.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.759" level="INFO">VALUE: [1.5250000000001374e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.4917000000003178e-05, 1.502700000000079e-05, 1.50689999999995e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5084000000005482e-05, 1.4959000000001887e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4985999999994615e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.4929999999996335e-05, 1.5014000000007632e-05, 1.4999999999987246e-05, 1.504099999999342e-05, 1.5000000000001124e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.5013999999993755e-05, 1.5013999999993755e-05, 1.5000000000001124e-05, 1.5013999999993755e-05]</msg>
<status status="PASS" starttime="20201115 22:03:23.758" endtime="20201115 22:03:23.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.753" endtime="20201115 22:03:23.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.762" endtime="20201115 22:03:23.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.765" endtime="20201115 22:03:23.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.764" endtime="20201115 22:03:23.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.760" endtime="20201115 22:03:23.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.355" endtime="20201115 22:03:23.786"></status>
</kw>
<msg timestamp="20201115 22:03:23.786" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.795" endtime="20201115 22:03:23.855"></status>
</kw>
<msg timestamp="20201115 22:03:23.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.794" endtime="20201115 22:03:23.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.862" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.859" endtime="20201115 22:03:23.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.864" endtime="20201115 22:03:23.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.791" endtime="20201115 22:03:23.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.789" endtime="20201115 22:03:23.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.882" endtime="20201115 22:03:24.175"></status>
</kw>
<msg timestamp="20201115 22:03:24.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.879" endtime="20201115 22:03:24.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.179" endtime="20201115 22:03:24.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.187" endtime="20201115 22:03:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.874" endtime="20201115 22:03:24.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.870" endtime="20201115 22:03:24.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.194" level="INFO">${RESULT} = [{'time': 0.022630625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5278000000000513e-05, 'source_diff': 1.5278000000000513e-05}, {'time': 0.023646903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:24.190" endtime="20201115 22:03:24.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.206" level="INFO">${OVERHEAD} = {'time': [0.022630625, 0.023646903, 0.024662792, 0.025678889, 0.026695722, 0.027708486, 0.028726597, 0.029732514, 0.030753056, 0.031773278, 0.032778917, 0.033796694, 0.034800181, 0.035803403, 0.036823...</msg>
<status status="PASS" starttime="20201115 22:03:24.194" endtime="20201115 22:03:24.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.211" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.210" endtime="20201115 22:03:24.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.213" level="INFO">VALUE: [1.5278000000000513e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.504100000000036e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4985999999994615e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.4999999999994185e-05, 1.5000000000001124e-05, 1.4985999999994615e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.50689999999995e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4958000000002414e-05, 1.5000000000001124e-05, 1.4958000000002414e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5013999999993755e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4999999999987246e-05, 1.4945000000002318e-05, 1.5014000000007632e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5041999999992894e-05, 1.4985999999994615e-05, 1.504099999999342e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.212" endtime="20201115 22:03:24.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.207" endtime="20201115 22:03:24.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.216" endtime="20201115 22:03:24.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.220" endtime="20201115 22:03:24.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.218" endtime="20201115 22:03:24.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.215" endtime="20201115 22:03:24.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.787" endtime="20201115 22:03:24.241"></status>
</kw>
<msg timestamp="20201115 22:03:24.241" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.250" endtime="20201115 22:03:24.309"></status>
</kw>
<msg timestamp="20201115 22:03:24.310" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.248" endtime="20201115 22:03:24.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.311" endtime="20201115 22:03:24.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.313" endtime="20201115 22:03:24.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.246" endtime="20201115 22:03:24.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.243" endtime="20201115 22:03:24.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.322" endtime="20201115 22:03:24.608"></status>
</kw>
<msg timestamp="20201115 22:03:24.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023308236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.321" endtime="20201115 22:03:24.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023292903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023308236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.612" endtime="20201115 22:03:24.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.620" endtime="20201115 22:03:24.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.318" endtime="20201115 22:03:24.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.316" endtime="20201115 22:03:24.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.626" level="INFO">${RESULT} = [{'time': 0.023308236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.533299999999932e-05, 'source_diff': 1.533299999999932e-05}, {'time': 0.024314806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.623" endtime="20201115 22:03:24.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.641" level="INFO">${OVERHEAD} = {'time': [0.023308236, 0.024314806, 0.025327278, 0.026346194, 0.027364194, 0.028365986, 0.029379347, 0.030384056, 0.031395583, 0.032398319, 0.033412625, 0.034419125, 0.035431514, 0.036433681, 0.037439...</msg>
<status status="PASS" starttime="20201115 22:03:24.627" endtime="20201115 22:03:24.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.645" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.644" endtime="20201115 22:03:24.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.648" level="INFO">VALUE: [1.533299999999932e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.501300000000122e-05, 1.4999999999997654e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4985999999994615e-05, 1.5000000000001124e-05, 1.4999999999994185e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4929999999996335e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.4985999999994615e-05, 1.5000000000001124e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.4985999999994615e-05, 1.5013999999993755e-05, 1.5014000000007632e-05, 1.5000000000001124e-05, 1.4972000000001984e-05, 1.4986000000008493e-05, 1.4985999999994615e-05, 1.4985999999994615e-05, 1.4987000000007966e-05, 1.5013999999993755e-05, 1.502700000000079e-05]</msg>
<status status="PASS" starttime="20201115 22:03:24.646" endtime="20201115 22:03:24.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.642" endtime="20201115 22:03:24.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.651" endtime="20201115 22:03:24.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.655" endtime="20201115 22:03:24.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.653" endtime="20201115 22:03:24.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.649" endtime="20201115 22:03:24.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.241" endtime="20201115 22:03:24.675"></status>
</kw>
<msg timestamp="20201115 22:03:24.675" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.684" endtime="20201115 22:03:24.743"></status>
</kw>
<msg timestamp="20201115 22:03:24.744" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.683" endtime="20201115 22:03:24.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.745" endtime="20201115 22:03:24.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.747" endtime="20201115 22:03:24.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.680" endtime="20201115 22:03:24.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.678" endtime="20201115 22:03:24.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.756" endtime="20201115 22:03:25.042"></status>
</kw>
<msg timestamp="20201115 22:03:25.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.755" endtime="20201115 22:03:25.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.046" endtime="20201115 22:03:25.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.054" endtime="20201115 22:03:25.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.752" endtime="20201115 22:03:25.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.750" endtime="20201115 22:03:25.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.061" level="INFO">${RESULT} = [{'time': 0.022674069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.533300000000279e-05, 'source_diff': 1.533300000000279e-05}, {'time': 0.02368475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:25.057" endtime="20201115 22:03:25.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.074" level="INFO">${OVERHEAD} = {'time': [0.022674069, 0.02368475, 0.024702264, 0.025705556, 0.026709736, 0.027715736, 0.028726694, 0.02974675, 0.030753083, 0.031761931, 0.032781306, 0.033798181, 0.034808556, 0.035812667, 0.03682077...</msg>
<status status="PASS" starttime="20201115 22:03:25.062" endtime="20201115 22:03:25.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.078" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.077" endtime="20201115 22:03:25.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.080" level="INFO">VALUE: [1.533300000000279e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.4987000000001027e-05, 1.5000000000001124e-05, 1.5027999999993324e-05, 1.4999999999994185e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5000000000001124e-05, 1.4985999999994615e-05, 1.5000000000001124e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.502699999999385e-05, 1.5014000000000693e-05, 1.4987000000001027e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5042000000006772e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.5070000000005912e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.4986999999994088e-05, 1.5012999999994281e-05, 1.4986000000008493e-05, 1.4985999999994615e-05, 1.5028000000000263e-05, 1.4986999999994088e-05, 1.5013000000008159e-05, 1.4958999999994949e-05, 1.4972000000001984e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.079" endtime="20201115 22:03:25.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.074" endtime="20201115 22:03:25.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.084" endtime="20201115 22:03:25.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.087" endtime="20201115 22:03:25.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.086" endtime="20201115 22:03:25.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.082" endtime="20201115 22:03:25.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.676" endtime="20201115 22:03:25.108"></status>
</kw>
<msg timestamp="20201115 22:03:25.108" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.117" endtime="20201115 22:03:25.176"></status>
</kw>
<msg timestamp="20201115 22:03:25.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.116" endtime="20201115 22:03:25.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.179" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.178" endtime="20201115 22:03:25.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.180" endtime="20201115 22:03:25.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.113" endtime="20201115 22:03:25.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.111" endtime="20201115 22:03:25.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.189" endtime="20201115 22:03:25.490"></status>
</kw>
<msg timestamp="20201115 22:03:25.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.187" endtime="20201115 22:03:25.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.494" endtime="20201115 22:03:25.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.502" endtime="20201115 22:03:25.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.185" endtime="20201115 22:03:25.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.183" endtime="20201115 22:03:25.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.509" level="INFO">${RESULT} = [{'time': 0.022739306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5264000000000943e-05, 'source_diff': 1.5264000000000943e-05}, {'time': 0.023752528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:25.506" endtime="20201115 22:03:25.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.522" level="INFO">${OVERHEAD} = {'time': [0.022739306, 0.023752528, 0.024771611, 0.025776653, 0.026782014, 0.027798472, 0.028817111, 0.029820847, 0.030824292, 0.031835153, 0.032847319, 0.033850069, 0.034869972, 0.035873722, 0.036891...</msg>
<status status="PASS" starttime="20201115 22:03:25.510" endtime="20201115 22:03:25.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.526" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.525" endtime="20201115 22:03:25.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.529" level="INFO">VALUE: [1.5264000000000943e-05, 1.5013999999997224e-05, 1.50689999999995e-05, 1.4986000000001554e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4958000000002414e-05, 1.5028000000000263e-05, 1.4985999999994615e-05, 1.502700000000079e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.4999999999994185e-05, 1.5014000000000693e-05, 1.5083000000006008e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.5012999999994281e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4999999999994185e-05, 1.5000000000001124e-05, 1.4986000000001554e-05, 1.4985999999994615e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.4985999999994615e-05, 1.4999999999994185e-05, 1.5014000000000693e-05, 1.5042000000006772e-05, 1.4973000000001457e-05, 1.5027999999993324e-05, 1.4943999999995905e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5013999999993755e-05, 1.5013999999993755e-05, 1.5000000000001124e-05, 1.5042000000006772e-05, 1.4958000000009353e-05, 1.4985999999994615e-05, 1.5000000000001124e-05, 1.4958999999994949e-05, 1.5000000000001124e-05, 1.4986000000008493e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.528" endtime="20201115 22:03:25.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.523" endtime="20201115 22:03:25.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.532" endtime="20201115 22:03:25.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.536" endtime="20201115 22:03:25.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.534" endtime="20201115 22:03:25.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.531" endtime="20201115 22:03:25.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.109" endtime="20201115 22:03:25.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.353" endtime="20201115 22:03:25.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.353" endtime="20201115 22:03:25.557"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.559" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.568" endtime="20201115 22:03:25.630"></status>
</kw>
<msg timestamp="20201115 22:03:25.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.566" endtime="20201115 22:03:25.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.633" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.631" endtime="20201115 22:03:25.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.634" endtime="20201115 22:03:25.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.564" endtime="20201115 22:03:25.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.562" endtime="20201115 22:03:25.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.643" endtime="20201115 22:03:25.929"></status>
</kw>
<msg timestamp="20201115 22:03:25.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.641" endtime="20201115 22:03:25.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.933" endtime="20201115 22:03:25.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.941" endtime="20201115 22:03:25.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.639" endtime="20201115 22:03:25.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.637" endtime="20201115 22:03:25.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.948" level="INFO">${RESULT} = [{'time': 0.025073014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5806000000000153e-05, 'source_diff': 1.5806000000000153e-05}, {'time': 0.026157833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:25.944" endtime="20201115 22:03:25.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.961" level="INFO">${OVERHEAD} = {'time': [0.025073014, 0.026157833, 0.027224597, 0.028300042, 0.029381111, 0.030462583, 0.031535264, 0.032610167, 0.033684, 0.034764764, 0.035848597, 0.03692125, 0.038002333, 0.039069069, 0.040147347,...</msg>
<status status="PASS" starttime="20201115 22:03:25.949" endtime="20201115 22:03:25.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.965" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.964" endtime="20201115 22:03:25.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.968" level="INFO">VALUE: [1.5806000000000153e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.5542000000000333e-05, 1.562500000000175e-05, 1.5514000000001194e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.5542000000000333e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.554099999999392e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.5528000000000763e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.558299999999957e-05, 1.5569e-05, 1.5542000000000333e-05, 1.554100000000086e-05, 1.5569999999992534e-05, 1.5570000000006412e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.556899999999306e-05, 1.5570000000006412e-05, 1.5555999999999903e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.5542000000007272e-05, 1.556899999999306e-05, 1.5598000000005552e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.556899999999306e-05]</msg>
<status status="PASS" starttime="20201115 22:03:25.966" endtime="20201115 22:03:25.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.962" endtime="20201115 22:03:25.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.971" endtime="20201115 22:03:25.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.975" endtime="20201115 22:03:25.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.973" endtime="20201115 22:03:25.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.970" endtime="20201115 22:03:25.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.560" endtime="20201115 22:03:25.995"></status>
</kw>
<msg timestamp="20201115 22:03:25.996" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.004" endtime="20201115 22:03:26.067"></status>
</kw>
<msg timestamp="20201115 22:03:26.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.003" endtime="20201115 22:03:26.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.068" endtime="20201115 22:03:26.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.071" endtime="20201115 22:03:26.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.000" endtime="20201115 22:03:26.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.998" endtime="20201115 22:03:26.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.079" endtime="20201115 22:03:26.377"></status>
</kw>
<msg timestamp="20201115 22:03:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.078" endtime="20201115 22:03:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.381" endtime="20201115 22:03:26.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.389" endtime="20201115 22:03:26.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.075" endtime="20201115 22:03:26.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.074" endtime="20201115 22:03:26.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.395" level="INFO">${RESULT} = [{'time': 0.022833236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.590300000000114e-05, 'source_diff': 1.590300000000114e-05}, {'time': 0.023902653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.392" endtime="20201115 22:03:26.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.410" level="INFO">${OVERHEAD} = {'time': [0.022833236, 0.023902653, 0.024974903, 0.026059792, 0.027126042, 0.028199681, 0.029269, 0.030334847, 0.031416972, 0.032490694, 0.033559764, 0.034633833, 0.035713736, 0.036795236, 0.037869208...</msg>
<status status="PASS" starttime="20201115 22:03:26.396" endtime="20201115 22:03:26.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.419" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.418" endtime="20201115 22:03:26.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.422" level="INFO">VALUE: [1.590300000000114e-05, 1.5569999999999473e-05, 1.563900000000132e-05, 1.5583999999999043e-05, 1.5583999999999043e-05, 1.5542000000000333e-05, 1.559699999999914e-05, 1.555500000000043e-05, 1.5569e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5514000000001194e-05, 1.5542000000000333e-05, 1.5569e-05, 1.558299999999957e-05, 1.5583999999999043e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5569e-05, 1.558299999999957e-05, 1.5555999999999903e-05, 1.5569e-05, 1.5499999999994685e-05, 1.5569e-05, 1.5583999999999043e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5570000000006412e-05, 1.559699999999914e-05, 1.5583999999999043e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.556899999999306e-05, 1.556899999999306e-05, 1.5569999999992534e-05, 1.556900000000694e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.556899999999306e-05, 1.555500000000043e-05, 1.558299999999957e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.420" endtime="20201115 22:03:26.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.416" endtime="20201115 22:03:26.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.425" endtime="20201115 22:03:26.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.428" endtime="20201115 22:03:26.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.427" endtime="20201115 22:03:26.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.423" endtime="20201115 22:03:26.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.996" endtime="20201115 22:03:26.449"></status>
</kw>
<msg timestamp="20201115 22:03:26.449" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.458" endtime="20201115 22:03:26.520"></status>
</kw>
<msg timestamp="20201115 22:03:26.521" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.456" endtime="20201115 22:03:26.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.523" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.522" endtime="20201115 22:03:26.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.524" endtime="20201115 22:03:26.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.454" endtime="20201115 22:03:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.452" endtime="20201115 22:03:26.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.533" endtime="20201115 22:03:26.819"></status>
</kw>
<msg timestamp="20201115 22:03:26.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.531" endtime="20201115 22:03:26.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.823" endtime="20201115 22:03:26.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.831" endtime="20201115 22:03:26.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.529" endtime="20201115 22:03:26.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.527" endtime="20201115 22:03:26.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.838" level="INFO">${RESULT} = [{'time': 0.022726611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.588900000000157e-05, 'source_diff': 1.588900000000157e-05}, {'time': 0.023806569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.834" endtime="20201115 22:03:26.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.851" level="INFO">${OVERHEAD} = {'time': [0.022726611, 0.023806569, 0.024876847, 0.025945583, 0.027028333, 0.028098667, 0.029164347, 0.030229986, 0.031306528, 0.032374583, 0.033454764, 0.034526625, 0.03560725, 0.036680125, 0.0377463...</msg>
<status status="PASS" starttime="20201115 22:03:26.839" endtime="20201115 22:03:26.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.856" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.855" endtime="20201115 22:03:26.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.858" level="INFO">VALUE: [1.588900000000157e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.5569e-05, 1.5514000000001194e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569e-05, 1.5583999999999043e-05, 1.555500000000043e-05, 1.5569999999999473e-05, 1.5569e-05, 1.558299999999957e-05, 1.562499999999828e-05, 1.5569e-05, 1.558299999999957e-05, 1.562499999999828e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5569e-05, 1.555500000000043e-05, 1.5500000000001624e-05, 1.5583999999999043e-05, 1.555500000000043e-05, 1.5528000000000763e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5570000000006412e-05, 1.5584000000005982e-05, 1.5569999999999473e-05, 1.5583999999999043e-05, 1.5569e-05, 1.555500000000043e-05, 1.558299999999957e-05, 1.5570000000006412e-05, 1.55969999999922e-05, 1.556899999999306e-05, 1.5555999999999903e-05, 1.5569999999992534e-05, 1.556899999999306e-05, 1.556900000000694e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.5598000000005552e-05]</msg>
<status status="PASS" starttime="20201115 22:03:26.857" endtime="20201115 22:03:26.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.852" endtime="20201115 22:03:26.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.861" endtime="20201115 22:03:26.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.864" endtime="20201115 22:03:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.863" endtime="20201115 22:03:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.859" endtime="20201115 22:03:26.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.450" endtime="20201115 22:03:26.885"></status>
</kw>
<msg timestamp="20201115 22:03:26.885" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.894" endtime="20201115 22:03:26.956"></status>
</kw>
<msg timestamp="20201115 22:03:26.957" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.893" endtime="20201115 22:03:26.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.958" endtime="20201115 22:03:26.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.960" endtime="20201115 22:03:26.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.890" endtime="20201115 22:03:26.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.888" endtime="20201115 22:03:26.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.971" endtime="20201115 22:03:27.273"></status>
</kw>
<msg timestamp="20201115 22:03:27.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.968" endtime="20201115 22:03:27.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.277" endtime="20201115 22:03:27.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.285" endtime="20201115 22:03:27.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.965" endtime="20201115 22:03:27.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.963" endtime="20201115 22:03:27.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.292" level="INFO">${RESULT} = [{'time': 0.022811278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.588900000000157e-05, 'source_diff': 1.588900000000157e-05}, {'time': 0.023882472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.289" endtime="20201115 22:03:27.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.306" level="INFO">${OVERHEAD} = {'time': [0.022811278, 0.023882472, 0.024954917, 0.026033528, 0.027104667, 0.028177986, 0.029262889, 0.030336778, 0.031417236, 0.032497069, 0.033570333, 0.034635917, 0.035715472, 0.036787292, 0.037853...</msg>
<status status="PASS" starttime="20201115 22:03:27.293" endtime="20201115 22:03:27.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.310" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.309" endtime="20201115 22:03:27.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.313" level="INFO">VALUE: [1.588900000000157e-05, 1.554099999999739e-05, 1.5569999999999473e-05, 1.5542000000000333e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5528000000000763e-05, 1.5569999999999473e-05, 1.558299999999957e-05, 1.5569e-05, 1.5569e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569999999999473e-05, 1.555500000000043e-05, 1.5513999999994255e-05, 1.5569e-05, 1.555500000000043e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5500000000001624e-05, 1.561099999999871e-05, 1.5569999999999473e-05, 1.5569e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.5583999999999043e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.556900000000694e-05, 1.55410000000078e-05, 1.556900000000694e-05, 1.554099999999392e-05, 1.558400000001292e-05, 1.556900000000694e-05, 1.5570000000006412e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5583999999999043e-05, 1.561099999999871e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.312" endtime="20201115 22:03:27.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.307" endtime="20201115 22:03:27.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.316" endtime="20201115 22:03:27.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.319" endtime="20201115 22:03:27.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.318" endtime="20201115 22:03:27.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.314" endtime="20201115 22:03:27.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.886" endtime="20201115 22:03:27.340"></status>
</kw>
<msg timestamp="20201115 22:03:27.340" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.349" endtime="20201115 22:03:27.411"></status>
</kw>
<msg timestamp="20201115 22:03:27.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.348" endtime="20201115 22:03:27.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.414" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.413" endtime="20201115 22:03:27.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.415" endtime="20201115 22:03:27.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.345" endtime="20201115 22:03:27.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.343" endtime="20201115 22:03:27.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.424" endtime="20201115 22:03:27.710"></status>
</kw>
<msg timestamp="20201115 22:03:27.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.423" endtime="20201115 22:03:27.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.714" endtime="20201115 22:03:27.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.723" endtime="20201115 22:03:27.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.420" endtime="20201115 22:03:27.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.419" endtime="20201115 22:03:27.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.729" level="INFO">${RESULT} = [{'time': 0.022877958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.588900000000157e-05, 'source_diff': 1.588900000000157e-05}, {'time': 0.023944153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.726" endtime="20201115 22:03:27.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.742" level="INFO">${OVERHEAD} = {'time': [0.022877958, 0.023944153, 0.025010944, 0.026083333, 0.027166292, 0.028249542, 0.029316056, 0.030391639, 0.031465417, 0.032535403, 0.033609083, 0.034674903, 0.035743153, 0.036823667, 0.037901...</msg>
<status status="PASS" starttime="20201115 22:03:27.730" endtime="20201115 22:03:27.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.747" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.746" endtime="20201115 22:03:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.749" level="INFO">VALUE: [1.588900000000157e-05, 1.5583999999999043e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.5570000000002943e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5570000000002943e-05, 1.5583999999999043e-05, 1.5583999999999043e-05, 1.5569e-05, 1.561099999999871e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5569999999999473e-05, 1.5555999999999903e-05, 1.5583999999999043e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.5597999999998613e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569e-05, 1.558299999999957e-05, 1.5569e-05, 1.5584000000005982e-05, 1.5569e-05, 1.5499999999994685e-05, 1.5555999999999903e-05, 1.5611999999998183e-05, 1.5569e-05, 1.558299999999957e-05, 1.5653000000004358e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.5514000000008132e-05, 1.556900000000694e-05, 1.5514000000008132e-05, 1.556900000000694e-05, 1.5541999999993394e-05, 1.5569999999992534e-05, 1.563899999999785e-05, 1.556899999999306e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.5583999999999043e-05, 1.5528000000000763e-05]</msg>
<status status="PASS" starttime="20201115 22:03:27.748" endtime="20201115 22:03:27.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.743" endtime="20201115 22:03:27.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.752" endtime="20201115 22:03:27.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.756" endtime="20201115 22:03:27.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.754" endtime="20201115 22:03:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.751" endtime="20201115 22:03:27.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.341" endtime="20201115 22:03:27.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.558" endtime="20201115 22:03:27.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.557" endtime="20201115 22:03:27.777"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.779" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.788" endtime="20201115 22:03:27.853"></status>
</kw>
<msg timestamp="20201115 22:03:27.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.786" endtime="20201115 22:03:27.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.855" endtime="20201115 22:03:27.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.857" endtime="20201115 22:03:27.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.784" endtime="20201115 22:03:27.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.782" endtime="20201115 22:03:27.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.867" endtime="20201115 22:03:28.152"></status>
</kw>
<msg timestamp="20201115 22:03:28.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025269514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.865" endtime="20201115 22:03:28.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025269514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.156" endtime="20201115 22:03:28.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.164" endtime="20201115 22:03:28.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.863" endtime="20201115 22:03:28.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.861" endtime="20201115 22:03:28.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.171" level="INFO">${RESULT} = [{'time': 0.025269514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.026410833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:28.167" endtime="20201115 22:03:28.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.185" level="INFO">${OVERHEAD} = {'time': [0.025269514, 0.026410833, 0.027552319, 0.028687056, 0.029833528, 0.030978097, 0.032118764, 0.03325375, 0.034401181, 0.035545194, 0.036692958, 0.037831972, 0.038982236, 0.040131542, 0.0412814...</msg>
<status status="PASS" starttime="20201115 22:03:28.172" endtime="20201115 22:03:28.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.190" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.189" endtime="20201115 22:03:28.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.192" level="INFO">VALUE: [1.6445000000000348e-05, 1.6152000000001915e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.6125000000005718e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6111000000006148e-05, 1.616699999999749e-05, 1.6151999999998445e-05, 1.6193999999997155e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6139000000005288e-05, 1.6139000000005288e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6138000000005814e-05, 1.6153000000004858e-05, 1.6125000000005718e-05, 1.612499999999184e-05, 1.611099999999921e-05, 1.6111999999998683e-05, 1.615299999999098e-05, 1.6137999999998875e-05, 1.6125000000005718e-05, 1.612499999999184e-05, 1.6098000000006052e-05, 1.6125000000005718e-05, 1.612499999999184e-05, 1.616699999999749e-05, 1.6167000000011367e-05, 1.6208000000003664e-05, 1.6137999999998875e-05, 1.6153000000004858e-05, 1.6083999999999543e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.191" endtime="20201115 22:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.186" endtime="20201115 22:03:28.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.195" endtime="20201115 22:03:28.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.198" endtime="20201115 22:03:28.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.197" endtime="20201115 22:03:28.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.193" endtime="20201115 22:03:28.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.780" endtime="20201115 22:03:28.219"></status>
</kw>
<msg timestamp="20201115 22:03:28.219" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.228" endtime="20201115 22:03:28.294"></status>
</kw>
<msg timestamp="20201115 22:03:28.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.226" endtime="20201115 22:03:28.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.295" endtime="20201115 22:03:28.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.298" endtime="20201115 22:03:28.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.224" endtime="20201115 22:03:28.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.222" endtime="20201115 22:03:28.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.307" endtime="20201115 22:03:28.607"></status>
</kw>
<msg timestamp="20201115 22:03:28.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.305" endtime="20201115 22:03:28.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.611" endtime="20201115 22:03:28.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.619" endtime="20201115 22:03:28.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.303" endtime="20201115 22:03:28.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.301" endtime="20201115 22:03:28.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.625" level="INFO">${RESULT} = [{'time': 0.022798875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6444000000000875e-05, 'source_diff': 1.6444000000000875e-05}, {'time': 0.023949958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:28.622" endtime="20201115 22:03:28.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.638" level="INFO">${OVERHEAD} = {'time': [0.022798875, 0.023949958, 0.025099597, 0.026238111, 0.027385139, 0.028524194, 0.029659972, 0.030796375, 0.031936958, 0.033087625, 0.034231028, 0.035375111, 0.036518917, 0.037652736, 0.038800...</msg>
<status status="PASS" starttime="20201115 22:03:28.626" endtime="20201115 22:03:28.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.643" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.642" endtime="20201115 22:03:28.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.645" level="INFO">VALUE: [1.6444000000000875e-05, 1.612499999999878e-05, 1.609699999999964e-05, 1.613900000000182e-05, 1.615299999999792e-05, 1.6137999999998875e-05, 1.6165999999998015e-05, 1.6194000000000625e-05, 1.611099999999921e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.6056000000000403e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6151999999998445e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999184e-05, 1.612499999999184e-05, 1.612499999999184e-05, 1.612499999999184e-05, 1.6153000000004858e-05, 1.6125000000005718e-05, 1.612499999999184e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.6152000000005384e-05, 1.6139000000012227e-05, 1.6179999999990646e-05]</msg>
<status status="PASS" starttime="20201115 22:03:28.644" endtime="20201115 22:03:28.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.639" endtime="20201115 22:03:28.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.648" endtime="20201115 22:03:28.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.652" endtime="20201115 22:03:28.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.650" endtime="20201115 22:03:28.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.647" endtime="20201115 22:03:28.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.220" endtime="20201115 22:03:28.672"></status>
</kw>
<msg timestamp="20201115 22:03:28.673" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.681" endtime="20201115 22:03:28.747"></status>
</kw>
<msg timestamp="20201115 22:03:28.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.680" endtime="20201115 22:03:28.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.749" endtime="20201115 22:03:28.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.751" endtime="20201115 22:03:28.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.677" endtime="20201115 22:03:28.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.675" endtime="20201115 22:03:28.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.760" endtime="20201115 22:03:29.047"></status>
</kw>
<msg timestamp="20201115 22:03:29.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.759" endtime="20201115 22:03:29.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.051" endtime="20201115 22:03:29.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.059" endtime="20201115 22:03:29.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.756" endtime="20201115 22:03:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.755" endtime="20201115 22:03:29.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.066" level="INFO">${RESULT} = [{'time': 0.023332417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.024481458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:29.063" endtime="20201115 22:03:29.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.079" level="INFO">${OVERHEAD} = {'time': [0.023332417, 0.024481458, 0.025627333, 0.026762417, 0.027907389, 0.029052042, 0.030199542, 0.031349972, 0.032492806, 0.033627833, 0.034776958, 0.035911083, 0.037046181, 0.038185333, 0.039317...</msg>
<status status="PASS" starttime="20201115 22:03:29.067" endtime="20201115 22:03:29.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.084" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.083" endtime="20201115 22:03:29.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.086" level="INFO">VALUE: [1.6445000000000348e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6056000000000403e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6111000000006148e-05, 1.6151999999998445e-05, 1.6139000000005288e-05, 1.6097999999999113e-05, 1.611099999999921e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6083999999999543e-05, 1.612499999999878e-05, 1.608300000000007e-05, 1.6137999999998875e-05, 1.613899999999835e-05, 1.611099999999921e-05, 1.6137999999998875e-05, 1.6111000000006148e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.6165999999998015e-05, 1.612499999999878e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.609699999999964e-05, 1.613899999999835e-05, 1.616699999999749e-05, 1.6137999999998875e-05, 1.613899999999835e-05, 1.6180000000004524e-05, 1.6125000000005718e-05, 1.6139000000012227e-05, 1.6153000000004858e-05, 1.6166000000011893e-05, 1.6167000000011367e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.612499999999184e-05, 1.611200000001256e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.6153000000004858e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.085" endtime="20201115 22:03:29.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.080" endtime="20201115 22:03:29.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.089" endtime="20201115 22:03:29.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.093" endtime="20201115 22:03:29.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.091" endtime="20201115 22:03:29.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.087" endtime="20201115 22:03:29.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.673" endtime="20201115 22:03:29.113"></status>
</kw>
<msg timestamp="20201115 22:03:29.113" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.123" endtime="20201115 22:03:29.188"></status>
</kw>
<msg timestamp="20201115 22:03:29.189" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.121" endtime="20201115 22:03:29.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.191" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.190" endtime="20201115 22:03:29.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.192" endtime="20201115 22:03:29.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.119" endtime="20201115 22:03:29.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.116" endtime="20201115 22:03:29.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.201" endtime="20201115 22:03:29.498"></status>
</kw>
<msg timestamp="20201115 22:03:29.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.199" endtime="20201115 22:03:29.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.502" endtime="20201115 22:03:29.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.510" endtime="20201115 22:03:29.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.197" endtime="20201115 22:03:29.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.195" endtime="20201115 22:03:29.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.517" level="INFO">${RESULT} = [{'time': 0.023267028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.024404264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:29.513" endtime="20201115 22:03:29.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.530" level="INFO">${OVERHEAD} = {'time': [0.023267028, 0.024404264, 0.025552708, 0.026692736, 0.027827847, 0.028973819, 0.030114806, 0.031261403, 0.032401361, 0.033541333, 0.034686861, 0.035831181, 0.036969264, 0.038116722, 0.039251...</msg>
<status status="PASS" starttime="20201115 22:03:29.518" endtime="20201115 22:03:29.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.534" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.533" endtime="20201115 22:03:29.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.537" level="INFO">VALUE: [1.6445000000000348e-05, 1.6055999999996934e-05, 1.613900000000182e-05, 1.612500000000225e-05, 1.612499999999878e-05, 1.6138000000002345e-05, 1.612500000000225e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.616699999999749e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6097000000006578e-05, 1.612499999999878e-05, 1.6056000000000403e-05, 1.6125000000005718e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.6166000000004954e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.6083999999999543e-05, 1.612499999999878e-05, 1.6111999999998683e-05, 1.611099999999921e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.612499999999184e-05, 1.6125000000005718e-05, 1.6165999999998015e-05, 1.6125000000005718e-05, 1.616699999999749e-05, 1.6193999999997155e-05, 1.613899999999835e-05, 1.60969999999927e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.535" endtime="20201115 22:03:29.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.531" endtime="20201115 22:03:29.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.540" endtime="20201115 22:03:29.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.544" endtime="20201115 22:03:29.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.542" endtime="20201115 22:03:29.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.538" endtime="20201115 22:03:29.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.114" endtime="20201115 22:03:29.564"></status>
</kw>
<msg timestamp="20201115 22:03:29.564" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.573" endtime="20201115 22:03:29.639"></status>
</kw>
<msg timestamp="20201115 22:03:29.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.572" endtime="20201115 22:03:29.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:29.640" endtime="20201115 22:03:29.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.643" endtime="20201115 22:03:29.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.569" endtime="20201115 22:03:29.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.567" endtime="20201115 22:03:29.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.652" endtime="20201115 22:03:29.938"></status>
</kw>
<msg timestamp="20201115 22:03:29.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.650" endtime="20201115 22:03:29.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:29.942" endtime="20201115 22:03:29.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.950" endtime="20201115 22:03:29.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.648" endtime="20201115 22:03:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.646" endtime="20201115 22:03:29.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:29.957" level="INFO">${RESULT} = [{'time': 0.022893014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.024041208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:29.954" endtime="20201115 22:03:29.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:29.972" level="INFO">${OVERHEAD} = {'time': [0.022893014, 0.024041208, 0.025179889, 0.026318889, 0.027468431, 0.028601236, 0.029742167, 0.030875236, 0.032019819, 0.033170903, 0.03431275, 0.03545425, 0.036597292, 0.037736903, 0.03888497...</msg>
<status status="PASS" starttime="20201115 22:03:29.958" endtime="20201115 22:03:29.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.976" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:29.975" endtime="20201115 22:03:29.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:29.978" level="INFO">VALUE: [1.6445000000000348e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6097999999999113e-05, 1.609699999999964e-05, 1.6153000000004858e-05, 1.612499999999878e-05, 1.6151999999998445e-05, 1.615299999999792e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.611099999999921e-05, 1.612499999999184e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.612499999999184e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.6137999999998875e-05, 1.6125000000005718e-05, 1.618099999999012e-05, 1.615299999999098e-05, 1.618099999999012e-05, 1.612499999999184e-05, 1.613899999999835e-05]</msg>
<status status="PASS" starttime="20201115 22:03:29.977" endtime="20201115 22:03:29.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.972" endtime="20201115 22:03:29.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:29.982" endtime="20201115 22:03:29.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:29.985" endtime="20201115 22:03:30.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.984" endtime="20201115 22:03:30.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.980" endtime="20201115 22:03:30.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:29.565" endtime="20201115 22:03:30.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.778" endtime="20201115 22:03:30.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.777" endtime="20201115 22:03:30.007"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.009" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.017" endtime="20201115 22:03:30.086"></status>
</kw>
<msg timestamp="20201115 22:03:30.087" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.016" endtime="20201115 22:03:30.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.089" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.088" endtime="20201115 22:03:30.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.090" endtime="20201115 22:03:30.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.013" endtime="20201115 22:03:30.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.011" endtime="20201115 22:03:30.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.101" endtime="20201115 22:03:30.402"></status>
</kw>
<msg timestamp="20201115 22:03:30.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025275194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.098" endtime="20201115 22:03:30.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025275194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.406" endtime="20201115 22:03:30.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.414" endtime="20201115 22:03:30.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.095" endtime="20201115 22:03:30.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.094" endtime="20201115 22:03:30.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.421" level="INFO">${RESULT} = [{'time': 0.025292236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7041999999998364e-05, 'source_diff': 1.7041999999998364e-05}, {'time': 0.026504056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:30.418" endtime="20201115 22:03:30.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.434" level="INFO">${OVERHEAD} = {'time': [0.025292236, 0.026504056, 0.027718028, 0.028927375, 0.030130722, 0.031339639, 0.032550139, 0.033767486, 0.034986931, 0.036188639, 0.037408125, 0.038619806, 0.039824056, 0.041035208, 0.042236...</msg>
<status status="PASS" starttime="20201115 22:03:30.422" endtime="20201115 22:03:30.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.439" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.438" endtime="20201115 22:03:30.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.442" level="INFO">VALUE: [1.7041999999998364e-05, 1.6695000000000598e-05, 1.668099999999756e-05, 1.6694000000001125e-05, 1.6679999999998085e-05, 1.6695000000004068e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.668099999999756e-05, 1.6708000000004164e-05, 1.662499999999928e-05, 1.668099999999756e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.6707999999997225e-05, 1.6735999999996365e-05, 1.666699999999799e-05, 1.662499999999928e-05, 1.666699999999799e-05, 1.659700000000014e-05, 1.6707999999997225e-05, 1.6679999999998085e-05, 1.6693999999997655e-05, 1.6679999999998085e-05, 1.669499999999713e-05, 1.6665999999998515e-05, 1.6694000000004594e-05, 1.668099999999756e-05, 1.6653000000005358e-05, 1.6693999999997655e-05, 1.662499999999928e-05, 1.6749999999995935e-05, 1.668099999999062e-05, 1.6693999999997655e-05, 1.6709000000003638e-05, 1.6709000000003638e-05, 1.6693999999997655e-05, 1.665299999999148e-05, 1.6764000000002444e-05, 1.666699999999799e-05, 1.6679999999991146e-05, 1.6653000000005358e-05, 1.6653000000005358e-05, 1.6721999999996795e-05, 1.666699999999799e-05, 1.669499999999713e-05, 1.6749999999995935e-05, 1.6679999999991146e-05, 1.6681000000004498e-05, 1.6693999999997655e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.440" endtime="20201115 22:03:30.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.435" endtime="20201115 22:03:30.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.445" endtime="20201115 22:03:30.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.448" endtime="20201115 22:03:30.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.447" endtime="20201115 22:03:30.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.443" endtime="20201115 22:03:30.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.009" endtime="20201115 22:03:30.469"></status>
</kw>
<msg timestamp="20201115 22:03:30.469" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.478" endtime="20201115 22:03:30.547"></status>
</kw>
<msg timestamp="20201115 22:03:30.547" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.476" endtime="20201115 22:03:30.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.550" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.548" endtime="20201115 22:03:30.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.551" endtime="20201115 22:03:30.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.474" endtime="20201115 22:03:30.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.472" endtime="20201115 22:03:30.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.560" endtime="20201115 22:03:30.846"></status>
</kw>
<msg timestamp="20201115 22:03:30.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.558" endtime="20201115 22:03:30.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022884458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:30.850" endtime="20201115 22:03:30.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.858" endtime="20201115 22:03:30.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.556" endtime="20201115 22:03:30.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.554" endtime="20201115 22:03:30.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:30.865" level="INFO">${RESULT} = [{'time': 0.022901458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999999654e-05, 'source_diff': 1.6999999999999654e-05}, {'time': 0.024107778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:30.861" endtime="20201115 22:03:30.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:30.878" level="INFO">${OVERHEAD} = {'time': [0.022901458, 0.024107778, 0.025319042, 0.026518958, 0.027737972, 0.028956972, 0.030158861, 0.0313725, 0.032580208, 0.033799444, 0.035007889, 0.036208847, 0.037426625, 0.038630653, 0.03983320...</msg>
<status status="PASS" starttime="20201115 22:03:30.866" endtime="20201115 22:03:30.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.883" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:30.882" endtime="20201115 22:03:30.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:30.885" level="INFO">VALUE: [1.6999999999999654e-05, 1.6709000000000168e-05, 1.6709000000000168e-05, 1.6651999999998945e-05, 1.6679999999998085e-05, 1.6680000000001555e-05, 1.6707999999997225e-05, 1.662499999999928e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.669499999999713e-05, 1.6694000000004594e-05, 1.6693999999997655e-05, 1.668099999999756e-05, 1.6680000000005024e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.6667000000004928e-05, 1.6679999999998085e-05, 1.6651999999998945e-05, 1.6693999999997655e-05, 1.6695000000004068e-05, 1.6694000000004594e-05, 1.6709000000003638e-05, 1.6695000000004068e-05, 1.6763999999995505e-05, 1.668099999999756e-05, 1.6722000000003734e-05, 1.669499999999713e-05, 1.669499999999713e-05, 1.663899999999885e-05, 1.668099999999756e-05, 1.6665999999998515e-05, 1.669499999999713e-05, 1.6708000000004164e-05, 1.6694000000011533e-05, 1.6680000000005024e-05, 1.6709000000003638e-05, 1.661099999999971e-05, 1.6681000000004498e-05, 1.6679999999991146e-05, 1.669499999999713e-05, 1.6708000000004164e-05, 1.6693999999997655e-05, 1.669499999999713e-05, 1.6694000000011533e-05, 1.666699999999799e-05, 1.663899999999885e-05, 1.6708000000004164e-05, 1.668099999999062e-05]</msg>
<status status="PASS" starttime="20201115 22:03:30.884" endtime="20201115 22:03:30.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.879" endtime="20201115 22:03:30.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.888" endtime="20201115 22:03:30.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:30.892" endtime="20201115 22:03:30.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.890" endtime="20201115 22:03:30.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.887" endtime="20201115 22:03:30.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.470" endtime="20201115 22:03:30.915"></status>
</kw>
<msg timestamp="20201115 22:03:30.915" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:30.934" endtime="20201115 22:03:31.005"></status>
</kw>
<msg timestamp="20201115 22:03:31.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:30.930" endtime="20201115 22:03:31.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.008" endtime="20201115 22:03:31.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.013" endtime="20201115 22:03:31.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.925" endtime="20201115 22:03:31.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.921" endtime="20201115 22:03:31.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.032" endtime="20201115 22:03:31.329"></status>
</kw>
<msg timestamp="20201115 22:03:31.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036425153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036442153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.029" endtime="20201115 22:03:31.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036425153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036442153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.333" endtime="20201115 22:03:31.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.341" endtime="20201115 22:03:31.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.024" endtime="20201115 22:03:31.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.020" endtime="20201115 22:03:31.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.348" level="INFO">${RESULT} = [{'time': 0.036442153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999996185e-05, 'source_diff': 1.6999999999996185e-05}, {'time': 0.037650597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:31.344" endtime="20201115 22:03:31.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.361" level="INFO">${OVERHEAD} = {'time': [0.036442153, 0.037650597, 0.038855236, 0.040058264, 0.041265667, 0.042469028, 0.043682986, 0.044885167, 0.046093208, 0.047312472, 0.048530764, 0.049742583, 0.050960653, 0.052175542, 0.053389...</msg>
<status status="PASS" starttime="20201115 22:03:31.349" endtime="20201115 22:03:31.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.365" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.364" endtime="20201115 22:03:31.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.368" level="INFO">VALUE: [1.6999999999996185e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.666699999999799e-05, 1.6693999999997655e-05, 1.672299999999627e-05, 1.6693999999997655e-05, 1.6679999999998085e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.6722000000003734e-05, 1.669499999999713e-05, 1.668099999999756e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.6695000000004068e-05, 1.663899999999885e-05, 1.6681000000004498e-05, 1.665299999999842e-05, 1.668099999999756e-05, 1.6708000000004164e-05, 1.6721999999996795e-05, 1.6681000000004498e-05, 1.6709000000003638e-05, 1.6721999999996795e-05, 1.669499999999713e-05, 1.6679999999991146e-05, 1.6708000000004164e-05, 1.666699999999799e-05, 1.6709000000003638e-05, 1.6693999999997655e-05, 1.666699999999799e-05, 1.6693999999997655e-05, 1.6736000000003304e-05, 1.6667000000011867e-05, 1.6653000000005358e-05, 1.662499999999234e-05, 1.6749999999995935e-05, 1.668099999999062e-05, 1.669499999999713e-05, 1.669499999999713e-05, 1.669499999999713e-05, 1.6695000000011007e-05, 1.6693999999997655e-05, 1.6764000000002444e-05, 1.6693999999997655e-05, 1.6680000000005024e-05, 1.6693999999997655e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.366" endtime="20201115 22:03:31.368"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.362" endtime="20201115 22:03:31.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.371" endtime="20201115 22:03:31.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.375" endtime="20201115 22:03:31.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.373" endtime="20201115 22:03:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.369" endtime="20201115 22:03:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.916" endtime="20201115 22:03:31.396"></status>
</kw>
<msg timestamp="20201115 22:03:31.396" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.405" endtime="20201115 22:03:31.473"></status>
</kw>
<msg timestamp="20201115 22:03:31.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.403" endtime="20201115 22:03:31.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.475" endtime="20201115 22:03:31.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.478" endtime="20201115 22:03:31.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.401" endtime="20201115 22:03:31.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.398" endtime="20201115 22:03:31.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.486" endtime="20201115 22:03:31.774"></status>
</kw>
<msg timestamp="20201115 22:03:31.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023147444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.485" endtime="20201115 22:03:31.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023147444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.778" endtime="20201115 22:03:31.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.790" endtime="20201115 22:03:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.482" endtime="20201115 22:03:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.481" endtime="20201115 22:03:31.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:31.797" level="INFO">${RESULT} = [{'time': 0.023147444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999999654e-05, 'source_diff': 1.6999999999999654e-05}, {'time': 0.024354028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:31.794" endtime="20201115 22:03:31.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:31.812" level="INFO">${OVERHEAD} = {'time': [0.023147444, 0.024354028, 0.025568333, 0.026777361, 0.027994181, 0.029211972, 0.030413569, 0.031622278, 0.032826083, 0.034033181, 0.035245347, 0.036451403, 0.037651944, 0.038855444, 0.040058...</msg>
<status status="PASS" starttime="20201115 22:03:31.798" endtime="20201115 22:03:31.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.816" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:31.815" endtime="20201115 22:03:31.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.818" level="INFO">VALUE: [1.6999999999999654e-05, 1.6695000000000598e-05, 1.6693999999997655e-05, 1.6722000000000264e-05, 1.662499999999928e-05, 1.6679999999998085e-05, 1.6666000000001985e-05, 1.668099999999756e-05, 1.6749999999995935e-05, 1.6653000000005358e-05, 1.6736000000003304e-05, 1.668099999999756e-05, 1.6679999999998085e-05, 1.6708000000004164e-05, 1.669499999999713e-05, 1.6722000000003734e-05, 1.665299999999842e-05, 1.67089999999967e-05, 1.6679999999998085e-05, 1.6694000000004594e-05, 1.669499999999713e-05, 1.6681000000004498e-05, 1.6680000000005024e-05, 1.6679999999998085e-05, 1.6679999999998085e-05, 1.6708000000004164e-05, 1.6709000000003638e-05, 1.668099999999756e-05, 1.6736000000003304e-05, 1.6679999999998085e-05, 1.6695000000004068e-05, 1.6665999999998515e-05, 1.6693999999997655e-05, 1.6708000000004164e-05, 1.6708000000004164e-05, 1.6708000000004164e-05, 1.672299999999627e-05, 1.663899999999885e-05, 1.6665999999998515e-05, 1.6707999999990286e-05, 1.6693999999997655e-05, 1.6707999999990286e-05, 1.6625000000006218e-05, 1.6708000000004164e-05, 1.6681000000004498e-05, 1.6679999999991146e-05, 1.6693999999997655e-05, 1.6708000000004164e-05, 1.6694000000011533e-05, 1.6680000000005024e-05]</msg>
<status status="PASS" starttime="20201115 22:03:31.817" endtime="20201115 22:03:31.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.812" endtime="20201115 22:03:31.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.822" endtime="20201115 22:03:31.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:31.825" endtime="20201115 22:03:31.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.823" endtime="20201115 22:03:31.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.820" endtime="20201115 22:03:31.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.396" endtime="20201115 22:03:31.846"></status>
</kw>
<msg timestamp="20201115 22:03:31.846" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.855" endtime="20201115 22:03:31.924"></status>
</kw>
<msg timestamp="20201115 22:03:31.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.853" endtime="20201115 22:03:31.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:31.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:31.925" endtime="20201115 22:03:31.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.928" endtime="20201115 22:03:31.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.851" endtime="20201115 22:03:31.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.848" endtime="20201115 22:03:31.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:31.936" endtime="20201115 22:03:32.222"></status>
</kw>
<msg timestamp="20201115 22:03:32.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:31.935" endtime="20201115 22:03:32.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.226" endtime="20201115 22:03:32.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.235" endtime="20201115 22:03:32.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.932" endtime="20201115 22:03:32.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.931" endtime="20201115 22:03:32.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.241" level="INFO">${RESULT} = [{'time': 0.022850347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6999999999999654e-05, 'source_diff': 1.6999999999999654e-05}, {'time': 0.024056778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:32.238" endtime="20201115 22:03:32.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.254" level="INFO">${OVERHEAD} = {'time': [0.022850347, 0.024056778, 0.025266153, 0.026472208, 0.027677986, 0.028892236, 0.030103625, 0.0313225, 0.032538278, 0.033739375, 0.034940153, 0.036154639, 0.037371278, 0.038579333, 0.03978445...</msg>
<status status="PASS" starttime="20201115 22:03:32.242" endtime="20201115 22:03:32.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.259" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.258" endtime="20201115 22:03:32.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.261" level="INFO">VALUE: [1.6999999999999654e-05, 1.668100000000103e-05, 1.6735999999999834e-05, 1.6694000000001125e-05, 1.6694000000001125e-05, 1.6750000000002874e-05, 1.668099999999756e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.6694000000004594e-05, 1.6709000000003638e-05, 1.6708000000004164e-05, 1.6709000000003638e-05, 1.6750000000002874e-05, 1.6708000000004164e-05, 1.67089999999967e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.67089999999967e-05, 1.6679999999998085e-05, 1.6693999999997655e-05, 1.6679999999998085e-05, 1.6707999999997225e-05, 1.666699999999799e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.6666000000005454e-05, 1.6681000000004498e-05, 1.662499999999928e-05, 1.6665999999998515e-05, 1.6667000000004928e-05, 1.6681000000004498e-05, 1.666699999999799e-05, 1.6652000000005884e-05, 1.6693999999997655e-05, 1.662499999999234e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.6693999999997655e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.6681000000004498e-05, 1.669499999999713e-05, 1.6693999999997655e-05, 1.6667000000011867e-05, 1.6708000000004164e-05, 1.6721999999996795e-05, 1.6693999999997655e-05, 1.6679999999991146e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.260" endtime="20201115 22:03:32.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.255" endtime="20201115 22:03:32.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.264" endtime="20201115 22:03:32.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.268" endtime="20201115 22:03:32.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.266" endtime="20201115 22:03:32.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.263" endtime="20201115 22:03:32.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:31.846" endtime="20201115 22:03:32.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.008" endtime="20201115 22:03:32.289"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:30.007" endtime="20201115 22:03:32.289"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.291" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.300" endtime="20201115 22:03:32.372"></status>
</kw>
<msg timestamp="20201115 22:03:32.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.298" endtime="20201115 22:03:32.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.374" endtime="20201115 22:03:32.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.376" endtime="20201115 22:03:32.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.296" endtime="20201115 22:03:32.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.294" endtime="20201115 22:03:32.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.386" endtime="20201115 22:03:32.689"></status>
</kw>
<msg timestamp="20201115 22:03:32.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025391417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.384" endtime="20201115 22:03:32.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025391417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.694" endtime="20201115 22:03:32.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.702" endtime="20201115 22:03:32.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.382" endtime="20201115 22:03:32.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.380" endtime="20201115 22:03:32.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:32.708" level="INFO">${RESULT} = [{'time': 0.025408972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.026695722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:32.705" endtime="20201115 22:03:32.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:32.721" level="INFO">${OVERHEAD} = {'time': [0.025408972, 0.026695722, 0.027986153, 0.029259417, 0.0305495, 0.031829611, 0.033116917, 0.034398917, 0.035675347, 0.036952069, 0.038230958, 0.039521403, 0.040802181, 0.042073917, 0.04335187...</msg>
<status status="PASS" starttime="20201115 22:03:32.709" endtime="20201115 22:03:32.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.726" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:32.725" endtime="20201115 22:03:32.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.728" level="INFO">VALUE: [1.755499999999896e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7195000000001098e-05, 1.7249999999999904e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7195000000004568e-05, 1.7249999999996435e-05, 1.7263999999996005e-05, 1.7292000000002083e-05, 1.7277999999995575e-05, 1.722299999999677e-05, 1.7263999999996005e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.726300000000347e-05, 1.72769999999961e-05, 1.7195000000004568e-05, 1.7209000000004138e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7221999999997295e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7180000000005524e-05, 1.7221999999997295e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7263999999989066e-05, 1.7264000000002944e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7237000000003277e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7208000000004664e-05, 1.7290999999988732e-05, 1.7262999999989592e-05]</msg>
<status status="PASS" starttime="20201115 22:03:32.727" endtime="20201115 22:03:32.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.722" endtime="20201115 22:03:32.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.731" endtime="20201115 22:03:32.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:32.735" endtime="20201115 22:03:32.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.733" endtime="20201115 22:03:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.730" endtime="20201115 22:03:32.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.292" endtime="20201115 22:03:32.756"></status>
</kw>
<msg timestamp="20201115 22:03:32.756" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.765" endtime="20201115 22:03:32.837"></status>
</kw>
<msg timestamp="20201115 22:03:32.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.763" endtime="20201115 22:03:32.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:32.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:32.839" endtime="20201115 22:03:32.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.841" endtime="20201115 22:03:32.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.761" endtime="20201115 22:03:32.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.758" endtime="20201115 22:03:32.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:32.850" endtime="20201115 22:03:33.136"></status>
</kw>
<msg timestamp="20201115 22:03:33.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:32.849" endtime="20201115 22:03:33.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.140" endtime="20201115 22:03:33.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.148" endtime="20201115 22:03:33.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.846" endtime="20201115 22:03:33.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.845" endtime="20201115 22:03:33.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.155" level="INFO">${RESULT} = [{'time': 0.022981194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754099999999939e-05, 'source_diff': 1.754099999999939e-05}, {'time': 0.024270125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.151" endtime="20201115 22:03:33.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.168" level="INFO">${OVERHEAD} = {'time': [0.022981194, 0.024270125, 0.025546806, 0.026837194, 0.028126903, 0.029404486, 0.03068075, 0.031968681, 0.033246667, 0.034535708, 0.035808986, 0.037098792, 0.038376694, 0.039659264, 0.0409458...</msg>
<status status="PASS" starttime="20201115 22:03:33.156" endtime="20201115 22:03:33.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.172" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:33.171" endtime="20201115 22:03:33.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.175" level="INFO">VALUE: [1.754099999999939e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.727700000000304e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.7236000000000334e-05, 1.723699999999634e-05, 1.7320000000001223e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.7249999999996435e-05, 1.7250000000003374e-05, 1.7264000000002944e-05, 1.7264000000002944e-05, 1.7264000000002944e-05, 1.730500000000218e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7209000000004138e-05, 1.7236000000003804e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.731900000000175e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7179999999998585e-05, 1.7222000000004234e-05, 1.7236000000003804e-05, 1.7264000000002944e-05, 1.7263999999989066e-05, 1.729100000000261e-05, 1.7250000000010313e-05, 1.7305999999994714e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.726300000000347e-05, 1.7277999999995575e-05, 1.7264000000002944e-05, 1.7181000000004998e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7223000000010646e-05, 1.726300000000347e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7236000000003804e-05, 1.722299999999677e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.173" endtime="20201115 22:03:33.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.169" endtime="20201115 22:03:33.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.178" endtime="20201115 22:03:33.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.181" endtime="20201115 22:03:33.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.180" endtime="20201115 22:03:33.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.176" endtime="20201115 22:03:33.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.756" endtime="20201115 22:03:33.202"></status>
</kw>
<msg timestamp="20201115 22:03:33.202" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.211" endtime="20201115 22:03:33.284"></status>
</kw>
<msg timestamp="20201115 22:03:33.284" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.210" endtime="20201115 22:03:33.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.287" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.285" endtime="20201115 22:03:33.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.288" endtime="20201115 22:03:33.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.207" endtime="20201115 22:03:33.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.205" endtime="20201115 22:03:33.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.297" endtime="20201115 22:03:33.602"></status>
</kw>
<msg timestamp="20201115 22:03:33.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.295" endtime="20201115 22:03:33.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023527653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.606" endtime="20201115 22:03:33.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.614" endtime="20201115 22:03:33.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.293" endtime="20201115 22:03:33.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.291" endtime="20201115 22:03:33.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:33.620" level="INFO">${RESULT} = [{'time': 0.023545194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.754099999999939e-05, 'source_diff': 1.754099999999939e-05}, {'time': 0.024825486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:33.617" endtime="20201115 22:03:33.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:33.635" level="INFO">${OVERHEAD} = {'time': [0.023545194, 0.024825486, 0.026107194, 0.027392708, 0.028675972, 0.029951222, 0.031229861, 0.032511611, 0.033794333, 0.035072611, 0.036353667, 0.037643222, 0.038914569, 0.040187278, 0.041461...</msg>
<status status="PASS" starttime="20201115 22:03:33.621" endtime="20201115 22:03:33.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.639" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:33.638" endtime="20201115 22:03:33.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.642" level="INFO">VALUE: [1.754099999999939e-05, 1.7292000000002083e-05, 1.7236000000000334e-05, 1.731900000000175e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7264000000002944e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7250000000003374e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.7235999999996865e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7237000000003277e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7263999999996005e-05, 1.7236000000003804e-05, 1.7193999999998155e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.7305999999994714e-05, 1.7277999999995575e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7292000000002083e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7333999999993854e-05, 1.7236000000003804e-05, 1.7278000000009452e-05, 1.7250000000010313e-05, 1.7264000000002944e-05, 1.7236000000003804e-05, 1.7221999999997295e-05, 1.7249999999996435e-05, 1.7250000000010313e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7235999999989926e-05, 1.7263999999989066e-05, 1.7249999999996435e-05, 1.7264000000002944e-05]</msg>
<status status="PASS" starttime="20201115 22:03:33.640" endtime="20201115 22:03:33.642"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.636" endtime="20201115 22:03:33.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.645" endtime="20201115 22:03:33.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:33.649" endtime="20201115 22:03:33.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.647" endtime="20201115 22:03:33.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.643" endtime="20201115 22:03:33.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.203" endtime="20201115 22:03:33.669"></status>
</kw>
<msg timestamp="20201115 22:03:33.670" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.678" endtime="20201115 22:03:33.751"></status>
</kw>
<msg timestamp="20201115 22:03:33.751" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.677" endtime="20201115 22:03:33.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:33.754" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:33.752" endtime="20201115 22:03:33.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.755" endtime="20201115 22:03:33.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.674" endtime="20201115 22:03:33.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.672" endtime="20201115 22:03:33.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:33.764" endtime="20201115 22:03:34.051"></status>
</kw>
<msg timestamp="20201115 22:03:34.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:33.762" endtime="20201115 22:03:34.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.055" endtime="20201115 22:03:34.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.063" endtime="20201115 22:03:34.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.760" endtime="20201115 22:03:34.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.758" endtime="20201115 22:03:34.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.070" level="INFO">${RESULT} = [{'time': 0.022935167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7555999999998434e-05, 'source_diff': 1.7555999999998434e-05}, {'time': 0.024216347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:34.066" endtime="20201115 22:03:34.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.083" level="INFO">${OVERHEAD} = {'time': [0.022935167, 0.024216347, 0.025502722, 0.026786125, 0.028075569, 0.029359097, 0.030642597, 0.031927014, 0.033198278, 0.034474944, 0.035749458, 0.037022097, 0.038302167, 0.039587514, 0.040873...</msg>
<status status="PASS" starttime="20201115 22:03:34.071" endtime="20201115 22:03:34.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.087" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:34.086" endtime="20201115 22:03:34.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.090" level="INFO">VALUE: [1.7555999999998434e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7249999999996435e-05, 1.7235999999996865e-05, 1.7250000000003374e-05, 1.7207999999997725e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7235999999996865e-05, 1.7237000000003277e-05, 1.7181000000004998e-05, 1.7250000000003374e-05, 1.7235999999996865e-05, 1.7264000000002944e-05, 1.7249999999996435e-05, 1.7263999999996005e-05, 1.7263999999996005e-05, 1.7278000000002514e-05, 1.7194000000005094e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.7250000000003374e-05, 1.7193999999998155e-05, 1.72769999999961e-05, 1.7250000000003374e-05, 1.7264000000002944e-05, 1.7237000000003277e-05, 1.7249999999996435e-05, 1.7235999999989926e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.7236000000003804e-05, 1.7249999999996435e-05, 1.7221999999997295e-05, 1.727700000000998e-05, 1.7249999999996435e-05, 1.7249999999996435e-05, 1.7264000000002944e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7263999999989066e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.7277999999995575e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.088" endtime="20201115 22:03:34.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.084" endtime="20201115 22:03:34.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.093" endtime="20201115 22:03:34.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.097" endtime="20201115 22:03:34.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.095" endtime="20201115 22:03:34.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.092" endtime="20201115 22:03:34.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:33.670" endtime="20201115 22:03:34.118"></status>
</kw>
<msg timestamp="20201115 22:03:34.118" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.126" endtime="20201115 22:03:34.200"></status>
</kw>
<msg timestamp="20201115 22:03:34.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.125" endtime="20201115 22:03:34.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.206" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.203" endtime="20201115 22:03:34.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.208" endtime="20201115 22:03:34.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.122" endtime="20201115 22:03:34.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.120" endtime="20201115 22:03:34.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.227" endtime="20201115 22:03:34.519"></status>
</kw>
<msg timestamp="20201115 22:03:34.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.224" endtime="20201115 22:03:34.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.523" endtime="20201115 22:03:34.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.531" endtime="20201115 22:03:34.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.218" endtime="20201115 22:03:34.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.215" endtime="20201115 22:03:34.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:34.537" level="INFO">${RESULT} = [{'time': 0.023050431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7569999999998004e-05, 'source_diff': 1.7569999999998004e-05}, {'time': 0.024335028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:34.534" endtime="20201115 22:03:34.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:34.550" level="INFO">${OVERHEAD} = {'time': [0.023050431, 0.024335028, 0.025622056, 0.026907181, 0.028182125, 0.029456694, 0.030737806, 0.032022944, 0.033296042, 0.034571431, 0.035855556, 0.037140931, 0.038421625, 0.039704514, 0.040991...</msg>
<status status="PASS" starttime="20201115 22:03:34.538" endtime="20201115 22:03:34.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.555" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:34.554" endtime="20201115 22:03:34.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.557" level="INFO">VALUE: [1.7569999999998004e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7235999999996865e-05, 1.7249999999999904e-05, 1.7249999999996435e-05, 1.7305999999994714e-05, 1.719499999999763e-05, 1.7263999999996005e-05, 1.7250000000003374e-05, 1.7236000000003804e-05, 1.7264000000002944e-05, 1.7235999999996865e-05, 1.7278000000002514e-05, 1.7250000000003374e-05, 1.7235999999996865e-05, 1.7264000000002944e-05, 1.7263999999996005e-05, 1.7250000000003374e-05, 1.7249999999996435e-05, 1.7250000000003374e-05, 1.7235999999996865e-05, 1.7278000000002514e-05, 1.72089999999972e-05, 1.7250000000003374e-05, 1.7250000000003374e-05, 1.719499999999763e-05, 1.726300000000347e-05, 1.7250000000003374e-05, 1.7264000000002944e-05, 1.7264000000002944e-05, 1.7235999999989926e-05, 1.7264000000002944e-05, 1.7305999999994714e-05, 1.7236000000003804e-05, 1.7264000000002944e-05, 1.7250000000010313e-05, 1.7264000000002944e-05, 1.7277999999995575e-05, 1.7194000000012033e-05, 1.7208000000004664e-05, 1.7250000000010313e-05, 1.7263999999989066e-05, 1.7237000000003277e-05, 1.7236000000003804e-05, 1.722299999999677e-05, 1.7277999999995575e-05, 1.7264000000002944e-05]</msg>
<status status="PASS" starttime="20201115 22:03:34.556" endtime="20201115 22:03:34.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.551" endtime="20201115 22:03:34.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.561" endtime="20201115 22:03:34.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:34.564" endtime="20201115 22:03:34.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.563" endtime="20201115 22:03:34.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.559" endtime="20201115 22:03:34.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.118" endtime="20201115 22:03:34.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.290" endtime="20201115 22:03:34.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:32.289" endtime="20201115 22:03:34.585"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.588" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.596" endtime="20201115 22:03:34.672"></status>
</kw>
<msg timestamp="20201115 22:03:34.673" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.595" endtime="20201115 22:03:34.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:34.674" endtime="20201115 22:03:34.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.676" endtime="20201115 22:03:34.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.592" endtime="20201115 22:03:34.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.590" endtime="20201115 22:03:34.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.685" endtime="20201115 22:03:34.971"></status>
</kw>
<msg timestamp="20201115 22:03:34.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025413875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.684" endtime="20201115 22:03:34.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:34.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025413875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:34.975" endtime="20201115 22:03:34.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:34.991" endtime="20201115 22:03:34.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.681" endtime="20201115 22:03:34.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.680" endtime="20201115 22:03:34.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.005" level="INFO">${RESULT} = [{'time': 0.025413875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.0267675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:34.997" endtime="20201115 22:03:35.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.034" level="INFO">${OVERHEAD} = {'time': [0.025413875, 0.0267675, 0.028118583, 0.029465, 0.03081475, 0.032165889, 0.033527569, 0.03488075, 0.036244833, 0.037598667, 0.038954653, 0.040310292, 0.041670986, 0.043030778, 0.044376903, 0....</msg>
<status status="PASS" starttime="20201115 22:03:35.007" endtime="20201115 22:03:35.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.043" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:35.041" endtime="20201115 22:03:35.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.049" level="INFO">VALUE: [1.813900000000035e-05, 1.7805999999998684e-05, 1.781899999999878e-05, 1.783300000000182e-05, 1.781899999999878e-05, 1.7820000000001723e-05, 1.781900000000225e-05, 1.7792000000002584e-05, 1.781899999999531e-05, 1.7820000000001723e-05, 1.7806000000002153e-05, 1.7833999999994354e-05, 1.780500000000268e-05, 1.7806000000002153e-05, 1.7820000000001723e-05, 1.779099999999617e-05, 1.7805999999995215e-05, 1.781900000000225e-05, 1.786100000000096e-05, 1.7805999999995215e-05, 1.780500000000268e-05, 1.780500000000268e-05, 1.783300000000182e-05, 1.7791999999995645e-05, 1.781899999999531e-05, 1.779100000000311e-05, 1.786100000000096e-05, 1.7806000000002153e-05, 1.7805999999995215e-05, 1.7792000000002584e-05, 1.783299999999488e-05, 1.7792000000002584e-05, 1.780499999999574e-05, 1.7805999999995215e-05, 1.784700000000139e-05, 1.7805999999995215e-05, 1.779100000000311e-05, 1.781900000000225e-05, 1.7848000000000863e-05, 1.780499999999574e-05, 1.7834000000008232e-05, 1.7820000000001723e-05, 1.7806000000009092e-05, 1.7806000000009092e-05, 1.7833999999994354e-05, 1.7848000000000863e-05, 1.7790999999989232e-05, 1.780500000000962e-05, 1.7820000000001723e-05, 1.781900000000225e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.046" endtime="20201115 22:03:35.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.036" endtime="20201115 22:03:35.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.056" endtime="20201115 22:03:35.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.063" endtime="20201115 22:03:35.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.060" endtime="20201115 22:03:35.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.052" endtime="20201115 22:03:35.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.588" endtime="20201115 22:03:35.084"></status>
</kw>
<msg timestamp="20201115 22:03:35.084" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.093" endtime="20201115 22:03:35.170"></status>
</kw>
<msg timestamp="20201115 22:03:35.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.092" endtime="20201115 22:03:35.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.171" endtime="20201115 22:03:35.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.173" endtime="20201115 22:03:35.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.089" endtime="20201115 22:03:35.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.087" endtime="20201115 22:03:35.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.183" endtime="20201115 22:03:35.468"></status>
</kw>
<msg timestamp="20201115 22:03:35.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023134708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.181" endtime="20201115 22:03:35.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023134708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:35.473" endtime="20201115 22:03:35.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.481" endtime="20201115 22:03:35.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.178" endtime="20201115 22:03:35.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.177" endtime="20201115 22:03:35.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.487" level="INFO">${RESULT} = [{'time': 0.023152847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.024504417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:35.484" endtime="20201115 22:03:35.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.502" level="INFO">${OVERHEAD} = {'time': [0.023152847, 0.024504417, 0.025854694, 0.027205514, 0.028562, 0.029913625, 0.031262069, 0.032610847, 0.033956208, 0.035306611, 0.036662028, 0.038023667, 0.039372944, 0.040736167, 0.042090347...</msg>
<status status="PASS" starttime="20201115 22:03:35.488" endtime="20201115 22:03:35.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.507" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:35.506" endtime="20201115 22:03:35.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.509" level="INFO">VALUE: [1.813900000000035e-05, 1.7820000000001723e-05, 1.780500000000268e-05, 1.7820000000001723e-05, 1.7806000000002153e-05, 1.781899999999878e-05, 1.781900000000225e-05, 1.781899999999531e-05, 1.783300000000182e-05, 1.7792000000002584e-05, 1.7806000000002153e-05, 1.7819999999994784e-05, 1.783300000000182e-05, 1.7763999999996505e-05, 1.781900000000225e-05, 1.7806000000002153e-05, 1.7806000000002153e-05, 1.781900000000225e-05, 1.7792000000002584e-05, 1.781899999999531e-05, 1.7791999999995645e-05, 1.7819999999994784e-05, 1.781900000000225e-05, 1.7806000000002153e-05, 1.783300000000182e-05, 1.783300000000182e-05, 1.7805999999995215e-05, 1.780500000000268e-05, 1.7819999999994784e-05, 1.7791999999995645e-05, 1.780499999999574e-05, 1.780499999999574e-05, 1.7805999999995215e-05, 1.783299999999488e-05, 1.780499999999574e-05, 1.780500000000962e-05, 1.780499999999574e-05, 1.7777999999996075e-05, 1.7806000000009092e-05, 1.7848000000000863e-05, 1.7750000000010813e-05, 1.783299999999488e-05, 1.776300000000397e-05, 1.7820000000001723e-05, 1.7820000000001723e-05, 1.783299999999488e-05, 1.779100000000311e-05, 1.7805999999995215e-05, 1.7792000000002584e-05, 1.7736000000004304e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.508" endtime="20201115 22:03:35.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.503" endtime="20201115 22:03:35.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.512" endtime="20201115 22:03:35.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.515" endtime="20201115 22:03:35.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.514" endtime="20201115 22:03:35.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.511" endtime="20201115 22:03:35.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.085" endtime="20201115 22:03:35.536"></status>
</kw>
<msg timestamp="20201115 22:03:35.536" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.545" endtime="20201115 22:03:35.621"></status>
</kw>
<msg timestamp="20201115 22:03:35.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.544" endtime="20201115 22:03:35.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:35.623" endtime="20201115 22:03:35.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.625" endtime="20201115 22:03:35.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.541" endtime="20201115 22:03:35.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.539" endtime="20201115 22:03:35.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.634" endtime="20201115 22:03:35.936"></status>
</kw>
<msg timestamp="20201115 22:03:35.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023042722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02306075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:35.633" endtime="20201115 22:03:35.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023042722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02306075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:35.940" endtime="20201115 22:03:35.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.948" endtime="20201115 22:03:35.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.630" endtime="20201115 22:03:35.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.628" endtime="20201115 22:03:35.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:35.955" level="INFO">${RESULT} = [{'time': 0.02306075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8027999999999794e-05, 'source_diff': 1.8027999999999794e-05}, {'time': 0.024419556, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:35.951" endtime="20201115 22:03:35.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:35.968" level="INFO">${OVERHEAD} = {'time': [0.02306075, 0.024419556, 0.025774889, 0.027135431, 0.028500097, 0.029863514, 0.031216278, 0.032570431, 0.033922208, 0.035271889, 0.036630903, 0.037992167, 0.039346931, 0.040710375, 0.0420700...</msg>
<status status="PASS" starttime="20201115 22:03:35.956" endtime="20201115 22:03:35.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.973" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:35.972" endtime="20201115 22:03:35.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:35.975" level="INFO">VALUE: [1.8027999999999794e-05, 1.7791999999999114e-05, 1.7805999999998684e-05, 1.7806000000002153e-05, 1.781899999999878e-05, 1.7820000000001723e-05, 1.7805999999998684e-05, 1.787499999999359e-05, 1.780500000000268e-05, 1.7792000000002584e-05, 1.7792000000002584e-05, 1.7806000000002153e-05, 1.7792000000002584e-05, 1.781900000000225e-05, 1.7778000000003014e-05, 1.7806000000002153e-05, 1.7805999999995215e-05, 1.781900000000225e-05, 1.7805999999995215e-05, 1.781899999999531e-05, 1.7806000000002153e-05, 1.7820000000001723e-05, 1.7805999999995215e-05, 1.781900000000225e-05, 1.780500000000268e-05, 1.787500000000053e-05, 1.780500000000268e-05, 1.7834000000001293e-05, 1.781899999999531e-05, 1.7820000000001723e-05, 1.7792000000002584e-05, 1.780499999999574e-05, 1.781900000000225e-05, 1.7806000000009092e-05, 1.781900000000225e-05, 1.7805999999995215e-05, 1.7805999999995215e-05, 1.786099999999402e-05, 1.7806000000009092e-05, 1.77769999999966e-05, 1.7820000000001723e-05, 1.7806000000009092e-05, 1.781900000000225e-05, 1.7805999999995215e-05, 1.7721999999997795e-05, 1.7736000000004304e-05, 1.780500000000962e-05, 1.780499999999574e-05, 1.7805999999995215e-05, 1.784700000000139e-05]</msg>
<status status="PASS" starttime="20201115 22:03:35.974" endtime="20201115 22:03:35.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.969" endtime="20201115 22:03:35.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:35.978" endtime="20201115 22:03:35.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:35.982" endtime="20201115 22:03:36.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.980" endtime="20201115 22:03:36.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.976" endtime="20201115 22:03:36.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:35.537" endtime="20201115 22:03:36.002"></status>
</kw>
<msg timestamp="20201115 22:03:36.003" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.011" endtime="20201115 22:03:36.087"></status>
</kw>
<msg timestamp="20201115 22:03:36.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.010" endtime="20201115 22:03:36.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.089" endtime="20201115 22:03:36.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.091" endtime="20201115 22:03:36.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.007" endtime="20201115 22:03:36.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.005" endtime="20201115 22:03:36.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.100" endtime="20201115 22:03:36.387"></status>
</kw>
<msg timestamp="20201115 22:03:36.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.099" endtime="20201115 22:03:36.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.391" endtime="20201115 22:03:36.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.399" endtime="20201115 22:03:36.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.096" endtime="20201115 22:03:36.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.095" endtime="20201115 22:03:36.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.406" level="INFO">${RESULT} = [{'time': 0.023134222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.815299999999992e-05, 'source_diff': 1.815299999999992e-05}, {'time': 0.024481486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:36.403" endtime="20201115 22:03:36.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.419" level="INFO">${OVERHEAD} = {'time': [0.023134222, 0.024481486, 0.025828931, 0.027191333, 0.028541611, 0.029898125, 0.031252694, 0.03261575, 0.033975958, 0.035321583, 0.036668097, 0.03801525, 0.039361083, 0.040720986, 0.04208301...</msg>
<status status="PASS" starttime="20201115 22:03:36.407" endtime="20201115 22:03:36.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.423" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:36.422" endtime="20201115 22:03:36.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.426" level="INFO">VALUE: [1.815299999999992e-05, 1.786100000000096e-05, 1.7805999999998684e-05, 1.780500000000268e-05, 1.780500000000268e-05, 1.781900000000225e-05, 1.783299999999835e-05, 1.784700000000139e-05, 1.780500000000268e-05, 1.7735999999997365e-05, 1.781899999999531e-05, 1.783300000000182e-05, 1.779099999999617e-05, 1.7778000000003014e-05, 1.7820000000001723e-05, 1.7792000000002584e-05, 1.780500000000268e-05, 1.784700000000139e-05, 1.780499999999574e-05, 1.779099999999617e-05, 1.7806000000002153e-05, 1.783300000000182e-05, 1.779100000000311e-05, 1.7806000000002153e-05, 1.781900000000225e-05, 1.7749999999996935e-05, 1.7791999999995645e-05, 1.781900000000225e-05, 1.7848000000000863e-05, 1.786100000000096e-05, 1.7805999999995215e-05, 1.780499999999574e-05, 1.780500000000962e-05, 1.7777999999996075e-05, 1.780500000000962e-05, 1.7763999999989566e-05, 1.788899999999316e-05, 1.780499999999574e-05, 1.7819999999987846e-05, 1.780499999999574e-05, 1.7792000000002584e-05, 1.7889000000007038e-05, 1.781900000000225e-05, 1.7820000000001723e-05, 1.784700000000139e-05, 1.781900000000225e-05, 1.780500000000962e-05, 1.7764000000003444e-05, 1.779100000000311e-05, 1.779100000000311e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.424" endtime="20201115 22:03:36.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.420" endtime="20201115 22:03:36.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.429" endtime="20201115 22:03:36.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.432" endtime="20201115 22:03:36.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.431" endtime="20201115 22:03:36.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.427" endtime="20201115 22:03:36.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.003" endtime="20201115 22:03:36.453"></status>
</kw>
<msg timestamp="20201115 22:03:36.453" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.462" endtime="20201115 22:03:36.538"></status>
</kw>
<msg timestamp="20201115 22:03:36.539" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.461" endtime="20201115 22:03:36.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.541" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.540" endtime="20201115 22:03:36.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.542" endtime="20201115 22:03:36.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.458" endtime="20201115 22:03:36.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.456" endtime="20201115 22:03:36.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.551" endtime="20201115 22:03:36.853"></status>
</kw>
<msg timestamp="20201115 22:03:36.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023120806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.550" endtime="20201115 22:03:36.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023120806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:36.862" endtime="20201115 22:03:36.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.870" endtime="20201115 22:03:36.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.547" endtime="20201115 22:03:36.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.545" endtime="20201115 22:03:36.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:36.876" level="INFO">${RESULT} = [{'time': 0.023120806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8112000000000683e-05, 'source_diff': 1.8112000000000683e-05}, {'time': 0.024480611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:36.873" endtime="20201115 22:03:36.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:36.889" level="INFO">${OVERHEAD} = {'time': [0.023120806, 0.024480611, 0.025836653, 0.027194278, 0.028555958, 0.029917528, 0.031281319, 0.032629208, 0.033981833, 0.035331653, 0.036694528, 0.038041139, 0.039397722, 0.040743181, 0.042105...</msg>
<status status="PASS" starttime="20201115 22:03:36.877" endtime="20201115 22:03:36.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.894" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:36.893" endtime="20201115 22:03:36.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.896" level="INFO">VALUE: [1.8112000000000683e-05, 1.7763999999999974e-05, 1.7820000000001723e-05, 1.7805999999998684e-05, 1.780499999999921e-05, 1.7833999999997824e-05, 1.779100000000311e-05, 1.780500000000268e-05, 1.780500000000268e-05, 1.7805999999995215e-05, 1.7805999999995215e-05, 1.7806000000002153e-05, 1.7750000000003874e-05, 1.7806000000002153e-05, 1.7820000000001723e-05, 1.7806000000002153e-05, 1.7820000000001723e-05, 1.7820000000001723e-05, 1.780500000000268e-05, 1.780500000000268e-05, 1.7806000000002153e-05, 1.7806000000002153e-05, 1.781900000000225e-05, 1.779099999999617e-05, 1.783299999999488e-05, 1.780499999999574e-05, 1.7834000000001293e-05, 1.781899999999531e-05, 1.7805999999995215e-05, 1.780500000000268e-05, 1.77769999999966e-05, 1.7792000000002584e-05, 1.781900000000225e-05, 1.7820000000001723e-05, 1.7833999999994354e-05, 1.786099999999402e-05, 1.781900000000225e-05, 1.780499999999574e-05, 1.780499999999574e-05, 1.780500000000962e-05, 1.781900000000225e-05, 1.7778000000009953e-05, 1.7819999999987846e-05, 1.781900000000225e-05, 1.7749999999996935e-05, 1.780500000000962e-05, 1.781900000000225e-05, 1.7735999999990426e-05, 1.783299999999488e-05, 1.781900000000225e-05]</msg>
<status status="PASS" starttime="20201115 22:03:36.895" endtime="20201115 22:03:36.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.890" endtime="20201115 22:03:36.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.899" endtime="20201115 22:03:36.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:36.903" endtime="20201115 22:03:36.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.901" endtime="20201115 22:03:36.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.898" endtime="20201115 22:03:36.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.454" endtime="20201115 22:03:36.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.586" endtime="20201115 22:03:36.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:34.586" endtime="20201115 22:03:36.924"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:36.926" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:36.935" endtime="20201115 22:03:37.015"></status>
</kw>
<msg timestamp="20201115 22:03:37.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:36.933" endtime="20201115 22:03:37.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.016" endtime="20201115 22:03:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.019" endtime="20201115 22:03:37.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.931" endtime="20201115 22:03:37.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.929" endtime="20201115 22:03:37.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.028" endtime="20201115 22:03:37.315"></status>
</kw>
<msg timestamp="20201115 22:03:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.027" endtime="20201115 22:03:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025423514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.319" endtime="20201115 22:03:37.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.327" endtime="20201115 22:03:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.024" endtime="20201115 22:03:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.022" endtime="20201115 22:03:37.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.333" level="INFO">${RESULT} = [{'time': 0.025423514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.866699999999999e-05, 'source_diff': 1.866699999999999e-05}, {'time': 0.026863736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:37.330" endtime="20201115 22:03:37.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.348" level="INFO">${OVERHEAD} = {'time': [0.025423514, 0.026863736, 0.028289639, 0.029711917, 0.031133625, 0.032565333, 0.034002444, 0.035436, 0.036874222, 0.038307111, 0.039735792, 0.041169194, 0.042593875, 0.044027319, 0.045459764...</msg>
<status status="PASS" starttime="20201115 22:03:37.334" endtime="20201115 22:03:37.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.352" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:37.352" endtime="20201115 22:03:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.355" level="INFO">VALUE: [1.866699999999999e-05, 1.836099999999799e-05, 1.843099999999931e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.8443999999999405e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.833299999999538e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.840300000000017e-05, 1.836099999999452e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.8388000000001126e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.837499999999409e-05, 1.837499999998715e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.838899999999366e-05, 1.8443999999992466e-05, 1.83610000000084e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8417000000006678e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8402000000000696e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.831900000000275e-05, 1.8346999999988012e-05, 1.837499999998715e-05, 1.836099999999452e-05, 1.837499999998715e-05, 1.8346999999988012e-05, 1.8348000000001363e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.354" endtime="20201115 22:03:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.349" endtime="20201115 22:03:37.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.358" endtime="20201115 22:03:37.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.361" endtime="20201115 22:03:37.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.360" endtime="20201115 22:03:37.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.356" endtime="20201115 22:03:37.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.926" endtime="20201115 22:03:37.382"></status>
</kw>
<msg timestamp="20201115 22:03:37.382" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.391" endtime="20201115 22:03:37.471"></status>
</kw>
<msg timestamp="20201115 22:03:37.471" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.389" endtime="20201115 22:03:37.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.473" endtime="20201115 22:03:37.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.475" endtime="20201115 22:03:37.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.387" endtime="20201115 22:03:37.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.385" endtime="20201115 22:03:37.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.485" endtime="20201115 22:03:37.771"></status>
</kw>
<msg timestamp="20201115 22:03:37.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:37.483" endtime="20201115 22:03:37.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:37.775" endtime="20201115 22:03:37.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.783" endtime="20201115 22:03:37.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.480" endtime="20201115 22:03:37.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.479" endtime="20201115 22:03:37.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:37.790" level="INFO">${RESULT} = [{'time': 0.023093944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8694000000003125e-05, 'source_diff': 1.8694000000003125e-05}, {'time': 0.024532569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:37.787" endtime="20201115 22:03:37.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:37.803" level="INFO">${OVERHEAD} = {'time': [0.023093944, 0.024532569, 0.025966444, 0.027395653, 0.028826764, 0.030259875, 0.031685611, 0.03311675, 0.0345385, 0.035964833, 0.037394639, 0.038833167, 0.040270375, 0.041695097, 0.043127514...</msg>
<status status="PASS" starttime="20201115 22:03:37.791" endtime="20201115 22:03:37.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.807" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:37.806" endtime="20201115 22:03:37.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.810" level="INFO">VALUE: [1.8694000000003125e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8319999999998754e-05, 1.841699999999974e-05, 1.838899999999713e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.837499999999409e-05, 1.8416000000000265e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837499999999409e-05, 1.8320000000002223e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.831900000000275e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.8362000000000933e-05, 1.83890000000006e-05, 1.8348000000001363e-05, 1.836099999999452e-05, 1.836099999999452e-05, 1.83610000000084e-05, 1.834700000000189e-05, 1.837499999998715e-05, 1.837500000000103e-05, 1.83610000000084e-05, 1.834700000000189e-05, 1.833299999999538e-05, 1.833300000000926e-05, 1.831900000000275e-05, 1.8292000000003084e-05, 1.833299999999538e-05, 1.837500000000103e-05, 1.8334000000008732e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.844499999999194e-05, 1.8348000000001363e-05, 1.836099999999452e-05, 1.840300000000017e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201115 22:03:37.809" endtime="20201115 22:03:37.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.804" endtime="20201115 22:03:37.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.813" endtime="20201115 22:03:37.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:37.816" endtime="20201115 22:03:37.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.815" endtime="20201115 22:03:37.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.811" endtime="20201115 22:03:37.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.383" endtime="20201115 22:03:37.837"></status>
</kw>
<msg timestamp="20201115 22:03:37.837" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.846" endtime="20201115 22:03:37.927"></status>
</kw>
<msg timestamp="20201115 22:03:37.927" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.845" endtime="20201115 22:03:37.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:37.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:37.928" endtime="20201115 22:03:37.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.931" endtime="20201115 22:03:37.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.842" endtime="20201115 22:03:37.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.840" endtime="20201115 22:03:37.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:37.940" endtime="20201115 22:03:38.244"></status>
</kw>
<msg timestamp="20201115 22:03:38.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:37.938" endtime="20201115 22:03:38.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023650958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.248" endtime="20201115 22:03:38.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.256" endtime="20201115 22:03:38.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.935" endtime="20201115 22:03:38.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.934" endtime="20201115 22:03:38.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.262" level="INFO">${RESULT} = [{'time': 0.023650958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8680000000000085e-05, 'source_diff': 1.8680000000000085e-05}, {'time': 0.025079, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:38.259" endtime="20201115 22:03:38.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.275" level="INFO">${OVERHEAD} = {'time': [0.023650958, 0.025079, 0.026510903, 0.027949417, 0.029375181, 0.030808764, 0.032241944, 0.033664542, 0.035103708, 0.036535389, 0.037966792, 0.039389042, 0.040817944, 0.042246778, 0.043679722...</msg>
<status status="PASS" starttime="20201115 22:03:38.263" endtime="20201115 22:03:38.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.280" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:38.279" endtime="20201115 22:03:38.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.282" level="INFO">VALUE: [1.8680000000000085e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.8362000000000933e-05, 1.837499999999756e-05, 1.8388000000001126e-05, 1.836100000000146e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.8334000000001793e-05, 1.8402000000000696e-05, 1.8291999999996145e-05, 1.837499999999409e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.8459000000005388e-05, 1.836100000000146e-05, 1.8388000000001126e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.827700000000404e-05, 1.83610000000084e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.837499999998715e-05, 1.833299999999538e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.8389000000007538e-05, 1.837500000000103e-05, 1.8389000000007538e-05, 1.8389000000007538e-05, 1.837500000000103e-05, 1.8388000000008065e-05, 1.83610000000084e-05, 1.844499999999194e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.281" endtime="20201115 22:03:38.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.276" endtime="20201115 22:03:38.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.285" endtime="20201115 22:03:38.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.289" endtime="20201115 22:03:38.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.287" endtime="20201115 22:03:38.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.284" endtime="20201115 22:03:38.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:37.838" endtime="20201115 22:03:38.310"></status>
</kw>
<msg timestamp="20201115 22:03:38.310" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.319" endtime="20201115 22:03:38.399"></status>
</kw>
<msg timestamp="20201115 22:03:38.400" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.317" endtime="20201115 22:03:38.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.401" endtime="20201115 22:03:38.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.403" endtime="20201115 22:03:38.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.315" endtime="20201115 22:03:38.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.313" endtime="20201115 22:03:38.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.413" endtime="20201115 22:03:38.701"></status>
</kw>
<msg timestamp="20201115 22:03:38.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.411" endtime="20201115 22:03:38.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023761778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.705" endtime="20201115 22:03:38.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.713" endtime="20201115 22:03:38.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.408" endtime="20201115 22:03:38.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.406" endtime="20201115 22:03:38.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:38.720" level="INFO">${RESULT} = [{'time': 0.023761778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.869499999999913e-05, 'source_diff': 1.869499999999913e-05}, {'time': 0.025186694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:38.717" endtime="20201115 22:03:38.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:38.733" level="INFO">${OVERHEAD} = {'time': [0.023761778, 0.025186694, 0.026619736, 0.028052542, 0.029488181, 0.030924167, 0.032361014, 0.033791403, 0.035228333, 0.036656833, 0.038086333, 0.039522375, 0.040958486, 0.042398389, 0.043828...</msg>
<status status="PASS" starttime="20201115 22:03:38.721" endtime="20201115 22:03:38.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.738" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:38.737" endtime="20201115 22:03:38.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.740" level="INFO">VALUE: [1.869499999999913e-05, 1.8429999999999835e-05, 1.836100000000146e-05, 1.8348000000001363e-05, 1.8333999999998324e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.829100000000361e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.834700000000189e-05, 1.8292000000003084e-05, 1.834700000000189e-05, 1.8429999999999835e-05, 1.836100000000146e-05, 1.8348000000001363e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837499999999409e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.836099999999452e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.8389000000007538e-05, 1.836099999999452e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.836099999999452e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.8348000000001363e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.8362000000007872e-05, 1.838899999999366e-05, 1.8320000000002223e-05, 1.833299999999538e-05, 1.836099999999452e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201115 22:03:38.739" endtime="20201115 22:03:38.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.734" endtime="20201115 22:03:38.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.744" endtime="20201115 22:03:38.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:38.747" endtime="20201115 22:03:38.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.746" endtime="20201115 22:03:38.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.742" endtime="20201115 22:03:38.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.311" endtime="20201115 22:03:38.768"></status>
</kw>
<msg timestamp="20201115 22:03:38.768" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.777" endtime="20201115 22:03:38.857"></status>
</kw>
<msg timestamp="20201115 22:03:38.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.775" endtime="20201115 22:03:38.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:38.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:38.858" endtime="20201115 22:03:38.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.861" endtime="20201115 22:03:38.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.773" endtime="20201115 22:03:38.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.771" endtime="20201115 22:03:38.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:38.870" endtime="20201115 22:03:39.171"></status>
</kw>
<msg timestamp="20201115 22:03:39.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:38.868" endtime="20201115 22:03:39.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.175" endtime="20201115 22:03:39.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.183" endtime="20201115 22:03:39.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.866" endtime="20201115 22:03:39.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.864" endtime="20201115 22:03:39.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.190" level="INFO">${RESULT} = [{'time': 0.023171069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8680000000000085e-05, 'source_diff': 1.8680000000000085e-05}, {'time': 0.024593125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:39.186" endtime="20201115 22:03:39.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.204" level="INFO">${OVERHEAD} = {'time': [0.023171069, 0.024593125, 0.026014528, 0.027448722, 0.028872958, 0.030297722, 0.031732514, 0.033163333, 0.034594153, 0.036022722, 0.037451708, 0.038884389, 0.040306861, 0.041736444, 0.043176...</msg>
<status status="PASS" starttime="20201115 22:03:39.190" endtime="20201115 22:03:39.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.209" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:39.208" endtime="20201115 22:03:39.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.211" level="INFO">VALUE: [1.8680000000000085e-05, 1.836100000000146e-05, 1.836099999999799e-05, 1.838899999999713e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.834699999999495e-05, 1.840300000000017e-05, 1.837499999999409e-05, 1.83890000000006e-05, 1.8402000000000696e-05, 1.833299999999538e-05, 1.83890000000006e-05, 1.8334000000001793e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.8362000000000933e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.836100000000146e-05, 1.837499999999409e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.83610000000084e-05, 1.838899999999366e-05, 1.834700000000189e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.8318999999988872e-05, 1.834700000000189e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.831900000000275e-05, 1.8443999999992466e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.8389000000007538e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837499999998715e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.210" endtime="20201115 22:03:39.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.205" endtime="20201115 22:03:39.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.215" endtime="20201115 22:03:39.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.218" endtime="20201115 22:03:39.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.216" endtime="20201115 22:03:39.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.213" endtime="20201115 22:03:39.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:38.769" endtime="20201115 22:03:39.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.925" endtime="20201115 22:03:39.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:36.924" endtime="20201115 22:03:39.240"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.242" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.250" endtime="20201115 22:03:39.334"></status>
</kw>
<msg timestamp="20201115 22:03:39.335" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.249" endtime="20201115 22:03:39.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.337" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.336" endtime="20201115 22:03:39.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.338" endtime="20201115 22:03:39.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.246" endtime="20201115 22:03:39.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.244" endtime="20201115 22:03:39.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.348" endtime="20201115 22:03:39.678"></status>
</kw>
<msg timestamp="20201115 22:03:39.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025967208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.346" endtime="20201115 22:03:39.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025967208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.682" endtime="20201115 22:03:39.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.690" endtime="20201115 22:03:39.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.343" endtime="20201115 22:03:39.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.342" endtime="20201115 22:03:39.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:39.697" level="INFO">${RESULT} = [{'time': 0.025986431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9223000000002238e-05, 'source_diff': 1.9223000000002238e-05}, {'time': 0.027494458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:39.693" endtime="20201115 22:03:39.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:39.710" level="INFO">${OVERHEAD} = {'time': [0.025986431, 0.027494458, 0.029000514, 0.030516486, 0.032033083, 0.033541986, 0.035050819, 0.036554972, 0.038060236, 0.039575139, 0.041086181, 0.042598222, 0.04411275, 0.045625361, 0.0471342...</msg>
<status status="PASS" starttime="20201115 22:03:39.698" endtime="20201115 22:03:39.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.714" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:39.713" endtime="20201115 22:03:39.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.717" level="INFO">VALUE: [1.9223000000002238e-05, 1.886099999999849e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.887499999999459e-05, 1.8943999999999905e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.887500000000153e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.8945000000006318e-05, 1.893099999999981e-05, 1.8929999999993397e-05, 1.893099999999981e-05, 1.88890000000011e-05, 1.8985999999998615e-05, 1.8930000000000335e-05, 1.887500000000153e-05, 1.894499999999244e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.8971999999992106e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.8957999999999475e-05, 1.894499999999244e-05, 1.8943999999992966e-05, 1.8915999999993827e-05, 1.8915999999993827e-05, 1.8930000000000335e-05, 1.8943999999992966e-05, 1.8917000000007178e-05, 1.893099999999981e-05, 1.8944000000006844e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.8917000000007178e-05, 1.8957999999999475e-05, 1.8944000000006844e-05, 1.893099999999981e-05]</msg>
<status status="PASS" starttime="20201115 22:03:39.715" endtime="20201115 22:03:39.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.711" endtime="20201115 22:03:39.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.720" endtime="20201115 22:03:39.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:39.724" endtime="20201115 22:03:39.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.722" endtime="20201115 22:03:39.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.719" endtime="20201115 22:03:39.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.242" endtime="20201115 22:03:39.744"></status>
</kw>
<msg timestamp="20201115 22:03:39.744" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.754" endtime="20201115 22:03:39.838"></status>
</kw>
<msg timestamp="20201115 22:03:39.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.752" endtime="20201115 22:03:39.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:39.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:39.839" endtime="20201115 22:03:39.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.842" endtime="20201115 22:03:39.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.749" endtime="20201115 22:03:39.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.747" endtime="20201115 22:03:39.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:39.851" endtime="20201115 22:03:40.137"></status>
</kw>
<msg timestamp="20201115 22:03:40.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023949056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:39.849" endtime="20201115 22:03:40.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023929806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023949056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.141" endtime="20201115 22:03:40.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.149" endtime="20201115 22:03:40.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.847" endtime="20201115 22:03:40.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.845" endtime="20201115 22:03:40.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.156" level="INFO">${RESULT} = [{'time': 0.023949056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9249999999998435e-05, 'source_diff': 1.9249999999998435e-05}, {'time': 0.025453306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:40.152" endtime="20201115 22:03:40.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.169" level="INFO">${OVERHEAD} = {'time': [0.023949056, 0.025453306, 0.026954653, 0.028460361, 0.029967083, 0.031480819, 0.03298525, 0.034489028, 0.035989639, 0.037503694, 0.039005889, 0.040516431, 0.042033542, 0.043533153, 0.0450520...</msg>
<status status="PASS" starttime="20201115 22:03:40.157" endtime="20201115 22:03:40.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.173" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:40.172" endtime="20201115 22:03:40.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.176" level="INFO">VALUE: [1.9249999999998435e-05, 1.894499999999938e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.8929999999996866e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.893099999999981e-05, 1.894499999999938e-05, 1.8915999999993827e-05, 1.894499999999938e-05, 1.8848000000001863e-05, 1.891700000000024e-05, 1.895899999999895e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.890300000000067e-05, 1.8930000000000335e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.887499999999459e-05, 1.8902000000001196e-05, 1.8917000000007178e-05, 1.9000000000005124e-05, 1.893099999999981e-05, 1.9000000000005124e-05, 1.8930000000000335e-05, 1.8916000000007704e-05, 1.893099999999981e-05, 1.8917000000007178e-05, 1.8915999999993827e-05, 1.89169999999933e-05, 1.894499999999244e-05, 1.89169999999933e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.9000000000005124e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.89169999999933e-05, 1.89169999999933e-05, 1.8944000000006844e-05, 1.893099999999981e-05, 1.8915999999993827e-05, 1.8930000000000335e-05, 1.8930000000000335e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.174" endtime="20201115 22:03:40.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.170" endtime="20201115 22:03:40.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.179" endtime="20201115 22:03:40.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.182" endtime="20201115 22:03:40.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.181" endtime="20201115 22:03:40.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.177" endtime="20201115 22:03:40.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.745" endtime="20201115 22:03:40.203"></status>
</kw>
<msg timestamp="20201115 22:03:40.203" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.213" endtime="20201115 22:03:40.297"></status>
</kw>
<msg timestamp="20201115 22:03:40.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.211" endtime="20201115 22:03:40.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.298" endtime="20201115 22:03:40.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.301" endtime="20201115 22:03:40.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.208" endtime="20201115 22:03:40.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.206" endtime="20201115 22:03:40.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.310" endtime="20201115 22:03:40.611"></status>
</kw>
<msg timestamp="20201115 22:03:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.308" endtime="20201115 22:03:40.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023956333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.615" endtime="20201115 22:03:40.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.623" endtime="20201115 22:03:40.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.305" endtime="20201115 22:03:40.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.304" endtime="20201115 22:03:40.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:40.630" level="INFO">${RESULT} = [{'time': 0.023956333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9249999999998435e-05, 'source_diff': 1.9249999999998435e-05}, {'time': 0.025472222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:40.626" endtime="20201115 22:03:40.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:40.643" level="INFO">${OVERHEAD} = {'time': [0.023956333, 0.025472222, 0.026975972, 0.028490806, 0.030001069, 0.031519611, 0.033031208, 0.034536542, 0.036043417, 0.037553389, 0.039057764, 0.040566472, 0.042082014, 0.043589167, 0.045101...</msg>
<status status="PASS" starttime="20201115 22:03:40.631" endtime="20201115 22:03:40.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.648" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:40.647" endtime="20201115 22:03:40.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.650" level="INFO">VALUE: [1.9249999999998435e-05, 1.8916000000000766e-05, 1.8916000000000766e-05, 1.8987000000001558e-05, 1.8929999999996866e-05, 1.8930000000000335e-05, 1.8943999999999905e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.894499999999938e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.886100000000196e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.8916000000000766e-05, 1.8999999999998185e-05, 1.891700000000024e-05, 1.8916000000000766e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.890300000000067e-05, 1.8943999999999905e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.89169999999933e-05, 1.8930000000000335e-05, 1.890300000000067e-05, 1.890300000000067e-05, 1.8915999999993827e-05, 1.8944000000006844e-05, 1.897299999999158e-05, 1.8943999999992966e-05, 1.8930000000000335e-05, 1.8861999999994494e-05, 1.8917000000007178e-05, 1.8916000000007704e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.8915999999993827e-05, 1.890300000000067e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.89169999999933e-05, 1.8945000000006318e-05]</msg>
<status status="PASS" starttime="20201115 22:03:40.649" endtime="20201115 22:03:40.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.644" endtime="20201115 22:03:40.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.653" endtime="20201115 22:03:40.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:40.657" endtime="20201115 22:03:40.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.655" endtime="20201115 22:03:40.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.652" endtime="20201115 22:03:40.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.204" endtime="20201115 22:03:40.677"></status>
</kw>
<msg timestamp="20201115 22:03:40.678" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.686" endtime="20201115 22:03:40.771"></status>
</kw>
<msg timestamp="20201115 22:03:40.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.685" endtime="20201115 22:03:40.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:40.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:40.773" endtime="20201115 22:03:40.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.775" endtime="20201115 22:03:40.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.682" endtime="20201115 22:03:40.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.680" endtime="20201115 22:03:40.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:40.784" endtime="20201115 22:03:41.070"></status>
</kw>
<msg timestamp="20201115 22:03:41.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024003306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:40.782" endtime="20201115 22:03:41.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024003306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.074" endtime="20201115 22:03:41.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.082" endtime="20201115 22:03:41.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.780" endtime="20201115 22:03:41.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.778" endtime="20201115 22:03:41.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.089" level="INFO">${RESULT} = [{'time': 0.024003306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.923699999999834e-05, 'source_diff': 1.923699999999834e-05}, {'time': 0.025513181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:41.085" endtime="20201115 22:03:41.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.102" level="INFO">${OVERHEAD} = {'time': [0.024003306, 0.025513181, 0.027025667, 0.028542236, 0.030057597, 0.031570514, 0.033075861, 0.034591792, 0.036093778, 0.037603097, 0.039108069, 0.040612889, 0.04212725, 0.043646069, 0.0451557...</msg>
<status status="PASS" starttime="20201115 22:03:41.090" endtime="20201115 22:03:41.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.106" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:41.105" endtime="20201115 22:03:41.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.109" level="INFO">VALUE: [1.923699999999834e-05, 1.897299999999852e-05, 1.891700000000024e-05, 1.8930000000000335e-05, 1.8915999999997296e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.8971999999999045e-05, 1.8916000000000766e-05, 1.8930000000000335e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.8986000000005554e-05, 1.893099999999981e-05, 1.8943999999999905e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.891700000000024e-05, 1.8943999999999905e-05, 1.8916000000000766e-05, 1.895899999999895e-05, 1.887500000000153e-05, 1.8862000000001433e-05, 1.894499999999938e-05, 1.891700000000024e-05, 1.895899999999895e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.8944000000006844e-05, 1.89169999999933e-05, 1.887500000000153e-05, 1.895899999999895e-05, 1.893099999999981e-05, 1.890300000000067e-05, 1.893099999999981e-05, 1.8944000000006844e-05, 1.887500000000153e-05, 1.8916000000007704e-05, 1.893099999999981e-05, 1.8944000000006844e-05, 1.8917000000007178e-05, 1.894499999999244e-05, 1.8917000000007178e-05, 1.89169999999933e-05, 1.894499999999244e-05, 1.8943999999992966e-05, 1.89169999999933e-05, 1.8945000000006318e-05, 1.89169999999933e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.107" endtime="20201115 22:03:41.109"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.103" endtime="20201115 22:03:41.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.112" endtime="20201115 22:03:41.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.115" endtime="20201115 22:03:41.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.114" endtime="20201115 22:03:41.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.110" endtime="20201115 22:03:41.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:40.678" endtime="20201115 22:03:41.136"></status>
</kw>
<msg timestamp="20201115 22:03:41.136" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.145" endtime="20201115 22:03:41.230"></status>
</kw>
<msg timestamp="20201115 22:03:41.231" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.143" endtime="20201115 22:03:41.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.233" endtime="20201115 22:03:41.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.239" endtime="20201115 22:03:41.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.141" endtime="20201115 22:03:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.139" endtime="20201115 22:03:41.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.257" endtime="20201115 22:03:41.551"></status>
</kw>
<msg timestamp="20201115 22:03:41.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.254" endtime="20201115 22:03:41.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024498014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024517236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.556" endtime="20201115 22:03:41.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.564" endtime="20201115 22:03:41.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.249" endtime="20201115 22:03:41.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.245" endtime="20201115 22:03:41.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:41.571" level="INFO">${RESULT} = [{'time': 0.024517236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9222000000002765e-05, 'source_diff': 1.9222000000002765e-05}, {'time': 0.0260345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:41.568" endtime="20201115 22:03:41.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:41.584" level="INFO">${OVERHEAD} = {'time': [0.024517236, 0.0260345, 0.027536097, 0.029044639, 0.030553792, 0.032059486, 0.033576, 0.035081069, 0.036593556, 0.038099861, 0.0396025, 0.041112653, 0.042614431, 0.044125569, 0.045635097, 0....</msg>
<status status="PASS" starttime="20201115 22:03:41.572" endtime="20201115 22:03:41.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.589" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:41.588" endtime="20201115 22:03:41.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.591" level="INFO">VALUE: [1.9222000000002765e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.8943999999999905e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.895899999999895e-05, 1.886100000000196e-05, 1.891700000000024e-05, 1.891700000000024e-05, 1.895899999999895e-05, 1.8916000000000766e-05, 1.8930000000000335e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.8957999999999475e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.8916000000000766e-05, 1.8943999999999905e-05, 1.8930000000000335e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8930000000000335e-05, 1.8917000000007178e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.893099999999981e-05, 1.8972000000005984e-05, 1.893099999999981e-05, 1.8944000000006844e-05, 1.894499999999244e-05, 1.893099999999981e-05, 1.8902000000001196e-05, 1.890300000000067e-05, 1.8945000000006318e-05, 1.8916000000007704e-05, 1.894499999999244e-05, 1.8943999999992966e-05]</msg>
<status status="PASS" starttime="20201115 22:03:41.590" endtime="20201115 22:03:41.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.585" endtime="20201115 22:03:41.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.594" endtime="20201115 22:03:41.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:41.597" endtime="20201115 22:03:41.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.596" endtime="20201115 22:03:41.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.592" endtime="20201115 22:03:41.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.137" endtime="20201115 22:03:41.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.241" endtime="20201115 22:03:41.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:39.240" endtime="20201115 22:03:41.619"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.621" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.629" endtime="20201115 22:03:41.718"></status>
</kw>
<msg timestamp="20201115 22:03:41.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.628" endtime="20201115 22:03:41.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:41.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:41.719" endtime="20201115 22:03:41.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.722" endtime="20201115 22:03:41.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.625" endtime="20201115 22:03:41.724"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.623" endtime="20201115 22:03:41.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:41.731" endtime="20201115 22:03:42.019"></status>
</kw>
<msg timestamp="20201115 22:03:42.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025521333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:41.729" endtime="20201115 22:03:42.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025521333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025541153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.023" endtime="20201115 22:03:42.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.031" endtime="20201115 22:03:42.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.727" endtime="20201115 22:03:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.725" endtime="20201115 22:03:42.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.037" level="INFO">${RESULT} = [{'time': 0.025541153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9820000000000254e-05, 'source_diff': 1.9820000000000254e-05}, {'time': 0.027124486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:42.034" endtime="20201115 22:03:42.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.067" level="INFO">${OVERHEAD} = {'time': [0.025541153, 0.027124486, 0.028707444, 0.030299417, 0.031887347, 0.033476, 0.035059444, 0.036655889, 0.038236722, 0.039825667, 0.041414139, 0.04301175, 0.044604458, 0.046200611, 0.047782722,...</msg>
<status status="PASS" starttime="20201115 22:03:42.039" endtime="20201115 22:03:42.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.076" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:42.074" endtime="20201115 22:03:42.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.081" level="INFO">VALUE: [1.9820000000000254e-05, 1.9457999999999975e-05, 1.9499999999998685e-05, 1.947299999999902e-05, 1.9486000000006054e-05, 1.9485999999999115e-05, 1.955500000000443e-05, 1.9513999999998255e-05, 1.9471999999999545e-05, 1.9514000000005194e-05, 1.9486000000006054e-05, 1.9471999999999545e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9499999999998685e-05, 1.9471999999999545e-05, 1.9486000000006054e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.940300000000117e-05, 1.9499999999998685e-05, 1.9457999999999975e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9499999999991746e-05, 1.9500000000005624e-05, 1.944499999999294e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9472000000006484e-05, 1.9499999999991746e-05, 1.945899999999945e-05, 1.9444000000007344e-05, 1.9430000000000835e-05, 1.9513999999998255e-05, 1.9472000000006484e-05, 1.9500000000005624e-05, 1.9499999999991746e-05, 1.9472000000006484e-05, 1.9485999999999115e-05, 1.9486000000012993e-05, 1.9485999999999115e-05, 1.948699999999859e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9542000000011273e-05]</msg>
<status status="PASS" starttime="20201115 22:03:42.078" endtime="20201115 22:03:42.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.069" endtime="20201115 22:03:42.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.088" endtime="20201115 22:03:42.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:42.095" endtime="20201115 22:03:42.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.091" endtime="20201115 22:03:42.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.084" endtime="20201115 22:03:42.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.621" endtime="20201115 22:03:42.119"></status>
</kw>
<msg timestamp="20201115 22:03:42.119" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.138" endtime="20201115 22:03:42.226"></status>
</kw>
<msg timestamp="20201115 22:03:42.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.134" endtime="20201115 22:03:42.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.228" endtime="20201115 22:03:42.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.231" endtime="20201115 22:03:42.233"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.129" endtime="20201115 22:03:42.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.125" endtime="20201115 22:03:42.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.241" endtime="20201115 22:03:42.527"></status>
</kw>
<msg timestamp="20201115 22:03:42.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036939611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036959417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.239" endtime="20201115 22:03:42.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036939611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036959417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.532" endtime="20201115 22:03:42.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.540" endtime="20201115 22:03:42.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.237" endtime="20201115 22:03:42.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.235" endtime="20201115 22:03:42.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:42.546" level="INFO">${RESULT} = [{'time': 0.036959417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9806000000004154e-05, 'source_diff': 1.9806000000004154e-05}, {'time': 0.038554875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:42.543" endtime="20201115 22:03:42.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:42.559" level="INFO">${OVERHEAD} = {'time': [0.036959417, 0.038554875, 0.040140556, 0.041731861, 0.043325681, 0.044907625, 0.046494167, 0.048082361, 0.049668708, 0.051258653, 0.052857403, 0.054453403, 0.056050875, 0.057646194, 0.059234...</msg>
<status status="PASS" starttime="20201115 22:03:42.547" endtime="20201115 22:03:42.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.564" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:42.563" endtime="20201115 22:03:42.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.567" level="INFO">VALUE: [1.9806000000004154e-05, 1.9514000000005194e-05, 1.948699999999859e-05, 1.9430000000000835e-05, 1.9513999999998255e-05, 1.9541999999997395e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.945899999999945e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.947299999999902e-05, 1.9499999999998685e-05, 1.9500000000005624e-05, 1.9500000000005624e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9513999999998255e-05, 1.9499999999991746e-05, 1.9499999999991746e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.954099999999792e-05, 1.9499999999991746e-05, 1.9472000000006484e-05, 1.9485999999999115e-05, 1.95410000000118e-05, 1.9499999999991746e-05, 1.9499999999991746e-05, 1.9499999999991746e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.948699999999859e-05, 1.948699999999859e-05, 1.951299999999878e-05, 1.9500000000005624e-05, 1.9500000000005624e-05, 1.9472000000006484e-05, 1.9472000000006484e-05, 1.9472000000006484e-05, 1.948699999999859e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9473000000005958e-05]</msg>
<status status="PASS" starttime="20201115 22:03:42.565" endtime="20201115 22:03:42.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.560" endtime="20201115 22:03:42.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.570" endtime="20201115 22:03:42.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:42.574" endtime="20201115 22:03:42.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.573" endtime="20201115 22:03:42.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.569" endtime="20201115 22:03:42.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.121" endtime="20201115 22:03:42.595"></status>
</kw>
<msg timestamp="20201115 22:03:42.595" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.605" endtime="20201115 22:03:42.692"></status>
</kw>
<msg timestamp="20201115 22:03:42.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.603" endtime="20201115 22:03:42.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:42.695" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:42.694" endtime="20201115 22:03:42.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.696" endtime="20201115 22:03:42.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.600" endtime="20201115 22:03:42.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.598" endtime="20201115 22:03:42.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:42.706" endtime="20201115 22:03:43.008"></status>
</kw>
<msg timestamp="20201115 22:03:43.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023822042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:42.705" endtime="20201115 22:03:43.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023822042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.012" endtime="20201115 22:03:43.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.020" endtime="20201115 22:03:43.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.702" endtime="20201115 22:03:43.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.701" endtime="20201115 22:03:43.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:43.027" level="INFO">${RESULT} = [{'time': 0.023822042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9806000000000684e-05, 'source_diff': 1.9806000000000684e-05}, {'time': 0.025418292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:43.023" endtime="20201115 22:03:43.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:43.040" level="INFO">${OVERHEAD} = {'time': [0.023822042, 0.025418292, 0.027012319, 0.028610444, 0.0302015, 0.031788042, 0.03337125, 0.034951819, 0.036540903, 0.038123486, 0.039704472, 0.041297944, 0.042880722, 0.044477806, 0.046060611...</msg>
<status status="PASS" starttime="20201115 22:03:43.028" endtime="20201115 22:03:43.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.044" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:43.043" endtime="20201115 22:03:43.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.047" level="INFO">VALUE: [1.9806000000000684e-05, 1.947299999999902e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9527999999997825e-05, 1.9499999999998685e-05, 1.940300000000117e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9500000000005624e-05, 1.9486000000006054e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9471999999999545e-05, 1.9457999999999975e-05, 1.9429999999993897e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.947299999999902e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9500000000005624e-05, 1.948699999999859e-05, 1.9485999999999115e-05, 1.9473000000005958e-05, 1.9499999999991746e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9471999999992606e-05, 1.9472000000006484e-05, 1.9472000000006484e-05, 1.9499999999991746e-05, 1.9485999999999115e-05, 1.9499999999991746e-05, 1.9444000000007344e-05, 1.9513999999998255e-05, 1.9500000000005624e-05, 1.947299999999208e-05, 1.9471999999992606e-05, 1.9500000000005624e-05, 1.940300000000117e-05, 1.9485999999999115e-05, 1.9500000000005624e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.045" endtime="20201115 22:03:43.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.041" endtime="20201115 22:03:43.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.050" endtime="20201115 22:03:43.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.054" endtime="20201115 22:03:43.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.052" endtime="20201115 22:03:43.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.048" endtime="20201115 22:03:43.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:42.596" endtime="20201115 22:03:43.075"></status>
</kw>
<msg timestamp="20201115 22:03:43.075" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.084" endtime="20201115 22:03:43.172"></status>
</kw>
<msg timestamp="20201115 22:03:43.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.082" endtime="20201115 22:03:43.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.175" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.173" endtime="20201115 22:03:43.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.176" endtime="20201115 22:03:43.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.080" endtime="20201115 22:03:43.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.078" endtime="20201115 22:03:43.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.186" endtime="20201115 22:03:43.473"></status>
</kw>
<msg timestamp="20201115 22:03:43.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.185" endtime="20201115 22:03:43.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.477" endtime="20201115 22:03:43.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.485" endtime="20201115 22:03:43.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.182" endtime="20201115 22:03:43.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.181" endtime="20201115 22:03:43.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:43.492" level="INFO">${RESULT} = [{'time': 0.023620681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9806000000000684e-05, 'source_diff': 1.9806000000000684e-05}, {'time': 0.025202917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:43.488" endtime="20201115 22:03:43.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:43.505" level="INFO">${OVERHEAD} = {'time': [0.023620681, 0.025202917, 0.026789153, 0.028383389, 0.029975875, 0.031560889, 0.033144, 0.034728319, 0.036320986, 0.037903361, 0.039501944, 0.041101236, 0.042685833, 0.044285111, 0.045875306...</msg>
<status status="PASS" starttime="20201115 22:03:43.493" endtime="20201115 22:03:43.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.509" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:43.508" endtime="20201115 22:03:43.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.511" level="INFO">VALUE: [1.9806000000000684e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9471999999999545e-05, 1.941700000000074e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.947299999999902e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.941700000000074e-05, 1.9471999999999545e-05, 1.947299999999902e-05, 1.9500000000005624e-05, 1.9471999999999545e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9473000000005958e-05, 1.9471999999992606e-05, 1.9485999999999115e-05, 1.948699999999859e-05, 1.948699999999859e-05, 1.9485999999999115e-05, 1.9528000000004764e-05, 1.9486000000012993e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9457999999999975e-05, 1.9485999999999115e-05, 1.9471999999992606e-05, 1.9499999999991746e-05, 1.9485999999999115e-05, 1.9473000000005958e-05, 1.9485999999999115e-05, 1.9499999999991746e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9500000000005624e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.510" endtime="20201115 22:03:43.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.505" endtime="20201115 22:03:43.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.515" endtime="20201115 22:03:43.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.518" endtime="20201115 22:03:43.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.517" endtime="20201115 22:03:43.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.513" endtime="20201115 22:03:43.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.076" endtime="20201115 22:03:43.539"></status>
</kw>
<msg timestamp="20201115 22:03:43.539" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.548" endtime="20201115 22:03:43.636"></status>
</kw>
<msg timestamp="20201115 22:03:43.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.546" endtime="20201115 22:03:43.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:43.638" endtime="20201115 22:03:43.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.640" endtime="20201115 22:03:43.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.544" endtime="20201115 22:03:43.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.542" endtime="20201115 22:03:43.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.650" endtime="20201115 22:03:43.952"></status>
</kw>
<msg timestamp="20201115 22:03:43.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023203069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.649" endtime="20201115 22:03:43.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023203069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:43.956" endtime="20201115 22:03:43.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.964" endtime="20201115 22:03:43.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.646" endtime="20201115 22:03:43.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.644" endtime="20201115 22:03:43.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:43.971" level="INFO">${RESULT} = [{'time': 0.023222889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9820000000000254e-05, 'source_diff': 1.9820000000000254e-05}, {'time': 0.024808028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:43.968" endtime="20201115 22:03:43.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:43.984" level="INFO">${OVERHEAD} = {'time': [0.023222889, 0.024808028, 0.026392778, 0.027976514, 0.029564611, 0.031159583, 0.032751694, 0.034334111, 0.035924319, 0.037513639, 0.039096111, 0.040680889, 0.042279403, 0.043861875, 0.045452...</msg>
<status status="PASS" starttime="20201115 22:03:43.972" endtime="20201115 22:03:43.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.989" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:43.988" endtime="20201115 22:03:43.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:43.991" level="INFO">VALUE: [1.9820000000000254e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9444000000000405e-05, 1.9500000000002154e-05, 1.951299999999878e-05, 1.9513999999998255e-05, 1.9486000000006054e-05, 1.9485999999999115e-05, 1.9486000000006054e-05, 1.9485999999999115e-05, 1.9541999999997395e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.9486000000006054e-05, 1.9485999999999115e-05, 1.947299999999902e-05, 1.9500000000005624e-05, 1.948699999999859e-05, 1.954100000000486e-05, 1.944499999999988e-05, 1.9471999999999545e-05, 1.9499999999998685e-05, 1.9500000000005624e-05, 1.948699999999859e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9528000000004764e-05, 1.9513999999998255e-05, 1.9528000000004764e-05, 1.9485999999999115e-05, 1.9485999999999115e-05, 1.94169999999938e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9485999999999115e-05, 1.9500000000005624e-05, 1.9513999999998255e-05, 1.9499999999991746e-05, 1.9472000000006484e-05, 1.9430000000000835e-05, 1.9541999999997395e-05, 1.9500000000005624e-05, 1.9499999999991746e-05, 1.9471999999992606e-05, 1.9485999999999115e-05, 1.9499999999991746e-05, 1.944499999999294e-05]</msg>
<status status="PASS" starttime="20201115 22:03:43.990" endtime="20201115 22:03:43.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.985" endtime="20201115 22:03:43.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:43.995" endtime="20201115 22:03:43.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:43.998" endtime="20201115 22:03:44.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.997" endtime="20201115 22:03:44.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.993" endtime="20201115 22:03:44.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:43.540" endtime="20201115 22:03:44.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.620" endtime="20201115 22:03:44.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:41.619" endtime="20201115 22:03:44.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.798" endtime="20201115 22:03:44.020"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:44.024" endtime="20201115 22:03:44.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.023" endtime="20201115 22:03:44.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:44.021" endtime="20201115 22:03:44.045"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:49.729" endtime="20201115 22:03:44.045" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:49.976" endtime="20201115 22:03:44.052"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:01:47.828" endtime="20201115 22:03:44.072"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_saml10-xpro</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
