<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:01:39.321" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:39.880" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:39.888" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:40.987" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:39.879" endtime="20201115 22:01:40.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:40.990" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:40.988" endtime="20201115 22:01:40.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.877" endtime="20201115 22:01:40.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:40.993" endtime="20201115 22:01:41.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:40.992" endtime="20201115 22:01:41.177"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.189" endtime="20201115 22:01:41.204"></status>
</kw>
<msg timestamp="20201115 22:01:41.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.188" endtime="20201115 22:01:41.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.205" endtime="20201115 22:01:41.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.210" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:41.208" endtime="20201115 22:01:41.211"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:41.185" endtime="20201115 22:01:41.211"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:41.183" endtime="20201115 22:01:41.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.182" endtime="20201115 22:01:41.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:41.216" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:41.215" endtime="20201115 22:01:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.213" endtime="20201115 22:01:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.181" endtime="20201115 22:01:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.180" endtime="20201115 22:01:41.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.218" endtime="20201115 22:01:41.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.179" endtime="20201115 22:01:41.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.221" endtime="20201115 22:01:41.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.177" endtime="20201115 22:01:41.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:39.875" endtime="20201115 22:01:41.223"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:41.229" endtime="20201115 22:01:41.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.228" endtime="20201115 22:01:41.249"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.264" endtime="20201115 22:01:41.279"></status>
</kw>
<msg timestamp="20201115 22:01:41.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.262" endtime="20201115 22:01:41.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.280" endtime="20201115 22:01:41.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.285" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:41.283" endtime="20201115 22:01:41.285"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:41.259" endtime="20201115 22:01:41.286"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:41.257" endtime="20201115 22:01:41.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.255" endtime="20201115 22:01:41.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:41.290" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:41.289" endtime="20201115 22:01:41.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.287" endtime="20201115 22:01:41.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.254" endtime="20201115 22:01:41.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.253" endtime="20201115 22:01:41.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.292" endtime="20201115 22:01:41.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.252" endtime="20201115 22:01:41.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.250" endtime="20201115 22:01:41.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.226" endtime="20201115 22:01:41.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.302" endtime="20201115 22:01:41.312"></status>
</kw>
<msg timestamp="20201115 22:01:41.313" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.300" endtime="20201115 22:01:41.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.315" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:41.314" endtime="20201115 22:01:41.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:41.316" endtime="20201115 22:01:41.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.298" endtime="20201115 22:01:41.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.295" endtime="20201115 22:01:41.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.324" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:01:41.322" endtime="20201115 22:01:41.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.326" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 22:01:41.325" endtime="20201115 22:01:41.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.320" endtime="20201115 22:01:41.326"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:41.223" endtime="20201115 22:01:41.327" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:39.432" endtime="20201115 22:01:41.330"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:01:41.383" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:01:41.391" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:01:42.602" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:01:41.382" endtime="20201115 22:01:42.603"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.605" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:01:42.604" endtime="20201115 22:01:42.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.381" endtime="20201115 22:01:42.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.608" endtime="20201115 22:01:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.607" endtime="20201115 22:01:42.828"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.841" endtime="20201115 22:01:42.855"></status>
</kw>
<msg timestamp="20201115 22:01:42.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.839" endtime="20201115 22:01:42.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.856" endtime="20201115 22:01:42.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.861" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:42.859" endtime="20201115 22:01:42.861"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.837" endtime="20201115 22:01:42.862"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.834" endtime="20201115 22:01:42.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.833" endtime="20201115 22:01:42.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:42.866" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:42.866" endtime="20201115 22:01:42.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.863" endtime="20201115 22:01:42.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.832" endtime="20201115 22:01:42.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.832" endtime="20201115 22:01:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.868" endtime="20201115 22:01:42.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.831" endtime="20201115 22:01:42.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.871" endtime="20201115 22:01:42.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.829" endtime="20201115 22:01:42.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:41.379" endtime="20201115 22:01:42.873"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:42.880" endtime="20201115 22:01:42.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.878" endtime="20201115 22:01:42.900"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.913" endtime="20201115 22:01:42.927"></status>
</kw>
<msg timestamp="20201115 22:01:42.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.912" endtime="20201115 22:01:42.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.928" endtime="20201115 22:01:42.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:42.931" endtime="20201115 22:01:42.933"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.909" endtime="20201115 22:01:42.934"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:42.907" endtime="20201115 22:01:42.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.905" endtime="20201115 22:01:42.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:42.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:42.938" endtime="20201115 22:01:42.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.936" endtime="20201115 22:01:42.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.905" endtime="20201115 22:01:42.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.904" endtime="20201115 22:01:42.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.940" endtime="20201115 22:01:42.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.903" endtime="20201115 22:01:42.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.901" endtime="20201115 22:01:42.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.876" endtime="20201115 22:01:42.943"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:42.946" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.953" endtime="20201115 22:01:42.965"></status>
</kw>
<msg timestamp="20201115 22:01:42.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.952" endtime="20201115 22:01:42.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:42.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:42.966" endtime="20201115 22:01:42.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.969" endtime="20201115 22:01:42.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.949" endtime="20201115 22:01:42.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.947" endtime="20201115 22:01:42.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:42.978" endtime="20201115 22:01:43.280"></status>
</kw>
<msg timestamp="20201115 22:01:43.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063862486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063862972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:42.976" endtime="20201115 22:01:43.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063862486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063862972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.284" endtime="20201115 22:01:43.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.293" endtime="20201115 22:01:43.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.974" endtime="20201115 22:01:43.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.972" endtime="20201115 22:01:43.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.299" level="INFO">${RESULT} = [{'time': 0.063862972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.063875806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:43.296" endtime="20201115 22:01:43.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.313" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.86000000007869e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201115 22:01:43.301" endtime="20201115 22:01:43.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.317" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:43.316" endtime="20201115 22:01:43.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.320" level="INFO">VALUE: [4.86000000007869e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.729999999869561e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 22:01:43.318" endtime="20201115 22:01:43.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.314" endtime="20201115 22:01:43.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.323" endtime="20201115 22:01:43.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.327" endtime="20201115 22:01:43.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.325" endtime="20201115 22:01:43.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.322" endtime="20201115 22:01:43.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.946" endtime="20201115 22:01:43.347"></status>
</kw>
<msg timestamp="20201115 22:01:43.347" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.355" endtime="20201115 22:01:43.366"></status>
</kw>
<msg timestamp="20201115 22:01:43.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.353" endtime="20201115 22:01:43.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.367" endtime="20201115 22:01:43.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.370" endtime="20201115 22:01:43.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.351" endtime="20201115 22:01:43.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.349" endtime="20201115 22:01:43.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.380" endtime="20201115 22:01:43.666"></status>
</kw>
<msg timestamp="20201115 22:01:43.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018359972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.378" endtime="20201115 22:01:43.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018359972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.670" endtime="20201115 22:01:43.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.678" endtime="20201115 22:01:43.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.376" endtime="20201115 22:01:43.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.374" endtime="20201115 22:01:43.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:43.685" level="INFO">${RESULT} = [{'time': 0.018360458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018372833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:43.682" endtime="20201115 22:01:43.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:43.698" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-0...</msg>
<status status="PASS" starttime="20201115 22:01:43.686" endtime="20201115 22:01:43.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.703" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:43.702" endtime="20201115 22:01:43.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.705" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:01:43.704" endtime="20201115 22:01:43.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.699" endtime="20201115 22:01:43.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.708" endtime="20201115 22:01:43.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:43.712" endtime="20201115 22:01:43.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.710" endtime="20201115 22:01:43.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.707" endtime="20201115 22:01:43.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.348" endtime="20201115 22:01:43.732"></status>
</kw>
<msg timestamp="20201115 22:01:43.732" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.740" endtime="20201115 22:01:43.750"></status>
</kw>
<msg timestamp="20201115 22:01:43.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.739" endtime="20201115 22:01:43.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:43.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:43.751" endtime="20201115 22:01:43.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.754" endtime="20201115 22:01:43.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.736" endtime="20201115 22:01:43.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.734" endtime="20201115 22:01:43.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:43.764" endtime="20201115 22:01:44.050"></status>
</kw>
<msg timestamp="20201115 22:01:44.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:43.762" endtime="20201115 22:01:44.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018368972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.054" endtime="20201115 22:01:44.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.063" endtime="20201115 22:01:44.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.759" endtime="20201115 22:01:44.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.757" endtime="20201115 22:01:44.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.070" level="INFO">${RESULT} = [{'time': 0.018369444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018381292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:44.067" endtime="20201115 22:01:44.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.084" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301...</msg>
<status status="PASS" starttime="20201115 22:01:44.071" endtime="20201115 22:01:44.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.089" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:44.087" endtime="20201115 22:01:44.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.091" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201115 22:01:44.090" endtime="20201115 22:01:44.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.085" endtime="20201115 22:01:44.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.094" endtime="20201115 22:01:44.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.097" endtime="20201115 22:01:44.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.096" endtime="20201115 22:01:44.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.093" endtime="20201115 22:01:44.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:43.733" endtime="20201115 22:01:44.118"></status>
</kw>
<msg timestamp="20201115 22:01:44.118" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.126" endtime="20201115 22:01:44.136"></status>
</kw>
<msg timestamp="20201115 22:01:44.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.125" endtime="20201115 22:01:44.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.137" endtime="20201115 22:01:44.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.140" endtime="20201115 22:01:44.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.122" endtime="20201115 22:01:44.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.120" endtime="20201115 22:01:44.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.150" endtime="20201115 22:01:44.436"></status>
</kw>
<msg timestamp="20201115 22:01:44.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018720958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.147" endtime="20201115 22:01:44.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018720958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.440" endtime="20201115 22:01:44.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.449" endtime="20201115 22:01:44.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.145" endtime="20201115 22:01:44.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.143" endtime="20201115 22:01:44.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.456" level="INFO">${RESULT} = [{'time': 0.018721444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018731444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.452" endtime="20201115 22:01:44.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.469" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201115 22:01:44.457" endtime="20201115 22:01:44.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.473" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:44.472" endtime="20201115 22:01:44.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.475" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 22:01:44.474" endtime="20201115 22:01:44.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.470" endtime="20201115 22:01:44.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.479" endtime="20201115 22:01:44.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.482" endtime="20201115 22:01:44.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.481" endtime="20201115 22:01:44.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.477" endtime="20201115 22:01:44.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.119" endtime="20201115 22:01:44.503"></status>
</kw>
<msg timestamp="20201115 22:01:44.503" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.511" endtime="20201115 22:01:44.521"></status>
</kw>
<msg timestamp="20201115 22:01:44.521" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.509" endtime="20201115 22:01:44.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.522" endtime="20201115 22:01:44.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.525" endtime="20201115 22:01:44.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.507" endtime="20201115 22:01:44.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.505" endtime="20201115 22:01:44.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.534" endtime="20201115 22:01:44.825"></status>
</kw>
<msg timestamp="20201115 22:01:44.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018546222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.533" endtime="20201115 22:01:44.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018546222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:44.829" endtime="20201115 22:01:44.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.837" endtime="20201115 22:01:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.530" endtime="20201115 22:01:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.528" endtime="20201115 22:01:44.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:44.844" level="INFO">${RESULT} = [{'time': 0.018546708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018554069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:44.840" endtime="20201115 22:01:44.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:44.857" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201115 22:01:44.845" endtime="20201115 22:01:44.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.861" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 22:01:44.860" endtime="20201115 22:01:44.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.864" level="INFO">VALUE: [4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201115 22:01:44.862" endtime="20201115 22:01:44.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.858" endtime="20201115 22:01:44.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.867" endtime="20201115 22:01:44.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.870" endtime="20201115 22:01:44.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.868" endtime="20201115 22:01:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.865" endtime="20201115 22:01:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.503" endtime="20201115 22:01:44.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:42.944" endtime="20201115 22:01:44.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.896" endtime="20201115 22:01:44.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.894" endtime="20201115 22:01:44.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.892" endtime="20201115 22:01:44.916"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:42.874" endtime="20201115 22:01:44.916" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:44.924" endtime="20201115 22:01:44.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.923" endtime="20201115 22:01:44.944"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.958" endtime="20201115 22:01:44.973"></status>
</kw>
<msg timestamp="20201115 22:01:44.973" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.957" endtime="20201115 22:01:44.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.974" endtime="20201115 22:01:44.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:44.979" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:44.977" endtime="20201115 22:01:44.979"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.953" endtime="20201115 22:01:44.980"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:44.951" endtime="20201115 22:01:44.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.950" endtime="20201115 22:01:44.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:44.985" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:44.984" endtime="20201115 22:01:44.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.982" endtime="20201115 22:01:44.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.949" endtime="20201115 22:01:44.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.948" endtime="20201115 22:01:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.986" endtime="20201115 22:01:44.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.947" endtime="20201115 22:01:44.988"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.945" endtime="20201115 22:01:44.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.921" endtime="20201115 22:01:44.989"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 22:01:44.992" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:44.999" endtime="20201115 22:01:45.011"></status>
</kw>
<msg timestamp="20201115 22:01:45.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:44.998" endtime="20201115 22:01:45.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.014" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.013" endtime="20201115 22:01:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.015" endtime="20201115 22:01:45.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.995" endtime="20201115 22:01:45.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.993" endtime="20201115 22:01:45.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.025" endtime="20201115 22:01:45.308"></status>
</kw>
<msg timestamp="20201115 22:01:45.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066321708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.023" endtime="20201115 22:01:45.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066321708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.313" endtime="20201115 22:01:45.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.321" endtime="20201115 22:01:45.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.020" endtime="20201115 22:01:45.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.019" endtime="20201115 22:01:45.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.329" level="INFO">${RESULT} = [{'time': 0.066321708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999991883e-06, 'source_diff': 2.651999999991883e-06}, {'time': 0.066329917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.326" endtime="20201115 22:01:45.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.342" level="INFO">${OVERHEAD} = {'source_diff': [2.651999999991883e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.7079999999901627e-06, 2.6800000000049007e-06, 2.6670000000117433e-06, 2.6660000000122697e-06, 2.68099999999049...</msg>
<status status="PASS" starttime="20201115 22:01:45.330" endtime="20201115 22:01:45.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.346" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:45.345" endtime="20201115 22:01:45.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.349" level="INFO">VALUE: [2.651999999991883e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.7079999999901627e-06, 2.6800000000049007e-06, 2.6670000000117433e-06, 2.6660000000122697e-06, 2.6809999999904965e-06, 2.6669999999978655e-06, 2.6530000000052345e-06, 2.6530000000052345e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.6949999999970053e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.6810000000043743e-06, 2.6939999999975317e-06, 2.6800000000049007e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.6800000000049007e-06, 2.6939999999975317e-06, 2.6530000000052345e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6389999999987257e-06, 2.6809999999904965e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.624999999992217e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.6810000000043743e-06, 2.6670000000117433e-06, 2.6529999999913567e-06, 2.6670000000117433e-06, 2.652000000005761e-06, 2.665999999998392e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.347" endtime="20201115 22:01:45.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.343" endtime="20201115 22:01:45.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.352" endtime="20201115 22:01:45.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.355" endtime="20201115 22:01:45.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.354" endtime="20201115 22:01:45.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.350" endtime="20201115 22:01:45.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.992" endtime="20201115 22:01:45.376"></status>
</kw>
<msg timestamp="20201115 22:01:45.376" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.384" endtime="20201115 22:01:45.396"></status>
</kw>
<msg timestamp="20201115 22:01:45.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.382" endtime="20201115 22:01:45.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.397" endtime="20201115 22:01:45.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.400" endtime="20201115 22:01:45.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.380" endtime="20201115 22:01:45.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.378" endtime="20201115 22:01:45.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.409" endtime="20201115 22:01:45.698"></status>
</kw>
<msg timestamp="20201115 22:01:45.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.407" endtime="20201115 22:01:45.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.702" endtime="20201115 22:01:45.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.710" endtime="20201115 22:01:45.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.404" endtime="20201115 22:01:45.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.403" endtime="20201115 22:01:45.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:45.717" level="INFO">${RESULT} = [{'time': 0.019487542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.019504917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:45.714" endtime="20201115 22:01:45.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:45.732" level="INFO">${OVERHEAD} = {'source_diff': [2.653000000001765e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06...</msg>
<status status="PASS" starttime="20201115 22:01:45.718" endtime="20201115 22:01:45.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.736" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:45.735" endtime="20201115 22:01:45.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.739" level="INFO">VALUE: [2.653000000001765e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.637999999999252e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.7229999999996146e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201115 22:01:45.737" endtime="20201115 22:01:45.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.733" endtime="20201115 22:01:45.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.742" endtime="20201115 22:01:45.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:45.745" endtime="20201115 22:01:45.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.744" endtime="20201115 22:01:45.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.740" endtime="20201115 22:01:45.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.377" endtime="20201115 22:01:45.766"></status>
</kw>
<msg timestamp="20201115 22:01:45.766" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.774" endtime="20201115 22:01:45.785"></status>
</kw>
<msg timestamp="20201115 22:01:45.785" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.772" endtime="20201115 22:01:45.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:45.788" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:45.786" endtime="20201115 22:01:45.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.789" endtime="20201115 22:01:45.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.769" endtime="20201115 22:01:45.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.768" endtime="20201115 22:01:45.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:45.798" endtime="20201115 22:01:46.085"></status>
</kw>
<msg timestamp="20201115 22:01:46.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:45.797" endtime="20201115 22:01:46.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.089" endtime="20201115 22:01:46.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.097" endtime="20201115 22:01:46.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.794" endtime="20201115 22:01:46.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.792" endtime="20201115 22:01:46.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.104" level="INFO">${RESULT} = [{'time': 0.019621806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.019632653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:46.100" endtime="20201115 22:01:46.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.117" level="INFO">${OVERHEAD} = {'source_diff': [2.6949999999970053e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.653000000001765e-0...</msg>
<status status="PASS" starttime="20201115 22:01:46.105" endtime="20201115 22:01:46.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.121" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:46.120" endtime="20201115 22:01:46.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.124" level="INFO">VALUE: [2.6949999999970053e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.7229999999996146e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.722000000000141e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.735999999999711e-06, 2.651999999998822e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.637999999999252e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.122" endtime="20201115 22:01:46.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.118" endtime="20201115 22:01:46.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.127" endtime="20201115 22:01:46.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.131" endtime="20201115 22:01:46.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.129" endtime="20201115 22:01:46.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.125" endtime="20201115 22:01:46.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:45.766" endtime="20201115 22:01:46.151"></status>
</kw>
<msg timestamp="20201115 22:01:46.151" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.159" endtime="20201115 22:01:46.171"></status>
</kw>
<msg timestamp="20201115 22:01:46.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.158" endtime="20201115 22:01:46.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.173" endtime="20201115 22:01:46.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.176" endtime="20201115 22:01:46.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.155" endtime="20201115 22:01:46.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.153" endtime="20201115 22:01:46.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.185" endtime="20201115 22:01:46.472"></status>
</kw>
<msg timestamp="20201115 22:01:46.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.184" endtime="20201115 22:01:46.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.477" endtime="20201115 22:01:46.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.485" endtime="20201115 22:01:46.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.181" endtime="20201115 22:01:46.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.179" endtime="20201115 22:01:46.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.492" level="INFO">${RESULT} = [{'time': 0.019648403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.019655236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:46.489" endtime="20201115 22:01:46.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.505" level="INFO">${OVERHEAD} = {'source_diff': [2.6809999999974354e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e...</msg>
<status status="PASS" starttime="20201115 22:01:46.493" endtime="20201115 22:01:46.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.509" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:46.508" endtime="20201115 22:01:46.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.512" level="INFO">VALUE: [2.6809999999974354e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.7090000000000447e-06, 2.6529999999982956e-06, 2.708000000000571e-06, 2.651999999998822e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6660000000018613e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.511" endtime="20201115 22:01:46.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.506" endtime="20201115 22:01:46.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.515" endtime="20201115 22:01:46.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.518" endtime="20201115 22:01:46.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.517" endtime="20201115 22:01:46.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.513" endtime="20201115 22:01:46.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.152" endtime="20201115 22:01:46.539"></status>
</kw>
<msg timestamp="20201115 22:01:46.539" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.547" endtime="20201115 22:01:46.558"></status>
</kw>
<msg timestamp="20201115 22:01:46.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.545" endtime="20201115 22:01:46.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.566" endtime="20201115 22:01:46.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.569" endtime="20201115 22:01:46.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.543" endtime="20201115 22:01:46.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.541" endtime="20201115 22:01:46.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.578" endtime="20201115 22:01:46.865"></status>
</kw>
<msg timestamp="20201115 22:01:46.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.577" endtime="20201115 22:01:46.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:46.870" endtime="20201115 22:01:46.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.878" endtime="20201115 22:01:46.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.574" endtime="20201115 22:01:46.880"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.572" endtime="20201115 22:01:46.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:46.885" level="INFO">${RESULT} = [{'time': 0.019609736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.019618083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:46.881" endtime="20201115 22:01:46.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:46.898" level="INFO">${OVERHEAD} = {'source_diff': [2.679999999997962e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.610999999999586e...</msg>
<status status="PASS" starttime="20201115 22:01:46.886" endtime="20201115 22:01:46.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.902" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 22:01:46.901" endtime="20201115 22:01:46.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:46.905" level="INFO">VALUE: [2.679999999997962e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.5839999999999197e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201115 22:01:46.903" endtime="20201115 22:01:46.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.899" endtime="20201115 22:01:46.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:46.908" endtime="20201115 22:01:46.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.911" endtime="20201115 22:01:46.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.910" endtime="20201115 22:01:46.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.906" endtime="20201115 22:01:46.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.540" endtime="20201115 22:01:46.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:44.990" endtime="20201115 22:01:46.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.937" endtime="20201115 22:01:46.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.935" endtime="20201115 22:01:46.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.934" endtime="20201115 22:01:46.957"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:44.918" endtime="20201115 22:01:46.958" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:46.967" endtime="20201115 22:01:46.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.966" endtime="20201115 22:01:46.987"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.000" endtime="20201115 22:01:47.015"></status>
</kw>
<msg timestamp="20201115 22:01:47.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:46.998" endtime="20201115 22:01:47.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.016" endtime="20201115 22:01:47.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.021" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:01:47.019" endtime="20201115 22:01:47.021"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.996" endtime="20201115 22:01:47.022"></status>
</kw>
<status status="FAIL" starttime="20201115 22:01:46.993" endtime="20201115 22:01:47.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.992" endtime="20201115 22:01:47.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:01:47.026" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:01:47.026" endtime="20201115 22:01:47.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.023" endtime="20201115 22:01:47.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.991" endtime="20201115 22:01:47.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.991" endtime="20201115 22:01:47.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.028" endtime="20201115 22:01:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.989" endtime="20201115 22:01:47.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.988" endtime="20201115 22:01:47.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:46.964" endtime="20201115 22:01:47.031"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.034" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.044" endtime="20201115 22:01:47.060"></status>
</kw>
<msg timestamp="20201115 22:01:47.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.042" endtime="20201115 22:01:47.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.061" endtime="20201115 22:01:47.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.064" endtime="20201115 22:01:47.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.039" endtime="20201115 22:01:47.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.037" endtime="20201115 22:01:47.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.073" endtime="20201115 22:01:47.359"></status>
</kw>
<msg timestamp="20201115 22:01:47.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069321792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.072" endtime="20201115 22:01:47.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069321792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.363" endtime="20201115 22:01:47.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.371" endtime="20201115 22:01:47.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.069" endtime="20201115 22:01:47.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.067" endtime="20201115 22:01:47.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.378" level="INFO">${RESULT} = [{'time': 0.069321792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5559999999919025e-06, 'source_diff': 7.5559999999919025e-06}, {'time': 0.069442097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:47.374" endtime="20201115 22:01:47.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.393" level="INFO">${OVERHEAD} = {'source_diff': [7.5559999999919025e-06, 7.514000000000132e-06, 7.5280000000066405e-06, 7.555000000006307e-06, 7.5280000000066405e-06, 7.486999999986588e-06, 7.443999999995343e-06, 7.5419999999992715e...</msg>
<status status="PASS" starttime="20201115 22:01:47.379" endtime="20201115 22:01:47.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.398" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:47.397" endtime="20201115 22:01:47.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.400" level="INFO">VALUE: [7.5559999999919025e-06, 7.514000000000132e-06, 7.5280000000066405e-06, 7.555000000006307e-06, 7.5280000000066405e-06, 7.486999999986588e-06, 7.443999999995343e-06, 7.5419999999992715e-06, 7.526999999993289e-06, 7.514000000000132e-06, 7.5280000000066405e-06, 7.55600000000578e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.5280000000066405e-06, 7.514000000000132e-06, 7.5559999999919025e-06, 7.471999999994483e-06, 7.514000000000132e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.5830000000054465e-06, 7.5419999999992715e-06, 7.500000000007501e-06, 7.527999999992763e-06, 7.5559999999919025e-06, 7.5280000000066405e-06, 7.569999999998411e-06, 7.526999999993289e-06, 7.514000000000132e-06, 7.499999999993623e-06, 7.514000000000132e-06, 7.527999999992763e-06, 7.500000000007501e-06, 7.514000000000132e-06, 7.5280000000066405e-06, 7.513000000000658e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.5280000000066405e-06, 7.527999999992763e-06, 7.499999999993623e-06, 7.5690000000128155e-06, 7.527999999992763e-06, 7.527000000007167e-06, 7.527999999992763e-06, 7.514000000000132e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.399" endtime="20201115 22:01:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.394" endtime="20201115 22:01:47.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.403" endtime="20201115 22:01:47.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.407" endtime="20201115 22:01:47.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.405" endtime="20201115 22:01:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.402" endtime="20201115 22:01:47.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.035" endtime="20201115 22:01:47.427"></status>
</kw>
<msg timestamp="20201115 22:01:47.428" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.437" endtime="20201115 22:01:47.453"></status>
</kw>
<msg timestamp="20201115 22:01:47.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.435" endtime="20201115 22:01:47.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.455" endtime="20201115 22:01:47.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.457" endtime="20201115 22:01:47.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.433" endtime="20201115 22:01:47.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.430" endtime="20201115 22:01:47.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.466" endtime="20201115 22:01:47.751"></status>
</kw>
<msg timestamp="20201115 22:01:47.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.465" endtime="20201115 22:01:47.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:47.755" endtime="20201115 22:01:47.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.763" endtime="20201115 22:01:47.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.462" endtime="20201115 22:01:47.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.460" endtime="20201115 22:01:47.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:47.770" level="INFO">${RESULT} = [{'time': 0.022086875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.022205208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:47.766" endtime="20201115 22:01:47.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:47.784" level="INFO">${OVERHEAD} = {'source_diff': [7.5419999999992715e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.570000000001881e-06...</msg>
<status status="PASS" starttime="20201115 22:01:47.771" endtime="20201115 22:01:47.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.788" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:47.787" endtime="20201115 22:01:47.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.791" level="INFO">VALUE: [7.5419999999992715e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.570000000001881e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.485999999997522e-06, 7.499999999997092e-06, 7.458999999997856e-06, 7.499999999997092e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.443999999998813e-06, 7.556000000002311e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.485999999997522e-06, 7.527999999999702e-06, 7.528000000003171e-06, 7.527000000000228e-06, 7.513999999996662e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.485999999997522e-06, 7.485999999997522e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06]</msg>
<status status="PASS" starttime="20201115 22:01:47.789" endtime="20201115 22:01:47.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.785" endtime="20201115 22:01:47.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.794" endtime="20201115 22:01:47.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:47.797" endtime="20201115 22:01:47.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.796" endtime="20201115 22:01:47.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.792" endtime="20201115 22:01:47.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.428" endtime="20201115 22:01:47.818"></status>
</kw>
<msg timestamp="20201115 22:01:47.818" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.827" endtime="20201115 22:01:47.843"></status>
</kw>
<msg timestamp="20201115 22:01:47.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.826" endtime="20201115 22:01:47.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:47.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:47.845" endtime="20201115 22:01:47.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.848" endtime="20201115 22:01:47.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.823" endtime="20201115 22:01:47.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.821" endtime="20201115 22:01:47.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:47.856" endtime="20201115 22:01:48.142"></status>
</kw>
<msg timestamp="20201115 22:01:48.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:47.855" endtime="20201115 22:01:48.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:48.146" endtime="20201115 22:01:48.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.154" endtime="20201115 22:01:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.852" endtime="20201115 22:01:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.851" endtime="20201115 22:01:48.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.161" level="INFO">${RESULT} = [{'time': 0.0226145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022727014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:48.157" endtime="20201115 22:01:48.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.175" level="INFO">${OVERHEAD} = {'source_diff': [7.527999999999702e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.555000000002837e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.584000000001451e-06...</msg>
<status status="PASS" starttime="20201115 22:01:48.162" endtime="20201115 22:01:48.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.180" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:48.178" endtime="20201115 22:01:48.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.182" level="INFO">VALUE: [7.527999999999702e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.555000000002837e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.584000000001451e-06, 7.555000000002837e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.597999999997551e-06, 7.570000000001881e-06, 7.444000000002282e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.542000000002741e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.540999999999798e-06, 7.556000000002311e-06, 7.569000000002407e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.527000000000228e-06, 7.542000000002741e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.527000000000228e-06, 7.611000000001117e-06, 7.527999999999702e-06, 7.457999999998383e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.181" endtime="20201115 22:01:48.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.176" endtime="20201115 22:01:48.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.185" endtime="20201115 22:01:48.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.189" endtime="20201115 22:01:48.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.187" endtime="20201115 22:01:48.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.184" endtime="20201115 22:01:48.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.819" endtime="20201115 22:01:48.209"></status>
</kw>
<msg timestamp="20201115 22:01:48.210" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.219" endtime="20201115 22:01:48.235"></status>
</kw>
<msg timestamp="20201115 22:01:48.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.217" endtime="20201115 22:01:48.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.236" endtime="20201115 22:01:48.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.239" endtime="20201115 22:01:48.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.215" endtime="20201115 22:01:48.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.212" endtime="20201115 22:01:48.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.248" endtime="20201115 22:01:48.533"></status>
</kw>
<msg timestamp="20201115 22:01:48.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.246" endtime="20201115 22:01:48.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.537" endtime="20201115 22:01:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.545" endtime="20201115 22:01:48.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.244" endtime="20201115 22:01:48.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.242" endtime="20201115 22:01:48.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.553" level="INFO">${RESULT} = [{'time': 0.022533458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.022652792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.549" endtime="20201115 22:01:48.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.566" level="INFO">${OVERHEAD} = {'source_diff': [7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.527000000000228e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:48.554" endtime="20201115 22:01:48.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.570" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:48.569" endtime="20201115 22:01:48.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.573" level="INFO">VALUE: [7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.527000000000228e-06, 7.555999999998841e-06, 7.542000000002741e-06, 7.5419999999992715e-06, 7.583999999997981e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.458999999997856e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.499999999997092e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.458000000001852e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.527000000000228e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5269999999967585e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.572" endtime="20201115 22:01:48.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.567" endtime="20201115 22:01:48.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.576" endtime="20201115 22:01:48.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.580" endtime="20201115 22:01:48.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.578" endtime="20201115 22:01:48.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.574" endtime="20201115 22:01:48.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.210" endtime="20201115 22:01:48.601"></status>
</kw>
<msg timestamp="20201115 22:01:48.601" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.610" endtime="20201115 22:01:48.626"></status>
</kw>
<msg timestamp="20201115 22:01:48.626" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.608" endtime="20201115 22:01:48.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.629" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:48.627" endtime="20201115 22:01:48.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.630" endtime="20201115 22:01:48.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.606" endtime="20201115 22:01:48.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.604" endtime="20201115 22:01:48.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.639" endtime="20201115 22:01:48.927"></status>
</kw>
<msg timestamp="20201115 22:01:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.637" endtime="20201115 22:01:48.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:48.932" endtime="20201115 22:01:48.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.940" endtime="20201115 22:01:48.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.635" endtime="20201115 22:01:48.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.633" endtime="20201115 22:01:48.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:48.946" level="INFO">${RESULT} = [{'time': 0.022555861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.022670056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:48.943" endtime="20201115 22:01:48.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:48.960" level="INFO">${OVERHEAD} = {'source_diff': [7.527999999999702e-06, 7.5419999999992715e-06, 7.583000000001977e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527999999999702e-06...</msg>
<status status="PASS" starttime="20201115 22:01:48.947" endtime="20201115 22:01:48.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.964" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 22:01:48.963" endtime="20201115 22:01:48.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.966" level="INFO">VALUE: [7.527999999999702e-06, 7.5419999999992715e-06, 7.583000000001977e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.458000000001852e-06, 7.514000000000132e-06, 7.513000000000658e-06, 7.499999999997092e-06, 7.555999999998841e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.444999999998286e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.458000000001852e-06, 7.527000000000228e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.514000000000132e-06, 7.541000000003267e-06, 7.527000000000228e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.514000000000132e-06, 7.597999999997551e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.485999999997522e-06, 7.540999999999798e-06, 7.4870000000004655e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:48.965" endtime="20201115 22:01:48.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.960" endtime="20201115 22:01:48.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:48.970" endtime="20201115 22:01:48.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:48.973" endtime="20201115 22:01:48.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.972" endtime="20201115 22:01:48.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.968" endtime="20201115 22:01:48.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.602" endtime="20201115 22:01:48.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.033" endtime="20201115 22:01:48.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.032" endtime="20201115 22:01:48.994"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:48.997" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.006" endtime="20201115 22:01:49.022"></status>
</kw>
<msg timestamp="20201115 22:01:49.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.004" endtime="20201115 22:01:49.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.025" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.024" endtime="20201115 22:01:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.026" endtime="20201115 22:01:49.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.001" endtime="20201115 22:01:49.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.999" endtime="20201115 22:01:49.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.036" endtime="20201115 22:01:49.322"></status>
</kw>
<msg timestamp="20201115 22:01:49.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.034" endtime="20201115 22:01:49.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.326" endtime="20201115 22:01:49.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.334" endtime="20201115 22:01:49.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.032" endtime="20201115 22:01:49.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.030" endtime="20201115 22:01:49.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.341" level="INFO">${RESULT} = [{'time': 0.024624458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.024743972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:49.338" endtime="20201115 22:01:49.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.354" level="INFO">${OVERHEAD} = {'source_diff': [7.4719999999979525e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.457999999998383e-06, 7.528000000003171e-06, 7.513999999996662e-06, 7.459000000001326e-06, 7.514000000000132e-0...</msg>
<status status="PASS" starttime="20201115 22:01:49.342" endtime="20201115 22:01:49.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.359" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:49.358" endtime="20201115 22:01:49.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.362" level="INFO">VALUE: [7.4719999999979525e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.457999999998383e-06, 7.528000000003171e-06, 7.513999999996662e-06, 7.459000000001326e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.4719999999979525e-06, 7.444999999998286e-06, 7.472000000001422e-06, 7.485999999997522e-06, 7.4719999999979525e-06, 7.486000000000992e-06, 7.431000000002186e-06, 7.472999999997426e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.402999999999577e-06, 7.514000000000132e-06, 7.485999999997522e-06, 7.445000000001756e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.459000000001326e-06, 7.472999999997426e-06, 7.473000000000896e-06, 7.402000000000103e-06, 7.458999999997856e-06, 7.472999999997426e-06, 7.430999999998716e-06, 7.4870000000004655e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.431000000002186e-06, 7.499999999997092e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.4169999999991465e-06, 7.500000000000562e-06, 7.458999999997856e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.499999999997092e-06, 7.444999999998286e-06, 7.444000000002282e-06, 7.4870000000004655e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.360" endtime="20201115 22:01:49.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.355" endtime="20201115 22:01:49.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.365" endtime="20201115 22:01:49.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.368" endtime="20201115 22:01:49.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.367" endtime="20201115 22:01:49.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.363" endtime="20201115 22:01:49.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.997" endtime="20201115 22:01:49.389"></status>
</kw>
<msg timestamp="20201115 22:01:49.389" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.398" endtime="20201115 22:01:49.414"></status>
</kw>
<msg timestamp="20201115 22:01:49.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.396" endtime="20201115 22:01:49.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.416" endtime="20201115 22:01:49.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.418" endtime="20201115 22:01:49.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.394" endtime="20201115 22:01:49.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.392" endtime="20201115 22:01:49.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.427" endtime="20201115 22:01:49.714"></status>
</kw>
<msg timestamp="20201115 22:01:49.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.426" endtime="20201115 22:01:49.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.719" endtime="20201115 22:01:49.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.727" endtime="20201115 22:01:49.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.423" endtime="20201115 22:01:49.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.421" endtime="20201115 22:01:49.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:49.735" level="INFO">${RESULT} = [{'time': 0.022088972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.022212486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:49.731" endtime="20201115 22:01:49.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:49.748" level="INFO">${OVERHEAD} = {'source_diff': [7.485999999997522e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.473000000000896e-06, 7.4719999999979525e-06, 7.458000000001852e-06, 7.472000000001422e-06...</msg>
<status status="PASS" starttime="20201115 22:01:49.736" endtime="20201115 22:01:49.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.753" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:49.752" endtime="20201115 22:01:49.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.755" level="INFO">VALUE: [7.485999999997522e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.473000000000896e-06, 7.4719999999979525e-06, 7.458000000001852e-06, 7.472000000001422e-06, 7.527999999999702e-06, 7.458000000001852e-06, 7.472000000001422e-06, 7.4719999999979525e-06, 7.4719999999979525e-06, 7.457999999998383e-06, 7.527999999999702e-06, 7.485999999997522e-06, 7.485999999997522e-06, 7.540999999999798e-06, 7.486000000000992e-06, 7.4719999999979525e-06, 7.527999999999702e-06, 7.443999999998813e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.457999999998383e-06, 7.5419999999992715e-06, 7.4169999999991465e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.402999999999577e-06, 7.4719999999979525e-06, 7.527999999999702e-06, 7.457999999998383e-06, 7.402000000000103e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.486999999996996e-06, 7.486000000000992e-06, 7.472999999997426e-06, 7.4870000000004655e-06, 7.499999999997092e-06, 7.472000000001422e-06, 7.430000000002712e-06, 7.457999999998383e-06, 7.473000000000896e-06, 7.430999999998716e-06]</msg>
<status status="PASS" starttime="20201115 22:01:49.754" endtime="20201115 22:01:49.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.749" endtime="20201115 22:01:49.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.758" endtime="20201115 22:01:49.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:49.762" endtime="20201115 22:01:49.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.760" endtime="20201115 22:01:49.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.757" endtime="20201115 22:01:49.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.390" endtime="20201115 22:01:49.782"></status>
</kw>
<msg timestamp="20201115 22:01:49.783" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.792" endtime="20201115 22:01:49.807"></status>
</kw>
<msg timestamp="20201115 22:01:49.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.790" endtime="20201115 22:01:49.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:49.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:49.809" endtime="20201115 22:01:49.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.811" endtime="20201115 22:01:49.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.787" endtime="20201115 22:01:49.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.785" endtime="20201115 22:01:49.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:49.820" endtime="20201115 22:01:50.106"></status>
</kw>
<msg timestamp="20201115 22:01:50.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:49.819" endtime="20201115 22:01:50.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.110" endtime="20201115 22:01:50.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.118" endtime="20201115 22:01:50.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.816" endtime="20201115 22:01:50.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.815" endtime="20201115 22:01:50.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.125" level="INFO">${RESULT} = [{'time': 0.022197431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.022320097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.121" endtime="20201115 22:01:50.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.138" level="INFO">${OVERHEAD} = {'source_diff': [7.473000000000896e-06, 7.429999999999243e-06, 7.486000000000992e-06, 7.473000000000896e-06, 7.485999999997522e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.485999999997522e-06...</msg>
<status status="PASS" starttime="20201115 22:01:50.126" endtime="20201115 22:01:50.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.143" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:50.142" endtime="20201115 22:01:50.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.145" level="INFO">VALUE: [7.473000000000896e-06, 7.429999999999243e-06, 7.486000000000992e-06, 7.473000000000896e-06, 7.485999999997522e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.485999999997522e-06, 7.528000000003171e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.4169999999991465e-06, 7.444999999998286e-06, 7.457999999998383e-06, 7.486000000000992e-06, 7.431000000002186e-06, 7.459000000001326e-06, 7.458999999997856e-06, 7.473000000000896e-06, 7.473000000000896e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.485999999997522e-06, 7.485999999997522e-06, 7.444000000002282e-06, 7.472000000001422e-06, 7.459000000001326e-06, 7.527000000000228e-06, 7.500000000000562e-06, 7.485999999997522e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.4719999999979525e-06, 7.486000000000992e-06, 7.4719999999979525e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.443999999998813e-06, 7.473000000000896e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.429999999999243e-06, 7.4719999999979525e-06, 7.4169999999991465e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.4870000000004655e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.144" endtime="20201115 22:01:50.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.139" endtime="20201115 22:01:50.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.148" endtime="20201115 22:01:50.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.152" endtime="20201115 22:01:50.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.150" endtime="20201115 22:01:50.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.147" endtime="20201115 22:01:50.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:49.783" endtime="20201115 22:01:50.172"></status>
</kw>
<msg timestamp="20201115 22:01:50.173" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.181" endtime="20201115 22:01:50.198"></status>
</kw>
<msg timestamp="20201115 22:01:50.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.180" endtime="20201115 22:01:50.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.200" endtime="20201115 22:01:50.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.202" endtime="20201115 22:01:50.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.177" endtime="20201115 22:01:50.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.175" endtime="20201115 22:01:50.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.211" endtime="20201115 22:01:50.498"></status>
</kw>
<msg timestamp="20201115 22:01:50.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.210" endtime="20201115 22:01:50.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.503" endtime="20201115 22:01:50.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.511" endtime="20201115 22:01:50.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.207" endtime="20201115 22:01:50.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.205" endtime="20201115 22:01:50.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.518" level="INFO">${RESULT} = [{'time': 0.022366139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.022495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.514" endtime="20201115 22:01:50.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.531" level="INFO">${OVERHEAD} = {'source_diff': [7.458000000001852e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.458999999997856e-06, 7.500000000000562e-06, 7.473000000000896e-06, 7.443999999998813e-06, 7.486000000000992e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:50.519" endtime="20201115 22:01:50.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.536" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:50.534" endtime="20201115 22:01:50.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.538" level="INFO">VALUE: [7.458000000001852e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.458999999997856e-06, 7.500000000000562e-06, 7.473000000000896e-06, 7.443999999998813e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.485999999997522e-06, 7.445000000001756e-06, 7.486000000000992e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.444000000002282e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.430999999998716e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.472999999997426e-06, 7.473000000000896e-06, 7.4719999999979525e-06, 7.4870000000004655e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.485999999997522e-06, 7.485999999997522e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.473000000000896e-06, 7.486000000000992e-06, 7.458000000001852e-06, 7.444999999998286e-06, 7.485999999997522e-06, 7.514000000000132e-06, 7.472000000001422e-06, 7.472000000001422e-06, 7.513000000000658e-06, 7.472999999997426e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.485999999997522e-06, 7.500000000000562e-06, 7.472000000001422e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.537" endtime="20201115 22:01:50.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.532" endtime="20201115 22:01:50.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.541" endtime="20201115 22:01:50.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.545" endtime="20201115 22:01:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.543" endtime="20201115 22:01:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.539" endtime="20201115 22:01:50.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.173" endtime="20201115 22:01:50.565"></status>
</kw>
<msg timestamp="20201115 22:01:50.565" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.574" endtime="20201115 22:01:50.591"></status>
</kw>
<msg timestamp="20201115 22:01:50.591" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.573" endtime="20201115 22:01:50.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.592" endtime="20201115 22:01:50.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.595" endtime="20201115 22:01:50.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.570" endtime="20201115 22:01:50.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.568" endtime="20201115 22:01:50.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.604" endtime="20201115 22:01:50.891"></status>
</kw>
<msg timestamp="20201115 22:01:50.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.602" endtime="20201115 22:01:50.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.895" endtime="20201115 22:01:50.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.903" endtime="20201115 22:01:50.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.600" endtime="20201115 22:01:50.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.598" endtime="20201115 22:01:50.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:50.910" level="INFO">${RESULT} = [{'time': 0.022082458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.022207958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:50.907" endtime="20201115 22:01:50.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:50.923" level="INFO">${OVERHEAD} = {'source_diff': [7.485999999997522e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.4719999999979525e-06, 7.4719999999979525e-0...</msg>
<status status="PASS" starttime="20201115 22:01:50.911" endtime="20201115 22:01:50.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.928" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 22:01:50.927" endtime="20201115 22:01:50.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.930" level="INFO">VALUE: [7.485999999997522e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.472000000001422e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.4719999999979525e-06, 7.4719999999979525e-06, 7.459000000001326e-06, 7.527999999999702e-06, 7.499999999997092e-06, 7.4719999999979525e-06, 7.458000000001852e-06, 7.472000000001422e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.457999999998383e-06, 7.443999999998813e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.4719999999979525e-06, 7.514000000000132e-06, 7.473000000000896e-06, 7.473000000000896e-06, 7.500000000000562e-06, 7.4719999999979525e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.4719999999979525e-06, 7.472000000001422e-06, 7.458000000001852e-06, 7.402999999999577e-06, 7.472000000001422e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.459000000001326e-06, 7.444999999998286e-06, 7.472000000001422e-06, 7.4719999999979525e-06, 7.542000000002741e-06, 7.513000000000658e-06, 7.458000000001852e-06, 7.4719999999979525e-06, 7.486000000000992e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.472000000001422e-06, 7.500000000000562e-06, 7.500000000000562e-06, 7.542000000002741e-06]</msg>
<status status="PASS" starttime="20201115 22:01:50.929" endtime="20201115 22:01:50.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.924" endtime="20201115 22:01:50.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.933" endtime="20201115 22:01:50.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:50.937" endtime="20201115 22:01:50.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.935" endtime="20201115 22:01:50.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.932" endtime="20201115 22:01:50.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.566" endtime="20201115 22:01:50.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.996" endtime="20201115 22:01:50.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:48.995" endtime="20201115 22:01:50.958"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.960" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.969" endtime="20201115 22:01:50.986"></status>
</kw>
<msg timestamp="20201115 22:01:50.986" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.967" endtime="20201115 22:01:50.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:50.988" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:50.987" endtime="20201115 22:01:50.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.990" endtime="20201115 22:01:50.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.965" endtime="20201115 22:01:50.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.963" endtime="20201115 22:01:50.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:50.999" endtime="20201115 22:01:51.285"></status>
</kw>
<msg timestamp="20201115 22:01:51.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024664972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:50.997" endtime="20201115 22:01:51.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024664972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024673458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.290" endtime="20201115 22:01:51.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.298" endtime="20201115 22:01:51.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.995" endtime="20201115 22:01:51.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.993" endtime="20201115 22:01:51.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.304" level="INFO">${RESULT} = [{'time': 0.024673458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.0248015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:51.301" endtime="20201115 22:01:51.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.317" level="INFO">${OVERHEAD} = {'source_diff': [8.485999999998523e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.458999999998856e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:51.305" endtime="20201115 22:01:51.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.322" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:51.321" endtime="20201115 22:01:51.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.324" level="INFO">VALUE: [8.485999999998523e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.458999999998856e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.512999999998189e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.471999999998953e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.499999999998092e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.323" endtime="20201115 22:01:51.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.318" endtime="20201115 22:01:51.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.328" endtime="20201115 22:01:51.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.331" endtime="20201115 22:01:51.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.329" endtime="20201115 22:01:51.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.326" endtime="20201115 22:01:51.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.961" endtime="20201115 22:01:51.352"></status>
</kw>
<msg timestamp="20201115 22:01:51.352" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.361" endtime="20201115 22:01:51.377"></status>
</kw>
<msg timestamp="20201115 22:01:51.378" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.359" endtime="20201115 22:01:51.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.380" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.379" endtime="20201115 22:01:51.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.382" endtime="20201115 22:01:51.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.356" endtime="20201115 22:01:51.384"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.354" endtime="20201115 22:01:51.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.391" endtime="20201115 22:01:51.677"></status>
</kw>
<msg timestamp="20201115 22:01:51.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.389" endtime="20201115 22:01:51.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.681" endtime="20201115 22:01:51.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.690" endtime="20201115 22:01:51.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.387" endtime="20201115 22:01:51.692"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.385" endtime="20201115 22:01:51.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:51.696" level="INFO">${RESULT} = [{'time': 0.022453097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.022588458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:51.693" endtime="20201115 22:01:51.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:51.709" level="INFO">${OVERHEAD} = {'source_diff': [8.528000000000702e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.512999999998189e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.485999999998523e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:51.697" endtime="20201115 22:01:51.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.714" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:51.713" endtime="20201115 22:01:51.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.716" level="INFO">VALUE: [8.528000000000702e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.512999999998189e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.485999999998523e-06, 8.542000000000272e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.443999999999813e-06, 8.500000000001562e-06, 8.487000000001466e-06, 8.499999999998092e-06, 8.555000000000368e-06, 8.514000000001132e-06, 8.471999999998953e-06, 8.485999999998523e-06, 8.485999999998523e-06, 8.459000000002326e-06, 8.485999999998523e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.487000000001466e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.513999999997662e-06, 8.486000000001992e-06, 8.555999999999842e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.485999999998523e-06, 8.443999999999813e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.513999999997662e-06, 8.458000000002852e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.485999999998523e-06]</msg>
<status status="PASS" starttime="20201115 22:01:51.715" endtime="20201115 22:01:51.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.710" endtime="20201115 22:01:51.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.720" endtime="20201115 22:01:51.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:51.723" endtime="20201115 22:01:51.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.722" endtime="20201115 22:01:51.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.718" endtime="20201115 22:01:51.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.352" endtime="20201115 22:01:51.744"></status>
</kw>
<msg timestamp="20201115 22:01:51.744" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.758" endtime="20201115 22:01:51.775"></status>
</kw>
<msg timestamp="20201115 22:01:51.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.752" endtime="20201115 22:01:51.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:51.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:51.777" endtime="20201115 22:01:51.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.779" endtime="20201115 22:01:51.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.749" endtime="20201115 22:01:51.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.747" endtime="20201115 22:01:51.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:51.788" endtime="20201115 22:01:52.076"></status>
</kw>
<msg timestamp="20201115 22:01:52.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027227792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027236292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:51.786" endtime="20201115 22:01:52.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027227792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027236292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.081" endtime="20201115 22:01:52.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.089" endtime="20201115 22:01:52.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.784" endtime="20201115 22:01:52.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.782" endtime="20201115 22:01:52.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.095" level="INFO">${RESULT} = [{'time': 0.027236292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.027373833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.092" endtime="20201115 22:01:52.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.108" level="INFO">${OVERHEAD} = {'source_diff': [8.499999999998092e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.514000000001132e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:52.096" endtime="20201115 22:01:52.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.113" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:52.112" endtime="20201115 22:01:52.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.115" level="INFO">VALUE: [8.499999999998092e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.485999999998523e-06, 8.443999999999813e-06, 8.500000000001562e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.472000000002422e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.526999999997759e-06, 8.486000000001992e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.445000000002756e-06, 8.500000000001562e-06, 8.485999999995053e-06, 8.485999999995053e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.499999999994623e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.486000000001992e-06, 8.514000000001132e-06, 8.499999999994623e-06, 8.528000000000702e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.499999999994623e-06, 8.500000000001562e-06, 8.500000000001562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.114" endtime="20201115 22:01:52.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.109" endtime="20201115 22:01:52.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.119" endtime="20201115 22:01:52.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.122" endtime="20201115 22:01:52.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.120" endtime="20201115 22:01:52.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.117" endtime="20201115 22:01:52.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:51.744" endtime="20201115 22:01:52.143"></status>
</kw>
<msg timestamp="20201115 22:01:52.143" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.152" endtime="20201115 22:01:52.169"></status>
</kw>
<msg timestamp="20201115 22:01:52.170" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.151" endtime="20201115 22:01:52.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.171" endtime="20201115 22:01:52.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.173" endtime="20201115 22:01:52.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.148" endtime="20201115 22:01:52.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.146" endtime="20201115 22:01:52.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.182" endtime="20201115 22:01:52.469"></status>
</kw>
<msg timestamp="20201115 22:01:52.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.181" endtime="20201115 22:01:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.473" endtime="20201115 22:01:52.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.482" endtime="20201115 22:01:52.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.178" endtime="20201115 22:01:52.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.176" endtime="20201115 22:01:52.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.488" level="INFO">${RESULT} = [{'time': 0.022628736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.022756278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.485" endtime="20201115 22:01:52.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.501" level="INFO">${OVERHEAD} = {'source_diff': [8.500000000001562e-06, 8.486000000001992e-06, 8.458999999998856e-06, 8.514000000001132e-06, 8.513999999997662e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.499999999998092e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:52.489" endtime="20201115 22:01:52.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.506" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:52.505" endtime="20201115 22:01:52.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.508" level="INFO">VALUE: [8.500000000001562e-06, 8.486000000001992e-06, 8.458999999998856e-06, 8.514000000001132e-06, 8.513999999997662e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.541999999996802e-06, 8.471999999998953e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.500000000001562e-06, 8.542000000000272e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.555000000000368e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.513000000001658e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.528000000000702e-06, 8.514000000001132e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.486999999997996e-06, 8.500000000001562e-06, 8.430999999999716e-06, 8.430999999999716e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.513000000001658e-06, 8.458000000002852e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.507" endtime="20201115 22:01:52.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.502" endtime="20201115 22:01:52.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.512" endtime="20201115 22:01:52.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.515" endtime="20201115 22:01:52.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.514" endtime="20201115 22:01:52.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.510" endtime="20201115 22:01:52.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.144" endtime="20201115 22:01:52.536"></status>
</kw>
<msg timestamp="20201115 22:01:52.536" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.545" endtime="20201115 22:01:52.563"></status>
</kw>
<msg timestamp="20201115 22:01:52.563" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.544" endtime="20201115 22:01:52.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.565" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.564" endtime="20201115 22:01:52.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.567" endtime="20201115 22:01:52.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.541" endtime="20201115 22:01:52.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.539" endtime="20201115 22:01:52.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.576" endtime="20201115 22:01:52.862"></status>
</kw>
<msg timestamp="20201115 22:01:52.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.574" endtime="20201115 22:01:52.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:52.866" endtime="20201115 22:01:52.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.874" endtime="20201115 22:01:52.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.572" endtime="20201115 22:01:52.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.570" endtime="20201115 22:01:52.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:52.881" level="INFO">${RESULT} = [{'time': 0.022559431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.022690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:52.878" endtime="20201115 22:01:52.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:52.894" level="INFO">${OVERHEAD} = {'source_diff': [8.514000000001132e-06, 8.486000000001992e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.472000000002422e-06, 8.500000000001562e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:52.882" endtime="20201115 22:01:52.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.899" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 22:01:52.898" endtime="20201115 22:01:52.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.902" level="INFO">VALUE: [8.514000000001132e-06, 8.486000000001992e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.471999999998953e-06, 8.499999999998092e-06, 8.472000000002422e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.472000000002422e-06, 8.485999999998523e-06, 8.513999999997662e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.473000000001896e-06, 8.457999999999383e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.487000000001466e-06, 8.555000000000368e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.499999999998092e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.528000000000702e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.499999999998092e-06, 8.500000000001562e-06, 8.528000000000702e-06, 8.568999999999938e-06, 8.513999999997662e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.500000000001562e-06, 8.458000000002852e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.500000000001562e-06]</msg>
<status status="PASS" starttime="20201115 22:01:52.900" endtime="20201115 22:01:52.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.895" endtime="20201115 22:01:52.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.905" endtime="20201115 22:01:52.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:52.908" endtime="20201115 22:01:52.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.907" endtime="20201115 22:01:52.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.903" endtime="20201115 22:01:52.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.537" endtime="20201115 22:01:52.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.959" endtime="20201115 22:01:52.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:50.958" endtime="20201115 22:01:52.929"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.932" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.941" endtime="20201115 22:01:52.959"></status>
</kw>
<msg timestamp="20201115 22:01:52.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.939" endtime="20201115 22:01:52.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:52.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:52.961" endtime="20201115 22:01:52.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.963" endtime="20201115 22:01:52.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.936" endtime="20201115 22:01:52.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.934" endtime="20201115 22:01:52.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:52.972" endtime="20201115 22:01:53.258"></status>
</kw>
<msg timestamp="20201115 22:01:53.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02468875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:52.971" endtime="20201115 22:01:53.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02468875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:53.263" endtime="20201115 22:01:53.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.271" endtime="20201115 22:01:53.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.968" endtime="20201115 22:01:53.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.966" endtime="20201115 22:01:53.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.277" level="INFO">${RESULT} = [{'time': 0.02468875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.024834167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:53.274" endtime="20201115 22:01:53.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.291" level="INFO">${OVERHEAD} = {'source_diff': [9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.597000000000078e-06, 9.487000000002466e-06, 9.570000000000412e-06, 9.499999999999093e-06, 9.499999999999093e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:53.278" endtime="20201115 22:01:53.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.295" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:53.294" endtime="20201115 22:01:53.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.298" level="INFO">VALUE: [9.527999999998232e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.597000000000078e-06, 9.487000000002466e-06, 9.570000000000412e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.569000000000938e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.541999999997802e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.513999999998662e-06, 9.471999999999953e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.512999999999189e-06, 9.512999999999189e-06, 9.486000000002992e-06, 9.499999999999093e-06, 9.540999999998329e-06, 9.540999999998329e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.500000000002562e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.458000000003852e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.527000000002228e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.296" endtime="20201115 22:01:53.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.292" endtime="20201115 22:01:53.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.301" endtime="20201115 22:01:53.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.305" endtime="20201115 22:01:53.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.303" endtime="20201115 22:01:53.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.300" endtime="20201115 22:01:53.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.932" endtime="20201115 22:01:53.325"></status>
</kw>
<msg timestamp="20201115 22:01:53.326" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.335" endtime="20201115 22:01:53.353"></status>
</kw>
<msg timestamp="20201115 22:01:53.353" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.333" endtime="20201115 22:01:53.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.354" endtime="20201115 22:01:53.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.357" endtime="20201115 22:01:53.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.331" endtime="20201115 22:01:53.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.328" endtime="20201115 22:01:53.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.366" endtime="20201115 22:01:53.653"></status>
</kw>
<msg timestamp="20201115 22:01:53.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.364" endtime="20201115 22:01:53.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.657" endtime="20201115 22:01:53.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.666" endtime="20201115 22:01:53.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.362" endtime="20201115 22:01:53.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.360" endtime="20201115 22:01:53.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:53.672" level="INFO">${RESULT} = [{'time': 0.022398222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.540999999998329e-06, 'source_diff': 9.540999999998329e-06}, {'time': 0.0225355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:53.669" endtime="20201115 22:01:53.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:53.686" level="INFO">${OVERHEAD} = {'source_diff': [9.540999999998329e-06, 9.569000000000938e-06, 9.512999999999189e-06, 9.556000000000842e-06, 9.445000000000286e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.514000000002132e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:53.673" endtime="20201115 22:01:53.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.690" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:53.689" endtime="20201115 22:01:53.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.693" level="INFO">VALUE: [9.540999999998329e-06, 9.569000000000938e-06, 9.512999999999189e-06, 9.556000000000842e-06, 9.445000000000286e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.512999999999189e-06, 9.570000000000412e-06, 9.485999999999523e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.555999999997372e-06, 9.499999999999093e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.512999999999189e-06, 9.570000000000412e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.444000000000813e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.582999999997038e-06, 9.513000000002658e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.512999999999189e-06, 9.541000000001798e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.513999999998662e-06, 9.443999999997343e-06, 9.528000000001702e-06, 9.472999999999426e-06, 9.512999999999189e-06]</msg>
<status status="PASS" starttime="20201115 22:01:53.692" endtime="20201115 22:01:53.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.687" endtime="20201115 22:01:53.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.696" endtime="20201115 22:01:53.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:53.700" endtime="20201115 22:01:53.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.698" endtime="20201115 22:01:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.695" endtime="20201115 22:01:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.326" endtime="20201115 22:01:53.720"></status>
</kw>
<msg timestamp="20201115 22:01:53.720" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.729" endtime="20201115 22:01:53.746"></status>
</kw>
<msg timestamp="20201115 22:01:53.747" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.728" endtime="20201115 22:01:53.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:53.749" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:53.748" endtime="20201115 22:01:53.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.750" endtime="20201115 22:01:53.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.725" endtime="20201115 22:01:53.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.723" endtime="20201115 22:01:53.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:53.759" endtime="20201115 22:01:54.047"></status>
</kw>
<msg timestamp="20201115 22:01:54.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:53.758" endtime="20201115 22:01:54.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.051" endtime="20201115 22:01:54.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.059" endtime="20201115 22:01:54.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.755" endtime="20201115 22:01:54.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.754" endtime="20201115 22:01:54.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.066" level="INFO">${RESULT} = [{'time': 0.022080444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.022218181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.062" endtime="20201115 22:01:54.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.079" level="INFO">${OVERHEAD} = {'source_diff': [9.527000000002228e-06, 9.499999999999093e-06, 9.583999999999981e-06, 9.458999999999856e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.513999999998662e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:54.067" endtime="20201115 22:01:54.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.084" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:54.083" endtime="20201115 22:01:54.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.086" level="INFO">VALUE: [9.527000000002228e-06, 9.499999999999093e-06, 9.583999999999981e-06, 9.458999999999856e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.486000000002992e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.471999999999953e-06, 9.458000000000383e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.499999999999093e-06, 9.541000000001798e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.471999999999953e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.540999999998329e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.485999999999523e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.085" endtime="20201115 22:01:54.086"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.080" endtime="20201115 22:01:54.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.089" endtime="20201115 22:01:54.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.093" endtime="20201115 22:01:54.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.091" endtime="20201115 22:01:54.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.088" endtime="20201115 22:01:54.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:53.721" endtime="20201115 22:01:54.114"></status>
</kw>
<msg timestamp="20201115 22:01:54.114" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.123" endtime="20201115 22:01:54.139"></status>
</kw>
<msg timestamp="20201115 22:01:54.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.121" endtime="20201115 22:01:54.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.142" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.141" endtime="20201115 22:01:54.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.143" endtime="20201115 22:01:54.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.118" endtime="20201115 22:01:54.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.116" endtime="20201115 22:01:54.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.152" endtime="20201115 22:01:54.438"></status>
</kw>
<msg timestamp="20201115 22:01:54.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.151" endtime="20201115 22:01:54.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.442" endtime="20201115 22:01:54.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.451" endtime="20201115 22:01:54.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.148" endtime="20201115 22:01:54.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.146" endtime="20201115 22:01:54.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.457" level="INFO">${RESULT} = [{'time': 0.022043361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.022183278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.454" endtime="20201115 22:01:54.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.471" level="INFO">${OVERHEAD} = {'source_diff': [9.514000000002132e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.542000000001272e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:54.458" endtime="20201115 22:01:54.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.475" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:54.474" endtime="20201115 22:01:54.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.478" level="INFO">VALUE: [9.514000000002132e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.527000000002228e-06, 9.513000000002658e-06, 9.526999999998759e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.540999999998329e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.512999999999189e-06, 9.485999999999523e-06, 9.527999999998232e-06, 9.500000000002562e-06, 9.513999999998662e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.527000000002228e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.476" endtime="20201115 22:01:54.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.472" endtime="20201115 22:01:54.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.481" endtime="20201115 22:01:54.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.484" endtime="20201115 22:01:54.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.483" endtime="20201115 22:01:54.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.479" endtime="20201115 22:01:54.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.114" endtime="20201115 22:01:54.505"></status>
</kw>
<msg timestamp="20201115 22:01:54.505" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.514" endtime="20201115 22:01:54.531"></status>
</kw>
<msg timestamp="20201115 22:01:54.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.512" endtime="20201115 22:01:54.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.533" endtime="20201115 22:01:54.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.535" endtime="20201115 22:01:54.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.510" endtime="20201115 22:01:54.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.508" endtime="20201115 22:01:54.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.545" endtime="20201115 22:01:54.831"></status>
</kw>
<msg timestamp="20201115 22:01:54.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.543" endtime="20201115 22:01:54.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:54.835" endtime="20201115 22:01:54.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.844" endtime="20201115 22:01:54.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.540" endtime="20201115 22:01:54.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.539" endtime="20201115 22:01:54.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:54.851" level="INFO">${RESULT} = [{'time': 0.022314778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.022453014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:54.847" endtime="20201115 22:01:54.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:54.864" level="INFO">${OVERHEAD} = {'source_diff': [9.528000000001702e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.499999999999093e-06,...</msg>
<status status="PASS" starttime="20201115 22:01:54.852" endtime="20201115 22:01:54.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.868" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:01:54.867" endtime="20201115 22:01:54.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.871" level="INFO">VALUE: [9.528000000001702e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.556000000000842e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.527000000002228e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.541000000001798e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.486000000002992e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.541999999997802e-06, 9.583000000000508e-06, 9.513999999998662e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.583999999999981e-06, 9.528000000001702e-06, 9.445000000000286e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.512999999999189e-06, 9.512999999999189e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.527000000002228e-06, 9.500000000002562e-06, 9.500000000002562e-06, 9.499999999999093e-06, 9.512999999999189e-06]</msg>
<status status="PASS" starttime="20201115 22:01:54.869" endtime="20201115 22:01:54.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.865" endtime="20201115 22:01:54.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.874" endtime="20201115 22:01:54.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:54.877" endtime="20201115 22:01:54.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.876" endtime="20201115 22:01:54.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.872" endtime="20201115 22:01:54.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.506" endtime="20201115 22:01:54.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.931" endtime="20201115 22:01:54.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:52.930" endtime="20201115 22:01:54.898"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.901" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.909" endtime="20201115 22:01:54.927"></status>
</kw>
<msg timestamp="20201115 22:01:54.928" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.908" endtime="20201115 22:01:54.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:54.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:54.929" endtime="20201115 22:01:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.931" endtime="20201115 22:01:54.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.905" endtime="20201115 22:01:54.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.903" endtime="20201115 22:01:54.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:54.941" endtime="20201115 22:01:55.229"></status>
</kw>
<msg timestamp="20201115 22:01:55.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024767819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:54.939" endtime="20201115 22:01:55.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024767819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.233" endtime="20201115 22:01:55.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.241" endtime="20201115 22:01:55.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.937" endtime="20201115 22:01:55.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.935" endtime="20201115 22:01:55.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.248" level="INFO">${RESULT} = [{'time': 0.024778361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.024929528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.245" endtime="20201115 22:01:55.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.261" level="INFO">${OVERHEAD} = {'source_diff': [1.0541999999998802e-05, 1.0569999999997942e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0541000000002798e-05, 1.0569000000001938e-05, 1.0526999999999...</msg>
<status status="PASS" starttime="20201115 22:01:55.249" endtime="20201115 22:01:55.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.266" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:55.265" endtime="20201115 22:01:55.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.268" level="INFO">VALUE: [1.0541999999998802e-05, 1.0569999999997942e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0541000000002798e-05, 1.0569000000001938e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0569000000001938e-05, 1.0527999999999232e-05, 1.0625000000000218e-05, 1.0540999999999329e-05, 1.0569000000001938e-05, 1.0540999999999329e-05, 1.0555000000002368e-05, 1.0555000000002368e-05, 1.0582999999998038e-05, 1.0582999999998038e-05, 1.0582999999998038e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0500000000000093e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0500000000000093e-05, 1.0540999999999329e-05, 1.0555000000002368e-05, 1.0528000000002702e-05, 1.0598000000000551e-05, 1.0582999999998038e-05, 1.0554999999998899e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0527000000003228e-05, 1.0514000000003132e-05, 1.0583000000001508e-05, 1.0625000000000218e-05, 1.0556000000001842e-05, 1.052699999999629e-05, 1.0555000000002368e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.267" endtime="20201115 22:01:55.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.262" endtime="20201115 22:01:55.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.271" endtime="20201115 22:01:55.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.275" endtime="20201115 22:01:55.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.273" endtime="20201115 22:01:55.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.270" endtime="20201115 22:01:55.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.901" endtime="20201115 22:01:55.295"></status>
</kw>
<msg timestamp="20201115 22:01:55.296" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.305" endtime="20201115 22:01:55.322"></status>
</kw>
<msg timestamp="20201115 22:01:55.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.303" endtime="20201115 22:01:55.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.324" endtime="20201115 22:01:55.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.327" endtime="20201115 22:01:55.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.300" endtime="20201115 22:01:55.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.298" endtime="20201115 22:01:55.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.336" endtime="20201115 22:01:55.622"></status>
</kw>
<msg timestamp="20201115 22:01:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:55.334" endtime="20201115 22:01:55.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:55.626" endtime="20201115 22:01:55.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.634" endtime="20201115 22:01:55.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.332" endtime="20201115 22:01:55.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.330" endtime="20201115 22:01:55.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:55.641" level="INFO">${RESULT} = [{'time': 0.022173056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0555999999998372e-05, 'source_diff': 1.0555999999998372e-05}, {'time': 0.022328181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:55.638" endtime="20201115 22:01:55.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:55.654" level="INFO">${OVERHEAD} = {'source_diff': [1.0555999999998372e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.0486000000000523e-05, 1.0542000000002272e-05, 1.0527999999999...</msg>
<status status="PASS" starttime="20201115 22:01:55.642" endtime="20201115 22:01:55.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.659" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:55.658" endtime="20201115 22:01:55.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.661" level="INFO">VALUE: [1.0555999999998372e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.0486000000000523e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0526999999999759e-05, 1.0540999999999329e-05, 1.0486000000000523e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0568999999998469e-05, 1.0612000000000121e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.0568999999998469e-05, 1.0541999999998802e-05, 1.0583000000001508e-05, 1.0485999999997053e-05, 1.0611000000000648e-05, 1.0554999999998899e-05, 1.0513999999999663e-05, 1.0569000000001938e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0540999999999329e-05, 1.0473000000000426e-05, 1.0542000000002272e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0611000000000648e-05, 1.0556000000001842e-05, 1.0596999999997608e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0554999999998899e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0556000000001842e-05, 1.0500000000000093e-05, 1.0541999999998802e-05, 1.0569000000001938e-05, 1.0569999999997942e-05, 1.0597000000001078e-05]</msg>
<status status="PASS" starttime="20201115 22:01:55.660" endtime="20201115 22:01:55.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.655" endtime="20201115 22:01:55.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.665" endtime="20201115 22:01:55.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:55.668" endtime="20201115 22:01:55.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.666" endtime="20201115 22:01:55.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.663" endtime="20201115 22:01:55.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.296" endtime="20201115 22:01:55.688"></status>
</kw>
<msg timestamp="20201115 22:01:55.689" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.698" endtime="20201115 22:01:55.717"></status>
</kw>
<msg timestamp="20201115 22:01:55.717" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.696" endtime="20201115 22:01:55.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:55.720" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:55.718" endtime="20201115 22:01:55.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.721" endtime="20201115 22:01:55.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.693" endtime="20201115 22:01:55.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.691" endtime="20201115 22:01:55.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:55.730" endtime="20201115 22:01:56.015"></status>
</kw>
<msg timestamp="20201115 22:01:56.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:55.728" endtime="20201115 22:01:56.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.019" endtime="20201115 22:01:56.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.027" endtime="20201115 22:01:56.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.726" endtime="20201115 22:01:56.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.724" endtime="20201115 22:01:56.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.034" level="INFO">${RESULT} = [{'time': 0.022790486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0554999999998899e-05, 'source_diff': 1.0554999999998899e-05}, {'time': 0.022939667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:56.031" endtime="20201115 22:01:56.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.047" level="INFO">${OVERHEAD} = {'source_diff': [1.0554999999998899e-05, 1.0584000000000982e-05, 1.0611000000000648e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0569999999997942e-05, 1.0541999999998802e-05, 1.0541000000002...</msg>
<status status="PASS" starttime="20201115 22:01:56.035" endtime="20201115 22:01:56.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.052" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:56.051" endtime="20201115 22:01:56.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.054" level="INFO">VALUE: [1.0554999999998899e-05, 1.0584000000000982e-05, 1.0611000000000648e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0569999999997942e-05, 1.0541999999998802e-05, 1.0541000000002798e-05, 1.0570000000001412e-05, 1.0541999999998802e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0597000000001078e-05, 1.0555999999998372e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0526999999999759e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0556000000001842e-05, 1.0556000000001842e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0596999999997608e-05, 1.0500000000000093e-05, 1.0541999999998802e-05, 1.0486000000000523e-05, 1.0556000000001842e-05, 1.0540999999999329e-05, 1.0486000000000523e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0597000000001078e-05, 1.0542000000002272e-05, 1.0526999999999759e-05, 1.0540999999999329e-05, 1.0527999999999232e-05, 1.0500000000000093e-05, 1.0526999999999759e-05, 1.0568999999998469e-05, 1.0540999999999329e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.053" endtime="20201115 22:01:56.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.048" endtime="20201115 22:01:56.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.057" endtime="20201115 22:01:56.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.061" endtime="20201115 22:01:56.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.059" endtime="20201115 22:01:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.056" endtime="20201115 22:01:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:55.689" endtime="20201115 22:01:56.081"></status>
</kw>
<msg timestamp="20201115 22:01:56.082" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.091" endtime="20201115 22:01:56.108"></status>
</kw>
<msg timestamp="20201115 22:01:56.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.089" endtime="20201115 22:01:56.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.109" endtime="20201115 22:01:56.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.112" endtime="20201115 22:01:56.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.087" endtime="20201115 22:01:56.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.085" endtime="20201115 22:01:56.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.121" endtime="20201115 22:01:56.408"></status>
</kw>
<msg timestamp="20201115 22:01:56.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:56.119" endtime="20201115 22:01:56.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02244225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:56.412" endtime="20201115 22:01:56.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.420" endtime="20201115 22:01:56.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.117" endtime="20201115 22:01:56.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.115" endtime="20201115 22:01:56.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.427" level="INFO">${RESULT} = [{'time': 0.02244225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.022589889, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:56.424" endtime="20201115 22:01:56.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.440" level="INFO">${OVERHEAD} = {'source_diff': [1.0541999999998802e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0555999999998372e-05, 1.0527999999999232e-05, 1.0569000000001938e-05, 1.0556000000001...</msg>
<status status="PASS" starttime="20201115 22:01:56.428" endtime="20201115 22:01:56.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.445" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:56.444" endtime="20201115 22:01:56.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.447" level="INFO">VALUE: [1.0541999999998802e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0527999999999232e-05, 1.0555999999998372e-05, 1.0527999999999232e-05, 1.0569000000001938e-05, 1.0556000000001842e-05, 1.0554999999998899e-05, 1.0611000000000648e-05, 1.0486000000000523e-05, 1.0527999999999232e-05, 1.0541000000002798e-05, 1.0556000000001842e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0500000000000093e-05, 1.0570000000001412e-05, 1.0527999999999232e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0583000000001508e-05, 1.0526999999999759e-05, 1.0555000000002368e-05, 1.0542000000002272e-05, 1.0542000000002272e-05, 1.0541999999998802e-05, 1.0500000000000093e-05, 1.0540999999999329e-05, 1.0556000000001842e-05, 1.0540999999999329e-05, 1.0540999999999329e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0554999999998899e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0556000000001842e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.0611000000000648e-05, 1.0527999999999232e-05, 1.0527000000003228e-05, 1.0554999999998899e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0486999999999996e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.446" endtime="20201115 22:01:56.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.441" endtime="20201115 22:01:56.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.450" endtime="20201115 22:01:56.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.454" endtime="20201115 22:01:56.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.453" endtime="20201115 22:01:56.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.449" endtime="20201115 22:01:56.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.083" endtime="20201115 22:01:56.475"></status>
</kw>
<msg timestamp="20201115 22:01:56.475" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.484" endtime="20201115 22:01:56.501"></status>
</kw>
<msg timestamp="20201115 22:01:56.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.482" endtime="20201115 22:01:56.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.503" endtime="20201115 22:01:56.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.505" endtime="20201115 22:01:56.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.480" endtime="20201115 22:01:56.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.478" endtime="20201115 22:01:56.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.514" endtime="20201115 22:01:56.802"></status>
</kw>
<msg timestamp="20201115 22:01:56.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.513" endtime="20201115 22:01:56.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.806" endtime="20201115 22:01:56.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.815" endtime="20201115 22:01:56.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.510" endtime="20201115 22:01:56.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.508" endtime="20201115 22:01:56.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:56.821" level="INFO">${RESULT} = [{'time': 0.022107944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0540999999999329e-05, 'source_diff': 1.0540999999999329e-05}, {'time': 0.022263264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:56.818" endtime="20201115 22:01:56.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:56.835" level="INFO">${OVERHEAD} = {'source_diff': [1.0540999999999329e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0612000000000...</msg>
<status status="PASS" starttime="20201115 22:01:56.822" endtime="20201115 22:01:56.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.840" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:01:56.839" endtime="20201115 22:01:56.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.842" level="INFO">VALUE: [1.0540999999999329e-05, 1.0513999999999663e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0527999999999232e-05, 1.0541999999998802e-05, 1.0541999999998802e-05, 1.0612000000000121e-05, 1.0582999999998038e-05, 1.0540999999999329e-05, 1.0555000000002368e-05, 1.0541999999998802e-05, 1.0513999999999663e-05, 1.0541999999998802e-05, 1.0541000000002798e-05, 1.0541999999998802e-05, 1.0555999999998372e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0540999999999329e-05, 1.0554999999998899e-05, 1.0554999999998899e-05, 1.0527999999999232e-05, 1.0554999999998899e-05, 1.0555999999998372e-05, 1.0596999999997608e-05, 1.0526999999999759e-05, 1.0555999999998372e-05, 1.0527999999999232e-05, 1.0555999999998372e-05, 1.0582999999998038e-05, 1.0526999999999759e-05, 1.0527999999999232e-05, 1.0555000000002368e-05, 1.0540999999999329e-05, 1.0583000000001508e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0555000000002368e-05, 1.0555000000002368e-05, 1.0541999999998802e-05, 1.0555000000002368e-05, 1.0528000000002702e-05, 1.0555000000002368e-05, 1.0540999999999329e-05, 1.0526999999999759e-05, 1.0526999999999759e-05, 1.0541999999998802e-05, 1.0611000000000648e-05, 1.0555999999998372e-05]</msg>
<status status="PASS" starttime="20201115 22:01:56.841" endtime="20201115 22:01:56.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.836" endtime="20201115 22:01:56.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.850" endtime="20201115 22:01:56.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:56.853" endtime="20201115 22:01:56.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.852" endtime="20201115 22:01:56.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.848" endtime="20201115 22:01:56.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.476" endtime="20201115 22:01:56.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.899" endtime="20201115 22:01:56.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:54.899" endtime="20201115 22:01:56.874"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.877" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.885" endtime="20201115 22:01:56.903"></status>
</kw>
<msg timestamp="20201115 22:01:56.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.884" endtime="20201115 22:01:56.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:56.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:56.905" endtime="20201115 22:01:56.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.907" endtime="20201115 22:01:56.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.881" endtime="20201115 22:01:56.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.879" endtime="20201115 22:01:56.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:56.916" endtime="20201115 22:01:57.203"></status>
</kw>
<msg timestamp="20201115 22:01:57.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024388014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:56.915" endtime="20201115 22:01:57.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024388014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024399625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.207" endtime="20201115 22:01:57.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.215" endtime="20201115 22:01:57.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.912" endtime="20201115 22:01:57.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.911" endtime="20201115 22:01:57.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.222" level="INFO">${RESULT} = [{'time': 0.024399625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1611000000001648e-05, 'source_diff': 1.1611000000001648e-05}, {'time': 0.024562972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:57.218" endtime="20201115 22:01:57.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.235" level="INFO">${OVERHEAD} = {'source_diff': [1.1611000000001648e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.1611000000001648e-05, 1.1554999999999899e-05, 1.1542000000003272e-05, 1.1583000000002508e-05, 1.1554999999999...</msg>
<status status="PASS" starttime="20201115 22:01:57.223" endtime="20201115 22:01:57.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.239" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:57.238" endtime="20201115 22:01:57.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.242" level="INFO">VALUE: [1.1611000000001648e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.1611000000001648e-05, 1.1554999999999899e-05, 1.1542000000003272e-05, 1.1583000000002508e-05, 1.1554999999999899e-05, 1.1569999999998942e-05, 1.1584000000001982e-05, 1.1528000000000233e-05, 1.1569999999998942e-05, 1.152699999999729e-05, 1.1624999999997748e-05, 1.1598000000001552e-05, 1.1554999999999899e-05, 1.1541000000000329e-05, 1.1568999999999469e-05, 1.1514000000000663e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1568999999999469e-05, 1.1555999999999372e-05, 1.1596999999998608e-05, 1.1638999999997318e-05, 1.1500000000001093e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1541000000000329e-05, 1.1610999999998178e-05, 1.1583000000002508e-05, 1.1639000000000788e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1527000000000759e-05, 1.1555999999999372e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1555999999999372e-05, 1.1570000000002412e-05, 1.1486000000004992e-05, 1.1569000000002938e-05, 1.1514000000004132e-05, 1.1598000000001552e-05, 1.1569000000002938e-05, 1.1583999999995043e-05, 1.1584000000001982e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.240" endtime="20201115 22:01:57.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.236" endtime="20201115 22:01:57.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.245" endtime="20201115 22:01:57.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.249" endtime="20201115 22:01:57.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.247" endtime="20201115 22:01:57.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.244" endtime="20201115 22:01:57.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.877" endtime="20201115 22:01:57.270"></status>
</kw>
<msg timestamp="20201115 22:01:57.270" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.279" endtime="20201115 22:01:57.298"></status>
</kw>
<msg timestamp="20201115 22:01:57.298" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.277" endtime="20201115 22:01:57.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.301" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.299" endtime="20201115 22:01:57.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.302" endtime="20201115 22:01:57.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.275" endtime="20201115 22:01:57.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.272" endtime="20201115 22:01:57.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.311" endtime="20201115 22:01:57.597"></status>
</kw>
<msg timestamp="20201115 22:01:57.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.309" endtime="20201115 22:01:57.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.601" endtime="20201115 22:01:57.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.610" endtime="20201115 22:01:57.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.307" endtime="20201115 22:01:57.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.305" endtime="20201115 22:01:57.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:57.616" level="INFO">${RESULT} = [{'time': 0.022399611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.022560333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:57.613" endtime="20201115 22:01:57.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:57.630" level="INFO">${OVERHEAD} = {'source_diff': [1.1568999999999469e-05, 1.1554999999999899e-05, 1.1556000000002842e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.1555999999999372e-05, 1.1541999999999802e-05, 1.1569999999998...</msg>
<status status="PASS" starttime="20201115 22:01:57.617" endtime="20201115 22:01:57.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.635" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:57.633" endtime="20201115 22:01:57.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.637" level="INFO">VALUE: [1.1568999999999469e-05, 1.1554999999999899e-05, 1.1556000000002842e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.1555999999999372e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1554999999999899e-05, 1.1583000000002508e-05, 1.1582999999999039e-05, 1.1541999999999802e-05, 1.1582999999999039e-05, 1.1528000000000233e-05, 1.1569999999998942e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.1541999999999802e-05, 1.1625000000001218e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1584000000001982e-05, 1.1569999999998942e-05, 1.1569999999998942e-05, 1.1556000000002842e-05, 1.1541999999999802e-05, 1.1598000000001552e-05, 1.1596999999998608e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1596999999998608e-05, 1.1568999999999469e-05, 1.1568999999999469e-05, 1.1625000000001218e-05, 1.1569999999998942e-05, 1.1569999999998942e-05, 1.1583000000002508e-05, 1.1554999999999899e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.1541999999999802e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1569999999998942e-05, 1.1569000000002938e-05, 1.1541999999999802e-05, 1.1569000000002938e-05]</msg>
<status status="PASS" starttime="20201115 22:01:57.636" endtime="20201115 22:01:57.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.631" endtime="20201115 22:01:57.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.640" endtime="20201115 22:01:57.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:57.644" endtime="20201115 22:01:57.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.642" endtime="20201115 22:01:57.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.638" endtime="20201115 22:01:57.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.270" endtime="20201115 22:01:57.664"></status>
</kw>
<msg timestamp="20201115 22:01:57.664" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.673" endtime="20201115 22:01:57.691"></status>
</kw>
<msg timestamp="20201115 22:01:57.691" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.672" endtime="20201115 22:01:57.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:57.694" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:57.692" endtime="20201115 22:01:57.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.695" endtime="20201115 22:01:57.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.669" endtime="20201115 22:01:57.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.667" endtime="20201115 22:01:57.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:57.704" endtime="20201115 22:01:57.991"></status>
</kw>
<msg timestamp="20201115 22:01:57.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.703" endtime="20201115 22:01:57.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:57.995" endtime="20201115 22:01:58.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.003" endtime="20201115 22:01:58.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.700" endtime="20201115 22:01:58.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.698" endtime="20201115 22:01:58.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.010" level="INFO">${RESULT} = [{'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.022337556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.006" endtime="20201115 22:01:58.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.024" level="INFO">${OVERHEAD} = {'source_diff': [1.1514000000000663e-05, 1.1541999999999802e-05, 1.1554999999999899e-05, 1.1611999999997652e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1568999999999...</msg>
<status status="PASS" starttime="20201115 22:01:58.011" endtime="20201115 22:01:58.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.028" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:58.027" endtime="20201115 22:01:58.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.031" level="INFO">VALUE: [1.1514000000000663e-05, 1.1541999999999802e-05, 1.1554999999999899e-05, 1.1611999999997652e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1568999999999469e-05, 1.1555999999999372e-05, 1.1582999999999039e-05, 1.1514000000000663e-05, 1.1554999999999899e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.1611000000001648e-05, 1.1541000000000329e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1556000000002842e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1555000000003368e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1556000000002842e-05, 1.1568999999999469e-05, 1.1541999999999802e-05, 1.1568999999999469e-05, 1.1541999999999802e-05, 1.1554999999999899e-05, 1.1568999999999469e-05, 1.1554999999999899e-05, 1.1569999999998942e-05, 1.1569999999998942e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1554999999999899e-05, 1.1569999999998942e-05, 1.1568999999999469e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.1624999999997748e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1554999999999899e-05, 1.1639000000000788e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.029" endtime="20201115 22:01:58.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.025" endtime="20201115 22:01:58.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.034" endtime="20201115 22:01:58.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.037" endtime="20201115 22:01:58.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.036" endtime="20201115 22:01:58.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.032" endtime="20201115 22:01:58.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:57.665" endtime="20201115 22:01:58.058"></status>
</kw>
<msg timestamp="20201115 22:01:58.058" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.067" endtime="20201115 22:01:58.086"></status>
</kw>
<msg timestamp="20201115 22:01:58.086" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.065" endtime="20201115 22:01:58.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.087" endtime="20201115 22:01:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.090" endtime="20201115 22:01:58.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.063" endtime="20201115 22:01:58.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.061" endtime="20201115 22:01:58.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.098" endtime="20201115 22:01:58.387"></status>
</kw>
<msg timestamp="20201115 22:01:58.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.097" endtime="20201115 22:01:58.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.391" endtime="20201115 22:01:58.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.400" endtime="20201115 22:01:58.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.094" endtime="20201115 22:01:58.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.093" endtime="20201115 22:01:58.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.406" level="INFO">${RESULT} = [{'time': 0.022097694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.022261583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.403" endtime="20201115 22:01:58.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.420" level="INFO">${OVERHEAD} = {'source_diff': [1.1568999999999469e-05, 1.1554999999999899e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1500000000001093e-05, 1.1556000000002842e-05, 1.1611000000001648e-05, 1.1555999999999...</msg>
<status status="PASS" starttime="20201115 22:01:58.408" endtime="20201115 22:01:58.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.425" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:58.424" endtime="20201115 22:01:58.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.427" level="INFO">VALUE: [1.1568999999999469e-05, 1.1554999999999899e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1500000000001093e-05, 1.1556000000002842e-05, 1.1611000000001648e-05, 1.1555999999999372e-05, 1.1570000000002412e-05, 1.1541000000000329e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1554999999999899e-05, 1.1639000000000788e-05, 1.1542000000003272e-05, 1.1570000000002412e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1569000000002938e-05, 1.1638999999997318e-05, 1.1556000000002842e-05, 1.1555999999999372e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.1569000000002938e-05, 1.1555999999999372e-05, 1.152699999999729e-05, 1.1555999999999372e-05, 1.1555999999999372e-05, 1.1541000000000329e-05, 1.1569999999998942e-05, 1.1584000000001982e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1625000000001218e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.1569999999998942e-05, 1.1597000000002078e-05, 1.1555999999999372e-05, 1.1541000000000329e-05, 1.1584000000001982e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1582999999999039e-05, 1.1500000000001093e-05, 1.1555999999999372e-05, 1.1568999999999469e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.426" endtime="20201115 22:01:58.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.421" endtime="20201115 22:01:58.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.430" endtime="20201115 22:01:58.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.434" endtime="20201115 22:01:58.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.432" endtime="20201115 22:01:58.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.429" endtime="20201115 22:01:58.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.059" endtime="20201115 22:01:58.455"></status>
</kw>
<msg timestamp="20201115 22:01:58.455" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.465" endtime="20201115 22:01:58.484"></status>
</kw>
<msg timestamp="20201115 22:01:58.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.464" endtime="20201115 22:01:58.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.487" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.485" endtime="20201115 22:01:58.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.488" endtime="20201115 22:01:58.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.460" endtime="20201115 22:01:58.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.457" endtime="20201115 22:01:58.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.497" endtime="20201115 22:01:58.784"></status>
</kw>
<msg timestamp="20201115 22:01:58.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.495" endtime="20201115 22:01:58.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023926806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.788" endtime="20201115 22:01:58.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.796" endtime="20201115 22:01:58.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.493" endtime="20201115 22:01:58.799"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.491" endtime="20201115 22:01:58.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:58.803" level="INFO">${RESULT} = [{'time': 0.023926806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1569999999998942e-05, 'source_diff': 1.1569999999998942e-05}, {'time': 0.024092028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:58.800" endtime="20201115 22:01:58.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:58.817" level="INFO">${OVERHEAD} = {'source_diff': [1.1569999999998942e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1541000000000329e-05, 1.1527000000000759e-05, 1.1541999999999802e-05, 1.1569000000002...</msg>
<status status="PASS" starttime="20201115 22:01:58.804" endtime="20201115 22:01:58.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.821" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:01:58.820" endtime="20201115 22:01:58.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.824" level="INFO">VALUE: [1.1569999999998942e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1541000000000329e-05, 1.1527000000000759e-05, 1.1541999999999802e-05, 1.1569000000002938e-05, 1.1582999999999039e-05, 1.1541999999999802e-05, 1.1583000000002508e-05, 1.1555999999999372e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1485999999998053e-05, 1.1528000000000233e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1597000000002078e-05, 1.1554999999999899e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1569000000002938e-05, 1.1554999999999899e-05, 1.1568999999999469e-05, 1.1555999999999372e-05, 1.1514000000000663e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1569999999998942e-05, 1.1554999999999899e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1541999999999802e-05, 1.1653000000000358e-05, 1.1568999999999469e-05, 1.1610999999998178e-05, 1.1611000000001648e-05, 1.1514000000000663e-05, 1.1556000000002842e-05, 1.1584000000001982e-05, 1.1625000000001218e-05, 1.1583000000002508e-05, 1.1569999999995473e-05, 1.1555000000003368e-05, 1.1569000000002938e-05, 1.1570000000002412e-05]</msg>
<status status="PASS" starttime="20201115 22:01:58.822" endtime="20201115 22:01:58.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.818" endtime="20201115 22:01:58.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.827" endtime="20201115 22:01:58.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:58.830" endtime="20201115 22:01:58.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.829" endtime="20201115 22:01:58.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.825" endtime="20201115 22:01:58.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.455" endtime="20201115 22:01:58.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.876" endtime="20201115 22:01:58.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:56.875" endtime="20201115 22:01:58.851"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.854" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.864" endtime="20201115 22:01:58.883"></status>
</kw>
<msg timestamp="20201115 22:01:58.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.862" endtime="20201115 22:01:58.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:58.886" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:58.884" endtime="20201115 22:01:58.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.887" endtime="20201115 22:01:58.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.859" endtime="20201115 22:01:58.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.857" endtime="20201115 22:01:58.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:58.896" endtime="20201115 22:01:59.183"></status>
</kw>
<msg timestamp="20201115 22:01:59.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026001181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026013764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:58.895" endtime="20201115 22:01:59.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026001181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026013764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.187" endtime="20201115 22:01:59.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.195" endtime="20201115 22:01:59.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.892" endtime="20201115 22:01:59.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.890" endtime="20201115 22:01:59.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.202" level="INFO">${RESULT} = [{'time': 0.026013764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.026194431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.198" endtime="20201115 22:01:59.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.215" level="INFO">${OVERHEAD} = {'source_diff': [1.2583000000000039e-05, 1.2528000000001233e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2596999999999...</msg>
<status status="PASS" starttime="20201115 22:01:59.203" endtime="20201115 22:01:59.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.219" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:59.218" endtime="20201115 22:01:59.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.222" level="INFO">VALUE: [1.2583000000000039e-05, 1.2528000000001233e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2542000000000803e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2569999999999942e-05, 1.2583000000003508e-05, 1.2597000000003078e-05, 1.2583000000003508e-05, 1.2582999999996569e-05, 1.2570000000003412e-05, 1.2583999999996043e-05, 1.255499999999743e-05, 1.2569000000003938e-05, 1.2611000000002648e-05, 1.2583000000003508e-05, 1.2583999999996043e-05, 1.2583000000003508e-05, 1.2583000000003508e-05, 1.2568999999997e-05, 1.2610999999995709e-05, 1.2582999999996569e-05, 1.2625000000002218e-05, 1.2583000000003508e-05, 1.2584000000002982e-05, 1.2611000000002648e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.221" endtime="20201115 22:01:59.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.216" endtime="20201115 22:01:59.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.225" endtime="20201115 22:01:59.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.229" endtime="20201115 22:01:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.227" endtime="20201115 22:01:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.223" endtime="20201115 22:01:59.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.854" endtime="20201115 22:01:59.249"></status>
</kw>
<msg timestamp="20201115 22:01:59.249" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.258" endtime="20201115 22:01:59.278"></status>
</kw>
<msg timestamp="20201115 22:01:59.278" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.257" endtime="20201115 22:01:59.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.282" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.280" endtime="20201115 22:01:59.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.283" endtime="20201115 22:01:59.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.254" endtime="20201115 22:01:59.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.252" endtime="20201115 22:01:59.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.294" endtime="20201115 22:01:59.581"></status>
</kw>
<msg timestamp="20201115 22:01:59.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.292" endtime="20201115 22:01:59.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:59.585" endtime="20201115 22:01:59.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.593" endtime="20201115 22:01:59.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.289" endtime="20201115 22:01:59.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.287" endtime="20201115 22:01:59.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.600" level="INFO">${RESULT} = [{'time': 0.022386153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.022566653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:59.597" endtime="20201115 22:01:59.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:59.613" level="INFO">${OVERHEAD} = {'source_diff': [1.2569999999999942e-05, 1.2569999999999942e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2513999999998...</msg>
<status status="PASS" starttime="20201115 22:01:59.601" endtime="20201115 22:01:59.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.618" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:01:59.617" endtime="20201115 22:01:59.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.620" level="INFO">VALUE: [1.2569999999999942e-05, 1.2569999999999942e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2513999999998193e-05, 1.2528000000001233e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2583000000000039e-05, 1.2638999999998318e-05, 1.2583999999999512e-05, 1.2569000000000469e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2569000000000469e-05, 1.2597000000003078e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2666000000001454e-05, 1.2556000000000372e-05, 1.2596999999999609e-05, 1.2597999999999082e-05, 1.2583000000000039e-05, 1.2584000000002982e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2610999999999178e-05, 1.2555000000000899e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2527999999997763e-05, 1.2610999999999178e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2569000000000469e-05]</msg>
<status status="PASS" starttime="20201115 22:01:59.619" endtime="20201115 22:01:59.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.614" endtime="20201115 22:01:59.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.624" endtime="20201115 22:01:59.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:59.627" endtime="20201115 22:01:59.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.625" endtime="20201115 22:01:59.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.622" endtime="20201115 22:01:59.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.250" endtime="20201115 22:01:59.647"></status>
</kw>
<msg timestamp="20201115 22:01:59.648" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.657" endtime="20201115 22:01:59.676"></status>
</kw>
<msg timestamp="20201115 22:01:59.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.656" endtime="20201115 22:01:59.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.679" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:59.678" endtime="20201115 22:01:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.680" endtime="20201115 22:01:59.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.653" endtime="20201115 22:01:59.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.650" endtime="20201115 22:01:59.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.689" endtime="20201115 22:01:59.977"></status>
</kw>
<msg timestamp="20201115 22:01:59.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:59.688" endtime="20201115 22:01:59.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:59.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:59.982" endtime="20201115 22:01:59.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:59.990" endtime="20201115 22:01:59.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.685" endtime="20201115 22:01:59.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.683" endtime="20201115 22:01:59.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:59.997" level="INFO">${RESULT} = [{'time': 0.022905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2582999999996569e-05, 'source_diff': 1.2582999999996569e-05}, {'time': 0.023077722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:59.993" endtime="20201115 22:01:59.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.011" level="INFO">${OVERHEAD} = {'source_diff': [1.2582999999996569e-05, 1.2638999999998318e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2569000000000469e-05, 1.2569999999999...</msg>
<status status="PASS" starttime="20201115 22:01:59.998" endtime="20201115 22:02:00.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.015" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:00.014" endtime="20201115 22:02:00.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.018" level="INFO">VALUE: [1.2582999999996569e-05, 1.2638999999998318e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2569000000000469e-05, 1.2569999999999942e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2569999999999942e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2528000000001233e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.2639000000001788e-05, 1.2569000000000469e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2583999999999512e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2639000000001788e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2569000000000469e-05, 1.2569000000000469e-05, 1.2583000000000039e-05, 1.2583000000003508e-05, 1.2582999999996569e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.016" endtime="20201115 22:02:00.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.012" endtime="20201115 22:02:00.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.021" endtime="20201115 22:02:00.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.025" endtime="20201115 22:02:00.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.023" endtime="20201115 22:02:00.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.019" endtime="20201115 22:02:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:59.648" endtime="20201115 22:02:00.046"></status>
</kw>
<msg timestamp="20201115 22:02:00.046" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.055" endtime="20201115 22:02:00.075"></status>
</kw>
<msg timestamp="20201115 22:02:00.076" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.054" endtime="20201115 22:02:00.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.077" endtime="20201115 22:02:00.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.079" endtime="20201115 22:02:00.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.051" endtime="20201115 22:02:00.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.049" endtime="20201115 22:02:00.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.089" endtime="20201115 22:02:00.390"></status>
</kw>
<msg timestamp="20201115 22:02:00.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.087" endtime="20201115 22:02:00.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.394" endtime="20201115 22:02:00.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.403" endtime="20201115 22:02:00.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.085" endtime="20201115 22:02:00.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.083" endtime="20201115 22:02:00.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.410" level="INFO">${RESULT} = [{'time': 0.022905694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.023080028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.406" endtime="20201115 22:02:00.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.424" level="INFO">${OVERHEAD} = {'source_diff': [1.2583000000000039e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.2638999999998318e-05, 1.2611999999998652e-05, 1.2597999999999082e-05, 1.2555000000000899e-05, 1.2583000000000...</msg>
<status status="PASS" starttime="20201115 22:02:00.411" endtime="20201115 22:02:00.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.428" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:00.427" endtime="20201115 22:02:00.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.431" level="INFO">VALUE: [1.2583000000000039e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.2638999999998318e-05, 1.2611999999998652e-05, 1.2597999999999082e-05, 1.2555000000000899e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2555000000000899e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2569000000000469e-05, 1.2652999999997888e-05, 1.2639000000001788e-05, 1.2596999999999609e-05, 1.2597999999999082e-05, 1.2555000000000899e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2598000000002552e-05, 1.2611999999998652e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2569000000000469e-05, 1.2583000000000039e-05, 1.2638999999998318e-05, 1.2611000000002648e-05, 1.2568999999997e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2583999999999512e-05, 1.2597000000003078e-05, 1.2569000000000469e-05, 1.2584000000002982e-05, 1.2569000000000469e-05, 1.2596999999999609e-05, 1.2542000000004272e-05, 1.2611000000002648e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.429" endtime="20201115 22:02:00.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.424" endtime="20201115 22:02:00.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.435" endtime="20201115 22:02:00.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.438" endtime="20201115 22:02:00.457"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.437" endtime="20201115 22:02:00.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.433" endtime="20201115 22:02:00.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.047" endtime="20201115 22:02:00.459"></status>
</kw>
<msg timestamp="20201115 22:02:00.459" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.468" endtime="20201115 22:02:00.488"></status>
</kw>
<msg timestamp="20201115 22:02:00.488" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.467" endtime="20201115 22:02:00.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.491" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.489" endtime="20201115 22:02:00.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.492" endtime="20201115 22:02:00.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.464" endtime="20201115 22:02:00.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.462" endtime="20201115 22:02:00.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.501" endtime="20201115 22:02:00.788"></status>
</kw>
<msg timestamp="20201115 22:02:00.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.500" endtime="20201115 22:02:00.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.792" endtime="20201115 22:02:00.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.801" endtime="20201115 22:02:00.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.497" endtime="20201115 22:02:00.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.495" endtime="20201115 22:02:00.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:00.808" level="INFO">${RESULT} = [{'time': 0.022907708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.023081028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:00.804" endtime="20201115 22:02:00.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:00.821" level="INFO">${OVERHEAD} = {'source_diff': [1.2596999999999609e-05, 1.2569999999999942e-05, 1.2584000000002982e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2569000000000...</msg>
<status status="PASS" starttime="20201115 22:02:00.809" endtime="20201115 22:02:00.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.826" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:02:00.825" endtime="20201115 22:02:00.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.829" level="INFO">VALUE: [1.2596999999999609e-05, 1.2569999999999942e-05, 1.2584000000002982e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2569000000000469e-05, 1.2583999999999512e-05, 1.2598000000002552e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.252699999999829e-05, 1.2597999999999082e-05, 1.2639000000001788e-05, 1.2583999999999512e-05, 1.2598000000002552e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2541999999997333e-05, 1.2556000000000372e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2569999999999942e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2583999999999512e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2569999999999942e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2583999999999512e-05, 1.2542000000000803e-05, 1.2583999999999512e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.2527999999997763e-05, 1.2583999999999512e-05, 1.2528000000001233e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2569000000000469e-05, 1.2570000000003412e-05, 1.2569000000003938e-05]</msg>
<status status="PASS" starttime="20201115 22:02:00.827" endtime="20201115 22:02:00.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.822" endtime="20201115 22:02:00.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.833" endtime="20201115 22:02:00.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:00.836" endtime="20201115 22:02:00.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.835" endtime="20201115 22:02:00.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.831" endtime="20201115 22:02:00.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.460" endtime="20201115 22:02:00.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.853" endtime="20201115 22:02:00.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:58.852" endtime="20201115 22:02:00.857"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.860" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.869" endtime="20201115 22:02:00.888"></status>
</kw>
<msg timestamp="20201115 22:02:00.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.867" endtime="20201115 22:02:00.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:00.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:00.890" endtime="20201115 22:02:00.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.893" endtime="20201115 22:02:00.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.865" endtime="20201115 22:02:00.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.862" endtime="20201115 22:02:00.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:00.903" endtime="20201115 22:02:01.190"></status>
</kw>
<msg timestamp="20201115 22:02:01.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025341111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:00.902" endtime="20201115 22:02:01.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025341111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025354736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.194" endtime="20201115 22:02:01.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.203" endtime="20201115 22:02:01.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.899" endtime="20201115 22:02:01.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.897" endtime="20201115 22:02:01.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.210" level="INFO">${RESULT} = [{'time': 0.025354736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.025543236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.206" endtime="20201115 22:02:01.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.224" level="INFO">${OVERHEAD} = {'source_diff': [1.3624999999999748e-05, 1.3652999999998888e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3624999999999...</msg>
<status status="PASS" starttime="20201115 22:02:01.211" endtime="20201115 22:02:01.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.228" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:01.227" endtime="20201115 22:02:01.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.231" level="INFO">VALUE: [1.3624999999999748e-05, 1.3652999999998888e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3598000000000082e-05, 1.358299999999757e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3652999999998888e-05, 1.3651999999999415e-05, 1.3583999999997043e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3596999999997139e-05, 1.3583999999997043e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.355499999999843e-05, 1.3611000000003648e-05, 1.3624999999996279e-05, 1.3610999999996709e-05, 1.3570000000004412e-05, 1.3597000000004078e-05, 1.3611000000003648e-05, 1.3597000000004078e-05, 1.3611000000003648e-05, 1.3584000000003982e-05, 1.3597000000004078e-05, 1.358299999999757e-05, 1.3597000000004078e-05, 1.3596999999997139e-05, 1.3653000000002358e-05, 1.3611000000003648e-05, 1.3610999999996709e-05, 1.3612000000003122e-05, 1.3596999999997139e-05, 1.3611000000003648e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.229" endtime="20201115 22:02:01.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.225" endtime="20201115 22:02:01.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.235" endtime="20201115 22:02:01.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.238" endtime="20201115 22:02:01.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.237" endtime="20201115 22:02:01.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.233" endtime="20201115 22:02:01.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.860" endtime="20201115 22:02:01.259"></status>
</kw>
<msg timestamp="20201115 22:02:01.259" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.269" endtime="20201115 22:02:01.289"></status>
</kw>
<msg timestamp="20201115 22:02:01.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.267" endtime="20201115 22:02:01.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.292" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.290" endtime="20201115 22:02:01.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.293" endtime="20201115 22:02:01.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.264" endtime="20201115 22:02:01.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.262" endtime="20201115 22:02:01.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.303" endtime="20201115 22:02:01.591"></status>
</kw>
<msg timestamp="20201115 22:02:01.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.301" endtime="20201115 22:02:01.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.595" endtime="20201115 22:02:01.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.604" endtime="20201115 22:02:01.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.298" endtime="20201115 22:02:01.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.296" endtime="20201115 22:02:01.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:01.611" level="INFO">${RESULT} = [{'time': 0.022931514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.023122181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:01.607" endtime="20201115 22:02:01.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:01.624" level="INFO">${OVERHEAD} = {'source_diff': [1.3624999999999748e-05, 1.3666999999998458e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3638999999999318e-05, 1.3570000000000942e-05, 1.3624999999999...</msg>
<status status="PASS" starttime="20201115 22:02:01.612" endtime="20201115 22:02:01.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.630" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:01.628" endtime="20201115 22:02:01.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.632" level="INFO">VALUE: [1.3624999999999748e-05, 1.3666999999998458e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3638999999999318e-05, 1.3570000000000942e-05, 1.3624999999999748e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3610999999996709e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3570000000000942e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3584000000000512e-05, 1.3611000000000179e-05, 1.3694000000001594e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3638999999999318e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3583000000001039e-05, 1.3584000000000512e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3596999999997139e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.3624999999999748e-05, 1.3638999999999318e-05, 1.3597000000000609e-05, 1.3611000000003648e-05, 1.3610999999996709e-05, 1.3597000000004078e-05, 1.3597000000004078e-05, 1.3625000000003218e-05, 1.3596999999997139e-05]</msg>
<status status="PASS" starttime="20201115 22:02:01.631" endtime="20201115 22:02:01.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.626" endtime="20201115 22:02:01.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.635" endtime="20201115 22:02:01.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:01.639" endtime="20201115 22:02:01.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.637" endtime="20201115 22:02:01.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.634" endtime="20201115 22:02:01.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.260" endtime="20201115 22:02:01.660"></status>
</kw>
<msg timestamp="20201115 22:02:01.660" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.669" endtime="20201115 22:02:01.689"></status>
</kw>
<msg timestamp="20201115 22:02:01.689" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.668" endtime="20201115 22:02:01.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:01.692" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:01.690" endtime="20201115 22:02:01.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.693" endtime="20201115 22:02:01.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.665" endtime="20201115 22:02:01.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.663" endtime="20201115 22:02:01.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:01.703" endtime="20201115 22:02:01.990"></status>
</kw>
<msg timestamp="20201115 22:02:01.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.701" endtime="20201115 22:02:01.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:01.994" endtime="20201115 22:02:02.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.003" endtime="20201115 22:02:02.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.698" endtime="20201115 22:02:02.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.696" endtime="20201115 22:02:02.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.017" level="INFO">${RESULT} = [{'time': 0.023025833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3597000000000609e-05, 'source_diff': 1.3597000000000609e-05}, {'time': 0.023219639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.006" endtime="20201115 22:02:02.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.030" level="INFO">${OVERHEAD} = {'source_diff': [1.3597000000000609e-05, 1.3597000000000609e-05, 1.3653000000002358e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611999999999652e-05, 1.3597000000000609e-05, 1.3598000000000...</msg>
<status status="PASS" starttime="20201115 22:02:02.018" endtime="20201115 22:02:02.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.035" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:02.034" endtime="20201115 22:02:02.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.038" level="INFO">VALUE: [1.3597000000000609e-05, 1.3597000000000609e-05, 1.3653000000002358e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611999999999652e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3584000000000512e-05, 1.3638999999999318e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3666000000002454e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3569000000001469e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3584000000000512e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.3611000000000179e-05, 1.3555999999997903e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3652999999998888e-05, 1.3611000000000179e-05, 1.3638999999999318e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.354099999999886e-05, 1.3624999999999748e-05, 1.3612000000003122e-05, 1.3611999999999652e-05, 1.3584000000000512e-05, 1.3638999999999318e-05, 1.358299999999757e-05, 1.3666999999994989e-05, 1.3596999999997139e-05, 1.3610999999996709e-05, 1.3638999999995849e-05, 1.3611000000003648e-05, 1.3652000000002884e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.036" endtime="20201115 22:02:02.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.031" endtime="20201115 22:02:02.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.041" endtime="20201115 22:02:02.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.045" endtime="20201115 22:02:02.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.043" endtime="20201115 22:02:02.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.039" endtime="20201115 22:02:02.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:01.661" endtime="20201115 22:02:02.065"></status>
</kw>
<msg timestamp="20201115 22:02:02.065" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.075" endtime="20201115 22:02:02.094"></status>
</kw>
<msg timestamp="20201115 22:02:02.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.073" endtime="20201115 22:02:02.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.096" endtime="20201115 22:02:02.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.099" endtime="20201115 22:02:02.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.070" endtime="20201115 22:02:02.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.068" endtime="20201115 22:02:02.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.108" endtime="20201115 22:02:02.394"></status>
</kw>
<msg timestamp="20201115 22:02:02.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:02.106" endtime="20201115 22:02:02.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:02.399" endtime="20201115 22:02:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.407" endtime="20201115 22:02:02.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.104" endtime="20201115 22:02:02.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.102" endtime="20201115 22:02:02.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.415" level="INFO">${RESULT} = [{'time': 0.022776361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610999999996709e-05, 'source_diff': 1.3610999999996709e-05}, {'time': 0.022968319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.411" endtime="20201115 22:02:02.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.428" level="INFO">${OVERHEAD} = {'source_diff': [1.3610999999996709e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3597000000000...</msg>
<status status="PASS" starttime="20201115 22:02:02.416" endtime="20201115 22:02:02.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.433" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:02.432" endtime="20201115 22:02:02.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.436" level="INFO">VALUE: [1.3610999999996709e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3624999999999748e-05, 1.3541999999998333e-05, 1.3610999999996709e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3625000000003218e-05, 1.3638999999999318e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3651999999999415e-05, 1.3597000000000609e-05, 1.3541999999998333e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3596999999997139e-05, 1.3555999999997903e-05, 1.3611000000000179e-05, 1.3570000000000942e-05, 1.3612000000003122e-05, 1.3611000000003648e-05, 1.3610999999996709e-05, 1.3611000000003648e-05, 1.3639000000002788e-05, 1.3597000000004078e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.434" endtime="20201115 22:02:02.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.429" endtime="20201115 22:02:02.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.439" endtime="20201115 22:02:02.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.443" endtime="20201115 22:02:02.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.441" endtime="20201115 22:02:02.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.437" endtime="20201115 22:02:02.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.066" endtime="20201115 22:02:02.463"></status>
</kw>
<msg timestamp="20201115 22:02:02.464" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.473" endtime="20201115 22:02:02.492"></status>
</kw>
<msg timestamp="20201115 22:02:02.492" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.471" endtime="20201115 22:02:02.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.495" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.494" endtime="20201115 22:02:02.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.496" endtime="20201115 22:02:02.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.468" endtime="20201115 22:02:02.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.466" endtime="20201115 22:02:02.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.506" endtime="20201115 22:02:02.793"></status>
</kw>
<msg timestamp="20201115 22:02:02.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.504" endtime="20201115 22:02:02.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.797" endtime="20201115 22:02:02.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.806" endtime="20201115 22:02:02.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.501" endtime="20201115 22:02:02.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.499" endtime="20201115 22:02:02.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:02.813" level="INFO">${RESULT} = [{'time': 0.022705944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3611000000000179e-05, 'source_diff': 1.3611000000000179e-05}, {'time': 0.022900722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:02.809" endtime="20201115 22:02:02.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:02.827" level="INFO">${OVERHEAD} = {'source_diff': [1.3611000000000179e-05, 1.3610999999996709e-05, 1.3596999999997139e-05, 1.3652999999998888e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3583000000001...</msg>
<status status="PASS" starttime="20201115 22:02:02.814" endtime="20201115 22:02:02.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.831" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:02:02.830" endtime="20201115 22:02:02.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.834" level="INFO">VALUE: [1.3611000000000179e-05, 1.3610999999996709e-05, 1.3596999999997139e-05, 1.3652999999998888e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3611000000000179e-05, 1.3610999999996709e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3638999999999318e-05, 1.3611000000000179e-05, 1.3596999999997139e-05, 1.3541000000002329e-05, 1.3597000000000609e-05, 1.3693999999998124e-05, 1.3583000000001039e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3583000000001039e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3596999999997139e-05, 1.3598000000000082e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3611999999999652e-05, 1.3611999999999652e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.355499999999843e-05, 1.3583000000001039e-05, 1.355499999999843e-05, 1.3611000000000179e-05, 1.3596999999997139e-05, 1.3569000000001469e-05, 1.3611000000000179e-05, 1.3624999999999748e-05, 1.3611000000003648e-05, 1.3624999999996279e-05, 1.3624999999996279e-05, 1.3610999999996709e-05, 1.3597000000004078e-05]</msg>
<status status="PASS" starttime="20201115 22:02:02.833" endtime="20201115 22:02:02.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.828" endtime="20201115 22:02:02.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.837" endtime="20201115 22:02:02.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:02.841" endtime="20201115 22:02:02.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.839" endtime="20201115 22:02:02.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.836" endtime="20201115 22:02:02.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.464" endtime="20201115 22:02:02.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.859" endtime="20201115 22:02:02.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:00.858" endtime="20201115 22:02:02.862"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.864" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.874" endtime="20201115 22:02:02.895"></status>
</kw>
<msg timestamp="20201115 22:02:02.895" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.872" endtime="20201115 22:02:02.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:02.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:02.897" endtime="20201115 22:02:02.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.899" endtime="20201115 22:02:02.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.869" endtime="20201115 22:02:02.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.867" endtime="20201115 22:02:02.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:02.909" endtime="20201115 22:02:03.198"></status>
</kw>
<msg timestamp="20201115 22:02:03.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025299167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:02.907" endtime="20201115 22:02:03.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025299167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025313833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.202" endtime="20201115 22:02:03.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.211" endtime="20201115 22:02:03.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.905" endtime="20201115 22:02:03.213"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.903" endtime="20201115 22:02:03.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.218" level="INFO">${RESULT} = [{'time': 0.025313833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.025523583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:03.214" endtime="20201115 22:02:03.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.231" level="INFO">${OVERHEAD} = {'source_diff': [1.4665999999999985e-05, 1.4639000000000318e-05, 1.4612000000000652e-05, 1.4625000000000749e-05, 1.4638999999996849e-05, 1.4624999999997279e-05, 1.4639000000000318e-05, 1.4624999999997...</msg>
<status status="PASS" starttime="20201115 22:02:03.219" endtime="20201115 22:02:03.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.236" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:03.235" endtime="20201115 22:02:03.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.238" level="INFO">VALUE: [1.4665999999999985e-05, 1.4639000000000318e-05, 1.4612000000000652e-05, 1.4625000000000749e-05, 1.4638999999996849e-05, 1.4624999999997279e-05, 1.4639000000000318e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4597000000001609e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.458299999999857e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4541999999999333e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4680999999995559e-05, 1.4624999999997279e-05, 1.4625000000004218e-05, 1.4583999999998043e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.4638999999996849e-05, 1.4625000000004218e-05, 1.4638999999996849e-05, 1.4624999999997279e-05, 1.4694000000002594e-05, 1.4652999999996419e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4695000000002068e-05, 1.459699999999814e-05, 1.4624999999997279e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.237" endtime="20201115 22:02:03.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.232" endtime="20201115 22:02:03.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.242" endtime="20201115 22:02:03.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.245" endtime="20201115 22:02:03.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.244" endtime="20201115 22:02:03.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.240" endtime="20201115 22:02:03.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.865" endtime="20201115 22:02:03.266"></status>
</kw>
<msg timestamp="20201115 22:02:03.266" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.276" endtime="20201115 22:02:03.296"></status>
</kw>
<msg timestamp="20201115 22:02:03.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.274" endtime="20201115 22:02:03.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.298" endtime="20201115 22:02:03.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.301" endtime="20201115 22:02:03.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.271" endtime="20201115 22:02:03.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.269" endtime="20201115 22:02:03.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.311" endtime="20201115 22:02:03.599"></status>
</kw>
<msg timestamp="20201115 22:02:03.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.309" endtime="20201115 22:02:03.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.603" endtime="20201115 22:02:03.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.611" endtime="20201115 22:02:03.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.306" endtime="20201115 22:02:03.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.304" endtime="20201115 22:02:03.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:03.618" level="INFO">${RESULT} = [{'time': 0.022804111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.02301425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:03.615" endtime="20201115 22:02:03.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:03.632" level="INFO">${OVERHEAD} = {'source_diff': [1.4624999999997279e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4638000000000845e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4611000000001...</msg>
<status status="PASS" starttime="20201115 22:02:03.619" endtime="20201115 22:02:03.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.636" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:03.635" endtime="20201115 22:02:03.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.639" level="INFO">VALUE: [1.4624999999997279e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4638000000000845e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.459699999999814e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4652999999999888e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.459699999999814e-05, 1.4665999999999985e-05, 1.4624999999997279e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.459699999999814e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4667000000002928e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4681000000002498e-05, 1.4679999999999555e-05, 1.4597999999997613e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4639000000003788e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4624999999997279e-05]</msg>
<status status="PASS" starttime="20201115 22:02:03.638" endtime="20201115 22:02:03.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.633" endtime="20201115 22:02:03.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.642" endtime="20201115 22:02:03.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:03.646" endtime="20201115 22:02:03.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.644" endtime="20201115 22:02:03.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.641" endtime="20201115 22:02:03.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.267" endtime="20201115 22:02:03.667"></status>
</kw>
<msg timestamp="20201115 22:02:03.667" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.677" endtime="20201115 22:02:03.697"></status>
</kw>
<msg timestamp="20201115 22:02:03.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.675" endtime="20201115 22:02:03.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:03.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:03.698" endtime="20201115 22:02:03.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.701" endtime="20201115 22:02:03.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.672" endtime="20201115 22:02:03.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.670" endtime="20201115 22:02:03.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:03.710" endtime="20201115 22:02:03.998"></status>
</kw>
<msg timestamp="20201115 22:02:04.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023166764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:03.709" endtime="20201115 22:02:04.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023166764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.003" endtime="20201115 22:02:04.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.011" endtime="20201115 22:02:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.706" endtime="20201115 22:02:04.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.704" endtime="20201115 22:02:04.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.018" level="INFO">${RESULT} = [{'time': 0.023166764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.023368014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.015" endtime="20201115 22:02:04.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.032" level="INFO">${OVERHEAD} = {'source_diff': [1.4639000000000318e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4638999999996849e-05, 1.4597000000001609e-05, 1.4597000000001...</msg>
<status status="PASS" starttime="20201115 22:02:04.019" endtime="20201115 22:02:04.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.036" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:04.035" endtime="20201115 22:02:04.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.039" level="INFO">VALUE: [1.4639000000000318e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4638999999996849e-05, 1.4597000000001609e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.4597000000001609e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.4639000000000318e-05, 1.4584000000001512e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4665999999999985e-05, 1.4568999999999e-05, 1.459699999999814e-05, 1.4611000000001179e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4598000000001082e-05, 1.455499999999943e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.4624999999997279e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4611000000004648e-05, 1.4639000000003788e-05, 1.4625000000004218e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.037" endtime="20201115 22:02:04.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.033" endtime="20201115 22:02:04.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.042" endtime="20201115 22:02:04.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.046" endtime="20201115 22:02:04.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.044" endtime="20201115 22:02:04.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.041" endtime="20201115 22:02:04.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:03.668" endtime="20201115 22:02:04.067"></status>
</kw>
<msg timestamp="20201115 22:02:04.067" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.077" endtime="20201115 22:02:04.097"></status>
</kw>
<msg timestamp="20201115 22:02:04.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.075" endtime="20201115 22:02:04.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.098" endtime="20201115 22:02:04.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.101" endtime="20201115 22:02:04.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.072" endtime="20201115 22:02:04.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.070" endtime="20201115 22:02:04.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.110" endtime="20201115 22:02:04.397"></status>
</kw>
<msg timestamp="20201115 22:02:04.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.109" endtime="20201115 22:02:04.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.401" endtime="20201115 22:02:04.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.409" endtime="20201115 22:02:04.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.106" endtime="20201115 22:02:04.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.104" endtime="20201115 22:02:04.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.416" level="INFO">${RESULT} = [{'time': 0.022768847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.022975444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:04.413" endtime="20201115 22:02:04.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.430" level="INFO">${OVERHEAD} = {'source_diff': [1.4624999999997279e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4625000000000749e-05, 1.4709000000001637e-05, 1.4625000000000749e-05, 1.459699999999814e-05, 1.462500000000074...</msg>
<status status="PASS" starttime="20201115 22:02:04.417" endtime="20201115 22:02:04.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.435" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:04.434" endtime="20201115 22:02:04.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.437" level="INFO">VALUE: [1.4624999999997279e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4625000000000749e-05, 1.4709000000001637e-05, 1.4625000000000749e-05, 1.459699999999814e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4638999999996849e-05, 1.4639000000000318e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4652000000000415e-05, 1.459699999999814e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4612000000000652e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4639000000000318e-05, 1.4652000000000415e-05, 1.4611000000001179e-05, 1.4666999999999458e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4598000000001082e-05, 1.461099999999771e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4611999999997183e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4584000000004982e-05, 1.4555999999998903e-05, 1.4624999999997279e-05, 1.4652999999996419e-05, 1.4624999999997279e-05, 1.461099999999771e-05, 1.4624999999997279e-05, 1.4639000000003788e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.436" endtime="20201115 22:02:04.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.431" endtime="20201115 22:02:04.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.441" endtime="20201115 22:02:04.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.445" endtime="20201115 22:02:04.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.443" endtime="20201115 22:02:04.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.439" endtime="20201115 22:02:04.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.068" endtime="20201115 22:02:04.466"></status>
</kw>
<msg timestamp="20201115 22:02:04.466" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.475" endtime="20201115 22:02:04.496"></status>
</kw>
<msg timestamp="20201115 22:02:04.496" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.473" endtime="20201115 22:02:04.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.497" endtime="20201115 22:02:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.500" endtime="20201115 22:02:04.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.471" endtime="20201115 22:02:04.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.468" endtime="20201115 22:02:04.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.509" endtime="20201115 22:02:04.798"></status>
</kw>
<msg timestamp="20201115 22:02:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:04.508" endtime="20201115 22:02:04.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:04.802" endtime="20201115 22:02:04.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.811" endtime="20201115 22:02:04.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.505" endtime="20201115 22:02:04.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.503" endtime="20201115 22:02:04.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:04.818" level="INFO">${RESULT} = [{'time': 0.02283075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4611000000001179e-05, 'source_diff': 1.4611000000001179e-05}, {'time': 0.023038194, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:04.814" endtime="20201115 22:02:04.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:04.831" level="INFO">${OVERHEAD} = {'source_diff': [1.4611000000001179e-05, 1.4625000000000749e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4639000000000...</msg>
<status status="PASS" starttime="20201115 22:02:04.819" endtime="20201115 22:02:04.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.836" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:02:04.835" endtime="20201115 22:02:04.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.839" level="INFO">VALUE: [1.4611000000001179e-05, 1.4625000000000749e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4652000000000415e-05, 1.4625000000000749e-05, 1.458299999999857e-05, 1.4611000000001179e-05, 3.216699999999961e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4624999999997279e-05, 1.4583000000002039e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4555999999998903e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.4624999999997279e-05, 1.4611000000004648e-05, 1.461099999999771e-05, 1.4625000000004218e-05, 1.4624999999997279e-05, 1.461099999999771e-05]</msg>
<status status="PASS" starttime="20201115 22:02:04.837" endtime="20201115 22:02:04.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.832" endtime="20201115 22:02:04.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.842" endtime="20201115 22:02:04.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:04.846" endtime="20201115 22:02:04.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.844" endtime="20201115 22:02:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.841" endtime="20201115 22:02:04.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.466" endtime="20201115 22:02:04.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.863" endtime="20201115 22:02:04.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:02.863" endtime="20201115 22:02:04.867"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.870" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.879" endtime="20201115 22:02:04.901"></status>
</kw>
<msg timestamp="20201115 22:02:04.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.877" endtime="20201115 22:02:04.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:04.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:04.902" endtime="20201115 22:02:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.905" endtime="20201115 22:02:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.874" endtime="20201115 22:02:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.872" endtime="20201115 22:02:04.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:04.915" endtime="20201115 22:02:05.202"></status>
</kw>
<msg timestamp="20201115 22:02:05.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025394431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:04.913" endtime="20201115 22:02:05.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025378792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025394431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.206" endtime="20201115 22:02:05.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.214" endtime="20201115 22:02:05.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.910" endtime="20201115 22:02:05.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.908" endtime="20201115 22:02:05.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.221" level="INFO">${RESULT} = [{'time': 0.025394431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.563899999999785e-05, 'source_diff': 1.563899999999785e-05}, {'time': 0.025616042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.218" endtime="20201115 22:02:05.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.235" level="INFO">${OVERHEAD} = {'source_diff': [1.563899999999785e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.566700000000046e-05, 1.561100000000218e-05, 1.5707999999999694e-05, 1.562499999999828e-05, 1.562500000000175e-05...</msg>
<status status="PASS" starttime="20201115 22:02:05.222" endtime="20201115 22:02:05.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.240" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:05.238" endtime="20201115 22:02:05.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.243" level="INFO">VALUE: [1.563899999999785e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.566700000000046e-05, 1.561100000000218e-05, 1.5707999999999694e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.561100000000218e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.566699999999699e-05, 1.565299999999742e-05, 1.563900000000132e-05, 1.565299999999742e-05, 1.562500000000175e-05, 1.563899999999785e-05, 1.5598000000002082e-05, 1.565299999999742e-05, 1.563900000000132e-05, 1.5666000000000985e-05, 1.559699999999914e-05, 1.5639000000004788e-05, 1.5653000000004358e-05, 1.5653000000004358e-05, 1.562499999999828e-05, 1.5639000000004788e-05, 1.5693999999996655e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.5651999999997945e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.5653000000004358e-05, 1.5639000000004788e-05, 1.559699999999914e-05, 1.5639000000004788e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.5639000000004788e-05, 1.5611000000005648e-05, 1.563899999999785e-05, 1.5693999999996655e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.241" endtime="20201115 22:02:05.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.236" endtime="20201115 22:02:05.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.246" endtime="20201115 22:02:05.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.250" endtime="20201115 22:02:05.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.248" endtime="20201115 22:02:05.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.244" endtime="20201115 22:02:05.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.870" endtime="20201115 22:02:05.270"></status>
</kw>
<msg timestamp="20201115 22:02:05.271" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.280" endtime="20201115 22:02:05.302"></status>
</kw>
<msg timestamp="20201115 22:02:05.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.278" endtime="20201115 22:02:05.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.305" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.303" endtime="20201115 22:02:05.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.306" endtime="20201115 22:02:05.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.276" endtime="20201115 22:02:05.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.273" endtime="20201115 22:02:05.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.315" endtime="20201115 22:02:05.603"></status>
</kw>
<msg timestamp="20201115 22:02:05.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.314" endtime="20201115 22:02:05.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.607" endtime="20201115 22:02:05.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.615" endtime="20201115 22:02:05.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.311" endtime="20201115 22:02:05.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.309" endtime="20201115 22:02:05.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:05.622" level="INFO">${RESULT} = [{'time': 0.023245667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.563900000000132e-05, 'source_diff': 1.563900000000132e-05}, {'time': 0.023471611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:05.619" endtime="20201115 22:02:05.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:05.636" level="INFO">${OVERHEAD} = {'source_diff': [1.563900000000132e-05, 1.558299999999957e-05, 1.5723000000002207e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.565300000000089e-0...</msg>
<status status="PASS" starttime="20201115 22:02:05.623" endtime="20201115 22:02:05.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.641" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:05.640" endtime="20201115 22:02:05.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.644" level="INFO">VALUE: [1.563900000000132e-05, 1.558299999999957e-05, 1.5723000000002207e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.5652000000001415e-05, 1.566700000000046e-05, 1.562499999999828e-05, 1.562499999999828e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.563899999999785e-05, 1.562500000000175e-05, 1.5638000000001845e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.5694999999999598e-05, 1.563900000000132e-05, 1.559699999999914e-05, 1.562499999999828e-05, 1.566700000000046e-05, 1.5651999999997945e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5666000000000985e-05, 1.565299999999742e-05, 1.565299999999742e-05, 1.561099999999871e-05, 1.562499999999828e-05, 1.5597999999998613e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.5639000000004788e-05, 1.5707999999996225e-05, 1.5639000000004788e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5639000000004788e-05]</msg>
<status status="PASS" starttime="20201115 22:02:05.642" endtime="20201115 22:02:05.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.637" endtime="20201115 22:02:05.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.647" endtime="20201115 22:02:05.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:05.651" endtime="20201115 22:02:05.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.649" endtime="20201115 22:02:05.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.645" endtime="20201115 22:02:05.671"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.271" endtime="20201115 22:02:05.671"></status>
</kw>
<msg timestamp="20201115 22:02:05.672" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.681" endtime="20201115 22:02:05.703"></status>
</kw>
<msg timestamp="20201115 22:02:05.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.679" endtime="20201115 22:02:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:05.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:05.704" endtime="20201115 22:02:05.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.707" endtime="20201115 22:02:05.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.676" endtime="20201115 22:02:05.709"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.674" endtime="20201115 22:02:05.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:05.716" endtime="20201115 22:02:06.004"></status>
</kw>
<msg timestamp="20201115 22:02:06.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:05.715" endtime="20201115 22:02:06.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.008" endtime="20201115 22:02:06.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.017" endtime="20201115 22:02:06.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.712" endtime="20201115 22:02:06.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.710" endtime="20201115 22:02:06.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.024" level="INFO">${RESULT} = [{'time': 0.022983611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.565300000000089e-05, 'source_diff': 1.565300000000089e-05}, {'time': 0.023207208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.020" endtime="20201115 22:02:06.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.038" level="INFO">${OVERHEAD} = {'source_diff': [1.565300000000089e-05, 1.5652000000001415e-05, 1.566699999999699e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5652000000001415e-0...</msg>
<status status="PASS" starttime="20201115 22:02:06.025" endtime="20201115 22:02:06.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.043" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:06.041" endtime="20201115 22:02:06.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.045" level="INFO">VALUE: [1.565300000000089e-05, 1.5652000000001415e-05, 1.566699999999699e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5652000000001415e-05, 1.562499999999828e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.562500000000175e-05, 1.565299999999742e-05, 1.561100000000218e-05, 1.566700000000046e-05, 1.5598000000002082e-05, 1.5638000000001845e-05, 1.563900000000132e-05, 1.5651999999997945e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.5651999999997945e-05, 1.561099999999871e-05, 1.5665999999997515e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.565300000000089e-05, 1.5681000000000028e-05, 1.562500000000175e-05, 1.563900000000132e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5639000000004788e-05, 1.5625000000005218e-05, 1.5653000000004358e-05, 1.566699999999699e-05, 1.5653000000004358e-05, 1.5653000000004358e-05, 1.563899999999785e-05, 1.5653000000004358e-05, 1.5653000000004358e-05, 1.5681000000003498e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.044" endtime="20201115 22:02:06.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.039" endtime="20201115 22:02:06.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.048" endtime="20201115 22:02:06.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.052" endtime="20201115 22:02:06.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.050" endtime="20201115 22:02:06.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.047" endtime="20201115 22:02:06.073"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:05.672" endtime="20201115 22:02:06.073"></status>
</kw>
<msg timestamp="20201115 22:02:06.073" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.082" endtime="20201115 22:02:06.104"></status>
</kw>
<msg timestamp="20201115 22:02:06.105" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.081" endtime="20201115 22:02:06.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.107" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.106" endtime="20201115 22:02:06.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.108" endtime="20201115 22:02:06.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.078" endtime="20201115 22:02:06.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.076" endtime="20201115 22:02:06.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.118" endtime="20201115 22:02:06.406"></status>
</kw>
<msg timestamp="20201115 22:02:06.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.116" endtime="20201115 22:02:06.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.411" endtime="20201115 22:02:06.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.419" endtime="20201115 22:02:06.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.114" endtime="20201115 22:02:06.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.112" endtime="20201115 22:02:06.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.426" level="INFO">${RESULT} = [{'time': 0.023216236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.565300000000089e-05, 'source_diff': 1.565300000000089e-05}, {'time': 0.023435139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.423" endtime="20201115 22:02:06.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.440" level="INFO">${OVERHEAD} = {'source_diff': [1.565300000000089e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.565300000000089e-05, 1.563899999999785e-05, 1.566700000000046e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:06.428" endtime="20201115 22:02:06.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.445" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:06.444" endtime="20201115 22:02:06.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.447" level="INFO">VALUE: [1.565300000000089e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.565300000000089e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.562500000000175e-05, 1.5651999999997945e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.562500000000175e-05, 1.561100000000218e-05, 1.5651999999997945e-05, 1.561099999999871e-05, 1.565299999999742e-05, 1.559699999999914e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.565299999999742e-05, 1.5652000000001415e-05, 1.562499999999828e-05, 1.562500000000175e-05, 1.5666000000000985e-05, 1.5666000000000985e-05, 1.5695000000003068e-05, 1.565300000000089e-05, 1.5638000000001845e-05, 1.565300000000089e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.5653000000004358e-05, 1.5681000000003498e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5653000000004358e-05, 1.5666000000004454e-05, 1.5651999999997945e-05, 1.566699999999699e-05, 1.565299999999742e-05, 1.562499999999828e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.446" endtime="20201115 22:02:06.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.441" endtime="20201115 22:02:06.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.451" endtime="20201115 22:02:06.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.454" endtime="20201115 22:02:06.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.453" endtime="20201115 22:02:06.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.449" endtime="20201115 22:02:06.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.074" endtime="20201115 22:02:06.475"></status>
</kw>
<msg timestamp="20201115 22:02:06.475" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.485" endtime="20201115 22:02:06.506"></status>
</kw>
<msg timestamp="20201115 22:02:06.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.483" endtime="20201115 22:02:06.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.509" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.507" endtime="20201115 22:02:06.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.510" endtime="20201115 22:02:06.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.480" endtime="20201115 22:02:06.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.478" endtime="20201115 22:02:06.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.519" endtime="20201115 22:02:06.806"></status>
</kw>
<msg timestamp="20201115 22:02:06.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.518" endtime="20201115 22:02:06.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.810" endtime="20201115 22:02:06.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.819" endtime="20201115 22:02:06.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.515" endtime="20201115 22:02:06.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.513" endtime="20201115 22:02:06.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:06.826" level="INFO">${RESULT} = [{'time': 0.022924639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.562500000000175e-05, 'source_diff': 1.562500000000175e-05}, {'time': 0.023142403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:06.822" endtime="20201115 22:02:06.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:06.839" level="INFO">${OVERHEAD} = {'source_diff': [1.562500000000175e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5681000000000028e-05, 1.5651999999997945e-05, 1.565300000000089e-05, 1.563900000000132e-0...</msg>
<status status="PASS" starttime="20201115 22:02:06.827" endtime="20201115 22:02:06.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.844" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:02:06.843" endtime="20201115 22:02:06.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.847" level="INFO">VALUE: [1.562500000000175e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5681000000000028e-05, 1.5651999999997945e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.562499999999828e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.565299999999742e-05, 1.563900000000132e-05, 1.5652000000001415e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.562499999999828e-05, 1.5681000000000028e-05, 1.565300000000089e-05, 1.559699999999914e-05, 1.565300000000089e-05, 1.5638000000001845e-05, 1.565300000000089e-05, 1.5708999999999168e-05, 1.5652000000001415e-05, 1.562499999999828e-05, 1.561100000000218e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.565299999999742e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.5555999999999903e-05, 1.563900000000132e-05, 1.5681000000000028e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.563899999999785e-05, 1.5653000000004358e-05, 1.563899999999785e-05, 1.5667000000003928e-05, 1.5653000000004358e-05, 1.565299999999742e-05, 1.5667000000003928e-05, 1.5639000000004788e-05, 1.5639000000004788e-05, 1.5569e-05, 1.5651999999997945e-05, 1.5653000000004358e-05]</msg>
<status status="PASS" starttime="20201115 22:02:06.845" endtime="20201115 22:02:06.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.840" endtime="20201115 22:02:06.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.850" endtime="20201115 22:02:06.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:06.853" endtime="20201115 22:02:06.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.852" endtime="20201115 22:02:06.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.848" endtime="20201115 22:02:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.476" endtime="20201115 22:02:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.868" endtime="20201115 22:02:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:04.868" endtime="20201115 22:02:06.875"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.877" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.886" endtime="20201115 22:02:06.909"></status>
</kw>
<msg timestamp="20201115 22:02:06.909" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.885" endtime="20201115 22:02:06.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:06.912" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:06.911" endtime="20201115 22:02:06.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.913" endtime="20201115 22:02:06.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.882" endtime="20201115 22:02:06.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.880" endtime="20201115 22:02:06.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:06.923" endtime="20201115 22:02:07.211"></status>
</kw>
<msg timestamp="20201115 22:02:07.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:06.922" endtime="20201115 22:02:07.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025428208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.215" endtime="20201115 22:02:07.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.224" endtime="20201115 22:02:07.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.919" endtime="20201115 22:02:07.226"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.917" endtime="20201115 22:02:07.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.231" level="INFO">${RESULT} = [{'time': 0.025428208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6666000000001985e-05, 'source_diff': 1.6666000000001985e-05}, {'time': 0.025661667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:07.227" endtime="20201115 22:02:07.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.244" level="INFO">${OVERHEAD} = {'source_diff': [1.6666000000001985e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.662499999999928e-05, 1.6666000000001985e-05, 1.668100000000103e-05, 1.6665999999998515e...</msg>
<status status="PASS" starttime="20201115 22:02:07.232" endtime="20201115 22:02:07.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.249" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:07.248" endtime="20201115 22:02:07.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.252" level="INFO">VALUE: [1.6666000000001985e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.662499999999928e-05, 1.6666000000001985e-05, 1.668100000000103e-05, 1.6665999999998515e-05, 1.668100000000103e-05, 1.665299999999842e-05, 1.668100000000103e-05, 1.663900000000232e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.6680000000001555e-05, 1.661099999999971e-05, 1.668100000000103e-05, 1.6695000000000598e-05, 1.6665999999998515e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.668100000000103e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.6680000000005024e-05, 1.665299999999842e-05, 1.6651999999998945e-05, 1.666699999999799e-05, 1.666699999999799e-05, 1.666699999999799e-05, 1.668099999999756e-05, 1.6666000000005454e-05, 1.6693999999997655e-05, 1.6651999999998945e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.668099999999756e-05, 1.666699999999799e-05, 1.666699999999799e-05, 1.6666000000005454e-05, 1.669499999999713e-05, 1.666699999999799e-05, 1.6597999999999613e-05, 1.666699999999799e-05, 1.6667000000004928e-05, 1.668099999999756e-05, 1.6681000000004498e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.250" endtime="20201115 22:02:07.252"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.245" endtime="20201115 22:02:07.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.255" endtime="20201115 22:02:07.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.258" endtime="20201115 22:02:07.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.257" endtime="20201115 22:02:07.278"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.253" endtime="20201115 22:02:07.279"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.878" endtime="20201115 22:02:07.279"></status>
</kw>
<msg timestamp="20201115 22:02:07.279" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.289" endtime="20201115 22:02:07.311"></status>
</kw>
<msg timestamp="20201115 22:02:07.312" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.287" endtime="20201115 22:02:07.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.361" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.313" endtime="20201115 22:02:07.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.363" endtime="20201115 22:02:07.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.284" endtime="20201115 22:02:07.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.282" endtime="20201115 22:02:07.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.374" endtime="20201115 22:02:07.662"></status>
</kw>
<msg timestamp="20201115 22:02:07.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.372" endtime="20201115 22:02:07.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.667" endtime="20201115 22:02:07.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.675" endtime="20201115 22:02:07.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.370" endtime="20201115 22:02:07.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.367" endtime="20201115 22:02:07.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:07.682" level="INFO">${RESULT} = [{'time': 0.022949042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.665299999999842e-05, 'source_diff': 1.665299999999842e-05}, {'time': 0.023182847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:07.678" endtime="20201115 22:02:07.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:07.695" level="INFO">${OVERHEAD} = {'source_diff': [1.665299999999842e-05, 1.6679999999998085e-05, 1.665300000000189e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.6679999999998085e-05, 1.6709000000000168e-05, 1.6679999999998085e...</msg>
<status status="PASS" starttime="20201115 22:02:07.683" endtime="20201115 22:02:07.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.700" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:07.699" endtime="20201115 22:02:07.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.703" level="INFO">VALUE: [1.665299999999842e-05, 1.6679999999998085e-05, 1.665300000000189e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.6679999999998085e-05, 1.6709000000000168e-05, 1.6679999999998085e-05, 1.666700000000146e-05, 1.668100000000103e-05, 1.665300000000189e-05, 1.665299999999842e-05, 1.6695000000000598e-05, 1.6637999999999376e-05, 1.6651999999998945e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.666700000000146e-05, 1.6709000000000168e-05, 1.668100000000103e-05, 1.6665999999998515e-05, 1.668100000000103e-05, 1.666700000000146e-05, 1.6680000000001555e-05, 1.6666000000001985e-05, 1.665300000000189e-05, 1.665300000000189e-05, 1.6665999999998515e-05, 1.6666000000001985e-05, 1.6708000000000695e-05, 1.665299999999842e-05, 3.5054999999999115e-05, 1.666699999999799e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.669499999999713e-05, 1.6679999999998085e-05, 1.668099999999756e-05, 1.661099999999971e-05, 1.6694000000004594e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.6736000000003304e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.666699999999799e-05, 1.666699999999799e-05]</msg>
<status status="PASS" starttime="20201115 22:02:07.701" endtime="20201115 22:02:07.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.696" endtime="20201115 22:02:07.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.706" endtime="20201115 22:02:07.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:07.710" endtime="20201115 22:02:07.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.708" endtime="20201115 22:02:07.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.704" endtime="20201115 22:02:07.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.280" endtime="20201115 22:02:07.731"></status>
</kw>
<msg timestamp="20201115 22:02:07.731" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.740" endtime="20201115 22:02:07.763"></status>
</kw>
<msg timestamp="20201115 22:02:07.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.738" endtime="20201115 22:02:07.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:07.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:07.764" endtime="20201115 22:02:07.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.767" endtime="20201115 22:02:07.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.736" endtime="20201115 22:02:07.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.733" endtime="20201115 22:02:07.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:07.776" endtime="20201115 22:02:08.065"></status>
</kw>
<msg timestamp="20201115 22:02:08.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:07.775" endtime="20201115 22:02:08.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.069" endtime="20201115 22:02:08.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.078" endtime="20201115 22:02:08.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.772" endtime="20201115 22:02:08.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.770" endtime="20201115 22:02:08.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.085" level="INFO">${RESULT} = [{'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6651999999998945e-05, 'source_diff': 1.6651999999998945e-05}, {'time': 0.023675903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.081" endtime="20201115 22:02:08.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.098" level="INFO">${OVERHEAD} = {'source_diff': [1.6651999999998945e-05, 1.666700000000146e-05, 1.666700000000146e-05, 1.668099999999756e-05, 1.6680000000001555e-05, 1.665299999999842e-05, 1.666699999999799e-05, 1.666699999999799e-0...</msg>
<status status="PASS" starttime="20201115 22:02:08.086" endtime="20201115 22:02:08.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.103" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:08.102" endtime="20201115 22:02:08.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.106" level="INFO">VALUE: [1.6651999999998945e-05, 1.666700000000146e-05, 1.666700000000146e-05, 1.668099999999756e-05, 1.6680000000001555e-05, 1.665299999999842e-05, 1.666699999999799e-05, 1.666699999999799e-05, 1.663899999999885e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.665300000000189e-05, 1.668099999999756e-05, 1.668100000000103e-05, 1.666699999999799e-05, 1.668100000000103e-05, 1.6680000000001555e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.6694000000001125e-05, 1.665300000000189e-05, 1.6709000000000168e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.6722000000000264e-05, 1.665300000000189e-05, 1.6666000000001985e-05, 1.666699999999799e-05, 1.6735999999999834e-05, 1.665299999999842e-05, 1.6679999999998085e-05, 1.6667000000004928e-05, 1.666699999999799e-05, 1.666699999999799e-05, 1.6709000000003638e-05, 1.6665999999998515e-05, 1.6694000000004594e-05, 1.666699999999799e-05, 1.6694000000004594e-05, 1.6709000000003638e-05, 1.6693999999997655e-05, 1.666699999999799e-05, 1.6679999999998085e-05, 1.6667000000004928e-05, 1.665299999999842e-05, 1.6666000000005454e-05, 1.6708000000004164e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.104" endtime="20201115 22:02:08.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.099" endtime="20201115 22:02:08.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.109" endtime="20201115 22:02:08.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.113" endtime="20201115 22:02:08.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.111" endtime="20201115 22:02:08.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.107" endtime="20201115 22:02:08.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:07.731" endtime="20201115 22:02:08.133"></status>
</kw>
<msg timestamp="20201115 22:02:08.134" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.143" endtime="20201115 22:02:08.165"></status>
</kw>
<msg timestamp="20201115 22:02:08.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.142" endtime="20201115 22:02:08.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.167" endtime="20201115 22:02:08.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.170" endtime="20201115 22:02:08.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.139" endtime="20201115 22:02:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.137" endtime="20201115 22:02:08.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.179" endtime="20201115 22:02:08.466"></status>
</kw>
<msg timestamp="20201115 22:02:08.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023293014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.178" endtime="20201115 22:02:08.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023293014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.470" endtime="20201115 22:02:08.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.478" endtime="20201115 22:02:08.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.175" endtime="20201115 22:02:08.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.173" endtime="20201115 22:02:08.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.485" level="INFO">${RESULT} = [{'time': 0.023293014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.663900000000232e-05, 'source_diff': 1.663900000000232e-05}, {'time': 0.023527167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:08.482" endtime="20201115 22:02:08.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.499" level="INFO">${OVERHEAD} = {'source_diff': [1.663900000000232e-05, 1.666700000000146e-05, 1.661099999999971e-05, 1.6695000000000598e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.666700000000146e-05, 1.663899999999885e-...</msg>
<status status="PASS" starttime="20201115 22:02:08.486" endtime="20201115 22:02:08.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.504" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:08.503" endtime="20201115 22:02:08.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.506" level="INFO">VALUE: [1.663900000000232e-05, 1.666700000000146e-05, 1.661099999999971e-05, 1.6695000000000598e-05, 1.6665999999998515e-05, 1.6679999999998085e-05, 1.666700000000146e-05, 1.663899999999885e-05, 1.666700000000146e-05, 1.65829999999971e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.665299999999842e-05, 1.668100000000103e-05, 1.6679999999998085e-05, 1.661099999999971e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.666700000000146e-05, 1.666700000000146e-05, 1.661100000000318e-05, 1.6665999999998515e-05, 1.668099999999756e-05, 1.6709000000000168e-05, 1.666700000000146e-05, 1.6679999999998085e-05, 1.665299999999842e-05, 1.666699999999799e-05, 1.663899999999885e-05, 1.6694000000001125e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.668099999999756e-05, 1.6665999999998515e-05, 1.6639000000005788e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.6736000000003304e-05, 1.6653000000005358e-05, 1.6695000000004068e-05, 1.6681000000004498e-05, 1.666699999999799e-05, 1.6693999999997655e-05, 1.665299999999842e-05, 1.665299999999842e-05, 1.6667000000004928e-05, 1.6667000000004928e-05, 1.6679999999998085e-05, 1.665299999999842e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.505" endtime="20201115 22:02:08.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.500" endtime="20201115 22:02:08.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.510" endtime="20201115 22:02:08.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.514" endtime="20201115 22:02:08.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.512" endtime="20201115 22:02:08.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.508" endtime="20201115 22:02:08.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.135" endtime="20201115 22:02:08.534"></status>
</kw>
<msg timestamp="20201115 22:02:08.535" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.544" endtime="20201115 22:02:08.566"></status>
</kw>
<msg timestamp="20201115 22:02:08.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.542" endtime="20201115 22:02:08.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.569" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.568" endtime="20201115 22:02:08.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.571" endtime="20201115 22:02:08.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.540" endtime="20201115 22:02:08.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.537" endtime="20201115 22:02:08.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.580" endtime="20201115 22:02:08.866"></status>
</kw>
<msg timestamp="20201115 22:02:08.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.578" endtime="20201115 22:02:08.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.870" endtime="20201115 22:02:08.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.879" endtime="20201115 22:02:08.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.576" endtime="20201115 22:02:08.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.574" endtime="20201115 22:02:08.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:08.886" level="INFO">${RESULT} = [{'time': 0.022918708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6735999999999834e-05, 'source_diff': 1.6735999999999834e-05}, {'time': 0.023156597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:08.882" endtime="20201115 22:02:08.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:08.899" level="INFO">${OVERHEAD} = {'source_diff': [1.6735999999999834e-05, 1.6666000000001985e-05, 1.665300000000189e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.6679999999998085e-05, 1.665299999999842e-05, 1.668099999999756e...</msg>
<status status="PASS" starttime="20201115 22:02:08.887" endtime="20201115 22:02:08.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.904" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:02:08.903" endtime="20201115 22:02:08.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.907" level="INFO">VALUE: [1.6735999999999834e-05, 1.6666000000001985e-05, 1.665300000000189e-05, 1.665299999999842e-05, 1.6666000000001985e-05, 1.6679999999998085e-05, 1.665299999999842e-05, 1.668099999999756e-05, 1.665300000000189e-05, 1.6679999999998085e-05, 1.67089999999967e-05, 1.6665999999998515e-05, 1.6665999999998515e-05, 1.668100000000103e-05, 1.665300000000189e-05, 1.6693999999997655e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.666700000000146e-05, 1.6666000000001985e-05, 1.6679999999998085e-05, 1.6652000000002415e-05, 1.6666000000001985e-05, 1.67089999999967e-05, 1.6707999999997225e-05, 1.666700000000146e-05, 1.6665999999998515e-05, 1.6651999999998945e-05, 1.6694000000001125e-05, 1.666699999999799e-05, 1.6651999999998945e-05, 1.666700000000146e-05, 1.666700000000146e-05, 1.6680000000001555e-05, 1.668100000000103e-05, 1.6639000000005788e-05, 1.6667000000004928e-05, 1.6653000000005358e-05, 1.6679999999998085e-05, 1.6665999999998515e-05, 1.661099999999971e-05, 1.6681000000004498e-05, 1.6681000000004498e-05, 1.6652000000005884e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.6680000000005024e-05]</msg>
<status status="PASS" starttime="20201115 22:02:08.905" endtime="20201115 22:02:08.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.900" endtime="20201115 22:02:08.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.911" endtime="20201115 22:02:08.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:08.914" endtime="20201115 22:02:08.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.913" endtime="20201115 22:02:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.909" endtime="20201115 22:02:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.535" endtime="20201115 22:02:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.876" endtime="20201115 22:02:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:06.875" endtime="20201115 22:02:08.935"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.938" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.947" endtime="20201115 22:02:08.971"></status>
</kw>
<msg timestamp="20201115 22:02:08.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.945" endtime="20201115 22:02:08.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:08.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:08.972" endtime="20201115 22:02:08.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.975" endtime="20201115 22:02:08.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.942" endtime="20201115 22:02:08.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.940" endtime="20201115 22:02:08.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:08.984" endtime="20201115 22:02:09.272"></status>
</kw>
<msg timestamp="20201115 22:02:09.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025654875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025672542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:08.983" endtime="20201115 22:02:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025654875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025672542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.276" endtime="20201115 22:02:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.284" endtime="20201115 22:02:09.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.980" endtime="20201115 22:02:09.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.978" endtime="20201115 22:02:09.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.291" level="INFO">${RESULT} = [{'time': 0.025672542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.766699999999899e-05, 'source_diff': 1.766699999999899e-05}, {'time': 0.025924569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:09.288" endtime="20201115 22:02:09.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.305" level="INFO">${OVERHEAD} = {'source_diff': [1.766699999999899e-05, 1.7708000000001695e-05, 1.763899999999985e-05, 1.7694000000002125e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.768099999999856e-05, 1.769499999999813e-0...</msg>
<status status="PASS" starttime="20201115 22:02:09.292" endtime="20201115 22:02:09.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.309" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:09.308" endtime="20201115 22:02:09.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.313" level="INFO">VALUE: [1.766699999999899e-05, 1.7708000000001695e-05, 1.763899999999985e-05, 1.7694000000002125e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.766700000000246e-05, 1.76950000000016e-05, 1.7694000000002125e-05, 1.7694000000002125e-05, 1.7680000000002555e-05, 1.7665999999999515e-05, 1.76950000000016e-05, 1.769499999999813e-05, 1.768100000000203e-05, 1.7694000000002125e-05, 1.768099999999856e-05, 1.768100000000203e-05, 1.769499999999813e-05, 1.766700000000246e-05, 1.765299999999942e-05, 1.7680000000006024e-05, 1.7679999999999085e-05, 1.7735999999997365e-05, 1.7695000000005068e-05, 1.7679999999999085e-05, 1.7598000000000613e-05, 1.7707999999998225e-05, 1.7681000000005498e-05, 1.768099999999856e-05, 1.7707999999998225e-05, 1.7679999999999085e-05, 1.7693999999998655e-05, 1.769499999999813e-05, 1.7665999999999515e-05, 1.769499999999813e-05, 1.7722000000004734e-05, 1.7679999999999085e-05, 1.773699999999684e-05, 1.766699999999899e-05, 1.7707999999998225e-05, 1.7707999999998225e-05, 1.7722000000004734e-05, 1.7681000000005498e-05, 1.7665999999999515e-05, 1.7707999999998225e-05, 1.7679999999999085e-05, 1.769499999999813e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.311" endtime="20201115 22:02:09.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.306" endtime="20201115 22:02:09.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.316" endtime="20201115 22:02:09.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.320" endtime="20201115 22:02:09.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.318" endtime="20201115 22:02:09.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.314" endtime="20201115 22:02:09.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.938" endtime="20201115 22:02:09.340"></status>
</kw>
<msg timestamp="20201115 22:02:09.341" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.350" endtime="20201115 22:02:09.373"></status>
</kw>
<msg timestamp="20201115 22:02:09.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.348" endtime="20201115 22:02:09.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.376" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.374" endtime="20201115 22:02:09.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.377" endtime="20201115 22:02:09.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.346" endtime="20201115 22:02:09.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.343" endtime="20201115 22:02:09.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.386" endtime="20201115 22:02:09.674"></status>
</kw>
<msg timestamp="20201115 22:02:09.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.385" endtime="20201115 22:02:09.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.678" endtime="20201115 22:02:09.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.687" endtime="20201115 22:02:09.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.382" endtime="20201115 22:02:09.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.380" endtime="20201115 22:02:09.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:09.694" level="INFO">${RESULT} = [{'time': 0.022996861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7679999999999085e-05, 'source_diff': 1.7679999999999085e-05}, {'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:09.690" endtime="20201115 22:02:09.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:09.707" level="INFO">${OVERHEAD} = {'source_diff': [1.7679999999999085e-05, 1.7680000000002555e-05, 1.769499999999813e-05, 1.7679999999999085e-05, 1.76950000000016e-05, 1.7708000000001695e-05, 1.7679999999999085e-05, 1.76950000000016e-...</msg>
<status status="PASS" starttime="20201115 22:02:09.695" endtime="20201115 22:02:09.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.712" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:09.711" endtime="20201115 22:02:09.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.715" level="INFO">VALUE: [1.7679999999999085e-05, 1.7680000000002555e-05, 1.769499999999813e-05, 1.7679999999999085e-05, 1.76950000000016e-05, 1.7708000000001695e-05, 1.7679999999999085e-05, 1.76950000000016e-05, 1.766699999999899e-05, 1.7666000000002985e-05, 1.7693999999998655e-05, 1.768100000000203e-05, 1.7709000000001168e-05, 1.762500000000028e-05, 1.7680000000002555e-05, 1.7750000000000404e-05, 1.763900000000332e-05, 1.769499999999813e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.7736000000000834e-05, 1.766699999999899e-05, 1.766699999999899e-05, 1.7708000000001695e-05, 1.7679999999999085e-05, 1.766700000000246e-05, 1.768099999999856e-05, 1.7707999999998225e-05, 1.763899999999985e-05, 1.768100000000203e-05, 1.7750000000000404e-05, 1.768100000000203e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.7680000000006024e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.766699999999899e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.766699999999899e-05, 1.7651999999999946e-05, 1.7708000000005164e-05, 1.769499999999813e-05, 1.7750000000003874e-05, 1.768099999999856e-05, 1.766699999999899e-05]</msg>
<status status="PASS" starttime="20201115 22:02:09.713" endtime="20201115 22:02:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.708" endtime="20201115 22:02:09.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.718" endtime="20201115 22:02:09.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:09.722" endtime="20201115 22:02:09.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.720" endtime="20201115 22:02:09.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.716" endtime="20201115 22:02:09.742"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.341" endtime="20201115 22:02:09.742"></status>
</kw>
<msg timestamp="20201115 22:02:09.743" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.752" endtime="20201115 22:02:09.776"></status>
</kw>
<msg timestamp="20201115 22:02:09.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.750" endtime="20201115 22:02:09.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:09.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:09.777" endtime="20201115 22:02:09.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.780" endtime="20201115 22:02:09.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.748" endtime="20201115 22:02:09.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.745" endtime="20201115 22:02:09.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:09.790" endtime="20201115 22:02:10.078"></status>
</kw>
<msg timestamp="20201115 22:02:10.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:09.788" endtime="20201115 22:02:10.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.082" endtime="20201115 22:02:10.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.091" endtime="20201115 22:02:10.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.785" endtime="20201115 22:02:10.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.783" endtime="20201115 22:02:10.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.098" level="INFO">${RESULT} = [{'time': 0.022893819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7693999999998655e-05, 'source_diff': 1.7693999999998655e-05}, {'time': 0.023152986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.094" endtime="20201115 22:02:10.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.112" level="INFO">${OVERHEAD} = {'source_diff': [1.7693999999998655e-05, 1.761100000000071e-05, 1.769499999999813e-05, 1.768099999999856e-05, 1.765299999999942e-05, 1.768099999999856e-05, 1.7693999999998655e-05, 1.7693999999998655e-...</msg>
<status status="PASS" starttime="20201115 22:02:10.099" endtime="20201115 22:02:10.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.117" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:10.116" endtime="20201115 22:02:10.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.119" level="INFO">VALUE: [1.7693999999998655e-05, 1.761100000000071e-05, 1.769499999999813e-05, 1.768099999999856e-05, 1.765299999999942e-05, 1.768099999999856e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.769499999999813e-05, 1.769499999999813e-05, 1.7679999999999085e-05, 1.766699999999899e-05, 1.7694000000002125e-05, 1.765299999999942e-05, 1.763899999999985e-05, 1.7693999999998655e-05, 1.762499999999681e-05, 1.766700000000246e-05, 1.769499999999813e-05, 1.7708000000001695e-05, 1.766700000000246e-05, 1.76950000000016e-05, 1.7679999999999085e-05, 1.7749999999996935e-05, 1.7680000000002555e-05, 1.7651999999999946e-05, 1.769499999999813e-05, 1.766699999999899e-05, 1.7693999999998655e-05, 1.766699999999899e-05, 1.7693999999998655e-05, 1.7721999999997795e-05, 1.762500000000028e-05, 1.768099999999856e-05, 1.7679999999999085e-05, 1.7679999999999085e-05, 1.7679999999999085e-05, 1.769499999999813e-05, 1.766699999999899e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.766699999999899e-05, 1.769499999999813e-05, 1.7694000000005594e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.7695000000005068e-05, 1.765299999999942e-05, 1.7667000000005928e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.118" endtime="20201115 22:02:10.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.113" endtime="20201115 22:02:10.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.123" endtime="20201115 22:02:10.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.126" endtime="20201115 22:02:10.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.125" endtime="20201115 22:02:10.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.121" endtime="20201115 22:02:10.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:09.743" endtime="20201115 22:02:10.149"></status>
</kw>
<msg timestamp="20201115 22:02:10.149" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.158" endtime="20201115 22:02:10.182"></status>
</kw>
<msg timestamp="20201115 22:02:10.182" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.156" endtime="20201115 22:02:10.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.185" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.184" endtime="20201115 22:02:10.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.186" endtime="20201115 22:02:10.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.154" endtime="20201115 22:02:10.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.152" endtime="20201115 22:02:10.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.196" endtime="20201115 22:02:10.483"></status>
</kw>
<msg timestamp="20201115 22:02:10.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:10.194" endtime="20201115 22:02:10.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024616319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024634, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:10.488" endtime="20201115 22:02:10.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.496" endtime="20201115 22:02:10.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.192" endtime="20201115 22:02:10.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.189" endtime="20201115 22:02:10.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.504" level="INFO">${RESULT} = [{'time': 0.024634, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.768099999999856e-05, 'source_diff': 1.768099999999856e-05}, {'time': 0.024891194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:10.500" endtime="20201115 22:02:10.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.517" level="INFO">${OVERHEAD} = {'source_diff': [1.768099999999856e-05, 1.7651999999999946e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.768100000000203e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.770900000000116...</msg>
<status status="PASS" starttime="20201115 22:02:10.505" endtime="20201115 22:02:10.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.522" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:10.521" endtime="20201115 22:02:10.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.525" level="INFO">VALUE: [1.768099999999856e-05, 1.7651999999999946e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.768100000000203e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.7709000000001168e-05, 1.7679999999999085e-05, 1.7708000000001695e-05, 1.768100000000203e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.77089999999977e-05, 1.7665999999999515e-05, 1.7693999999998655e-05, 1.7680000000002555e-05, 1.7679999999999085e-05, 1.7709000000001168e-05, 1.7707999999998225e-05, 1.7707999999998225e-05, 1.768099999999856e-05, 1.7721999999997795e-05, 1.7651999999999946e-05, 1.7679999999999085e-05, 1.7694000000002125e-05, 1.7679999999999085e-05, 1.7679999999999085e-05, 1.769499999999813e-05, 1.769499999999813e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.759700000000114e-05, 1.7695000000005068e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.7735999999997365e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.769499999999813e-05, 1.7709000000004638e-05, 1.765299999999942e-05, 1.768099999999856e-05, 1.7680000000006024e-05, 1.768099999999856e-05, 1.768099999999856e-05, 1.768099999999856e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.523" endtime="20201115 22:02:10.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.518" endtime="20201115 22:02:10.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.528" endtime="20201115 22:02:10.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.532" endtime="20201115 22:02:10.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.530" endtime="20201115 22:02:10.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.526" endtime="20201115 22:02:10.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.149" endtime="20201115 22:02:10.552"></status>
</kw>
<msg timestamp="20201115 22:02:10.552" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.562" endtime="20201115 22:02:10.584"></status>
</kw>
<msg timestamp="20201115 22:02:10.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.560" endtime="20201115 22:02:10.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.588" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.586" endtime="20201115 22:02:10.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.589" endtime="20201115 22:02:10.590"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.557" endtime="20201115 22:02:10.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.555" endtime="20201115 22:02:10.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.598" endtime="20201115 22:02:10.884"></status>
</kw>
<msg timestamp="20201115 22:02:10.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.597" endtime="20201115 22:02:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:10.889" endtime="20201115 22:02:10.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.897" endtime="20201115 22:02:10.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.594" endtime="20201115 22:02:10.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.592" endtime="20201115 22:02:10.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:10.905" level="INFO">${RESULT} = [{'time': 0.022890833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7750000000000404e-05, 'source_diff': 1.7750000000000404e-05}, {'time': 0.023145944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:10.901" endtime="20201115 22:02:10.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:10.918" level="INFO">${OVERHEAD} = {'source_diff': [1.7750000000000404e-05, 1.7680000000002555e-05, 1.7750000000000404e-05, 1.769499999999813e-05, 1.766700000000246e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.770800000000169...</msg>
<status status="PASS" starttime="20201115 22:02:10.906" endtime="20201115 22:02:10.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.923" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:02:10.922" endtime="20201115 22:02:10.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.926" level="INFO">VALUE: [1.7750000000000404e-05, 1.7680000000002555e-05, 1.7750000000000404e-05, 1.769499999999813e-05, 1.766700000000246e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.7708000000001695e-05, 1.7665999999999515e-05, 1.7693999999998655e-05, 1.7679999999999085e-05, 1.7694000000002125e-05, 1.7707999999998225e-05, 1.7708000000001695e-05, 1.7709000000001168e-05, 1.7693999999998655e-05, 1.7737000000000308e-05, 1.768099999999856e-05, 1.76950000000016e-05, 1.7694000000002125e-05, 1.7680000000002555e-05, 1.7737000000000308e-05, 1.7679999999999085e-05, 1.766699999999899e-05, 1.769499999999813e-05, 1.769499999999813e-05, 1.766699999999899e-05, 1.7679999999999085e-05, 1.761099999999724e-05, 1.7722000000001265e-05, 1.76950000000016e-05, 1.768100000000203e-05, 1.7708000000001695e-05, 1.7707999999998225e-05, 1.762500000000028e-05, 1.7764000000003444e-05, 1.768099999999856e-05, 1.7679999999999085e-05, 1.7707999999998225e-05, 1.769499999999813e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.7667000000005928e-05, 1.77089999999977e-05, 1.769499999999813e-05, 1.7694000000005594e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.7736000000004304e-05, 1.7679999999999085e-05]</msg>
<status status="PASS" starttime="20201115 22:02:10.924" endtime="20201115 22:02:10.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.919" endtime="20201115 22:02:10.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.929" endtime="20201115 22:02:10.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:10.933" endtime="20201115 22:02:10.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.931" endtime="20201115 22:02:10.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.927" endtime="20201115 22:02:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.553" endtime="20201115 22:02:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.937" endtime="20201115 22:02:10.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:08.936" endtime="20201115 22:02:10.954"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.957" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.968" endtime="20201115 22:02:10.992"></status>
</kw>
<msg timestamp="20201115 22:02:10.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.966" endtime="20201115 22:02:10.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:10.995" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:10.993" endtime="20201115 22:02:10.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:10.996" endtime="20201115 22:02:10.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.963" endtime="20201115 22:02:10.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.961" endtime="20201115 22:02:10.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.006" endtime="20201115 22:02:11.295"></status>
</kw>
<msg timestamp="20201115 22:02:11.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027871625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.004" endtime="20201115 22:02:11.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027871625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.299" endtime="20201115 22:02:11.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.308" endtime="20201115 22:02:11.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.002" endtime="20201115 22:02:11.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.000" endtime="20201115 22:02:11.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.315" level="INFO">${RESULT} = [{'time': 0.027871625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.028143861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.311" endtime="20201115 22:02:11.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.328" level="INFO">${OVERHEAD} = {'source_diff': [1.8707999999999225e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8735999999998365e-05, 1.8680000000000085e-05, 1.872199999999879...</msg>
<status status="PASS" starttime="20201115 22:02:11.316" endtime="20201115 22:02:11.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.333" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:11.332" endtime="20201115 22:02:11.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.336" level="INFO">VALUE: [1.8707999999999225e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8735999999998365e-05, 1.8680000000000085e-05, 1.8721999999998795e-05, 1.870900000000217e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8763999999997505e-05, 1.872299999999827e-05, 1.8707999999999225e-05, 1.8709000000005638e-05, 1.8709000000005638e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.869499999999913e-05, 1.872299999999827e-05, 1.8707999999999225e-05, 1.869499999999913e-05, 1.8680000000000085e-05, 1.8750000000004874e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.868099999999956e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8722000000005734e-05, 1.8709000000005638e-05, 1.872299999999827e-05, 1.8721999999998795e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8763999999997505e-05, 1.8693999999999655e-05, 1.868099999999956e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8680000000000085e-05, 1.8707999999999225e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.334" endtime="20201115 22:02:11.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.329" endtime="20201115 22:02:11.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.339" endtime="20201115 22:02:11.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.343" endtime="20201115 22:02:11.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.341" endtime="20201115 22:02:11.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.337" endtime="20201115 22:02:11.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.958" endtime="20201115 22:02:11.363"></status>
</kw>
<msg timestamp="20201115 22:02:11.364" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.373" endtime="20201115 22:02:11.397"></status>
</kw>
<msg timestamp="20201115 22:02:11.397" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.371" endtime="20201115 22:02:11.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.398" endtime="20201115 22:02:11.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.402" endtime="20201115 22:02:11.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.368" endtime="20201115 22:02:11.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.366" endtime="20201115 22:02:11.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.411" endtime="20201115 22:02:11.698"></status>
</kw>
<msg timestamp="20201115 22:02:11.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:11.410" endtime="20201115 22:02:11.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:11.702" endtime="20201115 22:02:11.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.710" endtime="20201115 22:02:11.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.407" endtime="20201115 22:02:11.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.405" endtime="20201115 22:02:11.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:11.717" level="INFO">${RESULT} = [{'time': 0.022902208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.023179472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:11.714" endtime="20201115 22:02:11.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:11.731" level="INFO">${OVERHEAD} = {'source_diff': [1.8707999999999225e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.865300000000042...</msg>
<status status="PASS" starttime="20201115 22:02:11.718" endtime="20201115 22:02:11.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.736" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:11.735" endtime="20201115 22:02:11.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.738" level="INFO">VALUE: [1.8707999999999225e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.877700000000107e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8736000000001835e-05, 1.87089999999987e-05, 1.8708000000002695e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.868100000000303e-05, 1.8722000000002265e-05, 1.869499999999913e-05, 1.8750000000001404e-05, 1.86950000000026e-05, 1.8736000000001835e-05, 1.8707999999999225e-05, 1.8680000000000085e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.869499999999913e-05, 1.8721999999998795e-05, 1.8708000000006164e-05, 1.8749999999997935e-05, 1.87089999999987e-05, 1.8693999999999655e-05, 1.8666000000000516e-05, 1.87089999999987e-05, 1.863900000000085e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.8693999999999655e-05, 1.873699999999784e-05, 1.8707999999999225e-05, 1.8694000000006594e-05, 1.872299999999827e-05, 1.87089999999987e-05, 1.8707999999999225e-05]</msg>
<status status="PASS" starttime="20201115 22:02:11.737" endtime="20201115 22:02:11.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.732" endtime="20201115 22:02:11.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.742" endtime="20201115 22:02:11.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:11.745" endtime="20201115 22:02:11.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.744" endtime="20201115 22:02:11.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.740" endtime="20201115 22:02:11.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.364" endtime="20201115 22:02:11.766"></status>
</kw>
<msg timestamp="20201115 22:02:11.766" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.776" endtime="20201115 22:02:11.801"></status>
</kw>
<msg timestamp="20201115 22:02:11.801" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.774" endtime="20201115 22:02:11.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:11.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:11.802" endtime="20201115 22:02:11.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.805" endtime="20201115 22:02:11.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.771" endtime="20201115 22:02:11.807"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.769" endtime="20201115 22:02:11.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:11.814" endtime="20201115 22:02:12.102"></status>
</kw>
<msg timestamp="20201115 22:02:12.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:11.813" endtime="20201115 22:02:12.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.106" endtime="20201115 22:02:12.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.114" endtime="20201115 22:02:12.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.810" endtime="20201115 22:02:12.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.808" endtime="20201115 22:02:12.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.121" level="INFO">${RESULT} = [{'time': 0.023409389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.023681458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.118" endtime="20201115 22:02:12.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.135" level="INFO">${OVERHEAD} = {'source_diff': [1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8707999999999225e-05, 1.872200000000226...</msg>
<status status="PASS" starttime="20201115 22:02:12.122" endtime="20201115 22:02:12.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.140" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:12.139" endtime="20201115 22:02:12.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.142" level="INFO">VALUE: [1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8707999999999225e-05, 1.8722000000002265e-05, 1.8735999999998365e-05, 1.8707999999999225e-05, 1.8693999999999655e-05, 1.870900000000217e-05, 1.86950000000026e-05, 1.87089999999987e-05, 1.8723000000001738e-05, 1.8708000000002695e-05, 1.8749999999997935e-05, 1.8707999999999225e-05, 1.869499999999913e-05, 1.8721999999998795e-05, 1.8792000000000114e-05, 1.8723000000001738e-05, 1.8694000000003125e-05, 1.872299999999827e-05, 1.866699999999999e-05, 1.8764000000000974e-05, 1.8723000000001738e-05, 1.868099999999956e-05, 1.8778000000000544e-05, 1.87089999999987e-05, 1.865300000000042e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.872299999999827e-05, 1.8707999999999225e-05, 1.865300000000042e-05, 1.8721999999998795e-05, 1.869499999999913e-05, 1.866699999999999e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.87089999999987e-05, 1.8680000000000085e-05, 1.8708000000006164e-05, 1.87089999999987e-05, 1.8721999999998795e-05, 1.866699999999999e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.141" endtime="20201115 22:02:12.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.136" endtime="20201115 22:02:12.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.146" endtime="20201115 22:02:12.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.149" endtime="20201115 22:02:12.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.148" endtime="20201115 22:02:12.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.144" endtime="20201115 22:02:12.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:11.767" endtime="20201115 22:02:12.170"></status>
</kw>
<msg timestamp="20201115 22:02:12.171" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.180" endtime="20201115 22:02:12.204"></status>
</kw>
<msg timestamp="20201115 22:02:12.204" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.178" endtime="20201115 22:02:12.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.207" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.206" endtime="20201115 22:02:12.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.208" endtime="20201115 22:02:12.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.176" endtime="20201115 22:02:12.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.173" endtime="20201115 22:02:12.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.218" endtime="20201115 22:02:12.505"></status>
</kw>
<msg timestamp="20201115 22:02:12.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02399, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008708, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:12.216" endtime="20201115 22:02:12.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02399, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024008708, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:12.509" endtime="20201115 22:02:12.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.518" endtime="20201115 22:02:12.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.213" endtime="20201115 22:02:12.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.212" endtime="20201115 22:02:12.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.525" level="INFO">${RESULT} = [{'time': 0.024008708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8707999999999225e-05, 'source_diff': 1.8707999999999225e-05}, {'time': 0.024287792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.521" endtime="20201115 22:02:12.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.538" level="INFO">${OVERHEAD} = {'source_diff': [1.8707999999999225e-05, 1.872299999999827e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.8736000000001835e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8708000000002695...</msg>
<status status="PASS" starttime="20201115 22:02:12.526" endtime="20201115 22:02:12.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.543" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:12.542" endtime="20201115 22:02:12.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.546" level="INFO">VALUE: [1.8707999999999225e-05, 1.872299999999827e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.8736000000001835e-05, 1.8707999999999225e-05, 1.87089999999987e-05, 1.8708000000002695e-05, 1.869499999999913e-05, 1.869499999999913e-05, 1.870900000000217e-05, 1.8736000000001835e-05, 1.8722000000002265e-05, 1.8707999999999225e-05, 1.865300000000042e-05, 1.8723000000001738e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.87089999999987e-05, 1.8707999999999225e-05, 1.869499999999913e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.869499999999913e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.869499999999913e-05, 1.8722000000005734e-05, 1.87089999999987e-05, 1.872299999999827e-05, 1.868099999999956e-05, 1.8721999999998795e-05, 1.8693999999999655e-05, 1.866699999999999e-05, 1.8652000000000946e-05, 1.8722000000005734e-05, 1.863900000000085e-05, 1.8763999999997505e-05, 1.8723000000005208e-05, 1.8721999999998795e-05, 1.8695000000006068e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.8721999999998795e-05, 1.8694000000006594e-05, 1.863900000000085e-05, 1.87089999999987e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.544" endtime="20201115 22:02:12.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.539" endtime="20201115 22:02:12.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.549" endtime="20201115 22:02:12.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.553" endtime="20201115 22:02:12.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.551" endtime="20201115 22:02:12.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.548" endtime="20201115 22:02:12.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.171" endtime="20201115 22:02:12.574"></status>
</kw>
<msg timestamp="20201115 22:02:12.574" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.583" endtime="20201115 22:02:12.607"></status>
</kw>
<msg timestamp="20201115 22:02:12.608" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.582" endtime="20201115 22:02:12.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.609" endtime="20201115 22:02:12.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.612" endtime="20201115 22:02:12.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.579" endtime="20201115 22:02:12.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.577" endtime="20201115 22:02:12.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.621" endtime="20201115 22:02:12.909"></status>
</kw>
<msg timestamp="20201115 22:02:12.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.620" endtime="20201115 22:02:12.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023010764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:12.913" endtime="20201115 22:02:12.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.921" endtime="20201115 22:02:12.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.617" endtime="20201115 22:02:12.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.615" endtime="20201115 22:02:12.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:12.928" level="INFO">${RESULT} = [{'time': 0.023010764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8721999999998795e-05, 'source_diff': 1.8721999999998795e-05}, {'time': 0.023282319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:12.925" endtime="20201115 22:02:12.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:12.941" level="INFO">${OVERHEAD} = {'source_diff': [1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.879100000000064e-05, 1.8722000000002265e-05, 1.8721999999998795e-05, 1.869499999999913...</msg>
<status status="PASS" starttime="20201115 22:02:12.929" endtime="20201115 22:02:12.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.946" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:02:12.945" endtime="20201115 22:02:12.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.948" level="INFO">VALUE: [1.8721999999998795e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.872299999999827e-05, 1.879100000000064e-05, 1.8722000000002265e-05, 1.8721999999998795e-05, 1.869499999999913e-05, 1.8693999999999655e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.8721999999998795e-05, 1.872299999999827e-05, 1.87089999999987e-05, 1.866699999999999e-05, 1.8707999999999225e-05, 1.8680000000000085e-05, 1.870900000000217e-05, 1.8721999999998795e-05, 1.866699999999999e-05, 1.8708000000002695e-05, 1.8707999999999225e-05, 1.863900000000085e-05, 1.866699999999999e-05, 1.872299999999827e-05, 1.869499999999913e-05, 1.8707999999999225e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8737000000001308e-05, 1.87089999999987e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.8721999999998795e-05, 1.8695000000006068e-05, 1.869499999999913e-05, 1.8638000000001376e-05, 1.8709000000005638e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.8695000000006068e-05, 1.8707999999999225e-05, 1.8723000000005208e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.868099999999956e-05, 1.8721999999998795e-05, 1.8721999999998795e-05, 1.869499999999913e-05, 1.87089999999987e-05]</msg>
<status status="PASS" starttime="20201115 22:02:12.947" endtime="20201115 22:02:12.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.942" endtime="20201115 22:02:12.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.952" endtime="20201115 22:02:12.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:12.955" endtime="20201115 22:02:12.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.954" endtime="20201115 22:02:12.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.950" endtime="20201115 22:02:12.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.575" endtime="20201115 22:02:12.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.956" endtime="20201115 22:02:12.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:10.955" endtime="20201115 22:02:12.976"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:12.978" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:12.987" endtime="20201115 22:02:13.013"></status>
</kw>
<msg timestamp="20201115 22:02:13.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:12.986" endtime="20201115 22:02:13.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.017" endtime="20201115 22:02:13.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.022" endtime="20201115 22:02:13.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.983" endtime="20201115 22:02:13.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.981" endtime="20201115 22:02:13.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.041" endtime="20201115 22:02:13.335"></status>
</kw>
<msg timestamp="20201115 22:02:13.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.038" endtime="20201115 22:02:13.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025290986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.339" endtime="20201115 22:02:13.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.347" endtime="20201115 22:02:13.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.032" endtime="20201115 22:02:13.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.028" endtime="20201115 22:02:13.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.354" level="INFO">${RESULT} = [{'time': 0.025310694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9708000000000225e-05, 'source_diff': 1.9708000000000225e-05}, {'time': 0.025601875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:13.350" endtime="20201115 22:02:13.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.367" level="INFO">${OVERHEAD} = {'source_diff': [1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999...</msg>
<status status="PASS" starttime="20201115 22:02:13.355" endtime="20201115 22:02:13.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.371" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:13.370" endtime="20201115 22:02:13.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.374" level="INFO">VALUE: [1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9792000000001114e-05, 1.979100000000164e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.972299999999927e-05, 1.9721999999999795e-05, 1.966700000000099e-05, 1.965300000000142e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9723000000006208e-05, 1.9721999999999795e-05, 1.9777999999998075e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.97089999999997e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9680000000001086e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9709000000006638e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9666000000001516e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.968100000000056e-05, 1.9763999999998505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.373" endtime="20201115 22:02:13.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.368" endtime="20201115 22:02:13.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.378" endtime="20201115 22:02:13.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.381" endtime="20201115 22:02:13.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.380" endtime="20201115 22:02:13.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.376" endtime="20201115 22:02:13.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.979" endtime="20201115 22:02:13.402"></status>
</kw>
<msg timestamp="20201115 22:02:13.402" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.411" endtime="20201115 22:02:13.435"></status>
</kw>
<msg timestamp="20201115 22:02:13.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.409" endtime="20201115 22:02:13.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.437" endtime="20201115 22:02:13.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.439" endtime="20201115 22:02:13.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.407" endtime="20201115 22:02:13.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.405" endtime="20201115 22:02:13.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.448" endtime="20201115 22:02:13.734"></status>
</kw>
<msg timestamp="20201115 22:02:13.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.447" endtime="20201115 22:02:13.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.738" endtime="20201115 22:02:13.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.747" endtime="20201115 22:02:13.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.444" endtime="20201115 22:02:13.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.442" endtime="20201115 22:02:13.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:13.753" level="INFO">${RESULT} = [{'time': 0.022335431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.972299999999927e-05, 'source_diff': 1.972299999999927e-05}, {'time': 0.022628931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:13.750" endtime="20201115 22:02:13.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:13.766" level="INFO">${OVERHEAD} = {'source_diff': [1.972299999999927e-05, 1.9737000000002308e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 1.9736000000002835e-05, 1.97089999999997e...</msg>
<status status="PASS" starttime="20201115 22:02:13.754" endtime="20201115 22:02:13.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.772" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:13.770" endtime="20201115 22:02:13.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.774" level="INFO">VALUE: [1.972299999999927e-05, 1.9737000000002308e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 1.9736000000002835e-05, 1.97089999999997e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9679999999997616e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9666000000001516e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 1.9736000000002835e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9708000000000225e-05, 1.9750000000005874e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9750000000005874e-05, 1.9736000000006304e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.966700000000099e-05]</msg>
<status status="PASS" starttime="20201115 22:02:13.773" endtime="20201115 22:02:13.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.768" endtime="20201115 22:02:13.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.777" endtime="20201115 22:02:13.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:13.781" endtime="20201115 22:02:13.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.779" endtime="20201115 22:02:13.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.775" endtime="20201115 22:02:13.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.402" endtime="20201115 22:02:13.801"></status>
</kw>
<msg timestamp="20201115 22:02:13.802" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.810" endtime="20201115 22:02:13.835"></status>
</kw>
<msg timestamp="20201115 22:02:13.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.809" endtime="20201115 22:02:13.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:13.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:13.837" endtime="20201115 22:02:13.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.840" endtime="20201115 22:02:13.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.806" endtime="20201115 22:02:13.842"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.804" endtime="20201115 22:02:13.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:13.848" endtime="20201115 22:02:14.135"></status>
</kw>
<msg timestamp="20201115 22:02:14.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:13.847" endtime="20201115 22:02:14.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.139" endtime="20201115 22:02:14.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.147" endtime="20201115 22:02:14.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.844" endtime="20201115 22:02:14.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.843" endtime="20201115 22:02:14.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.154" level="INFO">${RESULT} = [{'time': 0.022387889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.022683361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.151" endtime="20201115 22:02:14.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.168" level="INFO">${OVERHEAD} = {'source_diff': [1.9750000000002405e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.972300000000274e-05, 1.973699999999884e-05, 1.969500000000013...</msg>
<status status="PASS" starttime="20201115 22:02:14.156" endtime="20201115 22:02:14.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.173" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:14.171" endtime="20201115 22:02:14.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.175" level="INFO">VALUE: [1.9750000000002405e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.972300000000274e-05, 1.973699999999884e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9721999999999795e-05, 1.9778000000001544e-05, 1.9708000000000225e-05, 1.9722000000003265e-05, 1.9735999999999365e-05, 1.9764000000001974e-05, 1.973699999999884e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9749999999998935e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.972300000000274e-05, 1.9750000000002405e-05, 1.9693999999997186e-05, 1.9735999999999365e-05, 1.9736000000006304e-05, 1.9721999999999795e-05, 1.968100000000056e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.973699999999884e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.973699999999884e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.9791999999997645e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.174" endtime="20201115 22:02:14.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.169" endtime="20201115 22:02:14.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.178" endtime="20201115 22:02:14.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.182" endtime="20201115 22:02:14.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.180" endtime="20201115 22:02:14.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.176" endtime="20201115 22:02:14.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:13.802" endtime="20201115 22:02:14.202"></status>
</kw>
<msg timestamp="20201115 22:02:14.203" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.211" endtime="20201115 22:02:14.236"></status>
</kw>
<msg timestamp="20201115 22:02:14.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.210" endtime="20201115 22:02:14.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.238" endtime="20201115 22:02:14.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.241" endtime="20201115 22:02:14.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.207" endtime="20201115 22:02:14.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.205" endtime="20201115 22:02:14.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.250" endtime="20201115 22:02:14.538"></status>
</kw>
<msg timestamp="20201115 22:02:14.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.248" endtime="20201115 22:02:14.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.542" endtime="20201115 22:02:14.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.550" endtime="20201115 22:02:14.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.245" endtime="20201115 22:02:14.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.244" endtime="20201115 22:02:14.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.557" level="INFO">${RESULT} = [{'time': 0.022500167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9736000000002835e-05, 'source_diff': 1.9736000000002835e-05}, {'time': 0.022791639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.554" endtime="20201115 22:02:14.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.570" level="INFO">${OVERHEAD} = {'source_diff': [1.9736000000002835e-05, 1.9721999999999795e-05, 1.966700000000099e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9763999999998505e-05, 1.972300000000274e-05, 1.973699999999884...</msg>
<status status="PASS" starttime="20201115 22:02:14.558" endtime="20201115 22:02:14.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.575" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:14.574" endtime="20201115 22:02:14.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.577" level="INFO">VALUE: [1.9736000000002835e-05, 1.9721999999999795e-05, 1.966700000000099e-05, 1.9749999999998935e-05, 1.9736000000002835e-05, 1.9763999999998505e-05, 1.972300000000274e-05, 1.973699999999884e-05, 1.9707999999996756e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9708000000000225e-05, 1.9764000000001974e-05, 1.9736000000002835e-05, 1.9708000000000225e-05, 1.9778000000001544e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9721999999999795e-05, 1.966700000000099e-05, 1.9721999999999795e-05, 1.966700000000099e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.9750000000005874e-05, 1.9750000000005874e-05, 1.9736000000006304e-05, 1.9763999999998505e-05, 1.9722000000006734e-05, 1.9721999999999795e-05, 1.97089999999997e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.576" endtime="20201115 22:02:14.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.571" endtime="20201115 22:02:14.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.581" endtime="20201115 22:02:14.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.584" endtime="20201115 22:02:14.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.583" endtime="20201115 22:02:14.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.579" endtime="20201115 22:02:14.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.203" endtime="20201115 22:02:14.605"></status>
</kw>
<msg timestamp="20201115 22:02:14.605" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.614" endtime="20201115 22:02:14.639"></status>
</kw>
<msg timestamp="20201115 22:02:14.639" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.612" endtime="20201115 22:02:14.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:14.640" endtime="20201115 22:02:14.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.643" endtime="20201115 22:02:14.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.610" endtime="20201115 22:02:14.645"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.607" endtime="20201115 22:02:14.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.652" endtime="20201115 22:02:14.938"></status>
</kw>
<msg timestamp="20201115 22:02:14.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.650" endtime="20201115 22:02:14.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:14.943" endtime="20201115 22:02:14.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.951" endtime="20201115 22:02:14.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.647" endtime="20201115 22:02:14.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.646" endtime="20201115 22:02:14.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:14.958" level="INFO">${RESULT} = [{'time': 0.022515153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.022810986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:14.954" endtime="20201115 22:02:14.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:14.971" level="INFO">${OVERHEAD} = {'source_diff': [1.9735999999999365e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.968099999999709e-05, 1.9791999999997645e-05, 1.969500000000013...</msg>
<status status="PASS" starttime="20201115 22:02:14.959" endtime="20201115 22:02:14.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.976" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:02:14.974" endtime="20201115 22:02:14.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:14.978" level="INFO">VALUE: [1.9735999999999365e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.968099999999709e-05, 1.9791999999997645e-05, 1.969500000000013e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9722000000003265e-05, 1.9735999999999365e-05, 1.9736000000002835e-05, 1.968100000000056e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9777999999998075e-05, 1.9791999999997645e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 1.972299999999927e-05, 1.9735999999999365e-05, 1.9736000000006304e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9736000000006304e-05, 1.9721999999999795e-05, 1.9736000000006304e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.981900000000425e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.969500000000013e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201115 22:02:14.977" endtime="20201115 22:02:14.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.972" endtime="20201115 22:02:14.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:14.981" endtime="20201115 22:02:14.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:14.985" endtime="20201115 22:02:15.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.983" endtime="20201115 22:02:15.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.979" endtime="20201115 22:02:15.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:14.605" endtime="20201115 22:02:15.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.977" endtime="20201115 22:02:15.006"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:12.977" endtime="20201115 22:02:15.006"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.008" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.017" endtime="20201115 22:02:15.043"></status>
</kw>
<msg timestamp="20201115 22:02:15.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.015" endtime="20201115 22:02:15.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.046" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.045" endtime="20201115 22:02:15.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.047" endtime="20201115 22:02:15.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.013" endtime="20201115 22:02:15.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.011" endtime="20201115 22:02:15.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.057" endtime="20201115 22:02:15.343"></status>
</kw>
<msg timestamp="20201115 22:02:15.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.055" endtime="20201115 22:02:15.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024912431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024933181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.347" endtime="20201115 22:02:15.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.355" endtime="20201115 22:02:15.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.053" endtime="20201115 22:02:15.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.051" endtime="20201115 22:02:15.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.362" level="INFO">${RESULT} = [{'time': 0.024933181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.025247444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.359" endtime="20201115 22:02:15.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.376" level="INFO">${OVERHEAD} = {'source_diff': [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999...</msg>
<status status="PASS" starttime="20201115 22:02:15.363" endtime="20201115 22:02:15.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.380" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:15.379" endtime="20201115 22:02:15.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.383" level="INFO">VALUE: [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0819999999997785e-05, 2.073699999999984e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.076300000000003e-05, 2.069500000000113e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.066700000000199e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.068100000000156e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0694000000001656e-05, 2.069500000000113e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.381" endtime="20201115 22:02:15.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.376" endtime="20201115 22:02:15.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.386" endtime="20201115 22:02:15.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.389" endtime="20201115 22:02:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.388" endtime="20201115 22:02:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.384" endtime="20201115 22:02:15.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.009" endtime="20201115 22:02:15.410"></status>
</kw>
<msg timestamp="20201115 22:02:15.410" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.419" endtime="20201115 22:02:15.446"></status>
</kw>
<msg timestamp="20201115 22:02:15.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.417" endtime="20201115 22:02:15.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.447" endtime="20201115 22:02:15.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.450" endtime="20201115 22:02:15.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.415" endtime="20201115 22:02:15.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.413" endtime="20201115 22:02:15.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.459" endtime="20201115 22:02:15.746"></status>
</kw>
<msg timestamp="20201115 22:02:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.458" endtime="20201115 22:02:15.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.750" endtime="20201115 22:02:15.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.758" endtime="20201115 22:02:15.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.455" endtime="20201115 22:02:15.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.453" endtime="20201115 22:02:15.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:15.765" level="INFO">${RESULT} = [{'time': 0.022609736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.022927014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:15.762" endtime="20201115 22:02:15.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:15.778" level="INFO">${OVERHEAD} = {'source_diff': [2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.077700000000307e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.07639999999995...</msg>
<status status="PASS" starttime="20201115 22:02:15.766" endtime="20201115 22:02:15.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.783" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:15.782" endtime="20201115 22:02:15.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.785" level="INFO">VALUE: [2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.077700000000307e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0778000000002544e-05, 2.0777999999999075e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0764000000002975e-05, 2.0763999999999505e-05, 2.0778000000002544e-05, 2.0749999999999935e-05, 2.0820000000001254e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.079099999999917e-05, 2.0763999999999505e-05, 2.0721999999997326e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0735999999996896e-05, 2.07090000000007e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.076300000000003e-05, 2.072300000000027e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0764000000006444e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.076300000000003e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.070899999999376e-05, 2.0749999999999935e-05]</msg>
<status status="PASS" starttime="20201115 22:02:15.784" endtime="20201115 22:02:15.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.779" endtime="20201115 22:02:15.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.789" endtime="20201115 22:02:15.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:15.792" endtime="20201115 22:02:15.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.791" endtime="20201115 22:02:15.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.787" endtime="20201115 22:02:15.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.411" endtime="20201115 22:02:15.813"></status>
</kw>
<msg timestamp="20201115 22:02:15.813" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.823" endtime="20201115 22:02:15.849"></status>
</kw>
<msg timestamp="20201115 22:02:15.849" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.821" endtime="20201115 22:02:15.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:15.852" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:15.850" endtime="20201115 22:02:15.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.853" endtime="20201115 22:02:15.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.818" endtime="20201115 22:02:15.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.816" endtime="20201115 22:02:15.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:15.862" endtime="20201115 22:02:16.150"></status>
</kw>
<msg timestamp="20201115 22:02:16.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:15.860" endtime="20201115 22:02:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.154" endtime="20201115 22:02:16.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.162" endtime="20201115 22:02:16.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.858" endtime="20201115 22:02:16.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.856" endtime="20201115 22:02:16.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.169" level="INFO">${RESULT} = [{'time': 0.023211625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0791999999998645e-05, 'source_diff': 2.0791999999998645e-05}, {'time': 0.023526514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.166" endtime="20201115 22:02:16.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.182" level="INFO">${OVERHEAD} = {'source_diff': [2.0791999999998645e-05, 2.0735999999996896e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.076400000000297...</msg>
<status status="PASS" starttime="20201115 22:02:16.170" endtime="20201115 22:02:16.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.187" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:16.186" endtime="20201115 22:02:16.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.189" level="INFO">VALUE: [2.0791999999998645e-05, 2.0735999999996896e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0764000000002975e-05, 2.0749999999999935e-05, 2.073699999999984e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0735999999996896e-05, 2.069500000000113e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0721999999997326e-05, 2.069499999999766e-05, 2.0722000000000795e-05, 2.068100000000156e-05, 2.0735999999996896e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.07769999999996e-05, 2.0736000000000365e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0694000000001656e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0736000000000365e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.188" endtime="20201115 22:02:16.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.183" endtime="20201115 22:02:16.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.193" endtime="20201115 22:02:16.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.196" endtime="20201115 22:02:16.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.195" endtime="20201115 22:02:16.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.191" endtime="20201115 22:02:16.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.814" endtime="20201115 22:02:16.217"></status>
</kw>
<msg timestamp="20201115 22:02:16.217" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.226" endtime="20201115 22:02:16.253"></status>
</kw>
<msg timestamp="20201115 22:02:16.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.225" endtime="20201115 22:02:16.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.254" endtime="20201115 22:02:16.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.256" endtime="20201115 22:02:16.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.222" endtime="20201115 22:02:16.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.220" endtime="20201115 22:02:16.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.266" endtime="20201115 22:02:16.553"></status>
</kw>
<msg timestamp="20201115 22:02:16.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.264" endtime="20201115 22:02:16.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.557" endtime="20201115 22:02:16.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.565" endtime="20201115 22:02:16.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.261" endtime="20201115 22:02:16.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.260" endtime="20201115 22:02:16.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.572" level="INFO">${RESULT} = [{'time': 0.022908056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.023226819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.568" endtime="20201115 22:02:16.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.585" level="INFO">${OVERHEAD} = {'source_diff': [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0722000000000...</msg>
<status status="PASS" starttime="20201115 22:02:16.573" endtime="20201115 22:02:16.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.589" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:16.588" endtime="20201115 22:02:16.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.592" level="INFO">VALUE: [2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0750000000003405e-05, 2.0735999999996896e-05, 2.0708000000001225e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0764000000002975e-05, 2.0749999999999935e-05, 2.081899999999831e-05, 2.0764000000002975e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0707999999997756e-05, 2.0736000000000365e-05, 2.0694000000001656e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0791999999998645e-05, 2.0694000000001656e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0736000000000365e-05, 2.069500000000113e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.076300000000003e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.0763999999999505e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.590" endtime="20201115 22:02:16.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.586" endtime="20201115 22:02:16.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.595" endtime="20201115 22:02:16.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:16.599" endtime="20201115 22:02:16.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.597" endtime="20201115 22:02:16.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.594" endtime="20201115 22:02:16.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.218" endtime="20201115 22:02:16.620"></status>
</kw>
<msg timestamp="20201115 22:02:16.620" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.629" endtime="20201115 22:02:16.655"></status>
</kw>
<msg timestamp="20201115 22:02:16.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.627" endtime="20201115 22:02:16.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:16.656" endtime="20201115 22:02:16.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.659" endtime="20201115 22:02:16.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.625" endtime="20201115 22:02:16.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.622" endtime="20201115 22:02:16.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.668" endtime="20201115 22:02:16.954"></status>
</kw>
<msg timestamp="20201115 22:02:16.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.666" endtime="20201115 22:02:16.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:16.958" endtime="20201115 22:02:16.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.966" endtime="20201115 22:02:16.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.664" endtime="20201115 22:02:16.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.662" endtime="20201115 22:02:16.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:16.973" level="INFO">${RESULT} = [{'time': 0.022663972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.022982236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:16.970" endtime="20201115 22:02:16.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:16.987" level="INFO">${OVERHEAD} = {'source_diff': [2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0749999999999...</msg>
<status status="PASS" starttime="20201115 22:02:16.974" endtime="20201115 22:02:16.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.991" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:02:16.990" endtime="20201115 22:02:16.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:16.994" level="INFO">VALUE: [2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0778000000002544e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.069500000000113e-05, 2.0749999999999935e-05, 2.073699999999984e-05, 2.0764000000002975e-05, 2.07769999999996e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0707999999997756e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.07769999999996e-05, 2.07090000000007e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0708000000001225e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05]</msg>
<status status="PASS" starttime="20201115 22:02:16.992" endtime="20201115 22:02:16.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.988" endtime="20201115 22:02:16.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:16.997" endtime="20201115 22:02:16.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.001" endtime="20201115 22:02:17.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.999" endtime="20201115 22:02:17.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.996" endtime="20201115 22:02:17.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:16.620" endtime="20201115 22:02:17.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.007" endtime="20201115 22:02:17.022"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:15.006" endtime="20201115 22:02:17.022"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.024" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.033" endtime="20201115 22:02:17.060"></status>
</kw>
<msg timestamp="20201115 22:02:17.060" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.032" endtime="20201115 22:02:17.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.061" endtime="20201115 22:02:17.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.064" endtime="20201115 22:02:17.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.029" endtime="20201115 22:02:17.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.027" endtime="20201115 22:02:17.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.073" endtime="20201115 22:02:17.362"></status>
</kw>
<msg timestamp="20201115 22:02:17.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.071" endtime="20201115 22:02:17.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.371" endtime="20201115 22:02:17.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.389" endtime="20201115 22:02:17.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.068" endtime="20201115 22:02:17.394"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.067" endtime="20201115 22:02:17.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.404" level="INFO">${RESULT} = [{'time': 0.024772167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1834000000001824e-05, 'source_diff': 2.1834000000001824e-05}, {'time': 0.0251095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:17.396" endtime="20201115 22:02:17.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.434" level="INFO">${OVERHEAD} = {'source_diff': [2.1834000000001824e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.179100000000017e-05, 2.181899999999931e-05, 2.1778000000000075e-05, 2.17770000000006e...</msg>
<status status="PASS" starttime="20201115 22:02:17.406" endtime="20201115 22:02:17.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.443" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:17.441" endtime="20201115 22:02:17.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.452" level="INFO">VALUE: [2.1834000000001824e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.179100000000017e-05, 2.181899999999931e-05, 2.1778000000000075e-05, 2.17770000000006e-05, 2.1736000000001365e-05, 2.1778000000000075e-05, 2.1790999999996702e-05, 2.1764000000000505e-05, 2.1763999999997036e-05, 2.1776999999997132e-05, 2.1778000000000075e-05, 2.1721999999998326e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.184700000000192e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1763999999993566e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.183299999999888e-05, 2.1749999999993996e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.176300000000103e-05, 2.1778000000000075e-05, 2.1736000000001365e-05, 2.1806000000006154e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.170899999999476e-05, 2.1778000000000075e-05, 2.17770000000006e-05, 2.1750000000000935e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.445" endtime="20201115 22:02:17.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.436" endtime="20201115 22:02:17.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.455" endtime="20201115 22:02:17.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.459" endtime="20201115 22:02:17.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.457" endtime="20201115 22:02:17.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.453" endtime="20201115 22:02:17.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.025" endtime="20201115 22:02:17.479"></status>
</kw>
<msg timestamp="20201115 22:02:17.480" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.488" endtime="20201115 22:02:17.516"></status>
</kw>
<msg timestamp="20201115 22:02:17.517" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.487" endtime="20201115 22:02:17.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.519" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.518" endtime="20201115 22:02:17.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.520" endtime="20201115 22:02:17.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.484" endtime="20201115 22:02:17.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.482" endtime="20201115 22:02:17.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.529" endtime="20201115 22:02:17.817"></status>
</kw>
<msg timestamp="20201115 22:02:17.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.528" endtime="20201115 22:02:17.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022893861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.821" endtime="20201115 22:02:17.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.829" endtime="20201115 22:02:17.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.525" endtime="20201115 22:02:17.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.523" endtime="20201115 22:02:17.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:17.836" level="INFO">${RESULT} = [{'time': 0.022915611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1749999999997466e-05, 'source_diff': 2.1749999999997466e-05}, {'time': 0.023249014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:17.832" endtime="20201115 22:02:17.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:17.849" level="INFO">${OVERHEAD} = {'source_diff': [2.1749999999997466e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1776999999997132e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1834000000001...</msg>
<status status="PASS" starttime="20201115 22:02:17.837" endtime="20201115 22:02:17.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.854" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:17.853" endtime="20201115 22:02:17.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.856" level="INFO">VALUE: [2.1749999999997466e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1776999999997132e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1834000000001824e-05, 2.1778000000000075e-05, 2.1792000000003114e-05, 2.1764000000000505e-05, 2.176300000000103e-05, 2.1777999999996606e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.17770000000006e-05, 2.17229999999978e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1736000000001365e-05, 2.17770000000006e-05, 2.172300000000127e-05, 2.180499999999974e-05, 2.1778000000000075e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.184699999999845e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201115 22:02:17.855" endtime="20201115 22:02:17.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.850" endtime="20201115 22:02:17.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.859" endtime="20201115 22:02:17.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:17.863" endtime="20201115 22:02:17.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.861" endtime="20201115 22:02:17.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.858" endtime="20201115 22:02:17.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.480" endtime="20201115 22:02:17.883"></status>
</kw>
<msg timestamp="20201115 22:02:17.884" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.893" endtime="20201115 22:02:17.921"></status>
</kw>
<msg timestamp="20201115 22:02:17.921" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.891" endtime="20201115 22:02:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:17.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:17.922" endtime="20201115 22:02:17.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.925" endtime="20201115 22:02:17.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.888" endtime="20201115 22:02:17.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.886" endtime="20201115 22:02:17.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:17.934" endtime="20201115 22:02:18.233"></status>
</kw>
<msg timestamp="20201115 22:02:18.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:17.932" endtime="20201115 22:02:18.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.243" endtime="20201115 22:02:18.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.258" endtime="20201115 22:02:18.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.930" endtime="20201115 22:02:18.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.928" endtime="20201115 22:02:18.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.265" level="INFO">${RESULT} = [{'time': 0.022828806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.023160708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.262" endtime="20201115 22:02:18.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.279" level="INFO">${OVERHEAD} = {'source_diff': [2.1778000000000075e-05, 2.1749999999997466e-05, 2.179100000000017e-05, 2.1736000000001365e-05, 2.1778000000000075e-05, 2.1735999999997896e-05, 2.1778000000000075e-05, 2.17640000000005...</msg>
<status status="PASS" starttime="20201115 22:02:18.266" endtime="20201115 22:02:18.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.283" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:18.282" endtime="20201115 22:02:18.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.286" level="INFO">VALUE: [2.1778000000000075e-05, 2.1749999999997466e-05, 2.179100000000017e-05, 2.1736000000001365e-05, 2.1778000000000075e-05, 2.1735999999997896e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.181899999999931e-05, 2.1749999999997466e-05, 2.179100000000017e-05, 2.17229999999978e-05, 2.1707999999998756e-05, 2.17770000000006e-05, 2.183300000000235e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1777999999996606e-05, 2.1791999999999645e-05, 2.176300000000103e-05, 2.1778000000000075e-05, 2.184700000000192e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.17770000000006e-05, 2.1694000000002656e-05, 2.180499999999974e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.180499999999974e-05, 2.1778000000000075e-05, 2.17770000000006e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.179100000000017e-05, 2.17770000000006e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.284" endtime="20201115 22:02:18.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.280" endtime="20201115 22:02:18.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.289" endtime="20201115 22:02:18.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.292" endtime="20201115 22:02:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.291" endtime="20201115 22:02:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.287" endtime="20201115 22:02:18.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.884" endtime="20201115 22:02:18.313"></status>
</kw>
<msg timestamp="20201115 22:02:18.313" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.322" endtime="20201115 22:02:18.349"></status>
</kw>
<msg timestamp="20201115 22:02:18.350" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.321" endtime="20201115 22:02:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.352" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.351" endtime="20201115 22:02:18.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.353" endtime="20201115 22:02:18.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.318" endtime="20201115 22:02:18.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.316" endtime="20201115 22:02:18.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.363" endtime="20201115 22:02:18.649"></status>
</kw>
<msg timestamp="20201115 22:02:18.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.362" endtime="20201115 22:02:18.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.653" endtime="20201115 22:02:18.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.662" endtime="20201115 22:02:18.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.359" endtime="20201115 22:02:18.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.357" endtime="20201115 22:02:18.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:18.669" level="INFO">${RESULT} = [{'time': 0.022392292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1764000000000505e-05, 'source_diff': 2.1764000000000505e-05}, {'time': 0.022727208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:18.665" endtime="20201115 22:02:18.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:18.682" level="INFO">${OVERHEAD} = {'source_diff': [2.1764000000000505e-05, 2.180499999999974e-05, 2.1750000000000935e-05, 2.181899999999931e-05, 2.169500000000213e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1764000000000505...</msg>
<status status="PASS" starttime="20201115 22:02:18.670" endtime="20201115 22:02:18.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.687" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:18.685" endtime="20201115 22:02:18.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.689" level="INFO">VALUE: [2.1764000000000505e-05, 2.180499999999974e-05, 2.1750000000000935e-05, 2.181899999999931e-05, 2.169500000000213e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.180499999999974e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.176300000000103e-05, 2.17770000000006e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.184700000000192e-05, 2.1792000000003114e-05, 2.1820000000002254e-05, 2.179100000000017e-05, 2.180499999999974e-05, 2.17770000000006e-05, 2.1778000000000075e-05, 2.1833999999998355e-05, 2.1722000000001795e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1833999999998355e-05, 2.1833999999998355e-05, 2.1819999999998785e-05, 2.179100000000017e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.1778000000000075e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:18.688" endtime="20201115 22:02:18.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.683" endtime="20201115 22:02:18.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.692" endtime="20201115 22:02:18.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:18.696" endtime="20201115 22:02:18.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.694" endtime="20201115 22:02:18.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.691" endtime="20201115 22:02:18.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.314" endtime="20201115 22:02:18.716"></status>
</kw>
<msg timestamp="20201115 22:02:18.717" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.725" endtime="20201115 22:02:18.752"></status>
</kw>
<msg timestamp="20201115 22:02:18.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.724" endtime="20201115 22:02:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:18.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:18.753" endtime="20201115 22:02:18.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.756" endtime="20201115 22:02:18.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.721" endtime="20201115 22:02:18.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.719" endtime="20201115 22:02:18.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:18.765" endtime="20201115 22:02:19.051"></status>
</kw>
<msg timestamp="20201115 22:02:19.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:18.763" endtime="20201115 22:02:19.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.056" endtime="20201115 22:02:19.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.064" endtime="20201115 22:02:19.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.761" endtime="20201115 22:02:19.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.759" endtime="20201115 22:02:19.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.070" level="INFO">${RESULT} = [{'time': 0.022348972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.022685042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.067" endtime="20201115 22:02:19.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.084" level="INFO">${OVERHEAD} = {'source_diff': [2.1778000000000075e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.184699999999845e-05, 2.17780000000000...</msg>
<status status="PASS" starttime="20201115 22:02:19.071" endtime="20201115 22:02:19.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.088" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:02:19.087" endtime="20201115 22:02:19.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.091" level="INFO">VALUE: [2.1778000000000075e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.184699999999845e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.1749999999997466e-05, 2.1791999999999645e-05, 2.1762999999997562e-05, 2.172300000000127e-05, 2.1778000000000075e-05, 2.1776999999997132e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1749999999997466e-05, 2.1792000000003114e-05, 2.179100000000017e-05, 2.1792000000006584e-05, 2.176300000000103e-05, 2.1764000000000505e-05, 2.1735999999994426e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.1736000000001365e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.168100000000256e-05, 2.1764000000000505e-05, 2.181899999999931e-05, 2.17090000000017e-05, 2.1778000000000075e-05, 2.1763999999993566e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.089" endtime="20201115 22:02:19.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.085" endtime="20201115 22:02:19.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.094" endtime="20201115 22:02:19.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.098" endtime="20201115 22:02:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.096" endtime="20201115 22:02:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.092" endtime="20201115 22:02:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:18.717" endtime="20201115 22:02:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.023" endtime="20201115 22:02:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:17.022" endtime="20201115 22:02:19.118"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.121" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.130" endtime="20201115 22:02:19.158"></status>
</kw>
<msg timestamp="20201115 22:02:19.158" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.128" endtime="20201115 22:02:19.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.161" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.159" endtime="20201115 22:02:19.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.162" endtime="20201115 22:02:19.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.126" endtime="20201115 22:02:19.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.123" endtime="20201115 22:02:19.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.171" endtime="20201115 22:02:19.459"></status>
</kw>
<msg timestamp="20201115 22:02:19.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.170" endtime="20201115 22:02:19.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025014917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.463" endtime="20201115 22:02:19.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.471" endtime="20201115 22:02:19.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.167" endtime="20201115 22:02:19.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.165" endtime="20201115 22:02:19.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.478" level="INFO">${RESULT} = [{'time': 0.025014917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.025373125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:19.474" endtime="20201115 22:02:19.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.491" level="INFO">${OVERHEAD} = {'source_diff': [2.2792000000000645e-05, 2.2806000000000215e-05, 2.2762999999998562e-05, 2.27770000000016e-05, 2.280500000000074e-05, 2.2735999999998896e-05, 2.2792000000000645e-05, 2.2804999999997272...</msg>
<status status="PASS" starttime="20201115 22:02:19.479" endtime="20201115 22:02:19.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.496" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:19.495" endtime="20201115 22:02:19.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.498" level="INFO">VALUE: [2.2792000000000645e-05, 2.2806000000000215e-05, 2.2762999999998562e-05, 2.27770000000016e-05, 2.280500000000074e-05, 2.2735999999998896e-05, 2.2792000000000645e-05, 2.2804999999997272e-05, 2.2819999999999785e-05, 2.2777999999997606e-05, 2.2764000000001505e-05, 2.280500000000074e-05, 2.2791999999997176e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2736000000002365e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.284699999999945e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2721999999995857e-05, 2.280500000000074e-05, 2.2819999999999785e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.280500000000074e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.280500000000074e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.273700000000184e-05, 2.281900000000031e-05, 2.2792000000000645e-05, 2.2750000000001935e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.2778000000001075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.497" endtime="20201115 22:02:19.498"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.492" endtime="20201115 22:02:19.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.501" endtime="20201115 22:02:19.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.505" endtime="20201115 22:02:19.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.503" endtime="20201115 22:02:19.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.500" endtime="20201115 22:02:19.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.121" endtime="20201115 22:02:19.525"></status>
</kw>
<msg timestamp="20201115 22:02:19.526" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.535" endtime="20201115 22:02:19.564"></status>
</kw>
<msg timestamp="20201115 22:02:19.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.534" endtime="20201115 22:02:19.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.565" endtime="20201115 22:02:19.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.568" endtime="20201115 22:02:19.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.531" endtime="20201115 22:02:19.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.528" endtime="20201115 22:02:19.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.577" endtime="20201115 22:02:19.863"></status>
</kw>
<msg timestamp="20201115 22:02:19.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02368775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:19.576" endtime="20201115 22:02:19.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023664944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02368775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:19.868" endtime="20201115 22:02:19.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.876" endtime="20201115 22:02:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.573" endtime="20201115 22:02:19.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.571" endtime="20201115 22:02:19.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:19.882" level="INFO">${RESULT} = [{'time': 0.02368775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2806000000000215e-05, 'source_diff': 2.2806000000000215e-05}, {'time': 0.024047778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:19.879" endtime="20201115 22:02:19.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:19.896" level="INFO">${OVERHEAD} = {'source_diff': [2.2806000000000215e-05, 2.2791999999997176e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2791999999997176e-05, 2.2777999999997606e-05, 2.2792000000000645e-05, 2.2806000000000...</msg>
<status status="PASS" starttime="20201115 22:02:19.883" endtime="20201115 22:02:19.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.900" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:19.899" endtime="20201115 22:02:19.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.903" level="INFO">VALUE: [2.2806000000000215e-05, 2.2791999999997176e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2791999999997176e-05, 2.2777999999997606e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.279100000000117e-05, 2.2749999999998466e-05, 2.2777999999997606e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.2790999999997702e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2806000000000215e-05, 2.2791999999997176e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2764000000001505e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2777999999994136e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.284699999999945e-05, 2.279100000000117e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.272299999999533e-05, 2.2791999999993706e-05, 2.2750000000001935e-05, 2.279100000000117e-05, 2.27770000000016e-05, 2.27770000000016e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2736000000002365e-05, 2.2778000000001075e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201115 22:02:19.901" endtime="20201115 22:02:19.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.896" endtime="20201115 22:02:19.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.906" endtime="20201115 22:02:19.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:19.909" endtime="20201115 22:02:19.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.908" endtime="20201115 22:02:19.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.904" endtime="20201115 22:02:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.526" endtime="20201115 22:02:19.930"></status>
</kw>
<msg timestamp="20201115 22:02:19.930" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.939" endtime="20201115 22:02:19.968"></status>
</kw>
<msg timestamp="20201115 22:02:19.969" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.938" endtime="20201115 22:02:19.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:19.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:19.970" endtime="20201115 22:02:19.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.972" endtime="20201115 22:02:19.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.935" endtime="20201115 22:02:19.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.933" endtime="20201115 22:02:19.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:19.981" endtime="20201115 22:02:20.268"></status>
</kw>
<msg timestamp="20201115 22:02:20.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:19.980" endtime="20201115 22:02:20.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023025486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.272" endtime="20201115 22:02:20.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.280" endtime="20201115 22:02:20.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.977" endtime="20201115 22:02:20.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.975" endtime="20201115 22:02:20.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.287" level="INFO">${RESULT} = [{'time': 0.023048264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2777999999997606e-05, 'source_diff': 2.2777999999997606e-05}, {'time': 0.023411139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.284" endtime="20201115 22:02:20.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.300" level="INFO">${OVERHEAD} = {'source_diff': [2.2777999999997606e-05, 2.2778000000001075e-05, 2.279100000000117e-05, 2.2819999999999785e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.2749999999998466e-05, 2.279200000000064...</msg>
<status status="PASS" starttime="20201115 22:02:20.288" endtime="20201115 22:02:20.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.305" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:20.304" endtime="20201115 22:02:20.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.307" level="INFO">VALUE: [2.2777999999997606e-05, 2.2778000000001075e-05, 2.279100000000117e-05, 2.2819999999999785e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.2749999999998466e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2833999999999355e-05, 2.2792000000000645e-05, 2.281900000000031e-05, 2.2791999999997176e-05, 2.2778000000001075e-05, 2.2749999999998466e-05, 2.2791999999997176e-05, 2.280500000000074e-05, 2.2764000000001505e-05, 2.287500000000206e-05, 2.2792000000000645e-05, 2.2777999999997606e-05, 2.2791999999997176e-05, 2.2806000000000215e-05, 2.279100000000117e-05, 2.2736000000002365e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.2736000000002365e-05, 2.2791999999993706e-05, 2.2806000000000215e-05, 2.279100000000117e-05, 2.286099999999902e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2735999999995427e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.2764000000001505e-05, 2.2792000000000645e-05, 2.2819999999999785e-05, 2.280500000000074e-05, 2.2819999999999785e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.280500000000074e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.306" endtime="20201115 22:02:20.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.301" endtime="20201115 22:02:20.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.310" endtime="20201115 22:02:20.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.314" endtime="20201115 22:02:20.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.312" endtime="20201115 22:02:20.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.309" endtime="20201115 22:02:20.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.931" endtime="20201115 22:02:20.335"></status>
</kw>
<msg timestamp="20201115 22:02:20.335" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.344" endtime="20201115 22:02:20.373"></status>
</kw>
<msg timestamp="20201115 22:02:20.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.343" endtime="20201115 22:02:20.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.374" endtime="20201115 22:02:20.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.377" endtime="20201115 22:02:20.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.340" endtime="20201115 22:02:20.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.338" endtime="20201115 22:02:20.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.385" endtime="20201115 22:02:20.672"></status>
</kw>
<msg timestamp="20201115 22:02:20.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.384" endtime="20201115 22:02:20.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023080125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.676" endtime="20201115 22:02:20.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.684" endtime="20201115 22:02:20.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.381" endtime="20201115 22:02:20.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.380" endtime="20201115 22:02:20.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:20.691" level="INFO">${RESULT} = [{'time': 0.023102847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2721999999999326e-05, 'source_diff': 2.2721999999999326e-05}, {'time': 0.023460889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:20.687" endtime="20201115 22:02:20.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:20.704" level="INFO">${OVERHEAD} = {'source_diff': [2.2721999999999326e-05, 2.2791999999997176e-05, 2.279100000000117e-05, 2.2791999999997176e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.2763999999998036...</msg>
<status status="PASS" starttime="20201115 22:02:20.692" endtime="20201115 22:02:20.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.709" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:20.708" endtime="20201115 22:02:20.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.711" level="INFO">VALUE: [2.2721999999999326e-05, 2.2791999999997176e-05, 2.279100000000117e-05, 2.2791999999997176e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.2763999999998036e-05, 2.2749999999998466e-05, 2.280500000000074e-05, 2.2819999999999785e-05, 2.2791999999997176e-05, 2.2819999999999785e-05, 2.2777999999997606e-05, 2.2792000000000645e-05, 2.280500000000074e-05, 2.284699999999945e-05, 2.2735999999998896e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2819999999999785e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2778000000001075e-05, 2.2764000000001505e-05, 2.280500000000074e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.287500000000553e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.2790999999994233e-05, 2.2750000000001935e-05, 2.284699999999945e-05, 2.280500000000074e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.2777999999994136e-05, 2.2792000000000645e-05, 2.2792000000000645e-05]</msg>
<status status="PASS" starttime="20201115 22:02:20.710" endtime="20201115 22:02:20.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.705" endtime="20201115 22:02:20.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.715" endtime="20201115 22:02:20.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:20.718" endtime="20201115 22:02:20.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.717" endtime="20201115 22:02:20.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.713" endtime="20201115 22:02:20.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.336" endtime="20201115 22:02:20.739"></status>
</kw>
<msg timestamp="20201115 22:02:20.739" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.748" endtime="20201115 22:02:20.776"></status>
</kw>
<msg timestamp="20201115 22:02:20.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.747" endtime="20201115 22:02:20.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:20.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:20.778" endtime="20201115 22:02:20.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.781" endtime="20201115 22:02:20.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.744" endtime="20201115 22:02:20.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.742" endtime="20201115 22:02:20.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:20.790" endtime="20201115 22:02:21.077"></status>
</kw>
<msg timestamp="20201115 22:02:21.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:20.788" endtime="20201115 22:02:21.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.081" endtime="20201115 22:02:21.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.089" endtime="20201115 22:02:21.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.785" endtime="20201115 22:02:21.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.784" endtime="20201115 22:02:21.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.096" level="INFO">${RESULT} = [{'time': 0.023085486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2791999999997176e-05, 'source_diff': 2.2791999999997176e-05}, {'time': 0.023446903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:21.093" endtime="20201115 22:02:21.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.152" level="INFO">${OVERHEAD} = {'source_diff': [2.2791999999997176e-05, 2.2834000000002824e-05, 2.279100000000117e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2777999999997606e-05, 2.27910000000011...</msg>
<status status="PASS" starttime="20201115 22:02:21.097" endtime="20201115 22:02:21.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.157" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:02:21.156" endtime="20201115 22:02:21.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.159" level="INFO">VALUE: [2.2791999999997176e-05, 2.2834000000002824e-05, 2.279100000000117e-05, 2.2806000000000215e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2777999999997606e-05, 2.279100000000117e-05, 2.286099999999902e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.280500000000074e-05, 2.287499999999859e-05, 2.279100000000117e-05, 2.2778000000001075e-05, 2.2776999999998132e-05, 2.286100000000249e-05, 2.2805999999996746e-05, 2.2792000000000645e-05, 2.280500000000074e-05, 2.2792000000000645e-05, 2.2764000000001505e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2750000000001935e-05, 2.27770000000016e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2764000000001505e-05, 2.2804999999993802e-05, 2.2805999999993276e-05, 2.279100000000117e-05, 2.2750000000001935e-05, 2.2776999999994663e-05, 2.2806000000000215e-05, 2.284699999999945e-05, 2.2792000000000645e-05, 2.280500000000074e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2819999999999785e-05, 2.2778000000001075e-05, 2.2778000000001075e-05, 2.279100000000117e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.158" endtime="20201115 22:02:21.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.153" endtime="20201115 22:02:21.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.163" endtime="20201115 22:02:21.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.166" endtime="20201115 22:02:21.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.165" endtime="20201115 22:02:21.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.161" endtime="20201115 22:02:21.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:20.740" endtime="20201115 22:02:21.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.120" endtime="20201115 22:02:21.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:19.119" endtime="20201115 22:02:21.187"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.190" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.199" endtime="20201115 22:02:21.229"></status>
</kw>
<msg timestamp="20201115 22:02:21.229" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.198" endtime="20201115 22:02:21.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.230" endtime="20201115 22:02:21.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.233" endtime="20201115 22:02:21.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.195" endtime="20201115 22:02:21.236"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.192" endtime="20201115 22:02:21.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.243" endtime="20201115 22:02:21.528"></status>
</kw>
<msg timestamp="20201115 22:02:21.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025842042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025865903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.241" endtime="20201115 22:02:21.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025842042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025865903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.533" endtime="20201115 22:02:21.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.541" endtime="20201115 22:02:21.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.239" endtime="20201115 22:02:21.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.237" endtime="20201115 22:02:21.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.548" level="INFO">${RESULT} = [{'time': 0.025865903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.386100000000002e-05, 'source_diff': 2.386100000000002e-05}, {'time': 0.026243611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:21.544" endtime="20201115 22:02:21.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.561" level="INFO">${OVERHEAD} = {'source_diff': [2.386100000000002e-05, 2.387499999999959e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3791999999998176e-...</msg>
<status status="PASS" starttime="20201115 22:02:21.549" endtime="20201115 22:02:21.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.566" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:21.565" endtime="20201115 22:02:21.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.568" level="INFO">VALUE: [2.386100000000002e-05, 2.387499999999959e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3791999999998176e-05, 2.3818999999997842e-05, 2.384700000000045e-05, 2.380500000000174e-05, 2.3832999999997412e-05, 2.383300000000088e-05, 2.3777999999998606e-05, 2.3805999999997746e-05, 2.384700000000045e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.379100000000217e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.3791999999994706e-05, 2.3804999999994803e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3819999999993846e-05, 2.379100000000217e-05, 2.3806000000001215e-05, 2.3750000000002935e-05, 2.3804999999994803e-05, 2.379100000000217e-05, 2.3806000000001215e-05, 2.3790999999995233e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.3778000000002075e-05, 2.3791999999994706e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3819999999993846e-05, 2.383300000000088e-05, 2.3792000000001645e-05, 2.3820000000000785e-05, 2.383300000000088e-05, 2.3820000000000785e-05, 2.386100000000002e-05, 2.3820000000000785e-05, 2.3778000000002075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.567" endtime="20201115 22:02:21.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.562" endtime="20201115 22:02:21.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.572" endtime="20201115 22:02:21.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.575" endtime="20201115 22:02:21.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.574" endtime="20201115 22:02:21.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.570" endtime="20201115 22:02:21.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.190" endtime="20201115 22:02:21.596"></status>
</kw>
<msg timestamp="20201115 22:02:21.596" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.606" endtime="20201115 22:02:21.635"></status>
</kw>
<msg timestamp="20201115 22:02:21.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.604" endtime="20201115 22:02:21.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:21.636" endtime="20201115 22:02:21.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.639" endtime="20201115 22:02:21.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.601" endtime="20201115 22:02:21.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.599" endtime="20201115 22:02:21.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.648" endtime="20201115 22:02:21.933"></status>
</kw>
<msg timestamp="20201115 22:02:21.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.646" endtime="20201115 22:02:21.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:21.937" endtime="20201115 22:02:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.945" endtime="20201115 22:02:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.644" endtime="20201115 22:02:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.642" endtime="20201115 22:02:21.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:21.952" level="INFO">${RESULT} = [{'time': 0.023361764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.023747486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:21.948" endtime="20201115 22:02:21.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:21.965" level="INFO">${OVERHEAD} = {'source_diff': [2.3792000000001645e-05, 2.381900000000131e-05, 2.3804999999998272e-05, 2.380500000000174e-05, 2.3791999999998176e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.380500000000174e...</msg>
<status status="PASS" starttime="20201115 22:02:21.953" endtime="20201115 22:02:21.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.970" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:21.969" endtime="20201115 22:02:21.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:21.973" level="INFO">VALUE: [2.3792000000001645e-05, 2.381900000000131e-05, 2.3804999999998272e-05, 2.380500000000174e-05, 2.3791999999998176e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.3818999999997842e-05, 2.3804999999998272e-05, 2.3818999999997842e-05, 2.3820000000000785e-05, 2.3804999999998272e-05, 2.3749999999999466e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3791999999998176e-05, 2.3819999999997316e-05, 2.383300000000088e-05, 2.3820000000000785e-05, 2.3777999999995136e-05, 2.3820000000000785e-05, 2.3778000000002075e-05, 2.3806000000001215e-05, 2.3819999999993846e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3819999999993846e-05, 2.387499999999959e-05, 2.380500000000174e-05, 2.3792000000001645e-05, 2.381900000000131e-05, 2.3818999999994372e-05, 2.380500000000174e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.3792000000001645e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3763999999995566e-05, 2.381900000000131e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.383300000000088e-05, 2.3778000000002075e-05]</msg>
<status status="PASS" starttime="20201115 22:02:21.971" endtime="20201115 22:02:21.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.966" endtime="20201115 22:02:21.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:21.976" endtime="20201115 22:02:21.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:21.979" endtime="20201115 22:02:21.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.978" endtime="20201115 22:02:21.999"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.974" endtime="20201115 22:02:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.596" endtime="20201115 22:02:22.000"></status>
</kw>
<msg timestamp="20201115 22:02:22.000" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.009" endtime="20201115 22:02:22.039"></status>
</kw>
<msg timestamp="20201115 22:02:22.040" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.007" endtime="20201115 22:02:22.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.041" endtime="20201115 22:02:22.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.044" endtime="20201115 22:02:22.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.005" endtime="20201115 22:02:22.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.003" endtime="20201115 22:02:22.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.053" endtime="20201115 22:02:22.339"></status>
</kw>
<msg timestamp="20201115 22:02:22.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.051" endtime="20201115 22:02:22.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.343" endtime="20201115 22:02:22.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.351" endtime="20201115 22:02:22.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.049" endtime="20201115 22:02:22.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.047" endtime="20201115 22:02:22.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.358" level="INFO">${RESULT} = [{'time': 0.023526347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3818999999997842e-05, 'source_diff': 2.3818999999997842e-05}, {'time': 0.023913236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.355" endtime="20201115 22:02:22.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.372" level="INFO">${OVERHEAD} = {'source_diff': [2.3818999999997842e-05, 2.384700000000045e-05, 2.3805999999997746e-05, 2.3804999999998272e-05, 2.3804999999998272e-05, 2.3791999999998176e-05, 2.383300000000088e-05, 2.382000000000078...</msg>
<status status="PASS" starttime="20201115 22:02:22.359" endtime="20201115 22:02:22.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.376" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:22.375" endtime="20201115 22:02:22.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.379" level="INFO">VALUE: [2.3818999999997842e-05, 2.384700000000045e-05, 2.3805999999997746e-05, 2.3804999999998272e-05, 2.3804999999998272e-05, 2.3791999999998176e-05, 2.383300000000088e-05, 2.3820000000000785e-05, 2.3805999999997746e-05, 2.3804999999998272e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3818999999997842e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3818999999997842e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3777999999998606e-05, 2.3806000000001215e-05, 2.3791999999998176e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3792000000001645e-05, 2.3764000000002505e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3763999999995566e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3832999999993942e-05, 2.3806000000001215e-05, 2.380500000000174e-05, 2.3804999999994803e-05, 2.3820000000000785e-05, 2.3806000000001215e-05, 2.3764000000002505e-05, 2.381900000000131e-05, 2.379100000000217e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.379100000000217e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.381900000000131e-05, 2.3818999999994372e-05, 2.3819999999993846e-05, 2.3805999999994276e-05, 2.387499999999959e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.378" endtime="20201115 22:02:22.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.373" endtime="20201115 22:02:22.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.382" endtime="20201115 22:02:22.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.385" endtime="20201115 22:02:22.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.384" endtime="20201115 22:02:22.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.380" endtime="20201115 22:02:22.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.001" endtime="20201115 22:02:22.406"></status>
</kw>
<msg timestamp="20201115 22:02:22.406" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.415" endtime="20201115 22:02:22.446"></status>
</kw>
<msg timestamp="20201115 22:02:22.446" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.414" endtime="20201115 22:02:22.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.449" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.447" endtime="20201115 22:02:22.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.450" endtime="20201115 22:02:22.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.411" endtime="20201115 22:02:22.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.409" endtime="20201115 22:02:22.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.459" endtime="20201115 22:02:22.745"></status>
</kw>
<msg timestamp="20201115 22:02:22.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.457" endtime="20201115 22:02:22.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.750" endtime="20201115 22:02:22.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.758" endtime="20201115 22:02:22.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.455" endtime="20201115 22:02:22.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.453" endtime="20201115 22:02:22.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:22.765" level="INFO">${RESULT} = [{'time': 0.023612333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3804999999998272e-05, 'source_diff': 2.3804999999998272e-05}, {'time': 0.023998278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:22.762" endtime="20201115 22:02:22.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:22.780" level="INFO">${OVERHEAD} = {'source_diff': [2.3804999999998272e-05, 2.387500000000306e-05, 2.383300000000088e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3790999999998702e-05, 2.3834000000000355...</msg>
<status status="PASS" starttime="20201115 22:02:22.766" endtime="20201115 22:02:22.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.784" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:22.783" endtime="20201115 22:02:22.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.787" level="INFO">VALUE: [2.3804999999998272e-05, 2.387500000000306e-05, 2.383300000000088e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.3820000000000785e-05, 2.3790999999998702e-05, 2.3834000000000355e-05, 2.3804999999998272e-05, 2.3805999999997746e-05, 2.3805999999997746e-05, 2.3806000000001215e-05, 2.3818999999997842e-05, 2.3791999999998176e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.3749999999999466e-05, 2.386100000000002e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.3834000000000355e-05, 2.3806000000001215e-05, 2.3791999999994706e-05, 2.3818999999994372e-05, 2.3804999999994803e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.3792000000001645e-05, 2.3792000000001645e-05, 2.383300000000088e-05, 2.3834000000000355e-05, 2.3806000000001215e-05, 2.3804999999994803e-05, 2.3806000000001215e-05, 2.383300000000088e-05, 2.381900000000131e-05, 2.3805999999994276e-05, 2.3792000000001645e-05, 2.3792000000001645e-05, 2.3901999999999257e-05, 2.3820000000000785e-05, 2.3818999999994372e-05, 2.379100000000217e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.379100000000217e-05, 2.3778000000002075e-05, 2.380500000000174e-05]</msg>
<status status="PASS" starttime="20201115 22:02:22.785" endtime="20201115 22:02:22.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.781" endtime="20201115 22:02:22.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.790" endtime="20201115 22:02:22.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:22.793" endtime="20201115 22:02:22.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.792" endtime="20201115 22:02:22.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.788" endtime="20201115 22:02:22.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.407" endtime="20201115 22:02:22.814"></status>
</kw>
<msg timestamp="20201115 22:02:22.814" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.823" endtime="20201115 22:02:22.853"></status>
</kw>
<msg timestamp="20201115 22:02:22.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.821" endtime="20201115 22:02:22.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:22.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:22.854" endtime="20201115 22:02:22.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.857" endtime="20201115 22:02:22.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.819" endtime="20201115 22:02:22.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.817" endtime="20201115 22:02:22.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:22.867" endtime="20201115 22:02:23.152"></status>
</kw>
<msg timestamp="20201115 22:02:23.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:22.865" endtime="20201115 22:02:23.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.156" endtime="20201115 22:02:23.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.164" endtime="20201115 22:02:23.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.863" endtime="20201115 22:02:23.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.861" endtime="20201115 22:02:23.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.171" level="INFO">${RESULT} = [{'time': 0.022589389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3820000000000785e-05, 'source_diff': 2.3820000000000785e-05}, {'time': 0.022977431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:23.168" endtime="20201115 22:02:23.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.184" level="INFO">${OVERHEAD} = {'source_diff': [2.3820000000000785e-05, 2.3806000000001215e-05, 2.3819999999997316e-05, 2.3763999999999036e-05, 2.3819999999997316e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.38050000000017...</msg>
<status status="PASS" starttime="20201115 22:02:23.172" endtime="20201115 22:02:23.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.189" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:02:23.188" endtime="20201115 22:02:23.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.191" level="INFO">VALUE: [2.3820000000000785e-05, 2.3806000000001215e-05, 2.3819999999997316e-05, 2.3763999999999036e-05, 2.3819999999997316e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.383300000000088e-05, 2.3805999999997746e-05, 2.3818999999997842e-05, 2.3777999999998606e-05, 2.3805999999997746e-05, 2.3790999999998702e-05, 2.380500000000174e-05, 2.3805999999997746e-05, 2.381900000000131e-05, 2.3818999999997842e-05, 2.3806000000001215e-05, 2.3819999999997316e-05, 2.381900000000131e-05, 2.3806000000001215e-05, 2.3806000000001215e-05, 2.3763999999995566e-05, 2.383300000000088e-05, 2.3764000000002505e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3790999999995233e-05, 2.3805999999994276e-05, 2.380500000000174e-05, 2.3735999999996427e-05, 2.3818999999994372e-05, 2.380500000000174e-05, 2.380500000000174e-05, 2.3790999999995233e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.381900000000131e-05, 2.386100000000002e-05, 2.37770000000026e-05, 2.3804999999994803e-05, 2.3806000000001215e-05, 2.3792000000001645e-05, 2.379100000000217e-05, 2.3791999999994706e-05, 2.381900000000131e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.190" endtime="20201115 22:02:23.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.185" endtime="20201115 22:02:23.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.194" endtime="20201115 22:02:23.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.198" endtime="20201115 22:02:23.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.196" endtime="20201115 22:02:23.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.193" endtime="20201115 22:02:23.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:22.815" endtime="20201115 22:02:23.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.189" endtime="20201115 22:02:23.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:21.188" endtime="20201115 22:02:23.219"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.221" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.230" endtime="20201115 22:02:23.261"></status>
</kw>
<msg timestamp="20201115 22:02:23.262" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.229" endtime="20201115 22:02:23.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.265" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.263" endtime="20201115 22:02:23.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.266" endtime="20201115 22:02:23.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.226" endtime="20201115 22:02:23.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.224" endtime="20201115 22:02:23.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.275" endtime="20201115 22:02:23.562"></status>
</kw>
<msg timestamp="20201115 22:02:23.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025017236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.274" endtime="20201115 22:02:23.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024992403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025017236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.566" endtime="20201115 22:02:23.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.574" endtime="20201115 22:02:23.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.271" endtime="20201115 22:02:23.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.270" endtime="20201115 22:02:23.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:23.581" level="INFO">${RESULT} = [{'time': 0.025017236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.483300000000188e-05, 'source_diff': 2.483300000000188e-05}, {'time': 0.025426153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:23.577" endtime="20201115 22:02:23.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:23.594" level="INFO">${OVERHEAD} = {'source_diff': [2.483300000000188e-05, 2.4764000000000036e-05, 2.483300000000188e-05, 2.4806000000002215e-05, 2.4806000000002215e-05, 2.4860999999997552e-05, 2.4834000000001355e-05, 2.484700000000145...</msg>
<status status="PASS" starttime="20201115 22:02:23.582" endtime="20201115 22:02:23.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.598" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:23.597" endtime="20201115 22:02:23.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.601" level="INFO">VALUE: [2.483300000000188e-05, 2.4764000000000036e-05, 2.483300000000188e-05, 2.4806000000002215e-05, 2.4806000000002215e-05, 2.4860999999997552e-05, 2.4834000000001355e-05, 2.484700000000145e-05, 2.4818999999998842e-05, 2.4818999999998842e-05, 2.487500000000059e-05, 2.484700000000145e-05, 2.4834000000001355e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.4834000000001355e-05, 2.4834000000001355e-05, 2.481900000000231e-05, 2.483300000000188e-05, 2.4834000000001355e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4804999999995803e-05, 2.4832999999994942e-05, 2.483300000000188e-05, 2.4806000000002215e-05, 2.487500000000059e-05, 2.4832999999994942e-05, 2.4832999999994942e-05, 2.486100000000102e-05, 2.4806000000002215e-05, 2.484700000000145e-05, 2.4820000000001785e-05, 2.4819999999994846e-05, 2.4776999999996663e-05, 2.4806000000002215e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4832999999994942e-05, 2.481900000000231e-05, 2.487500000000059e-05, 2.4848000000000925e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.4834000000001355e-05, 2.4832999999994942e-05]</msg>
<status status="PASS" starttime="20201115 22:02:23.600" endtime="20201115 22:02:23.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.595" endtime="20201115 22:02:23.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.604" endtime="20201115 22:02:23.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:23.608" endtime="20201115 22:02:23.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.606" endtime="20201115 22:02:23.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.603" endtime="20201115 22:02:23.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.222" endtime="20201115 22:02:23.628"></status>
</kw>
<msg timestamp="20201115 22:02:23.629" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.637" endtime="20201115 22:02:23.668"></status>
</kw>
<msg timestamp="20201115 22:02:23.669" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.636" endtime="20201115 22:02:23.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:23.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:23.670" endtime="20201115 22:02:23.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.673" endtime="20201115 22:02:23.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.633" endtime="20201115 22:02:23.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.631" endtime="20201115 22:02:23.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:23.683" endtime="20201115 22:02:23.979"></status>
</kw>
<msg timestamp="20201115 22:02:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.682" endtime="20201115 22:02:23.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:23.988" endtime="20201115 22:02:24.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.007" endtime="20201115 22:02:24.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.679" endtime="20201115 22:02:24.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.677" endtime="20201115 22:02:24.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.016" level="INFO">${RESULT} = [{'time': 0.022511292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.490299999999973e-05, 'source_diff': 2.490299999999973e-05}, {'time': 0.022919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:24.012" endtime="20201115 22:02:24.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.029" level="INFO">${OVERHEAD} = {'source_diff': [2.490299999999973e-05, 2.4834000000001355e-05, 2.4848000000000925e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.4833999999997886e-05, 2.4834000000001355e-05, 2.4832999999998412...</msg>
<status status="PASS" starttime="20201115 22:02:24.017" endtime="20201115 22:02:24.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.034" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:24.033" endtime="20201115 22:02:24.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.036" level="INFO">VALUE: [2.490299999999973e-05, 2.4834000000001355e-05, 2.4848000000000925e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.4833999999997886e-05, 2.4834000000001355e-05, 2.4832999999998412e-05, 2.4818999999998842e-05, 2.4848000000000925e-05, 2.4832999999998412e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.4833999999997886e-05, 2.4848000000000925e-05, 2.4764000000000036e-05, 2.4846999999997982e-05, 2.4818999999998842e-05, 2.4832999999998412e-05, 2.4820000000001785e-05, 2.4834000000001355e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4834000000001355e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.4820000000001785e-05, 2.484700000000145e-05, 2.4833999999994416e-05, 2.4833999999994416e-05, 2.4832999999994942e-05, 2.4874999999993652e-05, 2.4846999999994512e-05, 2.4791999999995706e-05, 2.484700000000145e-05, 2.4834000000001355e-05, 2.4846999999994512e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.4806000000002215e-05, 2.4818999999995373e-05, 2.481900000000231e-05, 2.4832999999994942e-05, 2.4848000000000925e-05, 2.484700000000145e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.035" endtime="20201115 22:02:24.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.030" endtime="20201115 22:02:24.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.039" endtime="20201115 22:02:24.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.043" endtime="20201115 22:02:24.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.041" endtime="20201115 22:02:24.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.038" endtime="20201115 22:02:24.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.629" endtime="20201115 22:02:24.063"></status>
</kw>
<msg timestamp="20201115 22:02:24.064" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.073" endtime="20201115 22:02:24.104"></status>
</kw>
<msg timestamp="20201115 22:02:24.104" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.071" endtime="20201115 22:02:24.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.105" endtime="20201115 22:02:24.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.108" endtime="20201115 22:02:24.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.068" endtime="20201115 22:02:24.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.066" endtime="20201115 22:02:24.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.117" endtime="20201115 22:02:24.403"></status>
</kw>
<msg timestamp="20201115 22:02:24.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.116" endtime="20201115 22:02:24.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.407" endtime="20201115 22:02:24.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.415" endtime="20201115 22:02:24.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.113" endtime="20201115 22:02:24.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.112" endtime="20201115 22:02:24.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.422" level="INFO">${RESULT} = [{'time': 0.022972375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4832999999998412e-05, 'source_diff': 2.4832999999998412e-05}, {'time': 0.023378611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.418" endtime="20201115 22:02:24.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.436" level="INFO">${OVERHEAD} = {'source_diff': [2.4832999999998412e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4832999999998412e-05, 2.4834000000001355e-05, 2.4832999999998412e-05, 2.4832999999998412e-05, 2.484799999999745...</msg>
<status status="PASS" starttime="20201115 22:02:24.423" endtime="20201115 22:02:24.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.441" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:24.439" endtime="20201115 22:02:24.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.443" level="INFO">VALUE: [2.4832999999998412e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4832999999998412e-05, 2.4834000000001355e-05, 2.4832999999998412e-05, 2.4832999999998412e-05, 2.4847999999997455e-05, 2.4832999999998412e-05, 2.4820000000001785e-05, 2.4860999999997552e-05, 2.4832999999998412e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.4832999999998412e-05, 2.4832999999998412e-05, 2.4750000000000466e-05, 2.4832999999998412e-05, 2.4847999999997455e-05, 2.4832999999998412e-05, 2.481900000000231e-05, 2.481900000000231e-05, 2.4819999999994846e-05, 2.4862000000000495e-05, 2.4832999999994942e-05, 2.4833999999994416e-05, 2.4848000000000925e-05, 2.4832999999994942e-05, 2.4792000000002645e-05, 2.483300000000188e-05, 2.4846999999994512e-05, 2.4806000000002215e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4860999999994082e-05, 2.4832999999994942e-05, 2.4763999999996567e-05, 2.487500000000059e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4819999999994846e-05, 2.4834000000001355e-05, 2.4848000000000925e-05, 2.4806000000002215e-05, 2.483300000000188e-05, 2.487500000000059e-05, 2.4834000000001355e-05, 2.4832999999994942e-05, 2.483300000000188e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.442" endtime="20201115 22:02:24.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.437" endtime="20201115 22:02:24.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.446" endtime="20201115 22:02:24.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.449" endtime="20201115 22:02:24.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.448" endtime="20201115 22:02:24.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.444" endtime="20201115 22:02:24.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.064" endtime="20201115 22:02:24.471"></status>
</kw>
<msg timestamp="20201115 22:02:24.471" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.480" endtime="20201115 22:02:24.511"></status>
</kw>
<msg timestamp="20201115 22:02:24.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.478" endtime="20201115 22:02:24.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.514" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.512" endtime="20201115 22:02:24.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.515" endtime="20201115 22:02:24.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.476" endtime="20201115 22:02:24.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.473" endtime="20201115 22:02:24.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.525" endtime="20201115 22:02:24.810"></status>
</kw>
<msg timestamp="20201115 22:02:24.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02314925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:24.523" endtime="20201115 22:02:24.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02314925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:24.815" endtime="20201115 22:02:24.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.823" endtime="20201115 22:02:24.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.521" endtime="20201115 22:02:24.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.519" endtime="20201115 22:02:24.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:24.829" level="INFO">${RESULT} = [{'time': 0.023174014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4764000000000036e-05, 'source_diff': 2.4764000000000036e-05}, {'time': 0.023578639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:24.826" endtime="20201115 22:02:24.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:24.843" level="INFO">${OVERHEAD} = {'source_diff': [2.4764000000000036e-05, 2.487499999999712e-05, 2.4832999999998412e-05, 2.481900000000231e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4834000000001355e-05, 2.49169999999993e-0...</msg>
<status status="PASS" starttime="20201115 22:02:24.830" endtime="20201115 22:02:24.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.847" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:24.846" endtime="20201115 22:02:24.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.850" level="INFO">VALUE: [2.4764000000000036e-05, 2.487499999999712e-05, 2.4832999999998412e-05, 2.481900000000231e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4834000000001355e-05, 2.49169999999993e-05, 2.481900000000231e-05, 2.4860999999997552e-05, 2.481900000000231e-05, 2.487500000000059e-05, 2.4833999999997886e-05, 2.480500000000274e-05, 2.4806000000002215e-05, 2.4791999999999176e-05, 2.4806000000002215e-05, 2.486100000000102e-05, 2.4820000000001785e-05, 2.4750000000000466e-05, 2.484700000000145e-05, 2.4848000000000925e-05, 2.4806000000002215e-05, 2.4848000000000925e-05, 2.4848000000000925e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.480500000000274e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.4834000000001355e-05, 2.483300000000188e-05, 2.4764000000003505e-05, 2.4820000000001785e-05, 2.483300000000188e-05, 2.4818999999995373e-05, 2.4833999999994416e-05, 2.4834000000001355e-05, 2.481900000000231e-05, 2.4820000000001785e-05, 2.483300000000188e-05, 2.4832999999994942e-05, 2.4833999999994416e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.4820000000001785e-05, 2.4833999999994416e-05, 2.4791999999995706e-05, 2.483300000000188e-05]</msg>
<status status="PASS" starttime="20201115 22:02:24.848" endtime="20201115 22:02:24.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.844" endtime="20201115 22:02:24.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.853" endtime="20201115 22:02:24.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:24.857" endtime="20201115 22:02:24.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.855" endtime="20201115 22:02:24.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.852" endtime="20201115 22:02:24.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.471" endtime="20201115 22:02:24.877"></status>
</kw>
<msg timestamp="20201115 22:02:24.878" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.886" endtime="20201115 22:02:24.917"></status>
</kw>
<msg timestamp="20201115 22:02:24.917" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.885" endtime="20201115 22:02:24.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:24.920" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:24.918" endtime="20201115 22:02:24.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.921" endtime="20201115 22:02:24.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.882" endtime="20201115 22:02:24.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.880" endtime="20201115 22:02:24.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:24.931" endtime="20201115 22:02:25.216"></status>
</kw>
<msg timestamp="20201115 22:02:25.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:24.929" endtime="20201115 22:02:25.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.220" endtime="20201115 22:02:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.228" endtime="20201115 22:02:25.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.926" endtime="20201115 22:02:25.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.925" endtime="20201115 22:02:25.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.235" level="INFO">${RESULT} = [{'time': 0.022504236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4818999999998842e-05, 'source_diff': 2.4818999999998842e-05}, {'time': 0.022908986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.232" endtime="20201115 22:02:25.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.249" level="INFO">${OVERHEAD} = {'source_diff': [2.4818999999998842e-05, 2.4846999999997982e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.4833999999997886e-05, 2.4834000000001355e-05, 2.4832999999998412e-05, 2.484699999999798...</msg>
<status status="PASS" starttime="20201115 22:02:25.236" endtime="20201115 22:02:25.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.253" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:02:25.252" endtime="20201115 22:02:25.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.256" level="INFO">VALUE: [2.4818999999998842e-05, 2.4846999999997982e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.4833999999997886e-05, 2.4834000000001355e-05, 2.4832999999998412e-05, 2.4846999999997982e-05, 2.483300000000188e-05, 2.4819999999998316e-05, 2.483300000000188e-05, 2.4832999999998412e-05, 2.483300000000188e-05, 2.4832999999998412e-05, 2.487500000000059e-05, 2.4820000000001785e-05, 2.4846999999997982e-05, 2.4860999999997552e-05, 2.4818999999998842e-05, 2.4792000000002645e-05, 2.4832999999998412e-05, 2.486100000000102e-05, 2.4862000000000495e-05, 2.483300000000188e-05, 2.4834000000001355e-05, 2.4834000000001355e-05, 2.481900000000231e-05, 2.4846999999994512e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.4832999999994942e-05, 2.484700000000145e-05, 2.484700000000145e-05, 2.486100000000102e-05, 2.4846999999994512e-05, 2.484700000000145e-05, 2.4819999999994846e-05, 2.483300000000188e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.484700000000145e-05, 2.483300000000188e-05, 2.4847999999993986e-05, 2.487500000000059e-05, 2.4832999999994942e-05, 2.486100000000102e-05, 2.4763999999996567e-05, 2.484700000000145e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.254" endtime="20201115 22:02:25.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.250" endtime="20201115 22:02:25.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.259" endtime="20201115 22:02:25.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.263" endtime="20201115 22:02:25.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.261" endtime="20201115 22:02:25.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.258" endtime="20201115 22:02:25.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:24.878" endtime="20201115 22:02:25.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.220" endtime="20201115 22:02:25.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:23.219" endtime="20201115 22:02:25.284"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.286" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.296" endtime="20201115 22:02:25.328"></status>
</kw>
<msg timestamp="20201115 22:02:25.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.295" endtime="20201115 22:02:25.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.329" endtime="20201115 22:02:25.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.332" endtime="20201115 22:02:25.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.292" endtime="20201115 22:02:25.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.289" endtime="20201115 22:02:25.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.341" endtime="20201115 22:02:25.627"></status>
</kw>
<msg timestamp="20201115 22:02:25.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026403944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026429792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.340" endtime="20201115 22:02:25.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026403944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026429792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.631" endtime="20201115 22:02:25.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.639" endtime="20201115 22:02:25.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.337" endtime="20201115 22:02:25.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.335" endtime="20201115 22:02:25.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:25.646" level="INFO">${RESULT} = [{'time': 0.026429792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5848000000001925e-05, 'source_diff': 2.5848000000001925e-05}, {'time': 0.026861403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:25.643" endtime="20201115 22:02:25.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:25.659" level="INFO">${OVERHEAD} = {'source_diff': [2.5848000000001925e-05, 2.5792000000000176e-05, 2.5846999999998982e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.58749999999981...</msg>
<status status="PASS" starttime="20201115 22:02:25.647" endtime="20201115 22:02:25.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.664" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:25.663" endtime="20201115 22:02:25.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.667" level="INFO">VALUE: [2.5848000000001925e-05, 2.5792000000000176e-05, 2.5846999999998982e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5874999999998122e-05, 2.5874999999998122e-05, 2.5860999999998552e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.587500000000159e-05, 2.5861999999994556e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5860999999995082e-05, 2.5846999999995512e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.583300000000288e-05, 2.586100000000202e-05, 2.5778000000004075e-05, 2.5792000000003645e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5846999999995512e-05, 2.584700000000245e-05, 2.5860999999995082e-05, 2.5862000000001495e-05, 2.5846999999995512e-05, 2.587500000000159e-05, 2.5804999999996803e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.588900000000116e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.584700000000245e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.5848000000001925e-05, 2.5862000000001495e-05]</msg>
<status status="PASS" starttime="20201115 22:02:25.665" endtime="20201115 22:02:25.667"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.660" endtime="20201115 22:02:25.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.670" endtime="20201115 22:02:25.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:25.674" endtime="20201115 22:02:25.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.672" endtime="20201115 22:02:25.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.669" endtime="20201115 22:02:25.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.287" endtime="20201115 22:02:25.694"></status>
</kw>
<msg timestamp="20201115 22:02:25.694" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.704" endtime="20201115 22:02:25.736"></status>
</kw>
<msg timestamp="20201115 22:02:25.737" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.702" endtime="20201115 22:02:25.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:25.739" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:25.738" endtime="20201115 22:02:25.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.740" endtime="20201115 22:02:25.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.699" endtime="20201115 22:02:25.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.697" endtime="20201115 22:02:25.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:25.750" endtime="20201115 22:02:26.035"></status>
</kw>
<msg timestamp="20201115 22:02:26.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:25.749" endtime="20201115 22:02:26.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022693125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.039" endtime="20201115 22:02:26.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.048" endtime="20201115 22:02:26.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.746" endtime="20201115 22:02:26.050"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.744" endtime="20201115 22:02:26.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.055" level="INFO">${RESULT} = [{'time': 0.022693125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.584700000000245e-05, 'source_diff': 2.584700000000245e-05}, {'time': 0.023128236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.051" endtime="20201115 22:02:26.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.069" level="INFO">${OVERHEAD} = {'source_diff': [2.584700000000245e-05, 2.5832999999999412e-05, 2.5860999999998552e-05, 2.5832999999999412e-05, 2.584700000000245e-05, 2.5860999999998552e-05, 2.5805999999999746e-05, 2.586099999999855...</msg>
<status status="PASS" starttime="20201115 22:02:26.056" endtime="20201115 22:02:26.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.074" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:26.073" endtime="20201115 22:02:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.076" level="INFO">VALUE: [2.584700000000245e-05, 2.5832999999999412e-05, 2.5860999999998552e-05, 2.5832999999999412e-05, 2.584700000000245e-05, 2.5860999999998552e-05, 2.5805999999999746e-05, 2.5860999999998552e-05, 2.5874999999998122e-05, 2.5862000000001495e-05, 2.5833999999998886e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5847999999998456e-05, 2.5832999999999412e-05, 2.5860999999998552e-05, 2.5862000000001495e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.5805999999996276e-05, 2.583300000000288e-05, 2.5862000000001495e-05, 2.586100000000202e-05, 2.583300000000288e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5834000000002355e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5819999999995846e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5832999999995943e-05, 2.586100000000202e-05, 2.5791999999996706e-05, 2.588900000000116e-05, 2.5819999999995846e-05, 2.586100000000202e-05, 2.5862000000001495e-05, 2.586100000000202e-05, 2.5833999999995416e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.075" endtime="20201115 22:02:26.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.070" endtime="20201115 22:02:26.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.079" endtime="20201115 22:02:26.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.083" endtime="20201115 22:02:26.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.081" endtime="20201115 22:02:26.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.078" endtime="20201115 22:02:26.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.695" endtime="20201115 22:02:26.104"></status>
</kw>
<msg timestamp="20201115 22:02:26.104" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.113" endtime="20201115 22:02:26.145"></status>
</kw>
<msg timestamp="20201115 22:02:26.145" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.111" endtime="20201115 22:02:26.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.148" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.146" endtime="20201115 22:02:26.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.149" endtime="20201115 22:02:26.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.108" endtime="20201115 22:02:26.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.106" endtime="20201115 22:02:26.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.159" endtime="20201115 22:02:26.446"></status>
</kw>
<msg timestamp="20201115 22:02:26.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.157" endtime="20201115 22:02:26.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:26.450" endtime="20201115 22:02:26.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.459" endtime="20201115 22:02:26.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.155" endtime="20201115 22:02:26.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.153" endtime="20201115 22:02:26.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.465" level="INFO">${RESULT} = [{'time': 0.022827597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.587500000000159e-05, 'source_diff': 2.587500000000159e-05}, {'time': 0.023263694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.462" endtime="20201115 22:02:26.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.479" level="INFO">${OVERHEAD} = {'source_diff': [2.587500000000159e-05, 2.584700000000245e-05, 2.5862000000001495e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.5833999999998886e-05, 2.5860999999998552...</msg>
<status status="PASS" starttime="20201115 22:02:26.467" endtime="20201115 22:02:26.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.484" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:26.483" endtime="20201115 22:02:26.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.486" level="INFO">VALUE: [2.587500000000159e-05, 2.584700000000245e-05, 2.5862000000001495e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.5833999999998886e-05, 2.5860999999998552e-05, 2.5833999999998886e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.584700000000245e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.5862000000001495e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5833999999995416e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5790999999997233e-05, 2.5848000000001925e-05, 2.588900000000116e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.5860999999995082e-05, 2.5805999999996276e-05, 2.583300000000288e-05, 2.5846999999995512e-05, 2.5791999999996706e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.5846999999995512e-05, 2.586100000000202e-05, 2.5832999999995943e-05, 2.5846999999995512e-05, 2.583300000000288e-05, 2.583300000000288e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.5902999999993792e-05, 2.583300000000288e-05, 2.5846999999995512e-05, 2.5846999999995512e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.485" endtime="20201115 22:02:26.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.480" endtime="20201115 22:02:26.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.489" endtime="20201115 22:02:26.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.493" endtime="20201115 22:02:26.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.491" endtime="20201115 22:02:26.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.488" endtime="20201115 22:02:26.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.104" endtime="20201115 22:02:26.513"></status>
</kw>
<msg timestamp="20201115 22:02:26.514" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.523" endtime="20201115 22:02:26.555"></status>
</kw>
<msg timestamp="20201115 22:02:26.555" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.521" endtime="20201115 22:02:26.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.557" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.556" endtime="20201115 22:02:26.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.559" endtime="20201115 22:02:26.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.518" endtime="20201115 22:02:26.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.516" endtime="20201115 22:02:26.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.569" endtime="20201115 22:02:26.858"></status>
</kw>
<msg timestamp="20201115 22:02:26.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:26.567" endtime="20201115 22:02:26.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:26.868" endtime="20201115 22:02:26.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.888" endtime="20201115 22:02:26.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.565" endtime="20201115 22:02:26.893"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.563" endtime="20201115 22:02:26.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:26.904" level="INFO">${RESULT} = [{'time': 0.0230075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5818999999999842e-05, 'source_diff': 2.5818999999999842e-05}, {'time': 0.023436944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:26.896" endtime="20201115 22:02:26.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:26.936" level="INFO">${OVERHEAD} = {'source_diff': [2.5818999999999842e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5861999999998025e-05, 2.588899999999769e-05, 2.5860999999998552e...</msg>
<status status="PASS" starttime="20201115 22:02:26.906" endtime="20201115 22:02:26.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.945" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:26.943" endtime="20201115 22:02:26.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:26.950" level="INFO">VALUE: [2.5818999999999842e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5861999999998025e-05, 2.588899999999769e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.5847999999998456e-05, 2.587500000000159e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.5888000000001687e-05, 2.5874999999998122e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.5846999999998982e-05, 2.5874999999998122e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.584700000000245e-05, 2.5862000000001495e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.5860999999995082e-05, 2.5846999999995512e-05, 2.584700000000245e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5848000000001925e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.588900000000116e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.5860999999995082e-05, 2.583300000000288e-05, 2.5846999999995512e-05, 2.587500000000159e-05]</msg>
<status status="PASS" starttime="20201115 22:02:26.948" endtime="20201115 22:02:26.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.938" endtime="20201115 22:02:26.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.953" endtime="20201115 22:02:26.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:26.957" endtime="20201115 22:02:26.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.955" endtime="20201115 22:02:26.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.951" endtime="20201115 22:02:26.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.514" endtime="20201115 22:02:26.977"></status>
</kw>
<msg timestamp="20201115 22:02:26.978" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:26.987" endtime="20201115 22:02:27.019"></status>
</kw>
<msg timestamp="20201115 22:02:27.019" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:26.985" endtime="20201115 22:02:27.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.020" endtime="20201115 22:02:27.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.023" endtime="20201115 22:02:27.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.983" endtime="20201115 22:02:27.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.980" endtime="20201115 22:02:27.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.033" endtime="20201115 22:02:27.320"></status>
</kw>
<msg timestamp="20201115 22:02:27.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.032" endtime="20201115 22:02:27.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023083889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.325" endtime="20201115 22:02:27.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.334" endtime="20201115 22:02:27.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.029" endtime="20201115 22:02:27.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.027" endtime="20201115 22:02:27.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.341" level="INFO">${RESULT} = [{'time': 0.023109764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.587500000000159e-05, 'source_diff': 2.587500000000159e-05}, {'time': 0.023544014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:27.338" endtime="20201115 22:02:27.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.355" level="INFO">${OVERHEAD} = {'source_diff': [2.587500000000159e-05, 2.5860999999998552e-05, 2.5862000000001495e-05, 2.5832999999999412e-05, 2.5805999999999746e-05, 2.5847999999998456e-05, 2.5860999999998552e-05, 2.58750000000015...</msg>
<status status="PASS" starttime="20201115 22:02:27.342" endtime="20201115 22:02:27.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.360" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:02:27.359" endtime="20201115 22:02:27.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.362" level="INFO">VALUE: [2.587500000000159e-05, 2.5860999999998552e-05, 2.5862000000001495e-05, 2.5832999999999412e-05, 2.5805999999999746e-05, 2.5847999999998456e-05, 2.5860999999998552e-05, 2.587500000000159e-05, 2.5862000000001495e-05, 2.5848000000001925e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.5818999999999842e-05, 2.588900000000116e-05, 2.583300000000288e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.584700000000245e-05, 2.5832999999995943e-05, 2.583300000000288e-05, 2.587500000000159e-05, 2.588900000000116e-05, 2.5860999999995082e-05, 2.584700000000245e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5777999999997137e-05, 2.5806000000003215e-05, 2.5916000000000827e-05, 2.5847999999994986e-05, 2.583300000000288e-05, 2.588900000000116e-05, 2.5834000000002355e-05, 2.588900000000116e-05, 2.5860999999995082e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.5860999999995082e-05, 2.586100000000202e-05, 2.5834000000002355e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.5819999999995846e-05, 2.587500000000159e-05, 2.5848000000001925e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.5806000000003215e-05, 2.583300000000288e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.361" endtime="20201115 22:02:27.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.356" endtime="20201115 22:02:27.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.366" endtime="20201115 22:02:27.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.369" endtime="20201115 22:02:27.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.368" endtime="20201115 22:02:27.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.364" endtime="20201115 22:02:27.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:26.978" endtime="20201115 22:02:27.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.285" endtime="20201115 22:02:27.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:25.284" endtime="20201115 22:02:27.391"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.393" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.402" endtime="20201115 22:02:27.436"></status>
</kw>
<msg timestamp="20201115 22:02:27.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.401" endtime="20201115 22:02:27.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.439" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.437" endtime="20201115 22:02:27.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.440" endtime="20201115 22:02:27.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.398" endtime="20201115 22:02:27.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.396" endtime="20201115 22:02:27.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.450" endtime="20201115 22:02:27.736"></status>
</kw>
<msg timestamp="20201115 22:02:27.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025725417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025752278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.448" endtime="20201115 22:02:27.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025725417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025752278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.740" endtime="20201115 22:02:27.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.748" endtime="20201115 22:02:27.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.446" endtime="20201115 22:02:27.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.444" endtime="20201115 22:02:27.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:27.755" level="INFO">${RESULT} = [{'time': 0.025752278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6860999999999552e-05, 'source_diff': 2.6860999999999552e-05}, {'time': 0.026208958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:27.752" endtime="20201115 22:02:27.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:27.770" level="INFO">${OVERHEAD} = {'source_diff': [2.6860999999999552e-05, 2.687500000000259e-05, 2.6887999999999218e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6860999999999552e-05, 2.6874999999999122...</msg>
<status status="PASS" starttime="20201115 22:02:27.756" endtime="20201115 22:02:27.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.775" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:27.774" endtime="20201115 22:02:27.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.777" level="INFO">VALUE: [2.6860999999999552e-05, 2.687500000000259e-05, 2.6887999999999218e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.6930000000001397e-05, 2.6888999999998692e-05, 2.6860999999999552e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.6888000000002688e-05, 2.69170000000013e-05, 2.690300000000173e-05, 2.6874999999995652e-05, 2.6846999999996513e-05, 2.6874999999995652e-05, 2.695900000000001e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.686100000000302e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.6888999999995222e-05, 2.6902000000002257e-05, 2.688900000000216e-05, 2.686100000000302e-05, 2.6888999999995222e-05, 2.6888999999995222e-05, 2.688799999999575e-05, 2.6860999999996082e-05, 2.688900000000216e-05, 2.69170000000013e-05, 2.6902999999994792e-05, 2.690300000000173e-05, 2.6902999999994792e-05, 2.6902999999994792e-05, 2.684700000000345e-05, 2.6874999999995652e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.6874999999995652e-05]</msg>
<status status="PASS" starttime="20201115 22:02:27.776" endtime="20201115 22:02:27.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.771" endtime="20201115 22:02:27.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.781" endtime="20201115 22:02:27.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:27.784" endtime="20201115 22:02:27.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.783" endtime="20201115 22:02:27.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.779" endtime="20201115 22:02:27.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.393" endtime="20201115 22:02:27.805"></status>
</kw>
<msg timestamp="20201115 22:02:27.805" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.815" endtime="20201115 22:02:27.848"></status>
</kw>
<msg timestamp="20201115 22:02:27.849" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.813" endtime="20201115 22:02:27.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:27.856" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:27.850" endtime="20201115 22:02:27.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.857" endtime="20201115 22:02:27.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.810" endtime="20201115 22:02:27.861"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.808" endtime="20201115 22:02:27.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:27.868" endtime="20201115 22:02:28.154"></status>
</kw>
<msg timestamp="20201115 22:02:28.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:27.866" endtime="20201115 22:02:28.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.158" endtime="20201115 22:02:28.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.166" endtime="20201115 22:02:28.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.864" endtime="20201115 22:02:28.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.862" endtime="20201115 22:02:28.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.174" level="INFO">${RESULT} = [{'time': 0.023341667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6888999999998692e-05, 'source_diff': 2.6888999999998692e-05}, {'time': 0.023803, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:28.170" endtime="20201115 22:02:28.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.187" level="INFO">${OVERHEAD} = {'source_diff': [2.6888999999998692e-05, 2.687500000000259e-05, 2.6887999999999218e-05, 2.6874999999999122e-05, 2.694500000000044e-05, 2.6833000000000412e-05, 2.6929999999997928e-05, 2.686099999999955...</msg>
<status status="PASS" starttime="20201115 22:02:28.175" endtime="20201115 22:02:28.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.192" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:28.191" endtime="20201115 22:02:28.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.195" level="INFO">VALUE: [2.6888999999998692e-05, 2.687500000000259e-05, 2.6887999999999218e-05, 2.6874999999999122e-05, 2.694500000000044e-05, 2.6833000000000412e-05, 2.6929999999997928e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.688900000000216e-05, 2.690300000000173e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.6874999999999122e-05, 2.690299999999826e-05, 2.6874999999999122e-05, 2.690299999999826e-05, 2.687500000000259e-05, 2.681900000000431e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.690300000000173e-05, 2.6916000000001827e-05, 2.6888999999995222e-05, 2.686100000000302e-05, 2.6860999999996082e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.686100000000302e-05, 2.690300000000173e-05, 2.687500000000259e-05, 2.686100000000302e-05, 2.6860999999996082e-05, 2.686100000000302e-05, 2.6944000000000967e-05, 2.687500000000259e-05, 2.684700000000345e-05, 2.686100000000302e-05, 2.6888999999995222e-05, 2.684700000000345e-05, 2.6860999999996082e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.6888999999995222e-05, 2.6874999999995652e-05, 2.6874999999995652e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.6888000000002688e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.193" endtime="20201115 22:02:28.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.188" endtime="20201115 22:02:28.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.198" endtime="20201115 22:02:28.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.201" endtime="20201115 22:02:28.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.200" endtime="20201115 22:02:28.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.196" endtime="20201115 22:02:28.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.806" endtime="20201115 22:02:28.222"></status>
</kw>
<msg timestamp="20201115 22:02:28.222" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.232" endtime="20201115 22:02:28.266"></status>
</kw>
<msg timestamp="20201115 22:02:28.267" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.230" endtime="20201115 22:02:28.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.268" endtime="20201115 22:02:28.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.271" endtime="20201115 22:02:28.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.227" endtime="20201115 22:02:28.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.225" endtime="20201115 22:02:28.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.281" endtime="20201115 22:02:28.566"></status>
</kw>
<msg timestamp="20201115 22:02:28.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.279" endtime="20201115 22:02:28.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.570" endtime="20201115 22:02:28.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.579" endtime="20201115 22:02:28.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.277" endtime="20201115 22:02:28.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.275" endtime="20201115 22:02:28.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.586" level="INFO">${RESULT} = [{'time': 0.023697403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6874999999999122e-05, 'source_diff': 2.6874999999999122e-05}, {'time': 0.02416325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:28.582" endtime="20201115 22:02:28.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:28.599" level="INFO">${OVERHEAD} = {'source_diff': [2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6901999999998788e-05, 2.68889999999986...</msg>
<status status="PASS" starttime="20201115 22:02:28.587" endtime="20201115 22:02:28.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.604" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:28.603" endtime="20201115 22:02:28.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.607" level="INFO">VALUE: [2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.688900000000216e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6901999999998788e-05, 2.6888999999998692e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6888999999998692e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.686100000000302e-05, 2.687500000000259e-05, 2.686100000000302e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.6846999999996513e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.6848000000002925e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.6888000000002688e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.6862000000002495e-05, 2.687500000000259e-05, 2.6805000000004742e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.69170000000013e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.686100000000302e-05, 2.6874999999995652e-05, 2.688900000000216e-05]</msg>
<status status="PASS" starttime="20201115 22:02:28.605" endtime="20201115 22:02:28.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.600" endtime="20201115 22:02:28.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.610" endtime="20201115 22:02:28.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:28.614" endtime="20201115 22:02:28.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.612" endtime="20201115 22:02:28.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.608" endtime="20201115 22:02:28.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.223" endtime="20201115 22:02:28.635"></status>
</kw>
<msg timestamp="20201115 22:02:28.635" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.644" endtime="20201115 22:02:28.677"></status>
</kw>
<msg timestamp="20201115 22:02:28.678" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.643" endtime="20201115 22:02:28.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:28.679" endtime="20201115 22:02:28.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.682" endtime="20201115 22:02:28.684"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.640" endtime="20201115 22:02:28.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.638" endtime="20201115 22:02:28.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.692" endtime="20201115 22:02:28.979"></status>
</kw>
<msg timestamp="20201115 22:02:28.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.690" endtime="20201115 22:02:28.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:28.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:28.983" endtime="20201115 22:02:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:28.991" endtime="20201115 22:02:28.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.688" endtime="20201115 22:02:28.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.686" endtime="20201115 22:02:28.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:28.998" level="INFO">${RESULT} = [{'time': 0.023493653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6874999999999122e-05, 'source_diff': 2.6874999999999122e-05}, {'time': 0.023954667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:28.995" endtime="20201115 22:02:28.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.012" level="INFO">${OVERHEAD} = {'source_diff': [2.6874999999999122e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6860999999999552e-05, 2.68749999999991...</msg>
<status status="PASS" starttime="20201115 22:02:28.999" endtime="20201115 22:02:29.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.017" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:29.016" endtime="20201115 22:02:29.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.020" level="INFO">VALUE: [2.6874999999999122e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6860999999999552e-05, 2.6860999999999552e-05, 2.687500000000259e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.6944000000000967e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.693100000000087e-05, 2.6874999999995652e-05, 2.681900000000431e-05, 2.6847999999995986e-05, 2.6888999999995222e-05, 2.690300000000173e-05, 2.683300000000388e-05, 2.69170000000013e-05, 2.6846999999996513e-05, 2.687500000000259e-05, 2.6902000000002257e-05, 2.686100000000302e-05, 2.688900000000216e-05, 2.6930000000001397e-05, 2.6848000000002925e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.6888999999995222e-05, 2.686100000000302e-05, 2.687500000000259e-05, 2.6916999999994362e-05, 2.6860999999996082e-05, 2.683300000000388e-05, 2.6874999999995652e-05, 2.687500000000259e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.018" endtime="20201115 22:02:29.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.013" endtime="20201115 22:02:29.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.023" endtime="20201115 22:02:29.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.027" endtime="20201115 22:02:29.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.025" endtime="20201115 22:02:29.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.022" endtime="20201115 22:02:29.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:28.636" endtime="20201115 22:02:29.048"></status>
</kw>
<msg timestamp="20201115 22:02:29.048" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.057" endtime="20201115 22:02:29.092"></status>
</kw>
<msg timestamp="20201115 22:02:29.092" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.056" endtime="20201115 22:02:29.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.095" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.093" endtime="20201115 22:02:29.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.096" endtime="20201115 22:02:29.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.053" endtime="20201115 22:02:29.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.051" endtime="20201115 22:02:29.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.106" endtime="20201115 22:02:29.393"></status>
</kw>
<msg timestamp="20201115 22:02:29.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02341875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:29.105" endtime="20201115 22:02:29.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02341875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:29.398" endtime="20201115 22:02:29.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.406" endtime="20201115 22:02:29.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.102" endtime="20201115 22:02:29.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.100" endtime="20201115 22:02:29.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.413" level="INFO">${RESULT} = [{'time': 0.02341875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.691699999999783e-05, 'source_diff': 2.691699999999783e-05}, {'time': 0.023875069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:29.410" endtime="20201115 22:02:29.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.428" level="INFO">${OVERHEAD} = {'source_diff': [2.691699999999783e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.68330000000004...</msg>
<status status="PASS" starttime="20201115 22:02:29.414" endtime="20201115 22:02:29.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.433" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:02:29.432" endtime="20201115 22:02:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.435" level="INFO">VALUE: [2.691699999999783e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.6833000000000412e-05, 2.686100000000302e-05, 2.6901999999998788e-05, 2.688900000000216e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.686100000000302e-05, 2.6874999999999122e-05, 2.6860999999999552e-05, 2.6874999999999122e-05, 2.688900000000216e-05, 2.69170000000013e-05, 2.6848000000002925e-05, 2.688900000000216e-05, 2.688900000000216e-05, 2.686100000000302e-05, 2.687500000000259e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.690300000000173e-05, 2.688900000000216e-05, 2.6930000000001397e-05, 2.686100000000302e-05, 2.687500000000259e-05, 2.6860999999996082e-05, 2.6888000000002688e-05, 2.6888999999995222e-05, 2.686100000000302e-05, 2.681900000000431e-05, 2.687500000000259e-05, 2.6848000000002925e-05, 2.688900000000216e-05, 2.687500000000259e-05, 2.687500000000259e-05, 2.6874999999995652e-05, 2.6874999999995652e-05, 2.687500000000259e-05, 2.692999999999446e-05, 2.688900000000216e-05, 2.6874999999995652e-05, 2.6832999999996943e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.434" endtime="20201115 22:02:29.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.429" endtime="20201115 22:02:29.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.439" endtime="20201115 22:02:29.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.443" endtime="20201115 22:02:29.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.441" endtime="20201115 22:02:29.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.437" endtime="20201115 22:02:29.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.049" endtime="20201115 22:02:29.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.392" endtime="20201115 22:02:29.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:27.391" endtime="20201115 22:02:29.464"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.466" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.476" endtime="20201115 22:02:29.510"></status>
</kw>
<msg timestamp="20201115 22:02:29.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.474" endtime="20201115 22:02:29.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.512" endtime="20201115 22:02:29.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.515" endtime="20201115 22:02:29.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.471" endtime="20201115 22:02:29.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.469" endtime="20201115 22:02:29.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.524" endtime="20201115 22:02:29.809"></status>
</kw>
<msg timestamp="20201115 22:02:29.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025632958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025660889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.522" endtime="20201115 22:02:29.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025632958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025660889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.813" endtime="20201115 22:02:29.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.822" endtime="20201115 22:02:29.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.520" endtime="20201115 22:02:29.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.518" endtime="20201115 22:02:29.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:29.829" level="INFO">${RESULT} = [{'time': 0.025660889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79309999999984e-05, 'source_diff': 2.79309999999984e-05}, {'time': 0.026152639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:29.825" endtime="20201115 22:02:29.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:29.842" level="INFO">${OVERHEAD} = {'source_diff': [2.79309999999984e-05, 2.7860999999997083e-05, 2.7901999999999788e-05, 2.793100000000187e-05, 2.7902999999999262e-05, 2.791699999999883e-05, 2.7888999999999692e-05, 2.793100000000187e-...</msg>
<status status="PASS" starttime="20201115 22:02:29.830" endtime="20201115 22:02:29.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.847" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:29.846" endtime="20201115 22:02:29.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.850" level="INFO">VALUE: [2.79309999999984e-05, 2.7860999999997083e-05, 2.7901999999999788e-05, 2.793100000000187e-05, 2.7902999999999262e-05, 2.791699999999883e-05, 2.7888999999999692e-05, 2.793100000000187e-05, 2.7943999999998498e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.793100000000187e-05, 2.79170000000023e-05, 2.791599999999589e-05, 2.787500000000359e-05, 2.783300000000488e-05, 2.788900000000316e-05, 2.790300000000273e-05, 2.793100000000187e-05, 2.790199999999632e-05, 2.79170000000023e-05, 2.7957999999994598e-05, 2.787500000000359e-05, 2.7902999999995792e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.7862000000003495e-05, 2.7874999999996652e-05, 2.7888999999996222e-05, 2.7860999999997083e-05, 2.7888999999996222e-05, 2.7902000000003258e-05, 2.786100000000402e-05, 2.791599999999589e-05, 2.791599999999589e-05, 2.791599999999589e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.788799999999675e-05, 2.7888999999996222e-05, 2.7902999999995792e-05, 2.788799999999675e-05, 2.788900000000316e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.7930999999994932e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.7874999999996652e-05, 2.7916000000002827e-05]</msg>
<status status="PASS" starttime="20201115 22:02:29.848" endtime="20201115 22:02:29.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.843" endtime="20201115 22:02:29.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.854" endtime="20201115 22:02:29.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:29.857" endtime="20201115 22:02:29.876"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.855" endtime="20201115 22:02:29.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.852" endtime="20201115 22:02:29.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.467" endtime="20201115 22:02:29.878"></status>
</kw>
<msg timestamp="20201115 22:02:29.878" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.887" endtime="20201115 22:02:29.923"></status>
</kw>
<msg timestamp="20201115 22:02:29.923" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.886" endtime="20201115 22:02:29.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:29.926" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:29.924" endtime="20201115 22:02:29.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.927" endtime="20201115 22:02:29.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.883" endtime="20201115 22:02:29.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.881" endtime="20201115 22:02:29.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:29.937" endtime="20201115 22:02:30.224"></status>
</kw>
<msg timestamp="20201115 22:02:30.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:29.936" endtime="20201115 22:02:30.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.228" endtime="20201115 22:02:30.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.236" endtime="20201115 22:02:30.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.933" endtime="20201115 22:02:30.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.931" endtime="20201115 22:02:30.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.243" level="INFO">${RESULT} = [{'time': 0.023259819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.023747917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:30.240" endtime="20201115 22:02:30.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.257" level="INFO">${OVERHEAD} = {'source_diff': [2.7847000000000982e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.7944000000001967e-05, 2.7875000000000122e-05, 2.7901999999999788e-05, 2.788900000000316e-05, 2.79029999999992...</msg>
<status status="PASS" starttime="20201115 22:02:30.244" endtime="20201115 22:02:30.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.262" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:30.261" endtime="20201115 22:02:30.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.265" level="INFO">VALUE: [2.7847000000000982e-05, 2.7902999999999262e-05, 2.7902999999999262e-05, 2.7944000000001967e-05, 2.7875000000000122e-05, 2.7901999999999788e-05, 2.788900000000316e-05, 2.7902999999999262e-05, 2.7915999999999358e-05, 2.7888999999999692e-05, 2.791699999999883e-05, 2.7958000000001537e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.794499999999797e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.788900000000316e-05, 2.7902000000003258e-05, 2.79170000000023e-05, 2.7916999999995362e-05, 2.7888999999996222e-05, 2.7902999999995792e-05, 2.7874999999996652e-05, 2.7930999999994932e-05, 2.793100000000187e-05, 2.79170000000023e-05, 2.7985999999993738e-05, 2.788900000000316e-05, 2.787500000000359e-05, 2.7902999999995792e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.787500000000359e-05, 2.7957999999994598e-05, 2.791599999999589e-05, 2.788900000000316e-05, 2.7971999999994168e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.787500000000359e-05, 2.7861999999996556e-05, 2.788900000000316e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.797300000000058e-05, 2.792999999999546e-05, 2.7971999999994168e-05, 2.790300000000273e-05, 2.787500000000359e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.264" endtime="20201115 22:02:30.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.259" endtime="20201115 22:02:30.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.268" endtime="20201115 22:02:30.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.272" endtime="20201115 22:02:30.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.270" endtime="20201115 22:02:30.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.267" endtime="20201115 22:02:30.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.879" endtime="20201115 22:02:30.293"></status>
</kw>
<msg timestamp="20201115 22:02:30.293" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.302" endtime="20201115 22:02:30.337"></status>
</kw>
<msg timestamp="20201115 22:02:30.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.301" endtime="20201115 22:02:30.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.339" endtime="20201115 22:02:30.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.342" endtime="20201115 22:02:30.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.298" endtime="20201115 22:02:30.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.296" endtime="20201115 22:02:30.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.352" endtime="20201115 22:02:30.637"></status>
</kw>
<msg timestamp="20201115 22:02:30.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.351" endtime="20201115 22:02:30.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.642" endtime="20201115 22:02:30.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.650" endtime="20201115 22:02:30.652"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.348" endtime="20201115 22:02:30.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.346" endtime="20201115 22:02:30.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:30.657" level="INFO">${RESULT} = [{'time': 0.023156889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.023671722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:30.654" endtime="20201115 22:02:30.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:30.672" level="INFO">${OVERHEAD} = {'source_diff': [2.7861000000000552e-05, 2.7832999999997943e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7861000000000552e-05, 2.7902999999999262e-05, 2.7915999999999358e-05, 2.7901999999999...</msg>
<status status="PASS" starttime="20201115 22:02:30.659" endtime="20201115 22:02:30.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.676" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:30.675" endtime="20201115 22:02:30.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.679" level="INFO">VALUE: [2.7861000000000552e-05, 2.7832999999997943e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7861000000000552e-05, 2.7902999999999262e-05, 2.7915999999999358e-05, 2.7901999999999788e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7901999999999788e-05, 2.7888999999999692e-05, 2.790300000000273e-05, 2.7902999999999262e-05, 2.7901999999999788e-05, 2.790300000000273e-05, 2.7902999999999262e-05, 2.7916999999995362e-05, 2.7832999999997943e-05, 2.7874999999996652e-05, 2.7888000000003688e-05, 2.795900000000101e-05, 2.7874999999996652e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.788900000000316e-05, 2.79170000000023e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.7834000000004355e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7847999999996986e-05, 2.7930999999994932e-05, 2.788900000000316e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.7916000000002827e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.790300000000273e-05, 2.787500000000359e-05, 2.790300000000273e-05, 2.7916999999995362e-05, 2.7888000000003688e-05, 2.7874999999996652e-05]</msg>
<status status="PASS" starttime="20201115 22:02:30.677" endtime="20201115 22:02:30.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.673" endtime="20201115 22:02:30.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.682" endtime="20201115 22:02:30.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:30.686" endtime="20201115 22:02:30.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.684" endtime="20201115 22:02:30.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.681" endtime="20201115 22:02:30.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.293" endtime="20201115 22:02:30.707"></status>
</kw>
<msg timestamp="20201115 22:02:30.707" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.716" endtime="20201115 22:02:30.752"></status>
</kw>
<msg timestamp="20201115 22:02:30.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.714" endtime="20201115 22:02:30.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:30.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:30.753" endtime="20201115 22:02:30.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.756" endtime="20201115 22:02:30.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.712" endtime="20201115 22:02:30.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.710" endtime="20201115 22:02:30.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:30.766" endtime="20201115 22:02:31.053"></status>
</kw>
<msg timestamp="20201115 22:02:31.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:30.765" endtime="20201115 22:02:31.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.057" endtime="20201115 22:02:31.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.066" endtime="20201115 22:02:31.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.762" endtime="20201115 22:02:31.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.760" endtime="20201115 22:02:31.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.073" level="INFO">${RESULT} = [{'time': 0.023373778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790300000000273e-05, 'source_diff': 2.790300000000273e-05}, {'time': 0.023866736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:31.070" endtime="20201115 22:02:31.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.088" level="INFO">${OVERHEAD} = {'source_diff': [2.790300000000273e-05, 2.7943999999998498e-05, 2.795899999999754e-05, 2.790300000000273e-05, 2.7888999999999692e-05, 2.793100000000187e-05, 2.7902999999999262e-05, 2.7888999999999692e...</msg>
<status status="PASS" starttime="20201115 22:02:31.074" endtime="20201115 22:02:31.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.093" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:31.092" endtime="20201115 22:02:31.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.095" level="INFO">VALUE: [2.790300000000273e-05, 2.7943999999998498e-05, 2.795899999999754e-05, 2.790300000000273e-05, 2.7888999999999692e-05, 2.793100000000187e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7888000000000218e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.791699999999883e-05, 2.7986000000000677e-05, 2.7902000000003258e-05, 2.7888999999999692e-05, 2.7888999999999692e-05, 2.7901999999999788e-05, 2.7902999999995792e-05, 2.787500000000359e-05, 2.791599999999589e-05, 2.793100000000187e-05, 2.7944000000001967e-05, 2.790199999999632e-05, 2.790300000000273e-05, 2.788900000000316e-05, 2.786100000000402e-05, 2.7916999999995362e-05, 2.790300000000273e-05, 2.7874999999996652e-05, 2.7874999999996652e-05, 2.787500000000359e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.787500000000359e-05, 2.7847999999996986e-05, 2.788900000000316e-05, 2.793100000000187e-05, 2.788900000000316e-05, 2.7888999999996222e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.7888999999996222e-05, 2.7902000000003258e-05, 2.790199999999632e-05, 2.7888000000003688e-05, 2.7874999999996652e-05, 2.7902999999995792e-05, 2.788799999999675e-05, 2.7916999999995362e-05, 2.788900000000316e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.094" endtime="20201115 22:02:31.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.089" endtime="20201115 22:02:31.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.098" endtime="20201115 22:02:31.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.102" endtime="20201115 22:02:31.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.101" endtime="20201115 22:02:31.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.097" endtime="20201115 22:02:31.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:30.707" endtime="20201115 22:02:31.123"></status>
</kw>
<msg timestamp="20201115 22:02:31.123" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.133" endtime="20201115 22:02:31.168"></status>
</kw>
<msg timestamp="20201115 22:02:31.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.131" endtime="20201115 22:02:31.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.171" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.169" endtime="20201115 22:02:31.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.172" endtime="20201115 22:02:31.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.128" endtime="20201115 22:02:31.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.126" endtime="20201115 22:02:31.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.183" endtime="20201115 22:02:31.468"></status>
</kw>
<msg timestamp="20201115 22:02:31.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.181" endtime="20201115 22:02:31.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.473" endtime="20201115 22:02:31.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.482" endtime="20201115 22:02:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.178" endtime="20201115 22:02:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.176" endtime="20201115 22:02:31.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.489" level="INFO">${RESULT} = [{'time': 0.023273472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.023757236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.485" endtime="20201115 22:02:31.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.503" level="INFO">${OVERHEAD} = {'source_diff': [2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7875000000000...</msg>
<status status="PASS" starttime="20201115 22:02:31.490" endtime="20201115 22:02:31.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.507" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:02:31.506" endtime="20201115 22:02:31.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.510" level="INFO">VALUE: [2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.7902999999999262e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.7901999999999788e-05, 2.7888999999999692e-05, 2.7915999999999358e-05, 2.7902999999999262e-05, 2.7901999999999788e-05, 2.79170000000023e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.7944000000001967e-05, 2.7902000000003258e-05, 2.788799999999675e-05, 2.7930000000002397e-05, 2.7958000000001537e-05, 2.7902999999995792e-05, 2.7902999999995792e-05, 2.788900000000316e-05, 2.7930000000002397e-05, 2.790300000000273e-05, 2.7902999999995792e-05, 2.7888999999996222e-05, 2.7818999999998373e-05, 2.790300000000273e-05, 2.7888000000003688e-05, 2.7930000000002397e-05, 2.7888999999996222e-05, 2.790300000000273e-05, 2.7888999999996222e-05, 2.788900000000316e-05, 2.7902999999995792e-05, 2.7957999999994598e-05, 2.793100000000187e-05, 2.7846999999997513e-05, 2.79170000000023e-05, 2.7888999999996222e-05, 2.7902999999995792e-05, 2.7930000000002397e-05, 2.79170000000023e-05, 2.790300000000273e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.509" endtime="20201115 22:02:31.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.504" endtime="20201115 22:02:31.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.513" endtime="20201115 22:02:31.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.517" endtime="20201115 22:02:31.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.515" endtime="20201115 22:02:31.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.512" endtime="20201115 22:02:31.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.124" endtime="20201115 22:02:31.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.465" endtime="20201115 22:02:31.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:29.464" endtime="20201115 22:02:31.538"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.541" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.550" endtime="20201115 22:02:31.586"></status>
</kw>
<msg timestamp="20201115 22:02:31.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.548" endtime="20201115 22:02:31.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.589" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.588" endtime="20201115 22:02:31.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.591" endtime="20201115 22:02:31.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.545" endtime="20201115 22:02:31.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.543" endtime="20201115 22:02:31.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.600" endtime="20201115 22:02:31.887"></status>
</kw>
<msg timestamp="20201115 22:02:31.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.599" endtime="20201115 22:02:31.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:31.891" endtime="20201115 22:02:31.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.900" endtime="20201115 22:02:31.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.596" endtime="20201115 22:02:31.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.594" endtime="20201115 22:02:31.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:31.907" level="INFO">${RESULT} = [{'time': 0.025695986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889000000000692e-05, 'source_diff': 2.8889000000000692e-05}, {'time': 0.026215819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:31.903" endtime="20201115 22:02:31.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:31.921" level="INFO">${OVERHEAD} = {'source_diff': [2.8889000000000692e-05, 2.8861000000001552e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.895900000000201e-05, 2.8916999999999832e-05, 2.8833000000002412e-05, 2.89160000000003...</msg>
<status status="PASS" starttime="20201115 22:02:31.908" endtime="20201115 22:02:31.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.925" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:31.924" endtime="20201115 22:02:31.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:31.928" level="INFO">VALUE: [2.8889000000000692e-05, 2.8861000000001552e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.895900000000201e-05, 2.8916999999999832e-05, 2.8833000000002412e-05, 2.8916000000000358e-05, 2.8903000000000262e-05, 2.895899999999854e-05, 2.8916000000000358e-05, 2.892999999999646e-05, 2.89170000000033e-05, 2.8930999999995932e-05, 2.8846999999998513e-05, 2.890300000000373e-05, 2.8944000000002967e-05, 2.890199999999732e-05, 2.894399999999603e-05, 2.8930999999995932e-05, 2.8972000000002107e-05, 2.8916999999996362e-05, 2.894500000000244e-05, 2.8916999999996362e-05, 2.8944000000002967e-05, 2.8860999999998083e-05, 2.890300000000373e-05, 2.893100000000287e-05, 2.8916999999996362e-05, 2.8902999999996792e-05, 2.890300000000373e-05, 2.8902999999996792e-05, 2.892999999999646e-05, 2.8902999999996792e-05, 2.890300000000373e-05, 2.886100000000502e-05, 2.8916000000003828e-05, 2.8860999999998083e-05, 2.8986000000001677e-05, 2.89170000000033e-05, 2.8902999999996792e-05, 2.8916999999996362e-05, 2.897300000000158e-05, 2.891599999999689e-05, 2.890300000000373e-05, 2.891599999999689e-05, 2.891599999999689e-05, 2.891599999999689e-05, 2.8902999999996792e-05, 2.8902000000004258e-05]</msg>
<status status="PASS" starttime="20201115 22:02:31.927" endtime="20201115 22:02:31.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.922" endtime="20201115 22:02:31.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.931" endtime="20201115 22:02:31.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:31.935" endtime="20201115 22:02:31.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.933" endtime="20201115 22:02:31.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.930" endtime="20201115 22:02:31.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.541" endtime="20201115 22:02:31.956"></status>
</kw>
<msg timestamp="20201115 22:02:31.956" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:31.965" endtime="20201115 22:02:32.003"></status>
</kw>
<msg timestamp="20201115 22:02:32.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:31.964" endtime="20201115 22:02:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.004" endtime="20201115 22:02:32.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.007" endtime="20201115 22:02:32.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.961" endtime="20201115 22:02:32.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.959" endtime="20201115 22:02:32.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.018" endtime="20201115 22:02:32.304"></status>
</kw>
<msg timestamp="20201115 22:02:32.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.016" endtime="20201115 22:02:32.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023279931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.308" endtime="20201115 22:02:32.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.316" endtime="20201115 22:02:32.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.013" endtime="20201115 22:02:32.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.012" endtime="20201115 22:02:32.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.323" level="INFO">${RESULT} = [{'time': 0.023279931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8903000000000262e-05, 'source_diff': 2.8903000000000262e-05}, {'time': 0.023795306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:32.320" endtime="20201115 22:02:32.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.337" level="INFO">${OVERHEAD} = {'source_diff': [2.8903000000000262e-05, 2.8903000000000262e-05, 2.8943999999999498e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.8931000000002...</msg>
<status status="PASS" starttime="20201115 22:02:32.325" endtime="20201115 22:02:32.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.342" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:32.341" endtime="20201115 22:02:32.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.345" level="INFO">VALUE: [2.8903000000000262e-05, 2.8903000000000262e-05, 2.8943999999999498e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.8916999999999832e-05, 2.8875000000001122e-05, 2.893100000000287e-05, 2.8860999999998083e-05, 2.8916000000000358e-05, 2.89309999999994e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.8916000000000358e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8930000000003397e-05, 2.8986000000001677e-05, 2.893100000000287e-05, 2.8916000000003828e-05, 2.8916999999996362e-05, 2.890199999999732e-05, 2.8930000000003397e-05, 2.890300000000373e-05, 2.890300000000373e-05, 2.8971999999995168e-05, 2.890300000000373e-05, 2.892999999999646e-05, 2.8916999999996362e-05, 2.894399999999603e-05, 2.8902999999996792e-05, 2.892999999999646e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.8958000000002537e-05, 2.893100000000287e-05, 2.8916999999996362e-05, 2.8916000000003828e-05, 2.8916999999996362e-05, 2.8930999999995932e-05, 2.8930999999995932e-05, 2.893100000000287e-05, 2.893100000000287e-05, 2.8902000000004258e-05, 2.894500000000244e-05, 2.8902000000004258e-05, 2.8930000000003397e-05, 2.891599999999689e-05, 2.8916999999996362e-05, 2.8916000000003828e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.343" endtime="20201115 22:02:32.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.338" endtime="20201115 22:02:32.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.348" endtime="20201115 22:02:32.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.352" endtime="20201115 22:02:32.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.350" endtime="20201115 22:02:32.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.346" endtime="20201115 22:02:32.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.957" endtime="20201115 22:02:32.372"></status>
</kw>
<msg timestamp="20201115 22:02:32.373" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.382" endtime="20201115 22:02:32.420"></status>
</kw>
<msg timestamp="20201115 22:02:32.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.381" endtime="20201115 22:02:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.423" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.421" endtime="20201115 22:02:32.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.424" endtime="20201115 22:02:32.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.377" endtime="20201115 22:02:32.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.375" endtime="20201115 22:02:32.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.434" endtime="20201115 22:02:32.721"></status>
</kw>
<msg timestamp="20201115 22:02:32.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.433" endtime="20201115 22:02:32.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.726" endtime="20201115 22:02:32.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.734" endtime="20201115 22:02:32.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.430" endtime="20201115 22:02:32.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.428" endtime="20201115 22:02:32.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:32.741" level="INFO">${RESULT} = [{'time': 0.024089833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916000000000358e-05, 'source_diff': 2.8916000000000358e-05}, {'time': 0.024603375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:32.738" endtime="20201115 22:02:32.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:32.756" level="INFO">${OVERHEAD} = {'source_diff': [2.8916000000000358e-05, 2.8903000000000262e-05, 2.89309999999994e-05, 2.8889000000000692e-05, 2.8943999999999498e-05, 2.8957999999999068e-05, 2.8903000000000262e-05, 2.890200000000078...</msg>
<status status="PASS" starttime="20201115 22:02:32.742" endtime="20201115 22:02:32.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.761" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:32.760" endtime="20201115 22:02:32.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.763" level="INFO">VALUE: [2.8916000000000358e-05, 2.8903000000000262e-05, 2.89309999999994e-05, 2.8889000000000692e-05, 2.8943999999999498e-05, 2.8957999999999068e-05, 2.8903000000000262e-05, 2.8902000000000788e-05, 2.8929999999999928e-05, 2.8903000000000262e-05, 2.8957999999999068e-05, 2.8903000000000262e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.8902999999996792e-05, 2.894399999999603e-05, 2.890300000000373e-05, 2.891599999999689e-05, 2.891599999999689e-05, 2.8944000000002967e-05, 2.890199999999732e-05, 2.890300000000373e-05, 2.891599999999689e-05, 2.891599999999689e-05, 2.8916999999996362e-05, 2.8874999999997653e-05, 2.89170000000033e-05, 2.8930999999995932e-05, 2.895900000000201e-05, 2.8874999999997653e-05, 2.89170000000033e-05, 2.8916000000003828e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.894500000000244e-05, 2.89579999999956e-05, 2.888900000000416e-05, 2.8902000000004258e-05, 2.8916999999996362e-05, 2.89579999999956e-05, 2.8874999999997653e-05, 2.8916999999996362e-05, 2.8860999999998083e-05, 2.89170000000033e-05, 2.897300000000158e-05, 2.895900000000201e-05, 2.89170000000033e-05, 2.890300000000373e-05]</msg>
<status status="PASS" starttime="20201115 22:02:32.762" endtime="20201115 22:02:32.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.757" endtime="20201115 22:02:32.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.767" endtime="20201115 22:02:32.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:32.770" endtime="20201115 22:02:32.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.769" endtime="20201115 22:02:32.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.765" endtime="20201115 22:02:32.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.373" endtime="20201115 22:02:32.792"></status>
</kw>
<msg timestamp="20201115 22:02:32.792" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.801" endtime="20201115 22:02:32.837"></status>
</kw>
<msg timestamp="20201115 22:02:32.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.799" endtime="20201115 22:02:32.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:32.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:32.839" endtime="20201115 22:02:32.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.842" endtime="20201115 22:02:32.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.797" endtime="20201115 22:02:32.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.795" endtime="20201115 22:02:32.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:32.852" endtime="20201115 22:02:33.138"></status>
</kw>
<msg timestamp="20201115 22:02:33.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023491611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023520528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:32.851" endtime="20201115 22:02:33.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023491611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023520528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.143" endtime="20201115 22:02:33.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.151" endtime="20201115 22:02:33.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.848" endtime="20201115 22:02:33.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.846" endtime="20201115 22:02:33.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.158" level="INFO">${RESULT} = [{'time': 0.023520528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916999999999832e-05, 'source_diff': 2.8916999999999832e-05}, {'time': 0.024034069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:33.154" endtime="20201115 22:02:33.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.172" level="INFO">${OVERHEAD} = {'source_diff': [2.8916999999999832e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8861000000001552e-05, 2.894499999999897e-05, 2.8943999999999498e-05, 2.89030000000002...</msg>
<status status="PASS" starttime="20201115 22:02:33.159" endtime="20201115 22:02:33.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.177" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:33.175" endtime="20201115 22:02:33.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.179" level="INFO">VALUE: [2.8916999999999832e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8861000000001552e-05, 2.894499999999897e-05, 2.8943999999999498e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916000000000358e-05, 2.8916999999999832e-05, 2.8861000000001552e-05, 2.8943999999999498e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916000000000358e-05, 2.8916999999996362e-05, 2.8971999999995168e-05, 2.8916999999996362e-05, 2.8916999999996362e-05, 2.8930999999995932e-05, 2.8944999999995502e-05, 2.8930000000003397e-05, 2.8902000000004258e-05, 2.89170000000033e-05, 2.8930000000003397e-05, 2.891599999999689e-05, 2.895900000000201e-05, 2.8916999999996362e-05, 2.8930000000003397e-05, 2.893100000000287e-05, 2.890199999999732e-05, 2.8916999999996362e-05, 2.890300000000373e-05, 2.89170000000033e-05, 2.893100000000287e-05, 2.89170000000033e-05, 2.8916000000003828e-05, 2.8916999999996362e-05, 2.8930000000003397e-05, 2.8902999999996792e-05, 2.893100000000287e-05, 2.8888999999997222e-05, 2.8944000000002967e-05, 2.89170000000033e-05, 2.89170000000033e-05, 2.8846999999998513e-05, 2.8846999999998513e-05, 2.890199999999732e-05, 2.8888999999997222e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.178" endtime="20201115 22:02:33.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.173" endtime="20201115 22:02:33.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.187" endtime="20201115 22:02:33.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.191" endtime="20201115 22:02:33.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.189" endtime="20201115 22:02:33.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.185" endtime="20201115 22:02:33.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:32.792" endtime="20201115 22:02:33.211"></status>
</kw>
<msg timestamp="20201115 22:02:33.212" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.221" endtime="20201115 22:02:33.257"></status>
</kw>
<msg timestamp="20201115 22:02:33.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.219" endtime="20201115 22:02:33.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.258" endtime="20201115 22:02:33.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.261" endtime="20201115 22:02:33.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.217" endtime="20201115 22:02:33.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.214" endtime="20201115 22:02:33.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.271" endtime="20201115 22:02:33.558"></status>
</kw>
<msg timestamp="20201115 22:02:33.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.270" endtime="20201115 22:02:33.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:33.562" endtime="20201115 22:02:33.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.571" endtime="20201115 22:02:33.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.267" endtime="20201115 22:02:33.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.265" endtime="20201115 22:02:33.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.578" level="INFO">${RESULT} = [{'time': 0.023283028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8916999999999832e-05, 'source_diff': 2.8916999999999832e-05}, {'time': 0.02380575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:33.574" endtime="20201115 22:02:33.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:33.592" level="INFO">${OVERHEAD} = {'source_diff': [2.8916999999999832e-05, 2.8943999999999498e-05, 2.8916999999999832e-05, 2.8929999999999928e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916000000000358e-05, 2.8957999999999...</msg>
<status status="PASS" starttime="20201115 22:02:33.579" endtime="20201115 22:02:33.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.596" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:02:33.595" endtime="20201115 22:02:33.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.599" level="INFO">VALUE: [2.8916999999999832e-05, 2.8943999999999498e-05, 2.8916999999999832e-05, 2.8929999999999928e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8916000000000358e-05, 2.8957999999999068e-05, 2.8985999999998208e-05, 2.89170000000033e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.8903000000000262e-05, 2.89309999999994e-05, 2.8916999999999832e-05, 2.8903000000000262e-05, 2.8902999999996792e-05, 2.8916000000003828e-05, 2.891599999999689e-05, 2.89170000000033e-05, 2.891599999999689e-05, 2.8930999999995932e-05, 2.890199999999732e-05, 2.892999999999646e-05, 2.890199999999732e-05, 2.891599999999689e-05, 2.8930000000003397e-05, 2.8902999999996792e-05, 2.8930000000003397e-05, 2.8902999999996792e-05, 2.8916000000003828e-05, 2.8916999999996362e-05, 2.8902999999996792e-05, 2.893100000000287e-05, 2.8930000000003397e-05, 2.89170000000033e-05, 2.8874999999997653e-05, 2.891599999999689e-05, 2.892999999999646e-05, 2.893100000000287e-05, 2.89170000000033e-05, 2.8902999999996792e-05, 2.8916999999996362e-05, 2.8902999999996792e-05, 2.891599999999689e-05, 2.886100000000502e-05, 2.895900000000201e-05, 2.890300000000373e-05, 2.890300000000373e-05, 2.8930999999995932e-05]</msg>
<status status="PASS" starttime="20201115 22:02:33.598" endtime="20201115 22:02:33.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.593" endtime="20201115 22:02:33.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.603" endtime="20201115 22:02:33.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:33.606" endtime="20201115 22:02:33.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.605" endtime="20201115 22:02:33.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.601" endtime="20201115 22:02:33.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.212" endtime="20201115 22:02:33.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.539" endtime="20201115 22:02:33.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:31.539" endtime="20201115 22:02:33.628"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.630" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.639" endtime="20201115 22:02:33.677"></status>
</kw>
<msg timestamp="20201115 22:02:33.677" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.637" endtime="20201115 22:02:33.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.680" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:33.678" endtime="20201115 22:02:33.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.681" endtime="20201115 22:02:33.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.635" endtime="20201115 22:02:33.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.633" endtime="20201115 22:02:33.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.690" endtime="20201115 22:02:33.976"></status>
</kw>
<msg timestamp="20201115 22:02:33.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025732333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02576225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:33.689" endtime="20201115 22:02:33.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:33.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025732333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02576225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:33.981" endtime="20201115 22:02:33.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:33.989" endtime="20201115 22:02:33.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.686" endtime="20201115 22:02:33.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.684" endtime="20201115 22:02:33.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:33.996" level="INFO">${RESULT} = [{'time': 0.02576225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9917000000000832e-05, 'source_diff': 2.9917000000000832e-05}, {'time': 0.026314264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:33.993" endtime="20201115 22:02:33.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.010" level="INFO">${OVERHEAD} = {'source_diff': [2.9917000000000832e-05, 2.9931000000000402e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9985999999999208e-05, 2.992999999999746...</msg>
<status status="PASS" starttime="20201115 22:02:33.997" endtime="20201115 22:02:34.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.015" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:34.014" endtime="20201115 22:02:34.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.018" level="INFO">VALUE: [2.9917000000000832e-05, 2.9931000000000402e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9985999999999208e-05, 2.992999999999746e-05, 2.994499999999997e-05, 2.994499999999997e-05, 2.991599999999789e-05, 2.99170000000043e-05, 2.9958999999996072e-05, 2.9916999999997362e-05, 2.9930000000004398e-05, 2.99170000000043e-05, 2.99579999999966e-05, 2.993100000000387e-05, 2.994500000000344e-05, 2.9930999999996932e-05, 2.9944999999996502e-05, 2.9958000000003537e-05, 2.994399999999703e-05, 2.992999999999746e-05, 2.9916999999997362e-05, 2.9972999999995642e-05, 2.9916999999997362e-05, 2.991599999999789e-05, 2.9902999999997792e-05, 2.9930999999996932e-05, 2.9930999999996932e-05, 2.9985999999995738e-05, 2.9944000000003967e-05, 2.995900000000301e-05, 2.99579999999966e-05, 2.994399999999703e-05, 2.9944999999996502e-05, 2.9944999999996502e-05, 2.99579999999966e-05, 2.9930999999996932e-05, 2.99579999999966e-05, 2.99170000000043e-05, 2.992999999999746e-05, 2.993100000000387e-05, 2.9958000000003537e-05, 2.992999999999746e-05, 2.9958000000003537e-05, 2.9930999999996932e-05, 2.994399999999703e-05, 2.9944999999996502e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.016" endtime="20201115 22:02:34.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.011" endtime="20201115 22:02:34.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.022" endtime="20201115 22:02:34.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.025" endtime="20201115 22:02:34.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.024" endtime="20201115 22:02:34.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.020" endtime="20201115 22:02:34.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.630" endtime="20201115 22:02:34.046"></status>
</kw>
<msg timestamp="20201115 22:02:34.046" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.055" endtime="20201115 22:02:34.094"></status>
</kw>
<msg timestamp="20201115 22:02:34.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.054" endtime="20201115 22:02:34.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.095" endtime="20201115 22:02:34.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.098" endtime="20201115 22:02:34.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.051" endtime="20201115 22:02:34.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.049" endtime="20201115 22:02:34.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.108" endtime="20201115 22:02:34.394"></status>
</kw>
<msg timestamp="20201115 22:02:34.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.107" endtime="20201115 22:02:34.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.398" endtime="20201115 22:02:34.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.407" endtime="20201115 22:02:34.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.104" endtime="20201115 22:02:34.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.102" endtime="20201115 22:02:34.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.414" level="INFO">${RESULT} = [{'time': 0.023058153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.995900000000301e-05, 'source_diff': 2.995900000000301e-05}, {'time': 0.023607472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.410" endtime="20201115 22:02:34.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.430" level="INFO">${OVERHEAD} = {'source_diff': [2.995900000000301e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9930000000000928e-05, 2.9902000000001788e-05, 2.9888999999998223e-05, 2.9860999999999083e-05, 2.993000000000092...</msg>
<status status="PASS" starttime="20201115 22:02:34.415" endtime="20201115 22:02:34.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.435" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:34.434" endtime="20201115 22:02:34.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.438" level="INFO">VALUE: [2.995900000000301e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9930000000000928e-05, 2.9902000000001788e-05, 2.9888999999998223e-05, 2.9860999999999083e-05, 2.9930000000000928e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9958000000000068e-05, 2.994499999999997e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.995900000000301e-05, 2.9944999999996502e-05, 2.9930999999996932e-05, 2.986100000000602e-05, 2.992999999999746e-05, 3.0000000000002247e-05, 2.9930999999996932e-05, 2.9902999999997792e-05, 2.998700000000215e-05, 2.997199999999617e-05, 2.99579999999966e-05, 2.9986000000002677e-05, 2.993100000000387e-05, 2.9986000000002677e-05, 2.9930000000004398e-05, 2.9846999999999513e-05, 2.99579999999966e-05, 2.9930000000004398e-05, 2.994399999999703e-05, 2.998700000000215e-05, 2.9944999999996502e-05, 2.993100000000387e-05, 2.9944999999996502e-05, 2.9930000000004398e-05, 2.99579999999966e-05, 2.994500000000344e-05, 2.9944999999996502e-05, 2.9958000000003537e-05, 2.994399999999703e-05, 2.9944000000003967e-05, 2.9986000000002677e-05, 2.9944000000003967e-05, 2.9944000000003967e-05, 2.9985999999995738e-05, 2.9860999999999083e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.436" endtime="20201115 22:02:34.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.431" endtime="20201115 22:02:34.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.441" endtime="20201115 22:02:34.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.445" endtime="20201115 22:02:34.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.443" endtime="20201115 22:02:34.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.439" endtime="20201115 22:02:34.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.047" endtime="20201115 22:02:34.465"></status>
</kw>
<msg timestamp="20201115 22:02:34.465" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.475" endtime="20201115 22:02:34.513"></status>
</kw>
<msg timestamp="20201115 22:02:34.513" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.473" endtime="20201115 22:02:34.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.516" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.514" endtime="20201115 22:02:34.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.517" endtime="20201115 22:02:34.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.470" endtime="20201115 22:02:34.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.468" endtime="20201115 22:02:34.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.527" endtime="20201115 22:02:34.814"></status>
</kw>
<msg timestamp="20201115 22:02:34.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.526" endtime="20201115 22:02:34.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.818" endtime="20201115 22:02:34.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.826" endtime="20201115 22:02:34.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.523" endtime="20201115 22:02:34.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.521" endtime="20201115 22:02:34.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:34.834" level="INFO">${RESULT} = [{'time': 0.023247597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.992999999999746e-05, 'source_diff': 2.992999999999746e-05}, {'time': 0.023795764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:34.830" endtime="20201115 22:02:34.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:34.848" level="INFO">${OVERHEAD} = {'source_diff': [2.992999999999746e-05, 2.9931000000000402e-05, 2.9971999999999638e-05, 2.9903000000001262e-05, 2.9930000000000928e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.99310000000004...</msg>
<status status="PASS" starttime="20201115 22:02:34.835" endtime="20201115 22:02:34.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.853" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:34.852" endtime="20201115 22:02:34.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.855" level="INFO">VALUE: [2.992999999999746e-05, 2.9931000000000402e-05, 2.9971999999999638e-05, 2.9903000000001262e-05, 2.9930000000000928e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9931000000000402e-05, 2.9944000000000498e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9930000000000928e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9958000000000068e-05, 2.9944000000003967e-05, 2.992999999999746e-05, 2.9944000000003967e-05, 2.992999999999746e-05, 2.99170000000043e-05, 2.99170000000043e-05, 2.9944000000003967e-05, 2.993100000000387e-05, 2.9888999999998223e-05, 2.9888999999998223e-05, 2.9944999999996502e-05, 2.9958999999996072e-05, 2.994500000000344e-05, 2.994500000000344e-05, 2.998700000000215e-05, 2.9902999999997792e-05, 2.9944000000003967e-05, 2.994399999999703e-05, 2.9958999999996072e-05, 2.99579999999966e-05, 2.99579999999966e-05, 2.9930000000004398e-05, 2.9902999999997792e-05, 2.991599999999789e-05, 2.9916999999997362e-05, 2.9944000000003967e-05, 2.994399999999703e-05, 2.9930000000004398e-05, 2.9944999999996502e-05, 2.99170000000043e-05, 3.0000000000002247e-05, 2.9902999999997792e-05, 2.9944000000003967e-05, 2.991599999999789e-05, 2.993100000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:02:34.854" endtime="20201115 22:02:34.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.849" endtime="20201115 22:02:34.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.858" endtime="20201115 22:02:34.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:34.862" endtime="20201115 22:02:34.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.861" endtime="20201115 22:02:34.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.857" endtime="20201115 22:02:34.883"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.466" endtime="20201115 22:02:34.883"></status>
</kw>
<msg timestamp="20201115 22:02:34.883" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.892" endtime="20201115 22:02:34.931"></status>
</kw>
<msg timestamp="20201115 22:02:34.931" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.891" endtime="20201115 22:02:34.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:34.934" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:34.932" endtime="20201115 22:02:34.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.935" endtime="20201115 22:02:34.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.888" endtime="20201115 22:02:34.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.886" endtime="20201115 22:02:34.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:34.946" endtime="20201115 22:02:35.232"></status>
</kw>
<msg timestamp="20201115 22:02:35.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023585597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:34.944" endtime="20201115 22:02:35.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023585597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.236" endtime="20201115 22:02:35.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.245" endtime="20201115 22:02:35.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.941" endtime="20201115 22:02:35.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.939" endtime="20201115 22:02:35.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.252" level="INFO">${RESULT} = [{'time': 0.023585597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9916000000001358e-05, 'source_diff': 2.9916000000001358e-05}, {'time': 0.024129597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.249" endtime="20201115 22:02:35.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.266" level="INFO">${OVERHEAD} = {'source_diff': [2.9916000000001358e-05, 2.992999999999746e-05, 2.992999999999746e-05, 2.9958000000000068e-05, 2.9916999999997362e-05, 2.994499999999997e-05, 2.994499999999997e-05, 2.9999999999998778e...</msg>
<status status="PASS" starttime="20201115 22:02:35.253" endtime="20201115 22:02:35.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.271" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:35.270" endtime="20201115 22:02:35.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.273" level="INFO">VALUE: [2.9916000000001358e-05, 2.992999999999746e-05, 2.992999999999746e-05, 2.9958000000000068e-05, 2.9916999999997362e-05, 2.994499999999997e-05, 2.994499999999997e-05, 2.9999999999998778e-05, 2.9930000000000928e-05, 2.9888999999998223e-05, 2.9930000000000928e-05, 2.9916999999997362e-05, 2.995900000000301e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9986000000002677e-05, 2.993100000000387e-05, 2.997300000000258e-05, 2.991599999999789e-05, 2.994399999999703e-05, 2.9985999999995738e-05, 2.9916000000004828e-05, 2.99579999999966e-05, 2.9944000000003967e-05, 3.0000000000002247e-05, 2.992999999999746e-05, 2.9958999999996072e-05, 2.994500000000344e-05, 2.994399999999703e-05, 3.0000000000002247e-05, 2.9860999999999083e-05, 2.9930999999996932e-05, 2.994399999999703e-05, 2.994500000000344e-05, 2.9930000000004398e-05, 2.9888999999998223e-05, 2.994399999999703e-05, 2.99170000000043e-05, 2.9944000000003967e-05, 2.9930999999996932e-05, 2.9944000000003967e-05, 2.99579999999966e-05, 2.992999999999746e-05, 2.9944999999996502e-05, 2.9860999999999083e-05, 3.0014000000001817e-05, 2.992999999999746e-05, 2.990300000000473e-05, 2.9888999999998223e-05, 2.994399999999703e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.272" endtime="20201115 22:02:35.274"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.267" endtime="20201115 22:02:35.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.277" endtime="20201115 22:02:35.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.280" endtime="20201115 22:02:35.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.279" endtime="20201115 22:02:35.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.275" endtime="20201115 22:02:35.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:34.884" endtime="20201115 22:02:35.301"></status>
</kw>
<msg timestamp="20201115 22:02:35.301" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.311" endtime="20201115 22:02:35.348"></status>
</kw>
<msg timestamp="20201115 22:02:35.349" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.309" endtime="20201115 22:02:35.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.351" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.350" endtime="20201115 22:02:35.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.352" endtime="20201115 22:02:35.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.306" endtime="20201115 22:02:35.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.304" endtime="20201115 22:02:35.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.363" endtime="20201115 22:02:35.649"></status>
</kw>
<msg timestamp="20201115 22:02:35.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023303278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.361" endtime="20201115 22:02:35.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023303278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.653" endtime="20201115 22:02:35.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.662" endtime="20201115 22:02:35.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.359" endtime="20201115 22:02:35.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.357" endtime="20201115 22:02:35.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:35.669" level="INFO">${RESULT} = [{'time': 0.023303278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9903000000001262e-05, 'source_diff': 2.9903000000001262e-05}, {'time': 0.023852958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:35.666" endtime="20201115 22:02:35.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:35.683" level="INFO">${OVERHEAD} = {'source_diff': [2.9903000000001262e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9902999999997792e-05, 2.9985999999999208e-05, 3.00140000000018...</msg>
<status status="PASS" starttime="20201115 22:02:35.670" endtime="20201115 22:02:35.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.688" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:02:35.687" endtime="20201115 22:02:35.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.690" level="INFO">VALUE: [2.9903000000001262e-05, 2.9944000000000498e-05, 2.994499999999997e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9902999999997792e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9944000000000498e-05, 2.9944000000000498e-05, 2.9931000000000402e-05, 2.994499999999997e-05, 2.9930000000000928e-05, 2.9944000000000498e-05, 2.9916000000001358e-05, 2.9930999999996932e-05, 2.992999999999746e-05, 2.9944999999996502e-05, 2.9860999999999083e-05, 2.9902999999997792e-05, 2.992999999999746e-05, 2.990199999999832e-05, 2.993100000000387e-05, 2.9944000000003967e-05, 2.99579999999966e-05, 2.9930999999996932e-05, 2.994500000000344e-05, 2.9930000000004398e-05, 2.994399999999703e-05, 2.994500000000344e-05, 2.994399999999703e-05, 2.9930999999996932e-05, 2.9944999999996502e-05, 2.99579999999966e-05, 2.9916999999997362e-05, 2.993100000000387e-05, 2.99579999999966e-05, 2.9930999999996932e-05, 2.9944999999996502e-05, 2.993100000000387e-05, 2.994399999999703e-05, 2.994399999999703e-05, 2.9930999999996932e-05, 2.994399999999703e-05, 2.994399999999703e-05, 2.994399999999703e-05, 2.99579999999966e-05, 2.99579999999966e-05, 2.994500000000344e-05, 2.9874999999998653e-05]</msg>
<status status="PASS" starttime="20201115 22:02:35.689" endtime="20201115 22:02:35.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.684" endtime="20201115 22:02:35.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.694" endtime="20201115 22:02:35.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:35.697" endtime="20201115 22:02:35.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.696" endtime="20201115 22:02:35.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.692" endtime="20201115 22:02:35.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.302" endtime="20201115 22:02:35.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.629" endtime="20201115 22:02:35.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:33.628" endtime="20201115 22:02:35.718"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.721" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.730" endtime="20201115 22:02:35.770"></status>
</kw>
<msg timestamp="20201115 22:02:35.770" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.728" endtime="20201115 22:02:35.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:35.773" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:35.771" endtime="20201115 22:02:35.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.774" endtime="20201115 22:02:35.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.726" endtime="20201115 22:02:35.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.724" endtime="20201115 22:02:35.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:35.784" endtime="20201115 22:02:36.070"></status>
</kw>
<msg timestamp="20201115 22:02:36.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025749278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:35.782" endtime="20201115 22:02:36.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025749278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.075" endtime="20201115 22:02:36.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.083" endtime="20201115 22:02:36.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.780" endtime="20201115 22:02:36.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.778" endtime="20201115 22:02:36.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.090" level="INFO">${RESULT} = [{'time': 0.025780236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.026360375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.086" endtime="20201115 22:02:36.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.105" level="INFO">${OVERHEAD} = {'source_diff': [3.095800000000107e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.091700000000183e-05, 3.088899999999922e-05, 3.102799999999892e-05, 3.095899999999707e-05, 3.098600000000021e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:36.091" endtime="20201115 22:02:36.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.110" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:36.109" endtime="20201115 22:02:36.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.112" level="INFO">VALUE: [3.095800000000107e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.091700000000183e-05, 3.088899999999922e-05, 3.102799999999892e-05, 3.095899999999707e-05, 3.098600000000021e-05, 3.09579999999976e-05, 3.104199999999849e-05, 3.095800000000454e-05, 3.097200000000411e-05, 3.097200000000411e-05, 3.091599999999889e-05, 3.095800000000454e-05, 3.09579999999976e-05, 3.091699999999836e-05, 3.100000000000325e-05, 3.09579999999976e-05, 3.09449999999975e-05, 3.094400000000497e-05, 3.095899999999707e-05, 3.100000000000325e-05, 3.101400000000282e-05, 3.097199999999717e-05, 3.095800000000454e-05, 3.100000000000325e-05, 3.097199999999717e-05, 3.09449999999975e-05, 3.095900000000401e-05, 3.097200000000411e-05, 3.09579999999976e-05, 3.098599999999674e-05, 3.095900000000401e-05, 3.095899999999707e-05, 3.09579999999976e-05, 3.095800000000454e-05, 3.100000000000325e-05, 3.09579999999976e-05, 3.09170000000053e-05, 3.091699999999836e-05, 3.088799999999975e-05, 3.097200000000411e-05, 3.09449999999975e-05, 3.09579999999976e-05, 3.097200000000411e-05, 3.097299999999664e-05, 3.097299999999664e-05, 3.09579999999976e-05, 3.097300000000358e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.111" endtime="20201115 22:02:36.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.106" endtime="20201115 22:02:36.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.116" endtime="20201115 22:02:36.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.119" endtime="20201115 22:02:36.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.118" endtime="20201115 22:02:36.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.114" endtime="20201115 22:02:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.722" endtime="20201115 22:02:36.140"></status>
</kw>
<msg timestamp="20201115 22:02:36.140" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.150" endtime="20201115 22:02:36.189"></status>
</kw>
<msg timestamp="20201115 22:02:36.190" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.148" endtime="20201115 22:02:36.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.193" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.191" endtime="20201115 22:02:36.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.194" endtime="20201115 22:02:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.145" endtime="20201115 22:02:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.143" endtime="20201115 22:02:36.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.205" endtime="20201115 22:02:36.492"></status>
</kw>
<msg timestamp="20201115 22:02:36.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.203" endtime="20201115 22:02:36.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023656819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023687806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:36.496" endtime="20201115 22:02:36.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.504" endtime="20201115 22:02:36.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.200" endtime="20201115 22:02:36.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.198" endtime="20201115 22:02:36.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.511" level="INFO">${RESULT} = [{'time': 0.023687806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.098699999999968e-05, 'source_diff': 3.098699999999968e-05}, {'time': 0.024264458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:36.508" endtime="20201115 22:02:36.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.525" level="INFO">${OVERHEAD} = {'source_diff': [3.098699999999968e-05, 3.098600000000021e-05, 3.095800000000107e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.097199999999717e-05, 3.097300000000011e-05, 3.095800000000107e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:36.512" endtime="20201115 22:02:36.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.530" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:36.529" endtime="20201115 22:02:36.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.532" level="INFO">VALUE: [3.098699999999968e-05, 3.098600000000021e-05, 3.095800000000107e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.097199999999717e-05, 3.097300000000011e-05, 3.095800000000107e-05, 3.088899999999922e-05, 3.09449999999975e-05, 3.094399999999803e-05, 3.097200000000064e-05, 3.095900000000054e-05, 3.095800000000107e-05, 3.09579999999976e-05, 3.095899999999707e-05, 3.094400000000497e-05, 3.091599999999889e-05, 3.097300000000358e-05, 3.092999999999846e-05, 3.101400000000282e-05, 3.09579999999976e-05, 3.097300000000358e-05, 3.093100000000487e-05, 3.097200000000411e-05, 3.102700000000291e-05, 3.097200000000411e-05, 3.097199999999717e-05, 3.09449999999975e-05, 3.09449999999975e-05, 3.094399999999803e-05, 3.09579999999976e-05, 3.09449999999975e-05, 3.093099999999793e-05, 3.095900000000401e-05, 3.092999999999846e-05, 3.101399999999588e-05, 3.095800000000454e-05, 3.097200000000411e-05, 3.095899999999707e-05, 3.095800000000454e-05, 3.097199999999717e-05, 3.09449999999975e-05, 3.091699999999836e-05, 3.087499999999965e-05, 3.091599999999889e-05, 3.097199999999717e-05, 3.095900000000401e-05, 3.095899999999707e-05, 3.095800000000454e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.531" endtime="20201115 22:02:36.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.526" endtime="20201115 22:02:36.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.536" endtime="20201115 22:02:36.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.539" endtime="20201115 22:02:36.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.538" endtime="20201115 22:02:36.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.534" endtime="20201115 22:02:36.560"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.141" endtime="20201115 22:02:36.560"></status>
</kw>
<msg timestamp="20201115 22:02:36.560" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.570" endtime="20201115 22:02:36.610"></status>
</kw>
<msg timestamp="20201115 22:02:36.610" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.568" endtime="20201115 22:02:36.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.613" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.611" endtime="20201115 22:02:36.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.614" endtime="20201115 22:02:36.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.565" endtime="20201115 22:02:36.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.563" endtime="20201115 22:02:36.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.624" endtime="20201115 22:02:36.910"></status>
</kw>
<msg timestamp="20201115 22:02:36.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023738542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:36.623" endtime="20201115 22:02:36.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023738542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:02:36.915" endtime="20201115 22:02:36.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.923" endtime="20201115 22:02:36.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.620" endtime="20201115 22:02:36.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.618" endtime="20201115 22:02:36.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:36.930" level="INFO">${RESULT} = [{'time': 0.0237695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.09579999999976e-05, 'source_diff': 3.09579999999976e-05}, {'time': 0.024342819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 22:02:36.926" endtime="20201115 22:02:36.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:36.944" level="INFO">${OVERHEAD} = {'source_diff': [3.09579999999976e-05, 3.095800000000107e-05, 3.098600000000021e-05, 3.095900000000054e-05, 3.091600000000236e-05, 3.09440000000015e-05, 3.095800000000107e-05, 3.095900000000054e-05, 3...</msg>
<status status="PASS" starttime="20201115 22:02:36.931" endtime="20201115 22:02:36.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.948" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:36.947" endtime="20201115 22:02:36.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:36.951" level="INFO">VALUE: [3.09579999999976e-05, 3.095800000000107e-05, 3.098600000000021e-05, 3.095900000000054e-05, 3.091600000000236e-05, 3.09440000000015e-05, 3.095800000000107e-05, 3.095900000000054e-05, 3.098600000000021e-05, 3.09579999999976e-05, 3.098600000000021e-05, 3.09440000000015e-05, 3.097200000000064e-05, 3.097199999999717e-05, 3.091600000000583e-05, 3.101399999999588e-05, 3.092999999999846e-05, 3.094500000000444e-05, 3.098600000000368e-05, 3.09579999999976e-05, 3.094399999999803e-05, 3.09579999999976e-05, 3.09449999999975e-05, 3.09579999999976e-05, 3.095800000000454e-05, 3.097199999999717e-05, 3.097299999999664e-05, 3.095800000000454e-05, 3.090299999999879e-05, 3.098600000000368e-05, 3.094400000000497e-05, 3.099999999999631e-05, 3.095800000000454e-05, 3.095800000000454e-05, 3.095899999999707e-05, 3.092999999999846e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.095800000000454e-05, 3.095899999999707e-05, 3.095800000000454e-05, 3.09579999999976e-05, 3.09449999999975e-05, 3.097299999999664e-05, 3.094399999999803e-05, 3.095900000000401e-05, 3.09579999999976e-05, 3.095800000000454e-05, 3.094400000000497e-05, 3.095899999999707e-05]</msg>
<status status="PASS" starttime="20201115 22:02:36.949" endtime="20201115 22:02:36.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.945" endtime="20201115 22:02:36.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.954" endtime="20201115 22:02:36.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:36.958" endtime="20201115 22:02:36.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.956" endtime="20201115 22:02:36.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.953" endtime="20201115 22:02:36.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.561" endtime="20201115 22:02:36.979"></status>
</kw>
<msg timestamp="20201115 22:02:36.979" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:36.989" endtime="20201115 22:02:37.029"></status>
</kw>
<msg timestamp="20201115 22:02:37.029" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:36.987" endtime="20201115 22:02:37.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.030" endtime="20201115 22:02:37.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.033" endtime="20201115 22:02:37.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.984" endtime="20201115 22:02:37.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.982" endtime="20201115 22:02:37.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.043" endtime="20201115 22:02:37.330"></status>
</kw>
<msg timestamp="20201115 22:02:37.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.042" endtime="20201115 22:02:37.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023856861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.334" endtime="20201115 22:02:37.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.342" endtime="20201115 22:02:37.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.039" endtime="20201115 22:02:37.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.037" endtime="20201115 22:02:37.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.349" level="INFO">${RESULT} = [{'time': 0.023856861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.024432528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.346" endtime="20201115 22:02:37.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.363" level="INFO">${OVERHEAD} = {'source_diff': [3.095800000000107e-05, 3.091699999999836e-05, 3.098600000000021e-05, 3.098600000000021e-05, 3.09579999999976e-05, 3.095800000000107e-05, 3.097300000000011e-05, 3.095800000000107e-05, ...</msg>
<status status="PASS" starttime="20201115 22:02:37.350" endtime="20201115 22:02:37.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.368" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:37.367" endtime="20201115 22:02:37.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.370" level="INFO">VALUE: [3.095800000000107e-05, 3.091699999999836e-05, 3.098600000000021e-05, 3.098600000000021e-05, 3.09579999999976e-05, 3.095800000000107e-05, 3.097300000000011e-05, 3.095800000000107e-05, 3.097200000000064e-05, 3.095800000000107e-05, 3.095800000000107e-05, 3.093000000000193e-05, 3.09449999999975e-05, 3.095900000000401e-05, 3.099999999999631e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.091699999999836e-05, 3.095900000000401e-05, 3.09449999999975e-05, 3.095900000000401e-05, 3.094399999999803e-05, 3.097199999999717e-05, 3.095800000000454e-05, 3.095800000000454e-05, 3.092999999999846e-05, 3.09449999999975e-05, 3.092999999999846e-05, 3.090299999999879e-05, 3.095800000000454e-05, 3.09579999999976e-05, 3.097199999999717e-05, 3.097199999999717e-05, 3.097200000000411e-05, 3.091699999999836e-05, 3.095800000000454e-05, 3.09300000000054e-05, 3.093099999999793e-05, 3.097199999999717e-05, 3.102800000000239e-05, 3.093099999999793e-05, 3.094400000000497e-05, 3.097199999999717e-05, 3.09449999999975e-05, 3.093099999999793e-05, 3.097200000000411e-05, 3.097299999999664e-05, 3.092999999999846e-05, 3.094399999999803e-05, 3.097200000000411e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.369" endtime="20201115 22:02:37.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.364" endtime="20201115 22:02:37.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.374" endtime="20201115 22:02:37.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.378" endtime="20201115 22:02:37.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.376" endtime="20201115 22:02:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.372" endtime="20201115 22:02:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:36.980" endtime="20201115 22:02:37.399"></status>
</kw>
<msg timestamp="20201115 22:02:37.399" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.408" endtime="20201115 22:02:37.448"></status>
</kw>
<msg timestamp="20201115 22:02:37.448" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.407" endtime="20201115 22:02:37.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.451" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.449" endtime="20201115 22:02:37.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.452" endtime="20201115 22:02:37.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.404" endtime="20201115 22:02:37.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.402" endtime="20201115 22:02:37.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.463" endtime="20201115 22:02:37.749"></status>
</kw>
<msg timestamp="20201115 22:02:37.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.461" endtime="20201115 22:02:37.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:37.753" endtime="20201115 22:02:37.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.762" endtime="20201115 22:02:37.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.458" endtime="20201115 22:02:37.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.456" endtime="20201115 22:02:37.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:37.769" level="INFO">${RESULT} = [{'time': 0.023349972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.098600000000021e-05, 'source_diff': 3.098600000000021e-05}, {'time': 0.023924764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:37.765" endtime="20201115 22:02:37.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:37.784" level="INFO">${OVERHEAD} = {'source_diff': [3.098600000000021e-05, 3.095800000000107e-05, 3.095800000000107e-05, 3.098600000000021e-05, 3.094399999999803e-05, 3.095899999999707e-05, 3.097200000000064e-05, 3.095900000000054e-05,...</msg>
<status status="PASS" starttime="20201115 22:02:37.770" endtime="20201115 22:02:37.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.790" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:02:37.789" endtime="20201115 22:02:37.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.794" level="INFO">VALUE: [3.098600000000021e-05, 3.095800000000107e-05, 3.095800000000107e-05, 3.098600000000021e-05, 3.094399999999803e-05, 3.095899999999707e-05, 3.097200000000064e-05, 3.095900000000054e-05, 3.095900000000054e-05, 3.102700000000291e-05, 3.09449999999975e-05, 3.09579999999976e-05, 3.097300000000011e-05, 3.097200000000064e-05, 3.094399999999803e-05, 3.095800000000454e-05, 3.097200000000411e-05, 3.097200000000411e-05, 3.09579999999976e-05, 3.091699999999836e-05, 3.097200000000411e-05, 3.097199999999717e-05, 3.095899999999707e-05, 3.097199999999717e-05, 3.094399999999803e-05, 3.095899999999707e-05, 3.09579999999976e-05, 3.09579999999976e-05, 3.098600000000368e-05, 3.09579999999976e-05, 3.094399999999803e-05, 3.095899999999707e-05, 3.097299999999664e-05, 3.097299999999664e-05, 3.09579999999976e-05, 3.097200000000411e-05, 3.102700000000291e-05, 3.094399999999803e-05, 3.095800000000454e-05, 3.097199999999717e-05, 3.097200000000411e-05, 3.098700000000315e-05, 3.097299999999664e-05, 3.097299999999664e-05, 3.097200000000411e-05, 3.09579999999976e-05, 3.093099999999793e-05, 3.095899999999707e-05, 3.097199999999717e-05, 3.098600000000368e-05]</msg>
<status status="PASS" starttime="20201115 22:02:37.792" endtime="20201115 22:02:37.795"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.785" endtime="20201115 22:02:37.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.798" endtime="20201115 22:02:37.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.803" endtime="20201115 22:02:37.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.801" endtime="20201115 22:02:37.823"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.796" endtime="20201115 22:02:37.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.399" endtime="20201115 22:02:37.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.720" endtime="20201115 22:02:37.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:35.719" endtime="20201115 22:02:37.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:47.032" endtime="20201115 22:02:37.825"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.830" endtime="20201115 22:02:37.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.828" endtime="20201115 22:02:37.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.827" endtime="20201115 22:02:37.850"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:01:46.961" endtime="20201115 22:02:37.851" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:37.861" endtime="20201115 22:02:37.881"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.860" endtime="20201115 22:02:37.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.897" endtime="20201115 22:02:37.912"></status>
</kw>
<msg timestamp="20201115 22:02:37.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.895" endtime="20201115 22:02:37.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.914" endtime="20201115 22:02:37.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.918" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:02:37.916" endtime="20201115 22:02:37.919"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:37.892" endtime="20201115 22:02:37.919"></status>
</kw>
<status status="FAIL" starttime="20201115 22:02:37.889" endtime="20201115 22:02:37.920"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.887" endtime="20201115 22:02:37.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:02:37.924" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:02:37.923" endtime="20201115 22:02:37.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.921" endtime="20201115 22:02:37.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.886" endtime="20201115 22:02:37.925"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.885" endtime="20201115 22:02:37.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.926" endtime="20201115 22:02:37.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.884" endtime="20201115 22:02:37.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.882" endtime="20201115 22:02:37.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.858" endtime="20201115 22:02:37.929"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.933" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.943" endtime="20201115 22:02:37.959"></status>
</kw>
<msg timestamp="20201115 22:02:37.960" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.941" endtime="20201115 22:02:37.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:37.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:37.961" endtime="20201115 22:02:37.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.964" endtime="20201115 22:02:37.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.938" endtime="20201115 22:02:37.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.936" endtime="20201115 22:02:37.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:37.974" endtime="20201115 22:02:38.262"></status>
</kw>
<msg timestamp="20201115 22:02:38.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074041, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074043306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:37.972" endtime="20201115 22:02:38.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074041, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074043306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:38.266" endtime="20201115 22:02:38.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.274" endtime="20201115 22:02:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.969" endtime="20201115 22:02:38.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.967" endtime="20201115 22:02:38.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.281" level="INFO">${RESULT} = [{'time': 0.074043306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3060000000074687e-06, 'source_diff': 2.3060000000074687e-06}, {'time': 0.074165972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:38.277" endtime="20201115 22:02:38.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.294" level="INFO">${OVERHEAD} = {'source_diff': [2.3060000000074687e-06, 2.277999999994451e-06, 2.3619999999918706e-06, 2.305000000007995e-06, 2.3049999999941173e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.305000000007995e-0...</msg>
<status status="PASS" starttime="20201115 22:02:38.282" endtime="20201115 22:02:38.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.299" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:38.298" endtime="20201115 22:02:38.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.301" level="INFO">VALUE: [2.3060000000074687e-06, 2.277999999994451e-06, 2.3619999999918706e-06, 2.305000000007995e-06, 2.3049999999941173e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.305000000007995e-06, 2.3200000000000998e-06, 2.2909999999876085e-06, 2.29200000000096e-06, 2.2359999999888025e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.2769999999949775e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.3339999999927308e-06, 2.305999999993591e-06, 2.2910000000014863e-06, 2.305000000007995e-06, 2.277999999994451e-06, 2.3060000000074687e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.305999999993591e-06, 2.250000000009189e-06, 2.3049999999941173e-06, 2.2910000000014863e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.305999999993591e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.2910000000014863e-06, 2.2499999999953113e-06, 2.305999999993591e-06, 2.305999999993591e-06, 2.2080000000035405e-06, 2.2499999999953113e-06, 2.346999999999766e-06, 2.3049999999941173e-06, 2.2910000000014863e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.300" endtime="20201115 22:02:38.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.295" endtime="20201115 22:02:38.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.305" endtime="20201115 22:02:38.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.308" endtime="20201115 22:02:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.306" endtime="20201115 22:02:38.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.303" endtime="20201115 22:02:38.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.933" endtime="20201115 22:02:38.329"></status>
</kw>
<msg timestamp="20201115 22:02:38.329" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.338" endtime="20201115 22:02:38.354"></status>
</kw>
<msg timestamp="20201115 22:02:38.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.337" endtime="20201115 22:02:38.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.356" endtime="20201115 22:02:38.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.358" endtime="20201115 22:02:38.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.334" endtime="20201115 22:02:38.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.332" endtime="20201115 22:02:38.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.367" endtime="20201115 22:02:38.655"></status>
</kw>
<msg timestamp="20201115 22:02:38.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:38.366" endtime="20201115 22:02:38.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:38.659" endtime="20201115 22:02:38.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.667" endtime="20201115 22:02:38.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.363" endtime="20201115 22:02:38.669"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.361" endtime="20201115 22:02:38.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:38.674" level="INFO">${RESULT} = [{'time': 0.02272575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.022841764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:02:38.670" endtime="20201115 22:02:38.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:38.687" level="INFO">${OVERHEAD} = {'source_diff': [2.2779999999979206e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2779999999979206e-06, 2.235999999999211e-06, 2.319000000000626e-06, 2...</msg>
<status status="PASS" starttime="20201115 22:02:38.675" endtime="20201115 22:02:38.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.692" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:38.691" endtime="20201115 22:02:38.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.694" level="INFO">VALUE: [2.2779999999979206e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2779999999979206e-06, 2.235999999999211e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2639999999983507e-06, 2.26400000000182e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.27800000000139e-06, 2.290999999998017e-06, 2.2499999999987808e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.27800000000139e-06, 2.2919999999974905e-06, 2.30600000000053e-06, 2.290999999998017e-06, 2.27800000000139e-06, 2.276999999998447e-06, 2.2779999999979206e-06, 2.26400000000182e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.221999999999641e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.3339999999996697e-06, 2.2499999999987808e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.3059999999970604e-06, 2.29200000000096e-06, 2.2919999999974905e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.276999999998447e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.305000000001056e-06]</msg>
<status status="PASS" starttime="20201115 22:02:38.693" endtime="20201115 22:02:38.695"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.688" endtime="20201115 22:02:38.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.698" endtime="20201115 22:02:38.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:38.701" endtime="20201115 22:02:38.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.700" endtime="20201115 22:02:38.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.696" endtime="20201115 22:02:38.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.330" endtime="20201115 22:02:38.722"></status>
</kw>
<msg timestamp="20201115 22:02:38.722" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.731" endtime="20201115 22:02:38.747"></status>
</kw>
<msg timestamp="20201115 22:02:38.748" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.729" endtime="20201115 22:02:38.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:38.750" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:38.749" endtime="20201115 22:02:38.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.752" endtime="20201115 22:02:38.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.727" endtime="20201115 22:02:38.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.725" endtime="20201115 22:02:38.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:38.761" endtime="20201115 22:02:39.047"></status>
</kw>
<msg timestamp="20201115 22:02:39.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:38.759" endtime="20201115 22:02:39.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.051" endtime="20201115 22:02:39.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.060" endtime="20201115 22:02:39.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.756" endtime="20201115 22:02:39.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.755" endtime="20201115 22:02:39.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.066" level="INFO">${RESULT} = [{'time': 0.022490764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.022604111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:39.063" endtime="20201115 22:02:39.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.079" level="INFO">${OVERHEAD} = {'source_diff': [2.29200000000096e-06, 2.2779999999979206e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.2919999999974905e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:39.067" endtime="20201115 22:02:39.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.084" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:39.083" endtime="20201115 22:02:39.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.087" level="INFO">VALUE: [2.29200000000096e-06, 2.2779999999979206e-06, 2.319000000000626e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.26400000000182e-06, 2.2919999999974905e-06, 2.360999999999336e-06, 2.29200000000096e-06, 2.3049999999975868e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.2910000000014863e-06, 2.290999999998017e-06, 2.30600000000053e-06, 2.235999999999211e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.3470000000032354e-06, 2.2910000000014863e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.27800000000139e-06, 2.3059999999970604e-06, 2.346999999999766e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.3470000000032354e-06, 2.221999999999641e-06, 2.3059999999970604e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.276999999998447e-06, 2.276999999998447e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.29200000000096e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.085" endtime="20201115 22:02:39.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.081" endtime="20201115 22:02:39.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.090" endtime="20201115 22:02:39.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.094" endtime="20201115 22:02:39.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.092" endtime="20201115 22:02:39.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.088" endtime="20201115 22:02:39.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:38.723" endtime="20201115 22:02:39.114"></status>
</kw>
<msg timestamp="20201115 22:02:39.114" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.123" endtime="20201115 22:02:39.140"></status>
</kw>
<msg timestamp="20201115 22:02:39.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.122" endtime="20201115 22:02:39.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.141" endtime="20201115 22:02:39.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.144" endtime="20201115 22:02:39.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.119" endtime="20201115 22:02:39.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.117" endtime="20201115 22:02:39.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.153" endtime="20201115 22:02:39.442"></status>
</kw>
<msg timestamp="20201115 22:02:39.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.151" endtime="20201115 22:02:39.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022508597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.446" endtime="20201115 22:02:39.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.454" endtime="20201115 22:02:39.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.149" endtime="20201115 22:02:39.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.147" endtime="20201115 22:02:39.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.461" level="INFO">${RESULT} = [{'time': 0.022508597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.022630944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:39.457" endtime="20201115 22:02:39.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.474" level="INFO">${OVERHEAD} = {'source_diff': [2.26400000000182e-06, 2.2499999999987808e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.29200000000096e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:39.462" endtime="20201115 22:02:39.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.478" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:39.477" endtime="20201115 22:02:39.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.481" level="INFO">VALUE: [2.26400000000182e-06, 2.2499999999987808e-06, 2.2910000000014863e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.3200000000000998e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.305000000001056e-06, 2.2779999999979206e-06, 2.305000000001056e-06, 2.2369999999986845e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.2499999999987808e-06, 2.2779999999979206e-06, 2.2779999999979206e-06, 2.30600000000053e-06, 2.2910000000014863e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.305000000001056e-06, 2.29200000000096e-06, 2.2919999999974905e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.2779999999979206e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.2639999999983507e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.25000000000225e-06, 2.262999999998877e-06, 2.30600000000053e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.2910000000014863e-06, 2.319000000000626e-06, 2.30600000000053e-06, 2.27800000000139e-06, 2.3200000000000998e-06, 2.2770000000019164e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.479" endtime="20201115 22:02:39.482"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.475" endtime="20201115 22:02:39.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.485" endtime="20201115 22:02:39.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.488" endtime="20201115 22:02:39.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.486" endtime="20201115 22:02:39.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.483" endtime="20201115 22:02:39.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.115" endtime="20201115 22:02:39.509"></status>
</kw>
<msg timestamp="20201115 22:02:39.509" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.518" endtime="20201115 22:02:39.535"></status>
</kw>
<msg timestamp="20201115 22:02:39.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.516" endtime="20201115 22:02:39.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.538" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.536" endtime="20201115 22:02:39.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.539" endtime="20201115 22:02:39.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.514" endtime="20201115 22:02:39.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.512" endtime="20201115 22:02:39.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.548" endtime="20201115 22:02:39.834"></status>
</kw>
<msg timestamp="20201115 22:02:39.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.546" endtime="20201115 22:02:39.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.839" endtime="20201115 22:02:39.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.847" endtime="20201115 22:02:39.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.543" endtime="20201115 22:02:39.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.542" endtime="20201115 22:02:39.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:39.854" level="INFO">${RESULT} = [{'time': 0.022535931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2369999999986845e-06, 'source_diff': 2.2369999999986845e-06}, {'time': 0.022658778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:39.851" endtime="20201115 22:02:39.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:39.867" level="INFO">${OVERHEAD} = {'source_diff': [2.2369999999986845e-06, 2.27800000000139e-06, 2.305000000001056e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2...</msg>
<status status="PASS" starttime="20201115 22:02:39.855" endtime="20201115 22:02:39.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.872" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:02:39.871" endtime="20201115 22:02:39.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.874" level="INFO">VALUE: [2.2369999999986845e-06, 2.27800000000139e-06, 2.305000000001056e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.290999999998017e-06, 2.29200000000096e-06, 2.2919999999974905e-06, 2.3059999999970604e-06, 2.221999999999641e-06, 2.333000000000196e-06, 2.2779999999979206e-06, 2.29200000000096e-06, 2.333000000000196e-06, 2.2910000000014863e-06, 2.2779999999979206e-06, 2.2770000000019164e-06, 2.29200000000096e-06, 2.2779999999979206e-06, 2.27800000000139e-06, 2.2639999999983507e-06, 2.27800000000139e-06, 2.305000000001056e-06, 2.235999999999211e-06, 2.2639999999983507e-06, 2.276999999998447e-06, 2.27800000000139e-06, 2.305000000001056e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.27800000000139e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.2919999999974905e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.290999999998017e-06, 2.2910000000014863e-06, 2.30600000000053e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.25000000000225e-06, 2.2910000000014863e-06, 2.360999999999336e-06, 2.2919999999974905e-06, 2.2919999999974905e-06]</msg>
<status status="PASS" starttime="20201115 22:02:39.873" endtime="20201115 22:02:39.875"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.868" endtime="20201115 22:02:39.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.878" endtime="20201115 22:02:39.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:39.881" endtime="20201115 22:02:39.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.880" endtime="20201115 22:02:39.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.876" endtime="20201115 22:02:39.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.510" endtime="20201115 22:02:39.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.932" endtime="20201115 22:02:39.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.931" endtime="20201115 22:02:39.903"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.905" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.914" endtime="20201115 22:02:39.930"></status>
</kw>
<msg timestamp="20201115 22:02:39.930" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.912" endtime="20201115 22:02:39.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:39.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:39.932" endtime="20201115 22:02:39.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.934" endtime="20201115 22:02:39.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.909" endtime="20201115 22:02:39.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.907" endtime="20201115 22:02:39.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:39.943" endtime="20201115 22:02:40.230"></status>
</kw>
<msg timestamp="20201115 22:02:40.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025135319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:39.942" endtime="20201115 22:02:40.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025135319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.234" endtime="20201115 22:02:40.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.243" endtime="20201115 22:02:40.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.939" endtime="20201115 22:02:40.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.937" endtime="20201115 22:02:40.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.249" level="INFO">${RESULT} = [{'time': 0.025135319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.025265806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.246" endtime="20201115 22:02:40.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.263" level="INFO">${OVERHEAD} = {'source_diff': [2.526999999998697e-06, 2.6119999999990595e-06, 2.5839999999999197e-06, 2.569000000000876e-06, 2.5559999999973104e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.583000000000446e...</msg>
<status status="PASS" starttime="20201115 22:02:40.250" endtime="20201115 22:02:40.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.267" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:40.266" endtime="20201115 22:02:40.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.270" level="INFO">VALUE: [2.526999999998697e-06, 2.6119999999990595e-06, 2.5839999999999197e-06, 2.569000000000876e-06, 2.5559999999973104e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5700000000003498e-06, 2.5549999999978368e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5139999999986007e-06, 2.583000000000446e-06, 2.639000000002195e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.54200000000121e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.5839999999999197e-06, 2.55600000000078e-06, 2.54200000000121e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.6119999999990595e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.540999999998267e-06, 2.5550000000013062e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.5700000000003498e-06, 2.569000000000876e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.5839999999999197e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.268" endtime="20201115 22:02:40.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.264" endtime="20201115 22:02:40.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.273" endtime="20201115 22:02:40.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.277" endtime="20201115 22:02:40.296"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.275" endtime="20201115 22:02:40.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.272" endtime="20201115 22:02:40.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.905" endtime="20201115 22:02:40.297"></status>
</kw>
<msg timestamp="20201115 22:02:40.298" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.306" endtime="20201115 22:02:40.323"></status>
</kw>
<msg timestamp="20201115 22:02:40.324" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.305" endtime="20201115 22:02:40.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.326" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.325" endtime="20201115 22:02:40.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.327" endtime="20201115 22:02:40.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.302" endtime="20201115 22:02:40.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.300" endtime="20201115 22:02:40.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.337" endtime="20201115 22:02:40.623"></status>
</kw>
<msg timestamp="20201115 22:02:40.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.335" endtime="20201115 22:02:40.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.627" endtime="20201115 22:02:40.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.635" endtime="20201115 22:02:40.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.332" endtime="20201115 22:02:40.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.331" endtime="20201115 22:02:40.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:40.642" level="INFO">${RESULT} = [{'time': 0.022463472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.022587264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:40.638" endtime="20201115 22:02:40.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:40.655" level="INFO">${OVERHEAD} = {'source_diff': [2.583000000000446e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.55600000000078e-06, 2.5839999999999197e...</msg>
<status status="PASS" starttime="20201115 22:02:40.643" endtime="20201115 22:02:40.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.660" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:40.659" endtime="20201115 22:02:40.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.662" level="INFO">VALUE: [2.583000000000446e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.55600000000078e-06, 2.5839999999999197e-06, 2.5410000000017363e-06, 2.54200000000121e-06, 2.5839999999999197e-06, 2.6529999999982956e-06, 2.5689999999974067e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.610999999999586e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.5689999999974067e-06, 2.5550000000013062e-06, 2.6250000000026252e-06, 2.5979999999994896e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.51400000000207e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.610999999999586e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.583000000000446e-06, 2.54200000000121e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.5550000000013062e-06, 2.5839999999999197e-06]</msg>
<status status="PASS" starttime="20201115 22:02:40.661" endtime="20201115 22:02:40.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.656" endtime="20201115 22:02:40.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.665" endtime="20201115 22:02:40.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:40.669" endtime="20201115 22:02:40.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.667" endtime="20201115 22:02:40.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.664" endtime="20201115 22:02:40.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.298" endtime="20201115 22:02:40.690"></status>
</kw>
<msg timestamp="20201115 22:02:40.690" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.699" endtime="20201115 22:02:40.715"></status>
</kw>
<msg timestamp="20201115 22:02:40.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.697" endtime="20201115 22:02:40.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:40.718" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:40.717" endtime="20201115 22:02:40.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.719" endtime="20201115 22:02:40.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.695" endtime="20201115 22:02:40.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.693" endtime="20201115 22:02:40.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:40.728" endtime="20201115 22:02:41.016"></status>
</kw>
<msg timestamp="20201115 22:02:41.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:40.727" endtime="20201115 22:02:41.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.020" endtime="20201115 22:02:41.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.028" endtime="20201115 22:02:41.030"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.724" endtime="20201115 22:02:41.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.722" endtime="20201115 22:02:41.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.035" level="INFO">${RESULT} = [{'time': 0.022531611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.022652736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.032" endtime="20201115 22:02:41.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.049" level="INFO">${OVERHEAD} = {'source_diff': [2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.6249999999991558e-0...</msg>
<status status="PASS" starttime="20201115 22:02:41.037" endtime="20201115 22:02:41.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.053" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:41.052" endtime="20201115 22:02:41.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.056" level="INFO">VALUE: [2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.6249999999991558e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5700000000003498e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.5559999999973104e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.55600000000078e-06, 2.5839999999999197e-06, 2.5139999999986007e-06, 2.6520000000022914e-06, 2.6389999999987257e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5700000000003498e-06, 2.5550000000013062e-06, 2.5839999999999197e-06, 2.610999999999586e-06, 2.5700000000003498e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.5689999999974067e-06, 2.5000000000025002e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.55600000000078e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.054" endtime="20201115 22:02:41.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.050" endtime="20201115 22:02:41.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.059" endtime="20201115 22:02:41.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.062" endtime="20201115 22:02:41.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.061" endtime="20201115 22:02:41.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.057" endtime="20201115 22:02:41.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:40.690" endtime="20201115 22:02:41.083"></status>
</kw>
<msg timestamp="20201115 22:02:41.083" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.092" endtime="20201115 22:02:41.109"></status>
</kw>
<msg timestamp="20201115 22:02:41.109" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.091" endtime="20201115 22:02:41.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.110" endtime="20201115 22:02:41.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.113" endtime="20201115 22:02:41.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.088" endtime="20201115 22:02:41.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.086" endtime="20201115 22:02:41.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.122" endtime="20201115 22:02:41.408"></status>
</kw>
<msg timestamp="20201115 22:02:41.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.120" endtime="20201115 22:02:41.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.412" endtime="20201115 22:02:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.421" endtime="20201115 22:02:41.422"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.118" endtime="20201115 22:02:41.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.116" endtime="20201115 22:02:41.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.427" level="INFO">${RESULT} = [{'time': 0.022660028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.022784306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:41.424" endtime="20201115 22:02:41.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.441" level="INFO">${OVERHEAD} = {'source_diff': [2.5839999999999197e-06, 2.5839999999999197e-06, 2.5699999999968803e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.5839999999999197e-06, 2.583000000000446...</msg>
<status status="PASS" starttime="20201115 22:02:41.428" endtime="20201115 22:02:41.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.445" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:41.444" endtime="20201115 22:02:41.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.448" level="INFO">VALUE: [2.5839999999999197e-06, 2.5839999999999197e-06, 2.5699999999968803e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5689999999974067e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.5839999999999197e-06, 2.5829999999969766e-06, 2.5410000000017363e-06, 2.5839999999999197e-06, 2.5979999999994896e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5829999999969766e-06, 2.569000000000876e-06, 2.5689999999974067e-06, 2.4999999999990308e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5979999999994896e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.54200000000121e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.583000000000446e-06, 2.583000000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.446" endtime="20201115 22:02:41.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.442" endtime="20201115 22:02:41.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.451" endtime="20201115 22:02:41.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.454" endtime="20201115 22:02:41.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.453" endtime="20201115 22:02:41.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.449" endtime="20201115 22:02:41.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.084" endtime="20201115 22:02:41.475"></status>
</kw>
<msg timestamp="20201115 22:02:41.475" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.484" endtime="20201115 22:02:41.501"></status>
</kw>
<msg timestamp="20201115 22:02:41.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.482" endtime="20201115 22:02:41.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.502" endtime="20201115 22:02:41.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.505" endtime="20201115 22:02:41.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.480" endtime="20201115 22:02:41.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.478" endtime="20201115 22:02:41.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.514" endtime="20201115 22:02:41.799"></status>
</kw>
<msg timestamp="20201115 22:02:41.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:41.512" endtime="20201115 22:02:41.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:41.804" endtime="20201115 22:02:41.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.812" endtime="20201115 22:02:41.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.510" endtime="20201115 22:02:41.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.508" endtime="20201115 22:02:41.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:41.819" level="INFO">${RESULT} = [{'time': 0.022471847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.022601278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:41.815" endtime="20201115 22:02:41.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:41.832" level="INFO">${OVERHEAD} = {'source_diff': [2.597000000000016e-06, 2.5700000000003498e-06, 2.569000000000876e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.6389999999987257e-06, 2.5839999999999197e...</msg>
<status status="PASS" starttime="20201115 22:02:41.820" endtime="20201115 22:02:41.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.837" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:02:41.836" endtime="20201115 22:02:41.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.839" level="INFO">VALUE: [2.597000000000016e-06, 2.5700000000003498e-06, 2.569000000000876e-06, 2.569000000000876e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.6389999999987257e-06, 2.5839999999999197e-06, 2.597000000000016e-06, 2.5549999999978368e-06, 2.5699999999968803e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.5700000000003498e-06, 2.569000000000876e-06, 2.5700000000003498e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.54200000000121e-06, 2.5829999999969766e-06, 2.5550000000013062e-06, 2.5829999999969766e-06, 2.597000000000016e-06, 2.597000000000016e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.6249999999991558e-06, 2.5979999999994896e-06, 2.5700000000003498e-06, 2.540999999998267e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.597000000000016e-06, 2.583000000000446e-06, 2.5829999999969766e-06, 2.51400000000207e-06, 2.597000000000016e-06, 2.5839999999999197e-06, 2.583000000000446e-06, 2.569000000000876e-06, 2.569000000000876e-06, 2.5550000000013062e-06, 2.5839999999999197e-06, 2.5700000000003498e-06, 2.5839999999999197e-06, 2.540999999998267e-06]</msg>
<status status="PASS" starttime="20201115 22:02:41.838" endtime="20201115 22:02:41.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.833" endtime="20201115 22:02:41.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.842" endtime="20201115 22:02:41.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:41.846" endtime="20201115 22:02:41.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.844" endtime="20201115 22:02:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.841" endtime="20201115 22:02:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.476" endtime="20201115 22:02:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.904" endtime="20201115 22:02:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:39.903" endtime="20201115 22:02:41.867"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.869" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.878" endtime="20201115 22:02:41.895"></status>
</kw>
<msg timestamp="20201115 22:02:41.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.876" endtime="20201115 22:02:41.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:41.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:41.897" endtime="20201115 22:02:41.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.899" endtime="20201115 22:02:41.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.874" endtime="20201115 22:02:41.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.872" endtime="20201115 22:02:41.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:41.909" endtime="20201115 22:02:42.194"></status>
</kw>
<msg timestamp="20201115 22:02:42.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024747403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024750278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:41.907" endtime="20201115 22:02:42.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024747403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024750278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.199" endtime="20201115 22:02:42.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.207" endtime="20201115 22:02:42.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.904" endtime="20201115 22:02:42.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.903" endtime="20201115 22:02:42.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.214" level="INFO">${RESULT} = [{'time': 0.024750278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.024887014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.210" endtime="20201115 22:02:42.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.227" level="INFO">${OVERHEAD} = {'source_diff': [2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.944000000001251e-06, 2.874999999999406e-06, 2.860999999999836e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:42.215" endtime="20201115 22:02:42.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.232" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.231" endtime="20201115 22:02:42.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.234" level="INFO">VALUE: [2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.944000000001251e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.8889999999989757e-06, 2.9449999999972554e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.8059999999975604e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.9029999999985456e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8340000000001697e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.233" endtime="20201115 22:02:42.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.228" endtime="20201115 22:02:42.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.237" endtime="20201115 22:02:42.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.241" endtime="20201115 22:02:42.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.239" endtime="20201115 22:02:42.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.235" endtime="20201115 22:02:42.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.870" endtime="20201115 22:02:42.262"></status>
</kw>
<msg timestamp="20201115 22:02:42.262" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.271" endtime="20201115 22:02:42.288"></status>
</kw>
<msg timestamp="20201115 22:02:42.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.269" endtime="20201115 22:02:42.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.289" endtime="20201115 22:02:42.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.292" endtime="20201115 22:02:42.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.266" endtime="20201115 22:02:42.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.264" endtime="20201115 22:02:42.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.301" endtime="20201115 22:02:42.588"></status>
</kw>
<msg timestamp="20201115 22:02:42.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.300" endtime="20201115 22:02:42.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.593" endtime="20201115 22:02:42.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.601" endtime="20201115 22:02:42.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.297" endtime="20201115 22:02:42.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.295" endtime="20201115 22:02:42.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:42.607" level="INFO">${RESULT} = [{'time': 0.022668778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.022808861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:42.604" endtime="20201115 22:02:42.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:42.621" level="INFO">${OVERHEAD} = {'source_diff': [2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.903000000002015e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:42.608" endtime="20201115 22:02:42.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.625" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:42.624" endtime="20201115 22:02:42.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.627" level="INFO">VALUE: [2.874999999999406e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.80600000000103e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.903000000002015e-06, 2.8889999999989757e-06, 2.889000000002445e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8329999999972266e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8610000000033053e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8610000000033053e-06, 2.915999999998642e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.819000000001126e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.819000000001126e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.887999999999502e-06, 2.889000000002445e-06, 2.874999999999406e-06]</msg>
<status status="PASS" starttime="20201115 22:02:42.626" endtime="20201115 22:02:42.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.622" endtime="20201115 22:02:42.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.631" endtime="20201115 22:02:42.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:42.634" endtime="20201115 22:02:42.653"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.633" endtime="20201115 22:02:42.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.629" endtime="20201115 22:02:42.654"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.262" endtime="20201115 22:02:42.655"></status>
</kw>
<msg timestamp="20201115 22:02:42.655" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.666" endtime="20201115 22:02:42.683"></status>
</kw>
<msg timestamp="20201115 22:02:42.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.664" endtime="20201115 22:02:42.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.686" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:42.685" endtime="20201115 22:02:42.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.687" endtime="20201115 22:02:42.689"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.661" endtime="20201115 22:02:42.690"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.658" endtime="20201115 22:02:42.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.697" endtime="20201115 22:02:42.983"></status>
</kw>
<msg timestamp="20201115 22:02:42.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024672625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.695" endtime="20201115 22:02:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:42.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024669722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024672625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:42.987" endtime="20201115 22:02:42.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:42.995" endtime="20201115 22:02:42.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.693" endtime="20201115 22:02:42.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.691" endtime="20201115 22:02:42.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.002" level="INFO">${RESULT} = [{'time': 0.024672625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.024812528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:42.999" endtime="20201115 22:02:43.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.016" level="INFO">${OVERHEAD} = {'source_diff': [2.9029999999985456e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.80600000000103e-06, 2.860999999999836e-0...</msg>
<status status="PASS" starttime="20201115 22:02:43.003" endtime="20201115 22:02:43.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.020" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.019" endtime="20201115 22:02:43.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.023" level="INFO">VALUE: [2.9029999999985456e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.80600000000103e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.8750000000028753e-06, 2.8619999999993095e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.889000000002445e-06, 2.874999999999406e-06, 2.944000000001251e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.917000000001585e-06, 2.9309999999976855e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.8619999999993095e-06, 2.901999999999072e-06, 2.9160000000021113e-06, 2.833000000000696e-06, 2.887999999999502e-06, 2.8479999999997396e-06, 2.8889999999989757e-06, 2.915999999998642e-06, 2.8889999999989757e-06, 2.8889999999989757e-06, 2.847000000000266e-06, 2.903000000002015e-06, 2.80600000000103e-06, 2.8619999999993095e-06, 2.917000000001585e-06, 2.8889999999989757e-06, 2.8750000000063447e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.021" endtime="20201115 22:02:43.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.016" endtime="20201115 22:02:43.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.026" endtime="20201115 22:02:43.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.029" endtime="20201115 22:02:43.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.027" endtime="20201115 22:02:43.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.024" endtime="20201115 22:02:43.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:42.656" endtime="20201115 22:02:43.050"></status>
</kw>
<msg timestamp="20201115 22:02:43.050" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.059" endtime="20201115 22:02:43.076"></status>
</kw>
<msg timestamp="20201115 22:02:43.077" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.058" endtime="20201115 22:02:43.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.079" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.078" endtime="20201115 22:02:43.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.080" endtime="20201115 22:02:43.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.055" endtime="20201115 22:02:43.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.053" endtime="20201115 22:02:43.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.090" endtime="20201115 22:02:43.375"></status>
</kw>
<msg timestamp="20201115 22:02:43.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.088" endtime="20201115 22:02:43.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023036847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.380" endtime="20201115 22:02:43.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.388" endtime="20201115 22:02:43.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.085" endtime="20201115 22:02:43.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.084" endtime="20201115 22:02:43.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.395" level="INFO">${RESULT} = [{'time': 0.023039778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.023176653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.391" endtime="20201115 22:02:43.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.408" level="INFO">${OVERHEAD} = {'source_diff': [2.931000000001155e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8619999999993095e-...</msg>
<status status="PASS" starttime="20201115 22:02:43.396" endtime="20201115 22:02:43.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.413" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.412" endtime="20201115 22:02:43.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.415" level="INFO">VALUE: [2.931000000001155e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.903000000002015e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.945000000000725e-06, 2.8889999999989757e-06, 2.9160000000021113e-06, 2.847000000000266e-06, 2.860999999999836e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.833000000000696e-06, 2.860999999999836e-06, 2.8479999999997396e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.847000000000266e-06, 2.8619999999993095e-06, 2.958000000000821e-06, 2.804999999998087e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.9169999999981155e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.9439999999977817e-06, 2.901999999999072e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.860999999999836e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.887999999999502e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8889999999989757e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.414" endtime="20201115 22:02:43.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.409" endtime="20201115 22:02:43.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.419" endtime="20201115 22:02:43.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.423" endtime="20201115 22:02:43.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.421" endtime="20201115 22:02:43.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.417" endtime="20201115 22:02:43.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.051" endtime="20201115 22:02:43.444"></status>
</kw>
<msg timestamp="20201115 22:02:43.444" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.453" endtime="20201115 22:02:43.469"></status>
</kw>
<msg timestamp="20201115 22:02:43.469" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.451" endtime="20201115 22:02:43.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.472" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.471" endtime="20201115 22:02:43.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.473" endtime="20201115 22:02:43.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.448" endtime="20201115 22:02:43.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.446" endtime="20201115 22:02:43.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.482" endtime="20201115 22:02:43.769"></status>
</kw>
<msg timestamp="20201115 22:02:43.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.481" endtime="20201115 22:02:43.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.773" endtime="20201115 22:02:43.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.781" endtime="20201115 22:02:43.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.478" endtime="20201115 22:02:43.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.476" endtime="20201115 22:02:43.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:43.788" level="INFO">${RESULT} = [{'time': 0.022398778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.022536667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:43.785" endtime="20201115 22:02:43.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:43.801" level="INFO">${OVERHEAD} = {'source_diff': [2.903000000002015e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.8750000000028753e-06, 2.874999999999406e-06...</msg>
<status status="PASS" starttime="20201115 22:02:43.789" endtime="20201115 22:02:43.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.806" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:02:43.805" endtime="20201115 22:02:43.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.808" level="INFO">VALUE: [2.903000000002015e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.833000000000696e-06, 2.8750000000028753e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.9160000000021113e-06, 2.8750000000028753e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.901999999999072e-06, 2.874999999999406e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.931000000001155e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 2.887999999999502e-06, 2.860999999999836e-06, 2.944000000001251e-06, 2.847000000000266e-06, 2.8619999999993095e-06, 2.8889999999989757e-06, 2.8750000000028753e-06, 2.8619999999993095e-06, 2.8619999999993095e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.945000000000725e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.874999999999406e-06, 2.8750000000028753e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 2.860999999999836e-06, 2.874999999999406e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:43.807" endtime="20201115 22:02:43.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.802" endtime="20201115 22:02:43.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.812" endtime="20201115 22:02:43.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:43.815" endtime="20201115 22:02:43.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.814" endtime="20201115 22:02:43.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.810" endtime="20201115 22:02:43.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.444" endtime="20201115 22:02:43.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.868" endtime="20201115 22:02:43.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:41.867" endtime="20201115 22:02:43.836"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.839" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.848" endtime="20201115 22:02:43.865"></status>
</kw>
<msg timestamp="20201115 22:02:43.865" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.846" endtime="20201115 22:02:43.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:43.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:43.866" endtime="20201115 22:02:43.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.869" endtime="20201115 22:02:43.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.843" endtime="20201115 22:02:43.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.841" endtime="20201115 22:02:43.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:43.878" endtime="20201115 22:02:44.165"></status>
</kw>
<msg timestamp="20201115 22:02:44.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:43.876" endtime="20201115 22:02:44.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025049486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.170" endtime="20201115 22:02:44.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.178" endtime="20201115 22:02:44.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.874" endtime="20201115 22:02:44.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.872" endtime="20201115 22:02:44.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.184" level="INFO">${RESULT} = [{'time': 0.025052583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.025196833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.181" endtime="20201115 22:02:44.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.198" level="INFO">${OVERHEAD} = {'source_diff': [3.097000000000516e-06, 3.151999999999322e-06, 3.165999999998892e-06, 3.0840000000004197e-06, 3.181000000001405e-06, 3.167000000001835e-06, 3.153000000002265e-06, 3.167000000001835e-06...</msg>
<status status="PASS" starttime="20201115 22:02:44.185" endtime="20201115 22:02:44.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.202" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.201" endtime="20201115 22:02:44.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.205" level="INFO">VALUE: [3.097000000000516e-06, 3.151999999999322e-06, 3.165999999998892e-06, 3.0840000000004197e-06, 3.181000000001405e-06, 3.167000000001835e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.153000000002265e-06, 3.151999999999322e-06, 3.208000000001071e-06, 3.167000000001835e-06, 3.208000000001071e-06, 3.2219999999971716e-06, 3.181000000001405e-06, 3.111000000000086e-06, 3.1660000000023614e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1809999999979355e-06, 3.1520000000027915e-06, 3.181000000001405e-06, 3.1529999999987957e-06, 3.1800000000019313e-06, 3.181000000001405e-06, 3.179999999998462e-06, 3.208000000001071e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.111000000000086e-06, 3.1809999999979355e-06, 3.1669999999983656e-06, 3.165999999998892e-06, 3.1660000000023614e-06, 3.195000000000975e-06, 3.194000000001501e-06, 3.1669999999983656e-06, 3.1520000000027915e-06, 3.153000000002265e-06, 3.151999999999322e-06, 3.179999999998462e-06, 3.1800000000054007e-06, 3.179999999998462e-06, 3.2079999999976017e-06, 3.152000000006261e-06, 3.165999999998892e-06, 3.124999999999656e-06, 3.1670000000053045e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.203" endtime="20201115 22:02:44.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.199" endtime="20201115 22:02:44.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.208" endtime="20201115 22:02:44.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.212" endtime="20201115 22:02:44.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.210" endtime="20201115 22:02:44.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.207" endtime="20201115 22:02:44.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.839" endtime="20201115 22:02:44.233"></status>
</kw>
<msg timestamp="20201115 22:02:44.233" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.242" endtime="20201115 22:02:44.260"></status>
</kw>
<msg timestamp="20201115 22:02:44.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.240" endtime="20201115 22:02:44.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.261" endtime="20201115 22:02:44.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.264" endtime="20201115 22:02:44.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.237" endtime="20201115 22:02:44.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.235" endtime="20201115 22:02:44.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.273" endtime="20201115 22:02:44.560"></status>
</kw>
<msg timestamp="20201115 22:02:44.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.271" endtime="20201115 22:02:44.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.564" endtime="20201115 22:02:44.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.573" endtime="20201115 22:02:44.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.269" endtime="20201115 22:02:44.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.267" endtime="20201115 22:02:44.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.580" level="INFO">${RESULT} = [{'time': 0.022763167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.022909292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:44.576" endtime="20201115 22:02:44.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.593" level="INFO">${OVERHEAD} = {'source_diff': [3.153000000002265e-06, 3.2230000000001147e-06, 3.151999999999322e-06, 3.167000000001835e-06, 3.111000000000086e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.1660000000023614e-0...</msg>
<status status="PASS" starttime="20201115 22:02:44.581" endtime="20201115 22:02:44.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.598" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.597" endtime="20201115 22:02:44.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.601" level="INFO">VALUE: [3.153000000002265e-06, 3.2230000000001147e-06, 3.151999999999322e-06, 3.167000000001835e-06, 3.111000000000086e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.1660000000023614e-06, 3.1669999999983656e-06, 3.124999999999656e-06, 3.167000000001835e-06, 3.181000000001405e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.124999999999656e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.1800000000019313e-06, 3.1809999999979355e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.195000000000975e-06, 3.1669999999983656e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.208000000001071e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.1660000000023614e-06, 3.195000000000975e-06, 3.167000000001835e-06, 3.208000000001071e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.1800000000019313e-06, 3.1809999999979355e-06, 3.2079999999976017e-06, 3.1809999999979355e-06, 3.1800000000019313e-06, 3.208000000001071e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.153000000002265e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.599" endtime="20201115 22:02:44.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.595" endtime="20201115 22:02:44.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.604" endtime="20201115 22:02:44.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:44.607" endtime="20201115 22:02:44.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.606" endtime="20201115 22:02:44.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.602" endtime="20201115 22:02:44.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.233" endtime="20201115 22:02:44.628"></status>
</kw>
<msg timestamp="20201115 22:02:44.628" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.637" endtime="20201115 22:02:44.654"></status>
</kw>
<msg timestamp="20201115 22:02:44.655" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.636" endtime="20201115 22:02:44.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:44.656" endtime="20201115 22:02:44.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.658" endtime="20201115 22:02:44.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.633" endtime="20201115 22:02:44.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.631" endtime="20201115 22:02:44.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.667" endtime="20201115 22:02:44.954"></status>
</kw>
<msg timestamp="20201115 22:02:44.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.666" endtime="20201115 22:02:44.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:44.958" endtime="20201115 22:02:44.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.966" endtime="20201115 22:02:44.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.663" endtime="20201115 22:02:44.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.662" endtime="20201115 22:02:44.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:44.973" level="INFO">${RESULT} = [{'time': 0.022433417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.022576306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:44.970" endtime="20201115 22:02:44.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:44.987" level="INFO">${OVERHEAD} = {'source_diff': [3.1389999999992257e-06, 3.0979999999999897e-06, 3.2219999999971716e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.153000000002265e-...</msg>
<status status="PASS" starttime="20201115 22:02:44.975" endtime="20201115 22:02:44.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.991" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:44.990" endtime="20201115 22:02:44.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:44.994" level="INFO">VALUE: [3.1389999999992257e-06, 3.0979999999999897e-06, 3.2219999999971716e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.2090000000005448e-06, 3.1660000000023614e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.165999999998892e-06, 3.1809999999979355e-06, 3.181000000001405e-06, 3.0979999999999897e-06, 3.153000000002265e-06, 3.2090000000005448e-06, 3.111000000000086e-06, 3.179999999998462e-06, 3.1669999999983656e-06, 3.165999999998892e-06, 3.208000000001071e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.1809999999979355e-06, 3.1529999999987957e-06, 3.2230000000001147e-06, 3.1529999999987957e-06, 3.1660000000023614e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.1389999999992257e-06, 3.151999999999322e-06, 3.179999999998462e-06, 3.1529999999987957e-06, 3.2090000000005448e-06, 3.1669999999983656e-06, 3.1389999999992257e-06, 3.194000000001501e-06, 3.179999999998462e-06, 3.165999999998892e-06, 3.153000000002265e-06, 3.208000000001071e-06, 3.2230000000001147e-06, 3.1669999999983656e-06, 3.153000000002265e-06, 3.165999999998892e-06]</msg>
<status status="PASS" starttime="20201115 22:02:44.993" endtime="20201115 22:02:44.994"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.988" endtime="20201115 22:02:44.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:44.997" endtime="20201115 22:02:44.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.001" endtime="20201115 22:02:45.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.999" endtime="20201115 22:02:45.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.996" endtime="20201115 22:02:45.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:44.629" endtime="20201115 22:02:45.021"></status>
</kw>
<msg timestamp="20201115 22:02:45.022" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.030" endtime="20201115 22:02:45.049"></status>
</kw>
<msg timestamp="20201115 22:02:45.049" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.029" endtime="20201115 22:02:45.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.052" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.050" endtime="20201115 22:02:45.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.053" endtime="20201115 22:02:45.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.026" endtime="20201115 22:02:45.055"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.024" endtime="20201115 22:02:45.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.062" endtime="20201115 22:02:45.347"></status>
</kw>
<msg timestamp="20201115 22:02:45.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.060" endtime="20201115 22:02:45.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.352" endtime="20201115 22:02:45.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.360" endtime="20201115 22:02:45.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.058" endtime="20201115 22:02:45.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.056" endtime="20201115 22:02:45.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.367" level="INFO">${RESULT} = [{'time': 0.022374556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.022521611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:45.363" endtime="20201115 22:02:45.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.380" level="INFO">${OVERHEAD} = {'source_diff': [3.167000000001835e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.194000000001501e-06, 3.1669999999983656e-06, 3.1669999999983656e-...</msg>
<status status="PASS" starttime="20201115 22:02:45.368" endtime="20201115 22:02:45.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.385" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.384" endtime="20201115 22:02:45.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.387" level="INFO">VALUE: [3.167000000001835e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.194000000001501e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.153000000002265e-06, 3.151999999999322e-06, 3.1669999999983656e-06, 3.139000000002695e-06, 3.165999999998892e-06, 3.1660000000023614e-06, 3.2230000000001147e-06, 3.0840000000004197e-06, 3.167000000001835e-06, 3.165999999998892e-06, 3.2079999999976017e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.1529999999987957e-06, 3.179999999998462e-06, 3.167000000001835e-06, 3.1809999999979355e-06, 3.1660000000023614e-06, 3.1669999999983656e-06, 3.151999999999322e-06, 3.179999999998462e-06, 3.1389999999992257e-06, 3.165999999998892e-06, 3.222000000000641e-06, 3.1520000000027915e-06, 3.1660000000023614e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.1939999999980317e-06, 3.167000000001835e-06, 3.1669999999983656e-06, 3.236000000000211e-06, 3.179999999998462e-06, 3.124999999999656e-06, 3.195000000000975e-06, 3.165999999998892e-06, 3.167000000001835e-06, 3.179999999998462e-06, 3.151999999999322e-06, 3.1800000000019313e-06, 3.181000000001405e-06, 3.165999999998892e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.386" endtime="20201115 22:02:45.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.381" endtime="20201115 22:02:45.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.390" endtime="20201115 22:02:45.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.394" endtime="20201115 22:02:45.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.392" endtime="20201115 22:02:45.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.388" endtime="20201115 22:02:45.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.022" endtime="20201115 22:02:45.414"></status>
</kw>
<msg timestamp="20201115 22:02:45.415" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.424" endtime="20201115 22:02:45.441"></status>
</kw>
<msg timestamp="20201115 22:02:45.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.422" endtime="20201115 22:02:45.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.443" endtime="20201115 22:02:45.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.445" endtime="20201115 22:02:45.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.419" endtime="20201115 22:02:45.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.417" endtime="20201115 22:02:45.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.454" endtime="20201115 22:02:45.742"></status>
</kw>
<msg timestamp="20201115 22:02:45.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.453" endtime="20201115 22:02:45.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.747" endtime="20201115 22:02:45.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.755" endtime="20201115 22:02:45.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.450" endtime="20201115 22:02:45.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.448" endtime="20201115 22:02:45.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:45.762" level="INFO">${RESULT} = [{'time': 0.022613278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.022762625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:45.758" endtime="20201115 22:02:45.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:45.775" level="INFO">${OVERHEAD} = {'source_diff': [3.2090000000005448e-06, 3.167000000001835e-06, 3.1939999999980317e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.167000000001835e-06, 3.208000000001071e-0...</msg>
<status status="PASS" starttime="20201115 22:02:45.763" endtime="20201115 22:02:45.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.779" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:02:45.778" endtime="20201115 22:02:45.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.782" level="INFO">VALUE: [3.2090000000005448e-06, 3.167000000001835e-06, 3.1939999999980317e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.167000000001835e-06, 3.167000000001835e-06, 3.208000000001071e-06, 3.165999999998892e-06, 3.167000000001835e-06, 3.1529999999987957e-06, 3.151999999999322e-06, 3.1529999999987957e-06, 3.194000000001501e-06, 3.181000000001405e-06, 3.165999999998892e-06, 3.124999999999656e-06, 3.151999999999322e-06, 3.0979999999999897e-06, 3.167000000001835e-06, 3.153000000002265e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.151999999999322e-06, 3.151999999999322e-06, 3.167000000001835e-06, 3.179999999998462e-06, 3.153000000002265e-06, 3.1809999999979355e-06, 3.1800000000019313e-06, 3.153000000002265e-06, 3.222000000000641e-06, 3.2230000000001147e-06, 3.1389999999992257e-06, 3.1800000000019313e-06, 3.208000000001071e-06, 3.181000000001405e-06, 3.1529999999987957e-06, 3.1809999999979355e-06, 3.165999999998892e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.1669999999983656e-06, 3.2090000000005448e-06, 3.167000000001835e-06, 3.153000000002265e-06, 3.1660000000023614e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.2369999999996846e-06]</msg>
<status status="PASS" starttime="20201115 22:02:45.780" endtime="20201115 22:02:45.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.776" endtime="20201115 22:02:45.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.785" endtime="20201115 22:02:45.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:45.788" endtime="20201115 22:02:45.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.787" endtime="20201115 22:02:45.808"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.783" endtime="20201115 22:02:45.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.415" endtime="20201115 22:02:45.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.838" endtime="20201115 22:02:45.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:43.837" endtime="20201115 22:02:45.809"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.812" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.820" endtime="20201115 22:02:45.839"></status>
</kw>
<msg timestamp="20201115 22:02:45.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.819" endtime="20201115 22:02:45.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:45.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:45.841" endtime="20201115 22:02:45.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.843" endtime="20201115 22:02:45.845"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.816" endtime="20201115 22:02:45.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.814" endtime="20201115 22:02:45.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:45.853" endtime="20201115 22:02:46.139"></status>
</kw>
<msg timestamp="20201115 22:02:46.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:45.851" endtime="20201115 22:02:46.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025315431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.143" endtime="20201115 22:02:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.151" endtime="20201115 22:02:46.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.849" endtime="20201115 22:02:46.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.847" endtime="20201115 22:02:46.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.158" level="INFO">${RESULT} = [{'time': 0.025315431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.025476333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.155" endtime="20201115 22:02:46.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.171" level="INFO">${OVERHEAD} = {'source_diff': [3.4590000000007948e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4160000000026114e-06, 3.4579999999978517e-06, 3.472000000000891e-06, 3.4309999999981855e-06, 3.459000000000794...</msg>
<status status="PASS" starttime="20201115 22:02:46.159" endtime="20201115 22:02:46.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.176" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.175" endtime="20201115 22:02:46.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.178" level="INFO">VALUE: [3.4590000000007948e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4160000000026114e-06, 3.4579999999978517e-06, 3.472000000000891e-06, 3.4309999999981855e-06, 3.4590000000007948e-06, 3.4439999999982818e-06, 3.3890000000029452e-06, 3.429999999998712e-06, 3.4439999999982818e-06, 3.500000000000031e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.431000000001655e-06, 3.4589999999973253e-06, 3.4029999999990457e-06, 3.4309999999981855e-06, 3.458000000001321e-06, 3.429999999998712e-06, 3.4590000000007948e-06, 3.472000000000891e-06, 3.4449999999977554e-06, 3.4589999999973253e-06, 3.472000000000891e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.403000000002515e-06, 3.500000000000031e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.5139999999996008e-06, 3.4169999999986156e-06, 3.4580000000047906e-06, 3.4580000000047906e-06, 3.4719999999974216e-06, 3.4580000000047906e-06, 3.4580000000047906e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.4589999999973253e-06, 3.5000000000035003e-06, 3.4729999999968952e-06, 3.4719999999974216e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.177" endtime="20201115 22:02:46.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.172" endtime="20201115 22:02:46.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.181" endtime="20201115 22:02:46.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.185" endtime="20201115 22:02:46.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.183" endtime="20201115 22:02:46.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.180" endtime="20201115 22:02:46.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.812" endtime="20201115 22:02:46.205"></status>
</kw>
<msg timestamp="20201115 22:02:46.206" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.214" endtime="20201115 22:02:46.232"></status>
</kw>
<msg timestamp="20201115 22:02:46.233" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.213" endtime="20201115 22:02:46.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.234" endtime="20201115 22:02:46.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.237" endtime="20201115 22:02:46.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.210" endtime="20201115 22:02:46.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.208" endtime="20201115 22:02:46.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.246" endtime="20201115 22:02:46.532"></status>
</kw>
<msg timestamp="20201115 22:02:46.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.244" endtime="20201115 22:02:46.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.536" endtime="20201115 22:02:46.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.544" endtime="20201115 22:02:46.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.242" endtime="20201115 22:02:46.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.240" endtime="20201115 22:02:46.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.551" level="INFO">${RESULT} = [{'time': 0.022630681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.022788569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:46.548" endtime="20201115 22:02:46.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.564" level="INFO">${OVERHEAD} = {'source_diff': [3.4590000000007948e-06, 3.4440000000017512e-06, 3.500000000000031e-06, 3.4730000000003647e-06, 3.431000000001655e-06, 3.472000000000891e-06, 3.445000000001225e-06, 3.458000000001321e-...</msg>
<status status="PASS" starttime="20201115 22:02:46.552" endtime="20201115 22:02:46.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.569" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.568" endtime="20201115 22:02:46.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.571" level="INFO">VALUE: [3.4590000000007948e-06, 3.4440000000017512e-06, 3.500000000000031e-06, 3.4730000000003647e-06, 3.431000000001655e-06, 3.472000000000891e-06, 3.445000000001225e-06, 3.458000000001321e-06, 3.4719999999974216e-06, 3.486000000000461e-06, 3.52800000000264e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.5139999999996008e-06, 3.445000000001225e-06, 3.458000000001321e-06, 3.374999999999906e-06, 3.4589999999973253e-06, 3.472000000000891e-06, 3.4579999999978517e-06, 3.4439999999982818e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4440000000017512e-06, 3.4730000000003647e-06, 3.4590000000007948e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.5279999999991707e-06, 3.458000000001321e-06, 3.4730000000003647e-06, 3.472000000000891e-06, 3.4449999999977554e-06, 3.417000000002085e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.4579999999978517e-06, 3.445000000001225e-06, 3.445000000001225e-06, 3.458000000001321e-06, 3.5139999999996008e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4029999999990457e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.458000000001321e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.570" endtime="20201115 22:02:46.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.565" endtime="20201115 22:02:46.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.575" endtime="20201115 22:02:46.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.578" endtime="20201115 22:02:46.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.576" endtime="20201115 22:02:46.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.573" endtime="20201115 22:02:46.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.206" endtime="20201115 22:02:46.599"></status>
</kw>
<msg timestamp="20201115 22:02:46.599" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.609" endtime="20201115 22:02:46.627"></status>
</kw>
<msg timestamp="20201115 22:02:46.628" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.608" endtime="20201115 22:02:46.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.630" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:46.629" endtime="20201115 22:02:46.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.631" endtime="20201115 22:02:46.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.604" endtime="20201115 22:02:46.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.602" endtime="20201115 22:02:46.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.641" endtime="20201115 22:02:46.926"></status>
</kw>
<msg timestamp="20201115 22:02:46.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.639" endtime="20201115 22:02:46.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024381486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024384972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:46.931" endtime="20201115 22:02:46.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.939" endtime="20201115 22:02:46.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.636" endtime="20201115 22:02:46.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.635" endtime="20201115 22:02:46.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:46.945" level="INFO">${RESULT} = [{'time': 0.024384972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.024536014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:46.942" endtime="20201115 22:02:46.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:46.959" level="INFO">${OVERHEAD} = {'source_diff': [3.486000000000461e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.4449999999977554e-06, 3.5279999999991707e-06, 3.4579999999978517e-06, 3.459000000000794...</msg>
<status status="PASS" starttime="20201115 22:02:46.947" endtime="20201115 22:02:46.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.963" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:46.962" endtime="20201115 22:02:46.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:46.966" level="INFO">VALUE: [3.486000000000461e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.4449999999977554e-06, 3.5279999999991707e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.500000000000031e-06, 3.4590000000007948e-06, 3.4730000000003647e-06, 3.4169999999986156e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.5139999999996008e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.403000000002515e-06, 3.4589999999973253e-06, 3.4029999999990457e-06, 3.417000000002085e-06, 3.4579999999978517e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.417000000002085e-06, 3.429999999998712e-06, 3.4719999999974216e-06, 3.500000000000031e-06, 3.4589999999973253e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.445000000001225e-06, 3.4579999999978517e-06, 3.4439999999982818e-06, 3.4440000000017512e-06, 3.4439999999982818e-06, 3.4309999999981855e-06, 3.4590000000007948e-06, 3.445000000001225e-06, 3.4719999999974216e-06, 3.4449999999977554e-06, 3.4580000000047906e-06, 3.473000000003834e-06, 3.4719999999974216e-06, 3.4999999999965614e-06]</msg>
<status status="PASS" starttime="20201115 22:02:46.964" endtime="20201115 22:02:46.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.960" endtime="20201115 22:02:46.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:46.969" endtime="20201115 22:02:46.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:46.972" endtime="20201115 22:02:46.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.971" endtime="20201115 22:02:46.992"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.967" endtime="20201115 22:02:46.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.600" endtime="20201115 22:02:46.993"></status>
</kw>
<msg timestamp="20201115 22:02:46.994" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.003" endtime="20201115 22:02:47.022"></status>
</kw>
<msg timestamp="20201115 22:02:47.022" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.001" endtime="20201115 22:02:47.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.024" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.023" endtime="20201115 22:02:47.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.026" endtime="20201115 22:02:47.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.998" endtime="20201115 22:02:47.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.996" endtime="20201115 22:02:47.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.035" endtime="20201115 22:02:47.323"></status>
</kw>
<msg timestamp="20201115 22:02:47.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.033" endtime="20201115 22:02:47.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.327" endtime="20201115 22:02:47.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.335" endtime="20201115 22:02:47.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.031" endtime="20201115 22:02:47.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.029" endtime="20201115 22:02:47.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.342" level="INFO">${RESULT} = [{'time': 0.023375556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4589999999973253e-06, 'source_diff': 3.4589999999973253e-06}, {'time': 0.023528944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.338" endtime="20201115 22:02:47.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.355" level="INFO">${OVERHEAD} = {'source_diff': [3.4589999999973253e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.4439999999982818e-06, 3.486000000000461e-06, 3.4440000000017512e-06, 3.4579999999978517e-06, 3.457999999997851...</msg>
<status status="PASS" starttime="20201115 22:02:47.343" endtime="20201115 22:02:47.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.360" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.359" endtime="20201115 22:02:47.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.362" level="INFO">VALUE: [3.4589999999973253e-06, 3.4579999999978517e-06, 3.458000000001321e-06, 3.4439999999982818e-06, 3.486000000000461e-06, 3.4440000000017512e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.3889999999994758e-06, 3.458000000001321e-06, 3.4730000000003647e-06, 3.4590000000007948e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.472000000000891e-06, 3.4589999999973253e-06, 3.4439999999982818e-06, 3.4589999999973253e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.486000000000461e-06, 3.3889999999994758e-06, 3.458000000001321e-06, 3.5129999999966577e-06, 3.458000000001321e-06, 3.486000000000461e-06, 3.4590000000007948e-06, 3.4169999999986156e-06, 3.4590000000007948e-06, 3.458000000001321e-06, 3.500000000000031e-06, 3.4590000000007948e-06, 3.4579999999978517e-06, 3.4730000000003647e-06, 3.4309999999981855e-06, 3.458000000001321e-06, 3.4440000000017512e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.486000000000461e-06, 3.4440000000017512e-06, 3.458000000001321e-06, 3.4590000000007948e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.361" endtime="20201115 22:02:47.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.356" endtime="20201115 22:02:47.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.366" endtime="20201115 22:02:47.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.369" endtime="20201115 22:02:47.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.368" endtime="20201115 22:02:47.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.364" endtime="20201115 22:02:47.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:46.994" endtime="20201115 22:02:47.390"></status>
</kw>
<msg timestamp="20201115 22:02:47.390" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.399" endtime="20201115 22:02:47.417"></status>
</kw>
<msg timestamp="20201115 22:02:47.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.398" endtime="20201115 22:02:47.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.419" endtime="20201115 22:02:47.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.421" endtime="20201115 22:02:47.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.395" endtime="20201115 22:02:47.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.393" endtime="20201115 22:02:47.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.431" endtime="20201115 22:02:47.718"></status>
</kw>
<msg timestamp="20201115 22:02:47.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:47.429" endtime="20201115 22:02:47.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:47.722" endtime="20201115 22:02:47.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.730" endtime="20201115 22:02:47.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.426" endtime="20201115 22:02:47.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.425" endtime="20201115 22:02:47.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:47.737" level="INFO">${RESULT} = [{'time': 0.022685708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.022843611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:47.734" endtime="20201115 22:02:47.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:47.751" level="INFO">${OVERHEAD} = {'source_diff': [3.4579999999978517e-06, 3.4029999999990457e-06, 3.458000000001321e-06, 3.445000000001225e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.429999999998712e-06, 3.4730000000003647e...</msg>
<status status="PASS" starttime="20201115 22:02:47.738" endtime="20201115 22:02:47.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.755" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:02:47.754" endtime="20201115 22:02:47.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.757" level="INFO">VALUE: [3.4579999999978517e-06, 3.4029999999990457e-06, 3.458000000001321e-06, 3.445000000001225e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.429999999998712e-06, 3.4730000000003647e-06, 3.4590000000007948e-06, 3.4579999999978517e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.417000000002085e-06, 3.4589999999973253e-06, 3.458000000001321e-06, 3.4029999999990457e-06, 3.4439999999982818e-06, 3.458000000001321e-06, 3.458000000001321e-06, 3.374999999999906e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.4439999999982818e-06, 3.4440000000017512e-06, 3.4160000000026114e-06, 3.4439999999982818e-06, 3.3889999999994758e-06, 3.4440000000017512e-06, 3.458000000001321e-06, 3.4590000000007948e-06, 3.4590000000007948e-06, 3.4579999999978517e-06, 3.5279999999991707e-06, 3.4449999999977554e-06, 3.4589999999973253e-06, 3.431000000001655e-06, 3.429999999998712e-06, 3.4590000000007948e-06, 3.4590000000007948e-06, 3.4730000000003647e-06, 3.52800000000264e-06, 3.4440000000017512e-06, 3.472000000000891e-06, 3.458000000001321e-06, 3.513000000000127e-06, 3.458000000001321e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.4590000000007948e-06, 3.4590000000007948e-06]</msg>
<status status="PASS" starttime="20201115 22:02:47.756" endtime="20201115 22:02:47.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.751" endtime="20201115 22:02:47.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.761" endtime="20201115 22:02:47.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:47.765" endtime="20201115 22:02:47.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.763" endtime="20201115 22:02:47.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.760" endtime="20201115 22:02:47.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.391" endtime="20201115 22:02:47.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.810" endtime="20201115 22:02:47.785"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:45.810" endtime="20201115 22:02:47.786"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.788" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.797" endtime="20201115 22:02:47.816"></status>
</kw>
<msg timestamp="20201115 22:02:47.817" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.795" endtime="20201115 22:02:47.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:47.819" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:47.818" endtime="20201115 22:02:47.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.820" endtime="20201115 22:02:47.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.792" endtime="20201115 22:02:47.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.790" endtime="20201115 22:02:47.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:47.829" endtime="20201115 22:02:48.115"></status>
</kw>
<msg timestamp="20201115 22:02:48.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024990889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:47.828" endtime="20201115 22:02:48.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024990889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024994583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.120" endtime="20201115 22:02:48.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.128" endtime="20201115 22:02:48.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.825" endtime="20201115 22:02:48.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.823" endtime="20201115 22:02:48.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.134" level="INFO">${RESULT} = [{'time': 0.024994583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.025159167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:48.131" endtime="20201115 22:02:48.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.148" level="INFO">${OVERHEAD} = {'source_diff': [3.6940000000020012e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 3.736000000000711e-06, 3.722000000001141e-06, 3.736000000000711e-0...</msg>
<status status="PASS" starttime="20201115 22:02:48.135" endtime="20201115 22:02:48.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.152" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.151" endtime="20201115 22:02:48.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.155" level="INFO">VALUE: [3.6940000000020012e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 3.736000000000711e-06, 3.722000000001141e-06, 3.736000000000711e-06, 3.7219999999976716e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.679999999998962e-06, 3.7370000000001846e-06, 3.750000000000281e-06, 3.736999999996715e-06, 3.722000000001141e-06, 3.7370000000001846e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.6669999999988656e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.77800000000289e-06, 3.7359999999972415e-06, 3.7639999999963814e-06, 3.7499999999968114e-06, 3.7639999999963814e-06, 3.7499999999968114e-06, 3.723000000004084e-06, 3.7500000000037503e-06, 3.7500000000037503e-06, 3.7630000000038466e-06, 3.7769999999964776e-06, 3.7500000000037503e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.154" endtime="20201115 22:02:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.149" endtime="20201115 22:02:48.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.158" endtime="20201115 22:02:48.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.162" endtime="20201115 22:02:48.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.160" endtime="20201115 22:02:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.157" endtime="20201115 22:02:48.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.788" endtime="20201115 22:02:48.183"></status>
</kw>
<msg timestamp="20201115 22:02:48.183" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.192" endtime="20201115 22:02:48.211"></status>
</kw>
<msg timestamp="20201115 22:02:48.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.190" endtime="20201115 22:02:48.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.214" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.212" endtime="20201115 22:02:48.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.215" endtime="20201115 22:02:48.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.188" endtime="20201115 22:02:48.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.186" endtime="20201115 22:02:48.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.224" endtime="20201115 22:02:48.511"></status>
</kw>
<msg timestamp="20201115 22:02:48.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:48.222" endtime="20201115 22:02:48.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:48.515" endtime="20201115 22:02:48.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.523" endtime="20201115 22:02:48.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.220" endtime="20201115 22:02:48.526"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.218" endtime="20201115 22:02:48.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.530" level="INFO">${RESULT} = [{'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022692472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.527" endtime="20201115 22:02:48.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.543" level="INFO">${OVERHEAD} = {'source_diff': [3.763999999999851e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.7370000000001846e-...</msg>
<status status="PASS" starttime="20201115 22:02:48.531" endtime="20201115 22:02:48.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.553" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.552" endtime="20201115 22:02:48.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.556" level="INFO">VALUE: [3.763999999999851e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.750000000000281e-06, 3.7370000000001846e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.7219999999976716e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.6800000000024313e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.709000000001045e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.763000000000377e-06, 3.8059999999985605e-06, 3.763000000000377e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7359999999972415e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.695000000001475e-06, 3.736000000000711e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.554" endtime="20201115 22:02:48.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.549" endtime="20201115 22:02:48.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.559" endtime="20201115 22:02:48.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.562" endtime="20201115 22:02:48.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.561" endtime="20201115 22:02:48.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.557" endtime="20201115 22:02:48.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.183" endtime="20201115 22:02:48.583"></status>
</kw>
<msg timestamp="20201115 22:02:48.583" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.592" endtime="20201115 22:02:48.611"></status>
</kw>
<msg timestamp="20201115 22:02:48.611" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.590" endtime="20201115 22:02:48.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.614" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.612" endtime="20201115 22:02:48.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.615" endtime="20201115 22:02:48.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.588" endtime="20201115 22:02:48.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.586" endtime="20201115 22:02:48.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.624" endtime="20201115 22:02:48.912"></status>
</kw>
<msg timestamp="20201115 22:02:48.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.622" endtime="20201115 22:02:48.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:48.916" endtime="20201115 22:02:48.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.925" endtime="20201115 22:02:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.619" endtime="20201115 22:02:48.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.618" endtime="20201115 22:02:48.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:48.931" level="INFO">${RESULT} = [{'time': 0.022512986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.022676917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:48.928" endtime="20201115 22:02:48.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:48.945" level="INFO">${OVERHEAD} = {'source_diff': [3.679999999998962e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.790999999999517e-06...</msg>
<status status="PASS" starttime="20201115 22:02:48.933" endtime="20201115 22:02:48.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.949" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:48.948" endtime="20201115 22:02:48.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:48.952" level="INFO">VALUE: [3.679999999998962e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.790999999999517e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.722000000001141e-06, 3.763999999999851e-06, 3.7359999999972415e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.709000000001045e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7370000000001846e-06, 3.6949999999980054e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.693999999998532e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.7779999999994207e-06, 3.7499999999968114e-06, 3.763999999999851e-06, 3.736000000000711e-06, 3.818999999998657e-06, 3.6940000000020012e-06, 3.736000000000711e-06]</msg>
<status status="PASS" starttime="20201115 22:02:48.951" endtime="20201115 22:02:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.946" endtime="20201115 22:02:48.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.955" endtime="20201115 22:02:48.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:48.959" endtime="20201115 22:02:48.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.957" endtime="20201115 22:02:48.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.954" endtime="20201115 22:02:48.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.584" endtime="20201115 22:02:48.979"></status>
</kw>
<msg timestamp="20201115 22:02:48.979" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:48.988" endtime="20201115 22:02:49.008"></status>
</kw>
<msg timestamp="20201115 22:02:49.009" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:48.987" endtime="20201115 22:02:49.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.010" endtime="20201115 22:02:49.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.012" endtime="20201115 22:02:49.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.984" endtime="20201115 22:02:49.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.982" endtime="20201115 22:02:49.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.021" endtime="20201115 22:02:49.307"></status>
</kw>
<msg timestamp="20201115 22:02:49.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.020" endtime="20201115 22:02:49.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022762014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.311" endtime="20201115 22:02:49.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.319" endtime="20201115 22:02:49.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.017" endtime="20201115 22:02:49.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.015" endtime="20201115 22:02:49.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.326" level="INFO">${RESULT} = [{'time': 0.022765778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.022932014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.323" endtime="20201115 22:02:49.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.339" level="INFO">${OVERHEAD} = {'source_diff': [3.763999999999851e-06, 3.750000000000281e-06, 3.8199999999981304e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06...</msg>
<status status="PASS" starttime="20201115 22:02:49.327" endtime="20201115 22:02:49.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.344" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.343" endtime="20201115 22:02:49.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.346" level="INFO">VALUE: [3.763999999999851e-06, 3.750000000000281e-06, 3.8199999999981304e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.804999999999087e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.679999999998962e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.679999999998962e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.736000000000711e-06, 3.722000000001141e-06, 3.750000000000281e-06, 3.7499999999968114e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.345" endtime="20201115 22:02:49.347"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.340" endtime="20201115 22:02:49.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.349" endtime="20201115 22:02:49.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.353" endtime="20201115 22:02:49.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.351" endtime="20201115 22:02:49.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.348" endtime="20201115 22:02:49.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:48.980" endtime="20201115 22:02:49.374"></status>
</kw>
<msg timestamp="20201115 22:02:49.374" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.383" endtime="20201115 22:02:49.401"></status>
</kw>
<msg timestamp="20201115 22:02:49.401" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.381" endtime="20201115 22:02:49.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.402" endtime="20201115 22:02:49.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.405" endtime="20201115 22:02:49.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.379" endtime="20201115 22:02:49.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.376" endtime="20201115 22:02:49.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.414" endtime="20201115 22:02:49.701"></status>
</kw>
<msg timestamp="20201115 22:02:49.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.412" endtime="20201115 22:02:49.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.706" endtime="20201115 22:02:49.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.714" endtime="20201115 22:02:49.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.410" endtime="20201115 22:02:49.716"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.408" endtime="20201115 22:02:49.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:49.721" level="INFO">${RESULT} = [{'time': 0.022366708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.022533569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:49.717" endtime="20201115 22:02:49.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:49.734" level="INFO">${OVERHEAD} = {'source_diff': [3.804999999999087e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.681000000001905e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:49.722" endtime="20201115 22:02:49.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.738" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:02:49.737" endtime="20201115 22:02:49.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.741" level="INFO">VALUE: [3.804999999999087e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.681000000001905e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.818999999998657e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7919999999989906e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.819000000002126e-06, 3.7359999999972415e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.7919999999989906e-06, 3.7359999999972415e-06, 3.804999999999087e-06, 3.776999999999947e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.7359999999972415e-06, 3.736000000000711e-06, 3.8200000000016e-06, 3.750000000000281e-06, 3.6809999999984355e-06, 3.736000000000711e-06, 3.750000000000281e-06, 3.79200000000246e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.804999999999087e-06, 3.750000000000281e-06, 3.804999999999087e-06, 3.6940000000020012e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.750000000000281e-06, 3.736000000000711e-06, 3.790999999999517e-06]</msg>
<status status="PASS" starttime="20201115 22:02:49.739" endtime="20201115 22:02:49.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.735" endtime="20201115 22:02:49.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.744" endtime="20201115 22:02:49.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:49.747" endtime="20201115 22:02:49.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.746" endtime="20201115 22:02:49.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.742" endtime="20201115 22:02:49.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.374" endtime="20201115 22:02:49.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.787" endtime="20201115 22:02:49.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:47.786" endtime="20201115 22:02:49.769"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.771" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.780" endtime="20201115 22:02:49.799"></status>
</kw>
<msg timestamp="20201115 22:02:49.800" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.778" endtime="20201115 22:02:49.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:49.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:49.801" endtime="20201115 22:02:49.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.804" endtime="20201115 22:02:49.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.775" endtime="20201115 22:02:49.806"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.773" endtime="20201115 22:02:49.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:49.813" endtime="20201115 22:02:50.100"></status>
</kw>
<msg timestamp="20201115 22:02:50.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:49.812" endtime="20201115 22:02:50.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025128625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.104" endtime="20201115 22:02:50.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.112" endtime="20201115 22:02:50.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.809" endtime="20201115 22:02:50.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.807" endtime="20201115 22:02:50.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.119" level="INFO">${RESULT} = [{'time': 0.025128625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.025313736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:50.115" endtime="20201115 22:02:50.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.132" level="INFO">${OVERHEAD} = {'source_diff': [4.04200000000271e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.05600000000228e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.05600000000228e-06, 4...</msg>
<status status="PASS" starttime="20201115 22:02:50.120" endtime="20201115 22:02:50.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.137" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.136" endtime="20201115 22:02:50.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.139" level="INFO">VALUE: [4.04200000000271e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.05600000000228e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.05600000000228e-06, 4.054999999999337e-06, 4.027999999999671e-06, 4.05600000000228e-06, 4.082999999998477e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 3.972000000001391e-06, 4.04200000000271e-06, 4.097000000001516e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.0410000000032364e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.040999999999767e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.02800000000314e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.041999999995771e-06, 4.04200000000271e-06, 4.04200000000271e-06, 4.0410000000032364e-06, 4.02800000000314e-06, 4.04200000000271e-06, 4.04200000000271e-06, 4.04200000000271e-06, 4.013999999996631e-06, 4.055999999995341e-06, 4.0409999999962976e-06, 4.08400000000142e-06, 4.04200000000271e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.138" endtime="20201115 22:02:50.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.133" endtime="20201115 22:02:50.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.142" endtime="20201115 22:02:50.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.146" endtime="20201115 22:02:50.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.144" endtime="20201115 22:02:50.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.141" endtime="20201115 22:02:50.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.771" endtime="20201115 22:02:50.166"></status>
</kw>
<msg timestamp="20201115 22:02:50.166" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.175" endtime="20201115 22:02:50.195"></status>
</kw>
<msg timestamp="20201115 22:02:50.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.174" endtime="20201115 22:02:50.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.199" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.197" endtime="20201115 22:02:50.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.200" endtime="20201115 22:02:50.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.171" endtime="20201115 22:02:50.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.169" endtime="20201115 22:02:50.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.209" endtime="20201115 22:02:50.498"></status>
</kw>
<msg timestamp="20201115 22:02:50.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.208" endtime="20201115 22:02:50.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.502" endtime="20201115 22:02:50.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.510" endtime="20201115 22:02:50.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.205" endtime="20201115 22:02:50.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.203" endtime="20201115 22:02:50.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.517" level="INFO">${RESULT} = [{'time': 0.022892014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.023074139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:02:50.513" endtime="20201115 22:02:50.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.530" level="INFO">${OVERHEAD} = {'source_diff': [4.0559999999988106e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.054999999999337e-06, 4.000000000000531e-06, 4.0559999999988106e-06, 4.054999999999337e-06, 4.041999999999241e-0...</msg>
<status status="PASS" starttime="20201115 22:02:50.518" endtime="20201115 22:02:50.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.534" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.533" endtime="20201115 22:02:50.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.537" level="INFO">VALUE: [4.0559999999988106e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.054999999999337e-06, 4.000000000000531e-06, 4.0559999999988106e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.07000000000185e-06, 4.04200000000271e-06, 4.027999999999671e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.027000000000197e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.0559999999988106e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.07000000000185e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.027000000000197e-06, 4.040999999999767e-06, 4.05600000000228e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.05600000000228e-06, 4.055000000002806e-06, 4.097000000001516e-06, 4.068999999995437e-06, 4.041999999995771e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.536" endtime="20201115 22:02:50.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.531" endtime="20201115 22:02:50.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.540" endtime="20201115 22:02:50.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.543" endtime="20201115 22:02:50.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.542" endtime="20201115 22:02:50.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.538" endtime="20201115 22:02:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.167" endtime="20201115 22:02:50.564"></status>
</kw>
<msg timestamp="20201115 22:02:50.564" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.574" endtime="20201115 22:02:50.594"></status>
</kw>
<msg timestamp="20201115 22:02:50.594" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.572" endtime="20201115 22:02:50.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.597" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.595" endtime="20201115 22:02:50.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.598" endtime="20201115 22:02:50.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.569" endtime="20201115 22:02:50.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.567" endtime="20201115 22:02:50.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.607" endtime="20201115 22:02:50.893"></status>
</kw>
<msg timestamp="20201115 22:02:50.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.605" endtime="20201115 22:02:50.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:50.897" endtime="20201115 22:02:50.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.906" endtime="20201115 22:02:50.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.603" endtime="20201115 22:02:50.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.601" endtime="20201115 22:02:50.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:50.912" level="INFO">${RESULT} = [{'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.023184472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:50.909" endtime="20201115 22:02:50.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:50.925" level="INFO">${OVERHEAD} = {'source_diff': [4.041999999999241e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.111000000001086e-06, 4.000000000000531e-06, 4.027999999999671e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:50.913" endtime="20201115 22:02:50.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.930" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:50.929" endtime="20201115 22:02:50.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.932" level="INFO">VALUE: [4.041999999999241e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.041999999999241e-06, 4.111000000001086e-06, 4.000000000000531e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.0410000000032364e-06, 4.125000000000656e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.000000000000531e-06, 4.02800000000314e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.040999999999767e-06, 4.014000000000101e-06, 4.054999999999337e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.125000000000656e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.054999999999337e-06, 4.0559999999988106e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.041999999999241e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.0410000000032364e-06, 4.068999999995437e-06, 3.9720000000048605e-06, 4.027999999996201e-06]</msg>
<status status="PASS" starttime="20201115 22:02:50.931" endtime="20201115 22:02:50.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.926" endtime="20201115 22:02:50.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.936" endtime="20201115 22:02:50.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:50.939" endtime="20201115 22:02:50.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.937" endtime="20201115 22:02:50.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.934" endtime="20201115 22:02:50.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.565" endtime="20201115 22:02:50.960"></status>
</kw>
<msg timestamp="20201115 22:02:50.960" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.969" endtime="20201115 22:02:50.990"></status>
</kw>
<msg timestamp="20201115 22:02:50.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.967" endtime="20201115 22:02:50.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:50.993" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:50.992" endtime="20201115 22:02:50.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:50.994" endtime="20201115 22:02:50.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.965" endtime="20201115 22:02:50.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.963" endtime="20201115 22:02:50.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.004" endtime="20201115 22:02:51.290"></status>
</kw>
<msg timestamp="20201115 22:02:51.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.002" endtime="20201115 22:02:51.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.295" endtime="20201115 22:02:51.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.303" endtime="20201115 22:02:51.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.999" endtime="20201115 22:02:51.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.997" endtime="20201115 22:02:51.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.309" level="INFO">${RESULT} = [{'time': 0.023310056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.023494681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.306" endtime="20201115 22:02:51.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.323" level="INFO">${OVERHEAD} = {'source_diff': [4.014000000000101e-06, 3.987000000000435e-06, 4.04200000000271e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.040999999999767e-06, 4.055000000002806e-06, 3...</msg>
<status status="PASS" starttime="20201115 22:02:51.310" endtime="20201115 22:02:51.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.327" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.326" endtime="20201115 22:02:51.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.330" level="INFO">VALUE: [4.014000000000101e-06, 3.987000000000435e-06, 4.04200000000271e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.04200000000271e-06, 4.040999999999767e-06, 4.055000000002806e-06, 3.986000000000961e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.0559999999988106e-06, 4.111000000001086e-06, 4.0559999999988106e-06, 4.0559999999988106e-06, 4.111000000001086e-06, 4.041999999999241e-06, 3.986000000000961e-06, 4.111000000001086e-06, 3.986000000000961e-06, 4.027000000000197e-06, 4.014000000000101e-06, 4.041999999999241e-06, 4.083000000001946e-06, 4.014000000000101e-06, 4.040999999999767e-06, 4.02800000000314e-06, 4.0410000000032364e-06, 4.041999999999241e-06, 4.0410000000032364e-06, 4.027999999999671e-06, 4.05600000000228e-06, 4.0559999999988106e-06, 4.027999999999671e-06, 3.986000000000961e-06, 4.014000000000101e-06, 4.111000000001086e-06, 4.027000000000197e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.054999999999337e-06, 4.08400000000142e-06, 4.027000000000197e-06, 4.027999999999671e-06, 4.04200000000271e-06, 4.097000000001516e-06, 4.05600000000228e-06, 4.04200000000271e-06, 4.04200000000271e-06, 4.04200000000271e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.328" endtime="20201115 22:02:51.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.324" endtime="20201115 22:02:51.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.333" endtime="20201115 22:02:51.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.337" endtime="20201115 22:02:51.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.335" endtime="20201115 22:02:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.331" endtime="20201115 22:02:51.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:50.961" endtime="20201115 22:02:51.357"></status>
</kw>
<msg timestamp="20201115 22:02:51.358" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.367" endtime="20201115 22:02:51.386"></status>
</kw>
<msg timestamp="20201115 22:02:51.387" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.365" endtime="20201115 22:02:51.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.389" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.388" endtime="20201115 22:02:51.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.390" endtime="20201115 22:02:51.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.362" endtime="20201115 22:02:51.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.360" endtime="20201115 22:02:51.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.399" endtime="20201115 22:02:51.686"></status>
</kw>
<msg timestamp="20201115 22:02:51.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.397" endtime="20201115 22:02:51.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.691" endtime="20201115 22:02:51.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.699" endtime="20201115 22:02:51.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.395" endtime="20201115 22:02:51.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.393" endtime="20201115 22:02:51.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:51.705" level="INFO">${RESULT} = [{'time': 0.022504319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.022689875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:51.702" endtime="20201115 22:02:51.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:51.719" level="INFO">${OVERHEAD} = {'source_diff': [4.096999999998047e-06, 4.04200000000271e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.041999999999241e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:51.707" endtime="20201115 22:02:51.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.724" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:02:51.723" endtime="20201115 22:02:51.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.726" level="INFO">VALUE: [4.096999999998047e-06, 4.04200000000271e-06, 4.0559999999988106e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.04200000000271e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.0410000000032364e-06, 4.014000000000101e-06, 4.068999999998907e-06, 4.041999999999241e-06, 4.040999999999767e-06, 4.027000000000197e-06, 4.0559999999988106e-06, 4.040999999999767e-06, 4.040999999999767e-06, 4.0559999999988106e-06, 4.027000000000197e-06, 4.040999999999767e-06, 4.02800000000314e-06, 4.040999999999767e-06, 3.986000000000961e-06, 3.972000000001391e-06, 4.041999999999241e-06, 4.041999999999241e-06, 4.02800000000314e-06, 4.040999999999767e-06, 4.04200000000271e-06, 4.05600000000228e-06, 4.125000000000656e-06, 4.041999999999241e-06, 4.0559999999988106e-06, 4.027000000000197e-06, 4.041999999999241e-06, 4.04200000000271e-06, 3.987000000000435e-06, 4.082999999998477e-06, 4.027999999999671e-06, 4.041999999999241e-06, 4.068999999998907e-06, 4.027999999999671e-06, 4.0410000000032364e-06, 4.027999999999671e-06, 4.027999999999671e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.111000000001086e-06, 4.069000000002376e-06, 4.05600000000228e-06]</msg>
<status status="PASS" starttime="20201115 22:02:51.725" endtime="20201115 22:02:51.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.720" endtime="20201115 22:02:51.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.730" endtime="20201115 22:02:51.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:51.733" endtime="20201115 22:02:51.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.732" endtime="20201115 22:02:51.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.728" endtime="20201115 22:02:51.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.358" endtime="20201115 22:02:51.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.770" endtime="20201115 22:02:51.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:49.769" endtime="20201115 22:02:51.754"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.757" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.766" endtime="20201115 22:02:51.786"></status>
</kw>
<msg timestamp="20201115 22:02:51.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.764" endtime="20201115 22:02:51.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:51.789" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:51.788" endtime="20201115 22:02:51.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.790" endtime="20201115 22:02:51.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.761" endtime="20201115 22:02:51.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.759" endtime="20201115 22:02:51.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:51.799" endtime="20201115 22:02:52.087"></status>
</kw>
<msg timestamp="20201115 22:02:52.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025314028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:51.798" endtime="20201115 22:02:52.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025314028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.091" endtime="20201115 22:02:52.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.099" endtime="20201115 22:02:52.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.795" endtime="20201115 22:02:52.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.793" endtime="20201115 22:02:52.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.106" level="INFO">${RESULT} = [{'time': 0.025314028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.025507069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:02:52.102" endtime="20201115 22:02:52.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.119" level="INFO">${OVERHEAD} = {'source_diff': [4.3339999999982e-06, 4.347000000001766e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.277999999999921e-06, 4.332999999998727e-06, 4.3339999999982e-06, 4.403000000000046e-06, 4.30...</msg>
<status status="PASS" starttime="20201115 22:02:52.107" endtime="20201115 22:02:52.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.123" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.122" endtime="20201115 22:02:52.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.126" level="INFO">VALUE: [4.3339999999982e-06, 4.347000000001766e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.277999999999921e-06, 4.332999999998727e-06, 4.3339999999982e-06, 4.403000000000046e-06, 4.305999999999061e-06, 4.332999999998727e-06, 4.346999999998297e-06, 4.318999999999157e-06, 4.3200000000021e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.360999999997867e-06, 4.33400000000167e-06, 4.361000000001336e-06, 4.3199999999986305e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.346999999998297e-06, 4.333000000002196e-06, 4.304999999999587e-06, 4.264000000000351e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.304999999999587e-06, 4.291999999999491e-06, 4.360999999997867e-06, 4.318999999995687e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.34800000000124e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.34800000000124e-06, 4.346999999994827e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.333999999994731e-06, 4.33400000000167e-06, 4.3200000000021e-06, 4.375000000000906e-06, 4.416999999999616e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.333000000002196e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.125" endtime="20201115 22:02:52.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.120" endtime="20201115 22:02:52.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.130" endtime="20201115 22:02:52.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.133" endtime="20201115 22:02:52.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.131" endtime="20201115 22:02:52.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.128" endtime="20201115 22:02:52.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.757" endtime="20201115 22:02:52.154"></status>
</kw>
<msg timestamp="20201115 22:02:52.154" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.163" endtime="20201115 22:02:52.184"></status>
</kw>
<msg timestamp="20201115 22:02:52.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.161" endtime="20201115 22:02:52.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.187" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.185" endtime="20201115 22:02:52.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.188" endtime="20201115 22:02:52.189"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.159" endtime="20201115 22:02:52.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.156" endtime="20201115 22:02:52.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.197" endtime="20201115 22:02:52.485"></status>
</kw>
<msg timestamp="20201115 22:02:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.195" endtime="20201115 22:02:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.489" endtime="20201115 22:02:52.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.497" endtime="20201115 22:02:52.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.193" endtime="20201115 22:02:52.499"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.191" endtime="20201115 22:02:52.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.504" level="INFO">${RESULT} = [{'time': 0.023131653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.023331181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:02:52.500" endtime="20201115 22:02:52.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.517" level="INFO">${OVERHEAD} = {'source_diff': [4.3339999999982e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.277000000000447e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.333000000002196e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:52.505" endtime="20201115 22:02:52.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.522" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.521" endtime="20201115 22:02:52.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.524" level="INFO">VALUE: [4.3339999999982e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.277000000000447e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.3339999999982e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.3199999999986305e-06, 4.305999999999061e-06, 4.346999999998297e-06, 4.34800000000124e-06, 4.3339999999982e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.34800000000124e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.360999999997867e-06, 4.346999999998297e-06, 4.318999999999157e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.3200000000021e-06, 4.33400000000167e-06, 4.318999999999157e-06, 4.3339999999982e-06, 4.347000000001766e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.34799999999777e-06, 4.332999999998727e-06, 4.416999999999616e-06, 4.333999999994731e-06, 4.3200000000021e-06, 4.332999999995257e-06, 4.319999999995161e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.332999999995257e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.523" endtime="20201115 22:02:52.525"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.518" endtime="20201115 22:02:52.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.527" endtime="20201115 22:02:52.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.531" endtime="20201115 22:02:52.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.529" endtime="20201115 22:02:52.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.526" endtime="20201115 22:02:52.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.154" endtime="20201115 22:02:52.552"></status>
</kw>
<msg timestamp="20201115 22:02:52.552" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.561" endtime="20201115 22:02:52.581"></status>
</kw>
<msg timestamp="20201115 22:02:52.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.559" endtime="20201115 22:02:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.584" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.583" endtime="20201115 22:02:52.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.585" endtime="20201115 22:02:52.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.556" endtime="20201115 22:02:52.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.554" endtime="20201115 22:02:52.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.594" endtime="20201115 22:02:52.881"></status>
</kw>
<msg timestamp="20201115 22:02:52.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.593" endtime="20201115 22:02:52.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:52.885" endtime="20201115 22:02:52.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.893" endtime="20201115 22:02:52.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.590" endtime="20201115 22:02:52.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.588" endtime="20201115 22:02:52.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:52.900" level="INFO">${RESULT} = [{'time': 0.022772125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.022966625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:52.896" endtime="20201115 22:02:52.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:52.914" level="INFO">${OVERHEAD} = {'source_diff': [4.333000000002196e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.360999999997867e-06, 4.347000000001766e-06, 4.319000000002626e-06, ...</msg>
<status status="PASS" starttime="20201115 22:02:52.901" endtime="20201115 22:02:52.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.918" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:52.917" endtime="20201115 22:02:52.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.921" level="INFO">VALUE: [4.333000000002196e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.360999999997867e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.361000000001336e-06, 4.36200000000081e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.319000000002626e-06, 4.318999999999157e-06, 4.264000000000351e-06, 4.30600000000253e-06, 4.36200000000081e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.3339999999982e-06, 4.30600000000253e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.304999999999587e-06, 4.346999999998297e-06, 4.319000000002626e-06, 4.3200000000021e-06, 4.333000000002196e-06, 4.347000000001766e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.3200000000021e-06, 4.332999999998727e-06, 4.318999999999157e-06, 4.319000000002626e-06, 4.333999999994731e-06, 4.333000000002196e-06, 4.332999999995257e-06, 4.34800000000124e-06, 4.319999999995161e-06]</msg>
<status status="PASS" starttime="20201115 22:02:52.919" endtime="20201115 22:02:52.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.915" endtime="20201115 22:02:52.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.924" endtime="20201115 22:02:52.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:52.927" endtime="20201115 22:02:52.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.926" endtime="20201115 22:02:52.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.922" endtime="20201115 22:02:52.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.552" endtime="20201115 22:02:52.948"></status>
</kw>
<msg timestamp="20201115 22:02:52.948" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.957" endtime="20201115 22:02:52.977"></status>
</kw>
<msg timestamp="20201115 22:02:52.978" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.955" endtime="20201115 22:02:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:52.980" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:52.979" endtime="20201115 22:02:52.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.981" endtime="20201115 22:02:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.953" endtime="20201115 22:02:52.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.951" endtime="20201115 22:02:52.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:52.990" endtime="20201115 22:02:53.277"></status>
</kw>
<msg timestamp="20201115 22:02:53.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02261275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:52.988" endtime="20201115 22:02:53.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02261275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:53.281" endtime="20201115 22:02:53.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.289" endtime="20201115 22:02:53.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.986" endtime="20201115 22:02:53.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.984" endtime="20201115 22:02:53.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.296" level="INFO">${RESULT} = [{'time': 0.022617028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.022811389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:53.293" endtime="20201115 22:02:53.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.309" level="INFO">${OVERHEAD} = {'source_diff': [4.277999999999921e-06, 4.361000000001336e-06, 4.3339999999982e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.34800000000124e-06, 4....</msg>
<status status="PASS" starttime="20201115 22:02:53.297" endtime="20201115 22:02:53.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.314" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.313" endtime="20201115 22:02:53.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.316" level="INFO">VALUE: [4.277999999999921e-06, 4.361000000001336e-06, 4.3339999999982e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.318999999999157e-06, 4.318999999999157e-06, 4.34800000000124e-06, 4.3200000000021e-06, 4.403000000000046e-06, 4.3199999999986305e-06, 4.346999999998297e-06, 4.333000000002196e-06, 4.304999999999587e-06, 4.3200000000021e-06, 4.34799999999777e-06, 4.416999999999616e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.29200000000296e-06, 4.346999999998297e-06, 4.3339999999982e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.291000000000017e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.264000000000351e-06, 4.318999999999157e-06, 4.416999999999616e-06, 4.347000000001766e-06, 4.3339999999982e-06, 4.318999999999157e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.3199999999986305e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.34800000000124e-06, 4.361000000001336e-06, 4.333000000002196e-06, 4.318999999999157e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.361000000001336e-06, 4.333000000002196e-06, 4.347000000001766e-06, 4.389000000000476e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.315" endtime="20201115 22:02:53.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.310" endtime="20201115 22:02:53.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.319" endtime="20201115 22:02:53.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.323" endtime="20201115 22:02:53.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.321" endtime="20201115 22:02:53.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.318" endtime="20201115 22:02:53.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:52.948" endtime="20201115 22:02:53.343"></status>
</kw>
<msg timestamp="20201115 22:02:53.344" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.352" endtime="20201115 22:02:53.372"></status>
</kw>
<msg timestamp="20201115 22:02:53.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.351" endtime="20201115 22:02:53.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.374" endtime="20201115 22:02:53.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.376" endtime="20201115 22:02:53.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.348" endtime="20201115 22:02:53.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.346" endtime="20201115 22:02:53.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.386" endtime="20201115 22:02:53.673"></status>
</kw>
<msg timestamp="20201115 22:02:53.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.384" endtime="20201115 22:02:53.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.684" endtime="20201115 22:02:53.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.692" endtime="20201115 22:02:53.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.381" endtime="20201115 22:02:53.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.380" endtime="20201115 22:02:53.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:53.699" level="INFO">${RESULT} = [{'time': 0.022400403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.022590917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 22:02:53.696" endtime="20201115 22:02:53.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:53.713" level="INFO">${OVERHEAD} = {'source_diff': [4.3339999999982e-06, 4.305999999999061e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.346999999998297e-06, 4.29200000000296e-06, 4...</msg>
<status status="PASS" starttime="20201115 22:02:53.700" endtime="20201115 22:02:53.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.718" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:02:53.716" endtime="20201115 22:02:53.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.720" level="INFO">VALUE: [4.3339999999982e-06, 4.305999999999061e-06, 4.318999999999157e-06, 4.3199999999986305e-06, 4.333000000002196e-06, 4.332999999998727e-06, 4.346999999998297e-06, 4.29200000000296e-06, 4.332999999998727e-06, 4.291999999999491e-06, 4.291999999999491e-06, 4.30600000000253e-06, 4.332999999998727e-06, 4.304999999999587e-06, 4.332999999998727e-06, 4.332999999998727e-06, 4.347000000001766e-06, 4.332999999998727e-06, 4.34800000000124e-06, 4.291000000000017e-06, 4.388999999997006e-06, 4.33400000000167e-06, 4.347000000001766e-06, 4.318999999999157e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.3339999999982e-06, 4.347000000001766e-06, 4.33400000000167e-06, 4.333000000002196e-06, 4.346999999998297e-06, 4.332999999998727e-06, 4.34799999999777e-06, 4.30600000000253e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.333000000002196e-06, 4.33400000000167e-06, 4.277999999999921e-06, 4.34800000000124e-06, 4.33400000000167e-06, 4.34800000000124e-06, 4.34799999999777e-06, 4.277000000000447e-06, 4.34800000000124e-06, 4.360999999994397e-06, 4.346999999994827e-06, 4.346999999994827e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201115 22:02:53.719" endtime="20201115 22:02:53.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.714" endtime="20201115 22:02:53.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.723" endtime="20201115 22:02:53.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:53.727" endtime="20201115 22:02:53.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.725" endtime="20201115 22:02:53.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.722" endtime="20201115 22:02:53.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.344" endtime="20201115 22:02:53.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.756" endtime="20201115 22:02:53.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:51.755" endtime="20201115 22:02:53.748"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.750" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.759" endtime="20201115 22:02:53.780"></status>
</kw>
<msg timestamp="20201115 22:02:53.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.757" endtime="20201115 22:02:53.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:53.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:53.782" endtime="20201115 22:02:53.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.784" endtime="20201115 22:02:53.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.754" endtime="20201115 22:02:53.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.752" endtime="20201115 22:02:53.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:53.794" endtime="20201115 22:02:54.079"></status>
</kw>
<msg timestamp="20201115 22:02:54.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:53.792" endtime="20201115 22:02:54.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.083" endtime="20201115 22:02:54.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.091" endtime="20201115 22:02:54.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.789" endtime="20201115 22:02:54.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.788" endtime="20201115 22:02:54.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.098" level="INFO">${RESULT} = [{'time': 0.025163375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.025369903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.095" endtime="20201115 22:02:54.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.111" level="INFO">${OVERHEAD} = {'source_diff': [4.653000000000296e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.61199999999759e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:54.099" endtime="20201115 22:02:54.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.116" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.115" endtime="20201115 22:02:54.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.118" level="INFO">VALUE: [4.653000000000296e-06, 4.610999999998117e-06, 4.596999999998547e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.6249999999976865e-06, 4.610999999998117e-06, 4.61199999999759e-06, 4.569000000002876e-06, 4.6249999999976865e-06, 4.59800000000149e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.596999999998547e-06, 4.610999999998117e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.555999999999311e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.597000000002016e-06, 4.625000000001156e-06, 4.652000000000822e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.624999999994217e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.55600000000278e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.583000000002446e-06, 4.625000000001156e-06, 4.6949999999990055e-06, 4.57000000000235e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.117" endtime="20201115 22:02:54.119"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.112" endtime="20201115 22:02:54.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.121" endtime="20201115 22:02:54.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.125" endtime="20201115 22:02:54.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.123" endtime="20201115 22:02:54.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.120" endtime="20201115 22:02:54.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.750" endtime="20201115 22:02:54.145"></status>
</kw>
<msg timestamp="20201115 22:02:54.146" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.155" endtime="20201115 22:02:54.176"></status>
</kw>
<msg timestamp="20201115 22:02:54.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.153" endtime="20201115 22:02:54.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.178" endtime="20201115 22:02:54.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.181" endtime="20201115 22:02:54.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.150" endtime="20201115 22:02:54.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.148" endtime="20201115 22:02:54.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.190" endtime="20201115 22:02:54.476"></status>
</kw>
<msg timestamp="20201115 22:02:54.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02284, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:54.188" endtime="20201115 22:02:54.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02284, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:02:54.480" endtime="20201115 22:02:54.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.488" endtime="20201115 22:02:54.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.186" endtime="20201115 22:02:54.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.184" endtime="20201115 22:02:54.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.495" level="INFO">${RESULT} = [{'time': 0.022844556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.023054167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.492" endtime="20201115 22:02:54.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.508" level="INFO">${OVERHEAD} = {'source_diff': [4.555999999999311e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.59800000000149e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.679999999999962e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:54.496" endtime="20201115 22:02:54.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.513" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.512" endtime="20201115 22:02:54.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.516" level="INFO">VALUE: [4.555999999999311e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.59800000000149e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.625000000001156e-06, 4.569000000002876e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.679999999999962e-06, 4.6249999999976865e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.680999999999436e-06, 4.653000000000296e-06, 4.611000000001586e-06, 4.624999999994217e-06, 4.610999999994647e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.55600000000278e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.514" endtime="20201115 22:02:54.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.509" endtime="20201115 22:02:54.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.519" endtime="20201115 22:02:54.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.522" endtime="20201115 22:02:54.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.521" endtime="20201115 22:02:54.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.517" endtime="20201115 22:02:54.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.146" endtime="20201115 22:02:54.543"></status>
</kw>
<msg timestamp="20201115 22:02:54.543" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.552" endtime="20201115 22:02:54.574"></status>
</kw>
<msg timestamp="20201115 22:02:54.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.550" endtime="20201115 22:02:54.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.575" endtime="20201115 22:02:54.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.578" endtime="20201115 22:02:54.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.548" endtime="20201115 22:02:54.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.546" endtime="20201115 22:02:54.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.587" endtime="20201115 22:02:54.874"></status>
</kw>
<msg timestamp="20201115 22:02:54.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.585" endtime="20201115 22:02:54.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.878" endtime="20201115 22:02:54.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.886" endtime="20201115 22:02:54.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.583" endtime="20201115 22:02:54.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.581" endtime="20201115 22:02:54.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:54.892" level="INFO">${RESULT} = [{'time': 0.023075722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.023281847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:54.889" endtime="20201115 22:02:54.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:54.905" level="INFO">${OVERHEAD} = {'source_diff': [4.625000000001156e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.625000000001156e-06...</msg>
<status status="PASS" starttime="20201115 22:02:54.893" endtime="20201115 22:02:54.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.910" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:54.909" endtime="20201115 22:02:54.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.913" level="INFO">VALUE: [4.625000000001156e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.639000000000726e-06, 4.610999999998117e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.568999999999407e-06, 4.625000000001156e-06, 4.59799999999802e-06, 4.679999999999962e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.5699999999988805e-06, 4.61199999999759e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.637999999997783e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.610999999994647e-06, 4.639000000000726e-06, 4.611999999994121e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.611000000001586e-06, 4.583000000002446e-06]</msg>
<status status="PASS" starttime="20201115 22:02:54.911" endtime="20201115 22:02:54.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.906" endtime="20201115 22:02:54.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.916" endtime="20201115 22:02:54.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:54.919" endtime="20201115 22:02:54.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.918" endtime="20201115 22:02:54.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.914" endtime="20201115 22:02:54.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.544" endtime="20201115 22:02:54.940"></status>
</kw>
<msg timestamp="20201115 22:02:54.941" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.949" endtime="20201115 22:02:54.970"></status>
</kw>
<msg timestamp="20201115 22:02:54.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.948" endtime="20201115 22:02:54.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:54.973" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:54.972" endtime="20201115 22:02:54.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.974" endtime="20201115 22:02:54.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.945" endtime="20201115 22:02:54.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.943" endtime="20201115 22:02:54.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:54.983" endtime="20201115 22:02:55.271"></status>
</kw>
<msg timestamp="20201115 22:02:55.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:54.982" endtime="20201115 22:02:55.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.275" endtime="20201115 22:02:55.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.283" endtime="20201115 22:02:55.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.979" endtime="20201115 22:02:55.285"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.978" endtime="20201115 22:02:55.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.290" level="INFO">${RESULT} = [{'time': 0.022940417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.023154528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:02:55.287" endtime="20201115 22:02:55.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.303" level="INFO">${OVERHEAD} = {'source_diff': [4.55600000000278e-06, 4.625000000001156e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6249999999976865e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:55.291" endtime="20201115 22:02:55.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.308" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.307" endtime="20201115 22:02:55.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.310" level="INFO">VALUE: [4.55600000000278e-06, 4.625000000001156e-06, 4.582999999998977e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.638000000001252e-06, 4.637999999997783e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.6249999999976865e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.6249999999976865e-06, 4.5699999999988805e-06, 4.6249999999976865e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.61200000000106e-06, 4.5699999999988805e-06, 4.653000000000296e-06, 4.625000000001156e-06, 4.596999999998547e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.624999999994217e-06, 4.582999999995507e-06, 4.610999999994647e-06, 4.624999999994217e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.57000000000235e-06, 4.625000000001156e-06, 4.625000000001156e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.309" endtime="20201115 22:02:55.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.304" endtime="20201115 22:02:55.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.313" endtime="20201115 22:02:55.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.317" endtime="20201115 22:02:55.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.316" endtime="20201115 22:02:55.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.312" endtime="20201115 22:02:55.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:54.941" endtime="20201115 22:02:55.338"></status>
</kw>
<msg timestamp="20201115 22:02:55.338" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.347" endtime="20201115 22:02:55.368"></status>
</kw>
<msg timestamp="20201115 22:02:55.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.345" endtime="20201115 22:02:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.370" endtime="20201115 22:02:55.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.372" endtime="20201115 22:02:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.343" endtime="20201115 22:02:55.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.341" endtime="20201115 22:02:55.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.381" endtime="20201115 22:02:55.666"></status>
</kw>
<msg timestamp="20201115 22:02:55.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.380" endtime="20201115 22:02:55.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:55.670" endtime="20201115 22:02:55.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.679" endtime="20201115 22:02:55.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.377" endtime="20201115 22:02:55.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.375" endtime="20201115 22:02:55.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:55.685" level="INFO">${RESULT} = [{'time': 0.022548097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.022762389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:55.682" endtime="20201115 22:02:55.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:55.698" level="INFO">${OVERHEAD} = {'source_diff': [4.625000000001156e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.61200000000106e-06...</msg>
<status status="PASS" starttime="20201115 22:02:55.686" endtime="20201115 22:02:55.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.703" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:02:55.702" endtime="20201115 22:02:55.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.705" level="INFO">VALUE: [4.625000000001156e-06, 4.639000000000726e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.611000000001586e-06, 4.61200000000106e-06, 4.679999999999962e-06, 4.639000000000726e-06, 4.5839999999984504e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.611000000001586e-06, 4.637999999997783e-06, 4.582999999998977e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.653000000000296e-06, 4.680999999999436e-06, 4.652000000000822e-06, 4.6249999999976865e-06, 4.625000000001156e-06, 4.6249999999976865e-06, 4.597000000002016e-06, 4.611000000001586e-06, 4.625000000001156e-06, 4.6389999999972564e-06, 4.582999999998977e-06, 4.625000000001156e-06, 4.693999999999532e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.639000000000726e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.625000000001156e-06, 4.666999999999866e-06, 4.624999999994217e-06, 4.639000000000726e-06, 4.639000000000726e-06, 4.611000000001586e-06]</msg>
<status status="PASS" starttime="20201115 22:02:55.704" endtime="20201115 22:02:55.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.699" endtime="20201115 22:02:55.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.709" endtime="20201115 22:02:55.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:55.713" endtime="20201115 22:02:55.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.711" endtime="20201115 22:02:55.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.707" endtime="20201115 22:02:55.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.339" endtime="20201115 22:02:55.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.749" endtime="20201115 22:02:55.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:53.748" endtime="20201115 22:02:55.734"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.736" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.746" endtime="20201115 22:02:55.768"></status>
</kw>
<msg timestamp="20201115 22:02:55.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.744" endtime="20201115 22:02:55.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:55.771" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:55.769" endtime="20201115 22:02:55.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.772" endtime="20201115 22:02:55.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.741" endtime="20201115 22:02:55.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.739" endtime="20201115 22:02:55.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:55.781" endtime="20201115 22:02:56.067"></status>
</kw>
<msg timestamp="20201115 22:02:56.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026977083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026982, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:55.779" endtime="20201115 22:02:56.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026977083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026982, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:02:56.071" endtime="20201115 22:02:56.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.079" endtime="20201115 22:02:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.777" endtime="20201115 22:02:56.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.775" endtime="20201115 22:02:56.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.086" level="INFO">${RESULT} = [{'time': 0.026982, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.027206208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:02:56.082" endtime="20201115 22:02:56.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.099" level="INFO">${OVERHEAD} = {'source_diff': [4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.916000000000642e-06, 4.917000000000116e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:56.087" endtime="20201115 22:02:56.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.103" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.102" endtime="20201115 22:02:56.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.106" level="INFO">VALUE: [4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.916999999996646e-06, 4.916000000000642e-06, 4.915999999997173e-06, 4.875000000001406e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.915999999993703e-06, 4.874999999994467e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.861000000001836e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.9310000000066245e-06, 4.916000000000642e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.104" endtime="20201115 22:02:56.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.100" endtime="20201115 22:02:56.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.110" endtime="20201115 22:02:56.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.113" endtime="20201115 22:02:56.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.111" endtime="20201115 22:02:56.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.108" endtime="20201115 22:02:56.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.737" endtime="20201115 22:02:56.134"></status>
</kw>
<msg timestamp="20201115 22:02:56.134" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.143" endtime="20201115 22:02:56.165"></status>
</kw>
<msg timestamp="20201115 22:02:56.165" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.141" endtime="20201115 22:02:56.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.168" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.166" endtime="20201115 22:02:56.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.169" endtime="20201115 22:02:56.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.138" endtime="20201115 22:02:56.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.136" endtime="20201115 22:02:56.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.178" endtime="20201115 22:02:56.466"></status>
</kw>
<msg timestamp="20201115 22:02:56.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02274025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:56.176" endtime="20201115 22:02:56.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02274025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:56.470" endtime="20201115 22:02:56.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.478" endtime="20201115 22:02:56.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.174" endtime="20201115 22:02:56.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.172" endtime="20201115 22:02:56.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.484" level="INFO">${RESULT} = [{'time': 0.02274025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.022966625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:56.481" endtime="20201115 22:02:56.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.498" level="INFO">${OVERHEAD} = {'source_diff': [4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.9589999999988255e-06...</msg>
<status status="PASS" starttime="20201115 22:02:56.485" endtime="20201115 22:02:56.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.503" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.502" endtime="20201115 22:02:56.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.505" level="INFO">VALUE: [4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.9589999999988255e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.957999999999352e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.8749999999979365e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.916999999996646e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.903000000000546e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.861000000001836e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.504" endtime="20201115 22:02:56.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.499" endtime="20201115 22:02:56.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.508" endtime="20201115 22:02:56.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.512" endtime="20201115 22:02:56.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.510" endtime="20201115 22:02:56.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.506" endtime="20201115 22:02:56.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.134" endtime="20201115 22:02:56.532"></status>
</kw>
<msg timestamp="20201115 22:02:56.532" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.541" endtime="20201115 22:02:56.563"></status>
</kw>
<msg timestamp="20201115 22:02:56.564" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.540" endtime="20201115 22:02:56.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.566" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.565" endtime="20201115 22:02:56.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.568" endtime="20201115 22:02:56.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.537" endtime="20201115 22:02:56.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.535" endtime="20201115 22:02:56.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.577" endtime="20201115 22:02:56.864"></status>
</kw>
<msg timestamp="20201115 22:02:56.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.575" endtime="20201115 22:02:56.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.868" endtime="20201115 22:02:56.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.876" endtime="20201115 22:02:56.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.572" endtime="20201115 22:02:56.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.571" endtime="20201115 22:02:56.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:56.883" level="INFO">${RESULT} = [{'time': 0.022836194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.023058556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:56.880" endtime="20201115 22:02:56.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:56.897" level="INFO">${OVERHEAD} = {'source_diff': [4.930000000000212e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.916000000000642e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:56.885" endtime="20201115 22:02:56.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.901" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:56.900" endtime="20201115 22:02:56.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.904" level="INFO">VALUE: [4.930000000000212e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.915999999997173e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.8889999999975065e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.915999999997173e-06, 4.9589999999988255e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.84799999999827e-06, 4.943999999999782e-06, 4.903000000000546e-06, 4.902999999997076e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.889000000000976e-06, 4.931000000003155e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.889000000000976e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.972000000005861e-06, 4.917000000000116e-06]</msg>
<status status="PASS" starttime="20201115 22:02:56.902" endtime="20201115 22:02:56.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.898" endtime="20201115 22:02:56.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.907" endtime="20201115 22:02:56.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:56.910" endtime="20201115 22:02:56.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.909" endtime="20201115 22:02:56.930"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.905" endtime="20201115 22:02:56.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.533" endtime="20201115 22:02:56.931"></status>
</kw>
<msg timestamp="20201115 22:02:56.931" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.940" endtime="20201115 22:02:56.962"></status>
</kw>
<msg timestamp="20201115 22:02:56.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.939" endtime="20201115 22:02:56.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:56.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:56.964" endtime="20201115 22:02:56.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.966" endtime="20201115 22:02:56.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.936" endtime="20201115 22:02:56.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.934" endtime="20201115 22:02:56.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:56.975" endtime="20201115 22:02:57.261"></status>
</kw>
<msg timestamp="20201115 22:02:57.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:56.974" endtime="20201115 22:02:57.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.265" endtime="20201115 22:02:57.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.274" endtime="20201115 22:02:57.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.971" endtime="20201115 22:02:57.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.970" endtime="20201115 22:02:57.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.281" level="INFO">${RESULT} = [{'time': 0.023093472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.023318361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:57.277" endtime="20201115 22:02:57.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.294" level="INFO">${OVERHEAD} = {'source_diff': [4.916000000000642e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.902000000001072e-06, 4.917000000000116e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:57.282" endtime="20201115 22:02:57.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.299" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.298" endtime="20201115 22:02:57.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.301" level="INFO">VALUE: [4.916000000000642e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.902000000001072e-06, 4.902000000001072e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.901999999997603e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.861000000001836e-06, 4.917000000000116e-06, 4.915999999997173e-06, 4.861000000001836e-06, 4.930999999999686e-06, 4.903000000000546e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.902999999997076e-06, 4.889000000000976e-06, 4.8889999999975065e-06, 4.916000000000642e-06, 4.971999999998922e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.986000000001961e-06, 4.958000000002821e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.889000000000976e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.902999999993607e-06, 4.888000000001502e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.9589999999988255e-06, 4.875000000001406e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.300" endtime="20201115 22:02:57.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.295" endtime="20201115 22:02:57.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.304" endtime="20201115 22:02:57.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.308" endtime="20201115 22:02:57.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.306" endtime="20201115 22:02:57.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.303" endtime="20201115 22:02:57.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:56.932" endtime="20201115 22:02:57.328"></status>
</kw>
<msg timestamp="20201115 22:02:57.328" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.337" endtime="20201115 22:02:57.360"></status>
</kw>
<msg timestamp="20201115 22:02:57.360" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.336" endtime="20201115 22:02:57.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.363" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.361" endtime="20201115 22:02:57.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.364" endtime="20201115 22:02:57.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.333" endtime="20201115 22:02:57.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.331" endtime="20201115 22:02:57.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.373" endtime="20201115 22:02:57.660"></status>
</kw>
<msg timestamp="20201115 22:02:57.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:57.371" endtime="20201115 22:02:57.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:02:57.665" endtime="20201115 22:02:57.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.673" endtime="20201115 22:02:57.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.369" endtime="20201115 22:02:57.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.367" endtime="20201115 22:02:57.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:57.680" level="INFO">${RESULT} = [{'time': 0.02277725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.023001292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:02:57.677" endtime="20201115 22:02:57.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:57.693" level="INFO">${OVERHEAD} = {'source_diff': [4.903000000000546e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.902999999997076e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:57.681" endtime="20201115 22:02:57.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.698" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:02:57.697" endtime="20201115 22:02:57.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.700" level="INFO">VALUE: [4.903000000000546e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.902999999997076e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.861000000001836e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.930000000000212e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.902999999997076e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.889000000000976e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.902999999997076e-06, 4.889000000000976e-06, 4.903000000000546e-06, 4.902999999997076e-06, 4.916000000000642e-06, 4.930999999999686e-06, 4.929999999993273e-06, 4.903000000000546e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201115 22:02:57.699" endtime="20201115 22:02:57.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.694" endtime="20201115 22:02:57.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.703" endtime="20201115 22:02:57.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:57.707" endtime="20201115 22:02:57.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.705" endtime="20201115 22:02:57.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.702" endtime="20201115 22:02:57.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.329" endtime="20201115 22:02:57.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.735" endtime="20201115 22:02:57.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:55.734" endtime="20201115 22:02:57.728"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.730" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.739" endtime="20201115 22:02:57.762"></status>
</kw>
<msg timestamp="20201115 22:02:57.763" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.737" endtime="20201115 22:02:57.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:57.766" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:57.764" endtime="20201115 22:02:57.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.767" endtime="20201115 22:02:57.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.735" endtime="20201115 22:02:57.769"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.733" endtime="20201115 22:02:57.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:57.777" endtime="20201115 22:02:58.064"></status>
</kw>
<msg timestamp="20201115 22:02:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025616792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:57.776" endtime="20201115 22:02:58.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025616792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.068" endtime="20201115 22:02:58.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.076" endtime="20201115 22:02:58.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.773" endtime="20201115 22:02:58.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.771" endtime="20201115 22:02:58.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.083" level="INFO">${RESULT} = [{'time': 0.025622069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.025867375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.079" endtime="20201115 22:02:58.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.096" level="INFO">${OVERHEAD} = {'source_diff': [5.277000000001447e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.236999999998215e-06, 5.223000000002115e-06, 5.236000000002211e-06, 5.194000000000032e-06, 5.209000000002545e-06,...</msg>
<status status="PASS" starttime="20201115 22:02:58.084" endtime="20201115 22:02:58.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.101" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.100" endtime="20201115 22:02:58.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.103" level="INFO">VALUE: [5.277000000001447e-06, 5.180999999999936e-06, 5.207999999999602e-06, 5.236999999998215e-06, 5.223000000002115e-06, 5.236000000002211e-06, 5.194000000000032e-06, 5.209000000002545e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.222000000002641e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.222000000002641e-06, 5.167000000000366e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.2499999999983116e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 5.2499999999983116e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.208000000006541e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.2360000000056806e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.221999999999172e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.102" endtime="20201115 22:02:58.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.097" endtime="20201115 22:02:58.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.106" endtime="20201115 22:02:58.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.110" endtime="20201115 22:02:58.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.108" endtime="20201115 22:02:58.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.105" endtime="20201115 22:02:58.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.731" endtime="20201115 22:02:58.130"></status>
</kw>
<msg timestamp="20201115 22:02:58.131" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.140" endtime="20201115 22:02:58.162"></status>
</kw>
<msg timestamp="20201115 22:02:58.163" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.138" endtime="20201115 22:02:58.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.164" endtime="20201115 22:02:58.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.167" endtime="20201115 22:02:58.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.135" endtime="20201115 22:02:58.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.133" endtime="20201115 22:02:58.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.176" endtime="20201115 22:02:58.466"></status>
</kw>
<msg timestamp="20201115 22:02:58.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.174" endtime="20201115 22:02:58.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.471" endtime="20201115 22:02:58.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.479" endtime="20201115 22:02:58.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.172" endtime="20201115 22:02:58.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.170" endtime="20201115 22:02:58.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.486" level="INFO">${RESULT} = [{'time': 0.022948306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.023189806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.483" endtime="20201115 22:02:58.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.499" level="INFO">${OVERHEAD} = {'source_diff': [5.209000000002545e-06, 5.2089999999990755e-06, 5.208000000003071e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.195000000002975e-06, 5.151999999997853e-06, 5.180999999999936e-06...</msg>
<status status="PASS" starttime="20201115 22:02:58.487" endtime="20201115 22:02:58.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.504" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.503" endtime="20201115 22:02:58.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.506" level="INFO">VALUE: [5.209000000002545e-06, 5.2089999999990755e-06, 5.208000000003071e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.195000000002975e-06, 5.151999999997853e-06, 5.180999999999936e-06, 5.223000000002115e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.221999999999172e-06, 5.166000000000892e-06, 5.1949999999995056e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.180000000000462e-06, 5.222999999998645e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.222000000002641e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.222000000002641e-06, 5.2089999999990755e-06, 5.209000000002545e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 5.235999999998742e-06, 5.221999999999172e-06, 5.207999999999602e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.505" endtime="20201115 22:02:58.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.500" endtime="20201115 22:02:58.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.509" endtime="20201115 22:02:58.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.513" endtime="20201115 22:02:58.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.511" endtime="20201115 22:02:58.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.508" endtime="20201115 22:02:58.533"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.131" endtime="20201115 22:02:58.534"></status>
</kw>
<msg timestamp="20201115 22:02:58.534" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.543" endtime="20201115 22:02:58.567"></status>
</kw>
<msg timestamp="20201115 22:02:58.567" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.541" endtime="20201115 22:02:58.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.568" endtime="20201115 22:02:58.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.571" endtime="20201115 22:02:58.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.538" endtime="20201115 22:02:58.573"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.536" endtime="20201115 22:02:58.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.580" endtime="20201115 22:02:58.867"></status>
</kw>
<msg timestamp="20201115 22:02:58.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023155014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.579" endtime="20201115 22:02:58.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023149792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023155014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.871" endtime="20201115 22:02:58.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.880" endtime="20201115 22:02:58.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.576" endtime="20201115 22:02:58.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.574" endtime="20201115 22:02:58.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:58.887" level="INFO">${RESULT} = [{'time': 0.023155014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.023393014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:58.883" endtime="20201115 22:02:58.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:58.900" level="INFO">${OVERHEAD} = {'source_diff': [5.222000000002641e-06, 5.207999999999602e-06, 5.1799999999969926e-06, 5.207999999999602e-06, 5.195000000002975e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.207999999999602e-06...</msg>
<status status="PASS" starttime="20201115 22:02:58.888" endtime="20201115 22:02:58.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.904" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:58.903" endtime="20201115 22:02:58.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.907" level="INFO">VALUE: [5.222000000002641e-06, 5.207999999999602e-06, 5.1799999999969926e-06, 5.207999999999602e-06, 5.195000000002975e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.195000000002975e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.250000000001781e-06, 5.180999999999936e-06, 5.236000000002211e-06, 5.208000000003071e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.1949999999995056e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.165999999993953e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.2499999999983116e-06]</msg>
<status status="PASS" starttime="20201115 22:02:58.905" endtime="20201115 22:02:58.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.901" endtime="20201115 22:02:58.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.910" endtime="20201115 22:02:58.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:58.913" endtime="20201115 22:02:58.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.912" endtime="20201115 22:02:58.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.908" endtime="20201115 22:02:58.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.534" endtime="20201115 22:02:58.939"></status>
</kw>
<msg timestamp="20201115 22:02:58.939" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.948" endtime="20201115 22:02:58.972"></status>
</kw>
<msg timestamp="20201115 22:02:58.972" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.947" endtime="20201115 22:02:58.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:58.975" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:58.973" endtime="20201115 22:02:58.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.976" endtime="20201115 22:02:58.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.944" endtime="20201115 22:02:58.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.942" endtime="20201115 22:02:58.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:58.985" endtime="20201115 22:02:59.272"></status>
</kw>
<msg timestamp="20201115 22:02:59.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028171694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:58.983" endtime="20201115 22:02:59.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028171694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.276" endtime="20201115 22:02:59.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.284" endtime="20201115 22:02:59.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.981" endtime="20201115 22:02:59.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.979" endtime="20201115 22:02:59.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.291" level="INFO">${RESULT} = [{'time': 0.028171694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.028414375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.288" endtime="20201115 22:02:59.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.304" level="INFO">${OVERHEAD} = {'source_diff': [5.207999999999602e-06, 5.152999999997326e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.278000000000921e-06, 5.222999999998645e-06, 5.221999999999172e-06, 5.207999999999602e-0...</msg>
<status status="PASS" starttime="20201115 22:02:59.292" endtime="20201115 22:02:59.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.309" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.308" endtime="20201115 22:02:59.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.311" level="INFO">VALUE: [5.207999999999602e-06, 5.152999999997326e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.278000000000921e-06, 5.222999999998645e-06, 5.221999999999172e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.222000000002641e-06, 5.139000000001226e-06, 5.236999999998215e-06, 5.207999999999602e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.167000000000366e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.2499999999983116e-06, 5.222999999998645e-06, 5.221999999999172e-06, 5.167000000000366e-06, 5.222999999998645e-06, 5.222000000006111e-06, 5.194000000000032e-06, 5.223000000005584e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.194000000000032e-06, 5.152000000001322e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.1950000000064445e-06, 5.2089999999990755e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.1949999999995056e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.310" endtime="20201115 22:02:59.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.305" endtime="20201115 22:02:59.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.315" endtime="20201115 22:02:59.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.318" endtime="20201115 22:02:59.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.317" endtime="20201115 22:02:59.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.313" endtime="20201115 22:02:59.339"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:58.940" endtime="20201115 22:02:59.339"></status>
</kw>
<msg timestamp="20201115 22:02:59.339" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.348" endtime="20201115 22:02:59.371"></status>
</kw>
<msg timestamp="20201115 22:02:59.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.347" endtime="20201115 22:02:59.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.374" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.373" endtime="20201115 22:02:59.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.375" endtime="20201115 22:02:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.344" endtime="20201115 22:02:59.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.342" endtime="20201115 22:02:59.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.384" endtime="20201115 22:02:59.671"></status>
</kw>
<msg timestamp="20201115 22:02:59.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.383" endtime="20201115 22:02:59.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.675" endtime="20201115 22:02:59.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.683" endtime="20201115 22:02:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.380" endtime="20201115 22:02:59.685"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.378" endtime="20201115 22:02:59.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:02:59.690" level="INFO">${RESULT} = [{'time': 0.022578944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.022819458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:02:59.687" endtime="20201115 22:02:59.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:02:59.703" level="INFO">${OVERHEAD} = {'source_diff': [5.221999999999172e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.222000000002641e-06, 5.222000000002641e-06...</msg>
<status status="PASS" starttime="20201115 22:02:59.691" endtime="20201115 22:02:59.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.708" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:02:59.707" endtime="20201115 22:02:59.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.710" level="INFO">VALUE: [5.221999999999172e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.207999999999602e-06, 5.222000000002641e-06, 5.222000000002641e-06, 5.180999999999936e-06, 5.221999999999172e-06, 5.208000000003071e-06, 5.222000000002641e-06, 5.221999999999172e-06, 5.180999999999936e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.208000000003071e-06, 5.2089999999990755e-06, 5.221999999999172e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.209000000002545e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.250000000001781e-06, 5.165999999997423e-06, 5.236000000002211e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.152999999997326e-06, 5.208000000003071e-06, 5.208000000003071e-06, 5.207999999999602e-06, 5.221999999999172e-06, 5.2499999999983116e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.262999999998408e-06, 5.26400000000482e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.151999999994383e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.2089999999990755e-06]</msg>
<status status="PASS" starttime="20201115 22:02:59.709" endtime="20201115 22:02:59.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.704" endtime="20201115 22:02:59.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.714" endtime="20201115 22:02:59.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:02:59.717" endtime="20201115 22:02:59.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.716" endtime="20201115 22:02:59.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.712" endtime="20201115 22:02:59.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.340" endtime="20201115 22:02:59.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.729" endtime="20201115 22:02:59.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:57.728" endtime="20201115 22:02:59.738"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.741" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.749" endtime="20201115 22:02:59.773"></status>
</kw>
<msg timestamp="20201115 22:02:59.774" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.748" endtime="20201115 22:02:59.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:02:59.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:02:59.775" endtime="20201115 22:02:59.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.777" endtime="20201115 22:02:59.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.745" endtime="20201115 22:02:59.780"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.743" endtime="20201115 22:02:59.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:02:59.786" endtime="20201115 22:03:00.074"></status>
</kw>
<msg timestamp="20201115 22:03:00.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025419431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:02:59.785" endtime="20201115 22:03:00.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025419431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.078" endtime="20201115 22:03:00.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.087" endtime="20201115 22:03:00.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.782" endtime="20201115 22:03:00.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.781" endtime="20201115 22:03:00.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.093" level="INFO">${RESULT} = [{'time': 0.025419431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.025675431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.090" endtime="20201115 22:03:00.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.106" level="INFO">${OVERHEAD} = {'source_diff': [5.499999999998562e-06, 5.486999999998465e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.486000000002461e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:00.094" endtime="20201115 22:03:00.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.111" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.110" endtime="20201115 22:03:00.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.114" level="INFO">VALUE: [5.499999999998562e-06, 5.486999999998465e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.486000000002461e-06, 5.569000000000407e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.486999999998465e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.458000000003321e-06, 5.486000000002461e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.472999999998895e-06, 5.51400000000507e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.5000000000055005e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.583999999995981e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.417000000000616e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.499999999998562e-06, 5.486000000005931e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.472000000006361e-06, 5.499999999998562e-06, 5.51400000000507e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.112" endtime="20201115 22:03:00.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.107" endtime="20201115 22:03:00.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.117" endtime="20201115 22:03:00.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.121" endtime="20201115 22:03:00.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.119" endtime="20201115 22:03:00.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.115" endtime="20201115 22:03:00.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.741" endtime="20201115 22:03:00.141"></status>
</kw>
<msg timestamp="20201115 22:03:00.141" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.150" endtime="20201115 22:03:00.174"></status>
</kw>
<msg timestamp="20201115 22:03:00.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.149" endtime="20201115 22:03:00.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.177" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.175" endtime="20201115 22:03:00.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.178" endtime="20201115 22:03:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.146" endtime="20201115 22:03:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.144" endtime="20201115 22:03:00.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.187" endtime="20201115 22:03:00.474"></status>
</kw>
<msg timestamp="20201115 22:03:00.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.185" endtime="20201115 22:03:00.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.478" endtime="20201115 22:03:00.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.487" endtime="20201115 22:03:00.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.183" endtime="20201115 22:03:00.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.181" endtime="20201115 22:03:00.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.493" level="INFO">${RESULT} = [{'time': 0.022628889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.022886875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:00.490" endtime="20201115 22:03:00.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.506" level="INFO">${OVERHEAD} = {'source_diff': [5.499999999998562e-06, 5.500000000002031e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.444999999999756e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:00.494" endtime="20201115 22:03:00.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.511" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.510" endtime="20201115 22:03:00.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.514" level="INFO">VALUE: [5.499999999998562e-06, 5.500000000002031e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.528000000001171e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.444999999999756e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.486000000002461e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.472000000002891e-06, 5.500000000002031e-06, 5.500000000002031e-06, 5.486000000002461e-06, 5.528000000001171e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.500000000002031e-06, 5.487000000001935e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.486000000002461e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.486000000005931e-06, 5.51400000000507e-06, 5.499999999998562e-06, 5.5000000000055005e-06, 5.499999999998562e-06, 5.471999999999422e-06, 5.54200000000421e-06, 5.499999999998562e-06, 5.51400000000507e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.5000000000055005e-06, 5.5000000000055005e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.512" endtime="20201115 22:03:00.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.508" endtime="20201115 22:03:00.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.517" endtime="20201115 22:03:00.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.521" endtime="20201115 22:03:00.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.519" endtime="20201115 22:03:00.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.515" endtime="20201115 22:03:00.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.142" endtime="20201115 22:03:00.541"></status>
</kw>
<msg timestamp="20201115 22:03:00.541" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.550" endtime="20201115 22:03:00.574"></status>
</kw>
<msg timestamp="20201115 22:03:00.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.549" endtime="20201115 22:03:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.575" endtime="20201115 22:03:00.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.578" endtime="20201115 22:03:00.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.546" endtime="20201115 22:03:00.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.544" endtime="20201115 22:03:00.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.587" endtime="20201115 22:03:00.873"></status>
</kw>
<msg timestamp="20201115 22:03:00.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.585" endtime="20201115 22:03:00.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.878" endtime="20201115 22:03:00.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.886" endtime="20201115 22:03:00.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.583" endtime="20201115 22:03:00.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.581" endtime="20201115 22:03:00.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:00.893" level="INFO">${RESULT} = [{'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.02317525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:00.889" endtime="20201115 22:03:00.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:00.906" level="INFO">${OVERHEAD} = {'source_diff': [5.499999999998562e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.471999999999422e-06...</msg>
<status status="PASS" starttime="20201115 22:03:00.894" endtime="20201115 22:03:00.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.911" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:00.910" endtime="20201115 22:03:00.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.913" level="INFO">VALUE: [5.499999999998562e-06, 5.486000000002461e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.500000000002031e-06, 5.473000000002365e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.514000000001601e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.541000000001267e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.512999999998658e-06, 5.499999999998562e-06, 5.569999999996411e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.5139999999981315e-06]</msg>
<status status="PASS" starttime="20201115 22:03:00.912" endtime="20201115 22:03:00.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.907" endtime="20201115 22:03:00.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.916" endtime="20201115 22:03:00.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:00.920" endtime="20201115 22:03:00.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.918" endtime="20201115 22:03:00.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.915" endtime="20201115 22:03:00.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.542" endtime="20201115 22:03:00.941"></status>
</kw>
<msg timestamp="20201115 22:03:00.941" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.950" endtime="20201115 22:03:00.973"></status>
</kw>
<msg timestamp="20201115 22:03:00.974" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.948" endtime="20201115 22:03:00.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:00.976" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:00.975" endtime="20201115 22:03:00.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.978" endtime="20201115 22:03:00.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.946" endtime="20201115 22:03:00.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.943" endtime="20201115 22:03:00.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:00.987" endtime="20201115 22:03:01.271"></status>
</kw>
<msg timestamp="20201115 22:03:01.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:00.985" endtime="20201115 22:03:01.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.276" endtime="20201115 22:03:01.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.284" endtime="20201115 22:03:01.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.982" endtime="20201115 22:03:01.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.981" endtime="20201115 22:03:01.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.291" level="INFO">${RESULT} = [{'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.0230335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:01.287" endtime="20201115 22:03:01.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.304" level="INFO">${OVERHEAD} = {'source_diff': [5.542000000000741e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.430000000000712e-06, 5.5139999999981315e-06, 5.4439999999968125e-06, 5.499999999998562e-...</msg>
<status status="PASS" starttime="20201115 22:03:01.292" endtime="20201115 22:03:01.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.309" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.307" endtime="20201115 22:03:01.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.311" level="INFO">VALUE: [5.542000000000741e-06, 5.499999999998562e-06, 5.5139999999981315e-06, 5.514000000001601e-06, 5.430000000000712e-06, 5.5139999999981315e-06, 5.4439999999968125e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.486999999998465e-06, 5.500000000002031e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.472999999998895e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.5139999999981315e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.51400000000507e-06, 5.5000000000055005e-06, 5.52800000000464e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.55600000000378e-06, 5.52800000000464e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.310" endtime="20201115 22:03:01.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.305" endtime="20201115 22:03:01.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.314" endtime="20201115 22:03:01.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.318" endtime="20201115 22:03:01.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.316" endtime="20201115 22:03:01.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.313" endtime="20201115 22:03:01.338"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:00.941" endtime="20201115 22:03:01.338"></status>
</kw>
<msg timestamp="20201115 22:03:01.338" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.347" endtime="20201115 22:03:01.370"></status>
</kw>
<msg timestamp="20201115 22:03:01.371" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.346" endtime="20201115 22:03:01.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.373" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.372" endtime="20201115 22:03:01.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.374" endtime="20201115 22:03:01.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.343" endtime="20201115 22:03:01.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.341" endtime="20201115 22:03:01.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.384" endtime="20201115 22:03:01.673"></status>
</kw>
<msg timestamp="20201115 22:03:01.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.382" endtime="20201115 22:03:01.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.677" endtime="20201115 22:03:01.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.685" endtime="20201115 22:03:01.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.379" endtime="20201115 22:03:01.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.378" endtime="20201115 22:03:01.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:01.692" level="INFO">${RESULT} = [{'time': 0.022754944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.023012097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:01.689" endtime="20201115 22:03:01.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:01.705" level="INFO">${OVERHEAD} = {'source_diff': [5.499999999998562e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:01.693" endtime="20201115 22:03:01.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.710" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:03:01.709" endtime="20201115 22:03:01.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.712" level="INFO">VALUE: [5.499999999998562e-06, 5.471999999999422e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.431000000000186e-06, 5.500000000002031e-06, 5.499999999998562e-06, 5.444000000000282e-06, 5.514000000001601e-06, 5.5139999999981315e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.514000000001601e-06, 5.500000000002031e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.555999999996841e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.500000000002031e-06, 5.485999999998992e-06, 5.417000000000616e-06, 5.514000000001601e-06, 5.499999999998562e-06, 5.486000000005931e-06, 5.472999999998895e-06, 5.5139999999981315e-06, 5.444999999999756e-06, 5.5000000000055005e-06, 5.5139999999981315e-06, 5.499999999998562e-06, 5.444999999999756e-06, 5.499999999998562e-06, 5.485999999998992e-06, 5.486999999998465e-06, 5.485999999998992e-06, 5.5000000000055005e-06, 5.499999999998562e-06, 5.499999999998562e-06, 5.485999999998992e-06]</msg>
<status status="PASS" starttime="20201115 22:03:01.711" endtime="20201115 22:03:01.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.706" endtime="20201115 22:03:01.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.715" endtime="20201115 22:03:01.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:01.719" endtime="20201115 22:03:01.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.717" endtime="20201115 22:03:01.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.714" endtime="20201115 22:03:01.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.339" endtime="20201115 22:03:01.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.740" endtime="20201115 22:03:01.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:59.739" endtime="20201115 22:03:01.740"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.742" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.751" endtime="20201115 22:03:01.776"></status>
</kw>
<msg timestamp="20201115 22:03:01.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.749" endtime="20201115 22:03:01.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:01.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:01.778" endtime="20201115 22:03:01.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.781" endtime="20201115 22:03:01.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.747" endtime="20201115 22:03:01.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.745" endtime="20201115 22:03:01.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:01.790" endtime="20201115 22:03:02.078"></status>
</kw>
<msg timestamp="20201115 22:03:02.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:01.788" endtime="20201115 22:03:02.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025338458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025344194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.082" endtime="20201115 22:03:02.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.090" endtime="20201115 22:03:02.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.786" endtime="20201115 22:03:02.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.784" endtime="20201115 22:03:02.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.097" level="INFO">${RESULT} = [{'time': 0.025344194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.025618681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.093" endtime="20201115 22:03:02.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.110" level="INFO">${OVERHEAD} = {'source_diff': [5.735999999999242e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.790999999998048e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:02.098" endtime="20201115 22:03:02.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.114" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.113" endtime="20201115 22:03:02.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.117" level="INFO">VALUE: [5.735999999999242e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.764000000001851e-06, 5.860999999999367e-06, 5.7779999999979514e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.778000000001421e-06, 5.805999999997091e-06, 5.874999999998937e-06, 5.749999999998812e-06, 5.805000000001087e-06, 5.874999999998937e-06, 5.806000000000561e-06, 5.791000000004987e-06, 5.805999999997091e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.847000000003266e-06, 5.7639999999983815e-06, 5.736999999998715e-06, 5.77800000000489e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.804999999997618e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.861000000002836e-06, 5.7639999999983815e-06, 5.790999999998048e-06, 5.8329999999967574e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.805999999997091e-06, 5.7639999999983815e-06, 5.80600000000403e-06, 5.805999999997091e-06, 5.790999999998048e-06, 5.791999999997521e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.115" endtime="20201115 22:03:02.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.111" endtime="20201115 22:03:02.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.120" endtime="20201115 22:03:02.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.123" endtime="20201115 22:03:02.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.122" endtime="20201115 22:03:02.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.118" endtime="20201115 22:03:02.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.743" endtime="20201115 22:03:02.144"></status>
</kw>
<msg timestamp="20201115 22:03:02.144" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.153" endtime="20201115 22:03:02.177"></status>
</kw>
<msg timestamp="20201115 22:03:02.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.151" endtime="20201115 22:03:02.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.179" endtime="20201115 22:03:02.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.182" endtime="20201115 22:03:02.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.149" endtime="20201115 22:03:02.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.147" endtime="20201115 22:03:02.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.191" endtime="20201115 22:03:02.478"></status>
</kw>
<msg timestamp="20201115 22:03:02.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.190" endtime="20201115 22:03:02.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.482" endtime="20201115 22:03:02.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.490" endtime="20201115 22:03:02.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.187" endtime="20201115 22:03:02.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.185" endtime="20201115 22:03:02.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.497" level="INFO">${RESULT} = [{'time': 0.022831125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.023107111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.493" endtime="20201115 22:03:02.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.510" level="INFO">${OVERHEAD} = {'source_diff': [5.735999999999242e-06, 5.792000000000991e-06, 5.833000000000227e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.792000000000991e-06...</msg>
<status status="PASS" starttime="20201115 22:03:02.498" endtime="20201115 22:03:02.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.514" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.513" endtime="20201115 22:03:02.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.517" level="INFO">VALUE: [5.735999999999242e-06, 5.792000000000991e-06, 5.833000000000227e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.806000000000561e-06, 5.819000000000657e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.804999999997618e-06, 5.790999999998048e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.721999999999672e-06, 5.708000000000102e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.820000000000131e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.778000000001421e-06, 5.805000000001087e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.804999999997618e-06, 5.79200000000446e-06, 5.79200000000446e-06, 5.708000000000102e-06, 5.7779999999979514e-06, 5.749999999998812e-06, 5.791999999997521e-06, 5.79200000000446e-06, 5.777000000005417e-06, 5.804999999997618e-06, 5.79200000000446e-06, 5.791999999997521e-06, 5.79200000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.515" endtime="20201115 22:03:02.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.511" endtime="20201115 22:03:02.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.520" endtime="20201115 22:03:02.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.523" endtime="20201115 22:03:02.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.522" endtime="20201115 22:03:02.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.518" endtime="20201115 22:03:02.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.145" endtime="20201115 22:03:02.544"></status>
</kw>
<msg timestamp="20201115 22:03:02.544" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.554" endtime="20201115 22:03:02.579"></status>
</kw>
<msg timestamp="20201115 22:03:02.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.552" endtime="20201115 22:03:02.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.580" endtime="20201115 22:03:02.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.583" endtime="20201115 22:03:02.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.549" endtime="20201115 22:03:02.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.547" endtime="20201115 22:03:02.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.592" endtime="20201115 22:03:02.878"></status>
</kw>
<msg timestamp="20201115 22:03:02.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.590" endtime="20201115 22:03:02.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:02.882" endtime="20201115 22:03:02.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.890" endtime="20201115 22:03:02.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.588" endtime="20201115 22:03:02.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.586" endtime="20201115 22:03:02.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:02.897" level="INFO">${RESULT} = [{'time': 0.023213167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.023489986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:02.894" endtime="20201115 22:03:02.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:02.910" level="INFO">${OVERHEAD} = {'source_diff': [5.778000000001421e-06, 5.735999999999242e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.792000000000991e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:02.898" endtime="20201115 22:03:02.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.915" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:02.914" endtime="20201115 22:03:02.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.917" level="INFO">VALUE: [5.778000000001421e-06, 5.735999999999242e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.7639999999983815e-06, 5.792000000000991e-06, 5.7639999999983815e-06, 5.778000000001421e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.776999999998478e-06, 5.737000000002185e-06, 5.7779999999979514e-06, 5.806000000000561e-06, 5.750000000002281e-06, 5.790999999998048e-06, 5.805000000001087e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.7639999999983815e-06, 5.77800000000489e-06, 5.833000000003696e-06, 5.735999999999242e-06, 5.79200000000446e-06, 5.80600000000403e-06, 5.777000000005417e-06, 5.8050000000045565e-06, 5.804999999997618e-06, 5.790999999998048e-06, 5.8050000000045565e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.77800000000489e-06, 5.790999999998048e-06, 5.8189999999971875e-06, 5.791000000004987e-06, 5.7779999999979514e-06, 5.833000000003696e-06, 5.79200000000446e-06]</msg>
<status status="PASS" starttime="20201115 22:03:02.916" endtime="20201115 22:03:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.911" endtime="20201115 22:03:02.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.920" endtime="20201115 22:03:02.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:02.924" endtime="20201115 22:03:02.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.922" endtime="20201115 22:03:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.919" endtime="20201115 22:03:02.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.545" endtime="20201115 22:03:02.945"></status>
</kw>
<msg timestamp="20201115 22:03:02.945" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.954" endtime="20201115 22:03:02.978"></status>
</kw>
<msg timestamp="20201115 22:03:02.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.952" endtime="20201115 22:03:02.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:02.982" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:02.980" endtime="20201115 22:03:02.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.983" endtime="20201115 22:03:02.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.950" endtime="20201115 22:03:02.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.948" endtime="20201115 22:03:02.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:02.992" endtime="20201115 22:03:03.280"></status>
</kw>
<msg timestamp="20201115 22:03:03.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:02.990" endtime="20201115 22:03:03.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:03.284" endtime="20201115 22:03:03.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.292" endtime="20201115 22:03:03.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.987" endtime="20201115 22:03:03.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.986" endtime="20201115 22:03:03.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.299" level="INFO">${RESULT} = [{'time': 0.0230625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.023346833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.295" endtime="20201115 22:03:03.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.312" level="INFO">${OVERHEAD} = {'source_diff': [5.7779999999979514e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.804999999997618e-06, 5.8339999999997005e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.805000000001087e-0...</msg>
<status status="PASS" starttime="20201115 22:03:03.300" endtime="20201115 22:03:03.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.316" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.315" endtime="20201115 22:03:03.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.319" level="INFO">VALUE: [5.7779999999979514e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.804999999997618e-06, 5.8339999999997005e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.805000000001087e-06, 5.819000000000657e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791999999997521e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.7779999999979514e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.792000000000991e-06, 5.806000000000561e-06, 5.805000000001087e-06, 5.805000000001087e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 5.776999999998478e-06, 5.736000000006181e-06, 5.791000000004987e-06, 5.805999999997091e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.7779999999979514e-06, 5.791999999997521e-06, 5.805999999997091e-06, 5.79200000000446e-06, 5.7779999999979514e-06, 5.777000000005417e-06, 5.791999999997521e-06, 5.76400000000532e-06, 5.80600000000403e-06, 5.776999999998478e-06, 5.791999999997521e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.318" endtime="20201115 22:03:03.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.313" endtime="20201115 22:03:03.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.323" endtime="20201115 22:03:03.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.326" endtime="20201115 22:03:03.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.324" endtime="20201115 22:03:03.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.321" endtime="20201115 22:03:03.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:02.946" endtime="20201115 22:03:03.347"></status>
</kw>
<msg timestamp="20201115 22:03:03.347" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.356" endtime="20201115 22:03:03.381"></status>
</kw>
<msg timestamp="20201115 22:03:03.381" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.354" endtime="20201115 22:03:03.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.384" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.382" endtime="20201115 22:03:03.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.385" endtime="20201115 22:03:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.352" endtime="20201115 22:03:03.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.349" endtime="20201115 22:03:03.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.394" endtime="20201115 22:03:03.680"></status>
</kw>
<msg timestamp="20201115 22:03:03.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.392" endtime="20201115 22:03:03.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.684" endtime="20201115 22:03:03.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.692" endtime="20201115 22:03:03.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.390" endtime="20201115 22:03:03.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.388" endtime="20201115 22:03:03.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:03.699" level="INFO">${RESULT} = [{'time': 0.022659403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.022939736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:03.696" endtime="20201115 22:03:03.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:03.712" level="INFO">${OVERHEAD} = {'source_diff': [5.792000000000991e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.804999999997618e-06, 5.792000000000991e-06, 5.846999999999797e-06, 5.7779999999979514e-06...</msg>
<status status="PASS" starttime="20201115 22:03:03.700" endtime="20201115 22:03:03.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.717" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:03:03.716" endtime="20201115 22:03:03.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.719" level="INFO">VALUE: [5.792000000000991e-06, 5.791999999997521e-06, 5.790999999998048e-06, 5.791999999997521e-06, 5.804999999997618e-06, 5.792000000000991e-06, 5.846999999999797e-06, 5.7779999999979514e-06, 5.806000000000561e-06, 5.792000000000991e-06, 5.805000000001087e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.778000000001421e-06, 5.762999999998908e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.819000000000657e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.791000000001517e-06, 5.791999999997521e-06, 5.805999999997091e-06, 5.790999999998048e-06, 5.792000000000991e-06, 5.792000000000991e-06, 5.778000000001421e-06, 5.791000000001517e-06, 5.791999999997521e-06, 5.804999999997618e-06, 5.805999999997091e-06, 5.819999999996661e-06, 5.819999999996661e-06, 5.7779999999979514e-06, 5.791000000004987e-06, 5.7779999999979514e-06, 5.80600000000403e-06, 5.776999999998478e-06, 5.791999999997521e-06, 5.77800000000489e-06, 5.791999999997521e-06, 5.791999999997521e-06, 5.805999999997091e-06, 5.790999999998048e-06, 5.790999999998048e-06, 5.80600000000403e-06, 5.791000000004987e-06, 5.819999999996661e-06, 5.791999999997521e-06, 5.76400000000532e-06]</msg>
<status status="PASS" starttime="20201115 22:03:03.718" endtime="20201115 22:03:03.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.713" endtime="20201115 22:03:03.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.723" endtime="20201115 22:03:03.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:03.726" endtime="20201115 22:03:03.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.725" endtime="20201115 22:03:03.746"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.721" endtime="20201115 22:03:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.347" endtime="20201115 22:03:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.741" endtime="20201115 22:03:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:01.740" endtime="20201115 22:03:03.747"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.750" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.758" endtime="20201115 22:03:03.784"></status>
</kw>
<msg timestamp="20201115 22:03:03.785" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.757" endtime="20201115 22:03:03.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:03.787" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:03.786" endtime="20201115 22:03:03.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.788" endtime="20201115 22:03:03.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.754" endtime="20201115 22:03:03.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.752" endtime="20201115 22:03:03.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:03.797" endtime="20201115 22:03:04.083"></status>
</kw>
<msg timestamp="20201115 22:03:04.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:03.796" endtime="20201115 22:03:04.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.087" endtime="20201115 22:03:04.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.096" endtime="20201115 22:03:04.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.793" endtime="20201115 22:03:04.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.791" endtime="20201115 22:03:04.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.102" level="INFO">${RESULT} = [{'time': 0.025002736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.025299917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.099" endtime="20201115 22:03:04.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.115" level="INFO">${OVERHEAD} = {'source_diff': [6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0839999999999506e-...</msg>
<status status="PASS" starttime="20201115 22:03:04.103" endtime="20201115 22:03:04.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.120" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.119" endtime="20201115 22:03:04.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.129" level="INFO">VALUE: [6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.05600000000428e-06, 6.0690000000043764e-06, 6.0689999999974376e-06, 6.097000000003516e-06, 6.083000000003946e-06, 6.096999999996577e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.0690000000043764e-06, 6.083000000003946e-06, 6.055999999997341e-06, 6.0139999999986316e-06, 6.083999999996481e-06, 6.139000000002226e-06, 6.083000000003946e-06, 6.151999999995383e-06, 6.0829999999970075e-06, 6.055999999997341e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.07000000000385e-06, 6.083000000003946e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.121" endtime="20201115 22:03:04.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.116" endtime="20201115 22:03:04.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.132" endtime="20201115 22:03:04.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.136" endtime="20201115 22:03:04.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.134" endtime="20201115 22:03:04.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.130" endtime="20201115 22:03:04.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.750" endtime="20201115 22:03:04.156"></status>
</kw>
<msg timestamp="20201115 22:03:04.157" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.165" endtime="20201115 22:03:04.191"></status>
</kw>
<msg timestamp="20201115 22:03:04.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.164" endtime="20201115 22:03:04.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.193" endtime="20201115 22:03:04.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.195" endtime="20201115 22:03:04.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.161" endtime="20201115 22:03:04.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.159" endtime="20201115 22:03:04.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.204" endtime="20201115 22:03:04.492"></status>
</kw>
<msg timestamp="20201115 22:03:04.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023008139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.203" endtime="20201115 22:03:04.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023008139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.496" endtime="20201115 22:03:04.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.504" endtime="20201115 22:03:04.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.200" endtime="20201115 22:03:04.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.198" endtime="20201115 22:03:04.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.511" level="INFO">${RESULT} = [{'time': 0.023014208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069000000000907e-06, 'source_diff': 6.069000000000907e-06}, {'time': 0.023310292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:04.507" endtime="20201115 22:03:04.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.524" level="INFO">${OVERHEAD} = {'source_diff': [6.069000000000907e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.0839999999999506e-06, 6.097000000000047e-0...</msg>
<status status="PASS" starttime="20201115 22:03:04.512" endtime="20201115 22:03:04.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.529" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.528" endtime="20201115 22:03:04.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.531" level="INFO">VALUE: [6.069000000000907e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.111000000003086e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.110999999999617e-06, 6.0829999999970075e-06, 6.08400000000342e-06, 6.083999999996481e-06, 6.0829999999970075e-06, 6.097000000003516e-06, 6.083000000003946e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.083999999996481e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.0690000000043764e-06, 6.0139999999986316e-06, 6.0829999999970075e-06, 6.097999999996051e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.040999999998298e-06, 6.05600000000428e-06, 6.0829999999970075e-06, 6.083999999996481e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.530" endtime="20201115 22:03:04.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.525" endtime="20201115 22:03:04.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.534" endtime="20201115 22:03:04.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.538" endtime="20201115 22:03:04.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.536" endtime="20201115 22:03:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.533" endtime="20201115 22:03:04.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.157" endtime="20201115 22:03:04.558"></status>
</kw>
<msg timestamp="20201115 22:03:04.559" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.567" endtime="20201115 22:03:04.592"></status>
</kw>
<msg timestamp="20201115 22:03:04.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.566" endtime="20201115 22:03:04.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.595" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:04.594" endtime="20201115 22:03:04.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.596" endtime="20201115 22:03:04.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.563" endtime="20201115 22:03:04.598"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.561" endtime="20201115 22:03:04.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.605" endtime="20201115 22:03:04.893"></status>
</kw>
<msg timestamp="20201115 22:03:04.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.604" endtime="20201115 22:03:04.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:04.897" endtime="20201115 22:03:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.905" endtime="20201115 22:03:04.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.601" endtime="20201115 22:03:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.600" endtime="20201115 22:03:04.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:04.911" level="INFO">${RESULT} = [{'time': 0.022625486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.022927, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:04.908" endtime="20201115 22:03:04.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:04.968" level="INFO">${OVERHEAD} = {'source_diff': [6.083000000000477e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.08400000000342e-06, 6.0839999999999506e-06, 6.097000000000047e-0...</msg>
<status status="PASS" starttime="20201115 22:03:04.913" endtime="20201115 22:03:04.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.973" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:04.972" endtime="20201115 22:03:04.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:04.975" level="INFO">VALUE: [6.083000000000477e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.08400000000342e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.09800000000299e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.1529999999983265e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.08400000000342e-06, 6.0829999999970075e-06, 6.125000000002656e-06, 6.08400000000342e-06, 6.069999999996911e-06, 6.097000000003516e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.054999999997868e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.02800000000514e-06, 6.111000000003086e-06, 6.0690000000043764e-06, 6.139000000002226e-06, 6.138000000002752e-06, 6.0829999999970075e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201115 22:03:04.974" endtime="20201115 22:03:04.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.969" endtime="20201115 22:03:04.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:04.978" endtime="20201115 22:03:04.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:04.982" endtime="20201115 22:03:05.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.980" endtime="20201115 22:03:05.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.977" endtime="20201115 22:03:05.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:04.559" endtime="20201115 22:03:05.003"></status>
</kw>
<msg timestamp="20201115 22:03:05.003" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.012" endtime="20201115 22:03:05.038"></status>
</kw>
<msg timestamp="20201115 22:03:05.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.011" endtime="20201115 22:03:05.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.040" endtime="20201115 22:03:05.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.042" endtime="20201115 22:03:05.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.007" endtime="20201115 22:03:05.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.005" endtime="20201115 22:03:05.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.051" endtime="20201115 22:03:05.337"></status>
</kw>
<msg timestamp="20201115 22:03:05.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.050" endtime="20201115 22:03:05.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.341" endtime="20201115 22:03:05.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.350" endtime="20201115 22:03:05.351"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.047" endtime="20201115 22:03:05.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.046" endtime="20201115 22:03:05.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.357" level="INFO">${RESULT} = [{'time': 0.023418278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.023713667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:05.353" endtime="20201115 22:03:05.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.370" level="INFO">${OVERHEAD} = {'source_diff': [6.070000000000381e-06, 6.110999999999617e-06, 6.0689999999974376e-06, 6.167000000001366e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.069000000000907e-0...</msg>
<status status="PASS" starttime="20201115 22:03:05.358" endtime="20201115 22:03:05.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.374" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.373" endtime="20201115 22:03:05.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.377" level="INFO">VALUE: [6.070000000000381e-06, 6.110999999999617e-06, 6.0689999999974376e-06, 6.167000000001366e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.083999999996481e-06, 6.083000000003946e-06, 6.012999999999158e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.096999999996577e-06, 6.0829999999970075e-06, 6.069999999996911e-06, 6.069999999996911e-06, 6.0829999999970075e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.07000000000385e-06, 6.069999999996911e-06, 6.083000000003946e-06, 6.097999999996051e-06, 6.083999999996481e-06, 6.0689999999974376e-06, 6.110999999996147e-06, 6.0689999999974376e-06, 6.08400000000342e-06, 6.083999999996481e-06, 6.152000000002322e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.375" endtime="20201115 22:03:05.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.371" endtime="20201115 22:03:05.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.380" endtime="20201115 22:03:05.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.383" endtime="20201115 22:03:05.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.382" endtime="20201115 22:03:05.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.378" endtime="20201115 22:03:05.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.003" endtime="20201115 22:03:05.404"></status>
</kw>
<msg timestamp="20201115 22:03:05.404" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.414" endtime="20201115 22:03:05.439"></status>
</kw>
<msg timestamp="20201115 22:03:05.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.412" endtime="20201115 22:03:05.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.442" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.441" endtime="20201115 22:03:05.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.443" endtime="20201115 22:03:05.445"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.409" endtime="20201115 22:03:05.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.407" endtime="20201115 22:03:05.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.453" endtime="20201115 22:03:05.738"></status>
</kw>
<msg timestamp="20201115 22:03:05.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023609889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.451" endtime="20201115 22:03:05.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023609889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.742" endtime="20201115 22:03:05.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.750" endtime="20201115 22:03:05.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.448" endtime="20201115 22:03:05.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.447" endtime="20201115 22:03:05.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:05.757" level="INFO">${RESULT} = [{'time': 0.023609889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.023913083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:05.754" endtime="20201115 22:03:05.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:05.770" level="INFO">${OVERHEAD} = {'source_diff': [6.0829999999970075e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.0279999999982015e-06, 6.026999999998728e-...</msg>
<status status="PASS" starttime="20201115 22:03:05.758" endtime="20201115 22:03:05.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.775" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:03:05.774" endtime="20201115 22:03:05.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.777" level="INFO">VALUE: [6.0829999999970075e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.012999999999158e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.083000000003946e-06, 6.0690000000043764e-06, 6.124999999995717e-06, 6.153000000001796e-06, 6.0690000000043764e-06, 6.069999999996911e-06, 6.0279999999982015e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.07000000000385e-06, 6.110999999996147e-06, 6.097000000003516e-06, 6.069999999996911e-06, 6.0829999999970075e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.111999999995621e-06, 5.999999999999062e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.125000000002656e-06, 6.07000000000385e-06, 6.08400000000342e-06]</msg>
<status status="PASS" starttime="20201115 22:03:05.776" endtime="20201115 22:03:05.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.771" endtime="20201115 22:03:05.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.781" endtime="20201115 22:03:05.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:05.784" endtime="20201115 22:03:05.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.783" endtime="20201115 22:03:05.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.779" endtime="20201115 22:03:05.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.405" endtime="20201115 22:03:05.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.748" endtime="20201115 22:03:05.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:03.748" endtime="20201115 22:03:05.805"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.807" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.816" endtime="20201115 22:03:05.843"></status>
</kw>
<msg timestamp="20201115 22:03:05.843" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.815" endtime="20201115 22:03:05.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:05.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:05.844" endtime="20201115 22:03:05.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.847" endtime="20201115 22:03:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.812" endtime="20201115 22:03:05.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.810" endtime="20201115 22:03:05.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:05.857" endtime="20201115 22:03:06.143"></status>
</kw>
<msg timestamp="20201115 22:03:06.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025891056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:05.855" endtime="20201115 22:03:06.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025891056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.147" endtime="20201115 22:03:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.155" endtime="20201115 22:03:06.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.853" endtime="20201115 22:03:06.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.851" endtime="20201115 22:03:06.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.162" level="INFO">${RESULT} = [{'time': 0.025897444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.387999999999533e-06, 'source_diff': 6.387999999999533e-06}, {'time': 0.0262205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:06.158" endtime="20201115 22:03:06.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.175" level="INFO">${OVERHEAD} = {'source_diff': [6.387999999999533e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.415999999998673e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.375000000002906e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:06.163" endtime="20201115 22:03:06.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.179" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.178" endtime="20201115 22:03:06.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.182" level="INFO">VALUE: [6.387999999999533e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.415999999998673e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.416999999998146e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.387999999999533e-06, 6.374999999999437e-06, 6.360999999996397e-06, 6.389000000002476e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.34800000000324e-06, 6.375000000002906e-06, 6.333999999996731e-06, 6.319999999997161e-06, 6.347000000003766e-06, 6.361000000003336e-06, 6.374999999995967e-06, 6.30600000000453e-06, 6.360999999996397e-06, 6.403000000002046e-06, 6.374999999995967e-06, 6.305999999997591e-06, 6.375000000002906e-06, 6.361000000003336e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.3200000000041e-06, 6.388999999995537e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.375000000002906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.180" endtime="20201115 22:03:06.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.176" endtime="20201115 22:03:06.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.185" endtime="20201115 22:03:06.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.188" endtime="20201115 22:03:06.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.187" endtime="20201115 22:03:06.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.183" endtime="20201115 22:03:06.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.808" endtime="20201115 22:03:06.209"></status>
</kw>
<msg timestamp="20201115 22:03:06.209" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.218" endtime="20201115 22:03:06.247"></status>
</kw>
<msg timestamp="20201115 22:03:06.247" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.217" endtime="20201115 22:03:06.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.250" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.248" endtime="20201115 22:03:06.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.251" endtime="20201115 22:03:06.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.214" endtime="20201115 22:03:06.253"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.212" endtime="20201115 22:03:06.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.260" endtime="20201115 22:03:06.545"></status>
</kw>
<msg timestamp="20201115 22:03:06.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.259" endtime="20201115 22:03:06.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.549" endtime="20201115 22:03:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.557" endtime="20201115 22:03:06.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.256" endtime="20201115 22:03:06.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.255" endtime="20201115 22:03:06.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.564" level="INFO">${RESULT} = [{'time': 0.023451861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023771778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:06.561" endtime="20201115 22:03:06.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.578" level="INFO">${OVERHEAD} = {'source_diff': [6.374999999999437e-06, 6.360999999999867e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.3329999999972575e-06, 6.360999999999867e-06...</msg>
<status status="PASS" starttime="20201115 22:03:06.565" endtime="20201115 22:03:06.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.583" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.582" endtime="20201115 22:03:06.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.585" level="INFO">VALUE: [6.374999999999437e-06, 6.360999999999867e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.3329999999972575e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.387999999999533e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.334000000000201e-06, 6.374999999999437e-06, 6.3329999999972575e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.415999999998673e-06, 6.3479999999997705e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.3200000000041e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.388000000003002e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.389000000002476e-06, 6.430999999994247e-06, 6.374999999995967e-06, 6.403000000002046e-06, 6.319999999997161e-06, 6.360999999996397e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.3050000000050566e-06, 6.375000000002906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.584" endtime="20201115 22:03:06.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.579" endtime="20201115 22:03:06.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.588" endtime="20201115 22:03:06.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.592" endtime="20201115 22:03:06.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.590" endtime="20201115 22:03:06.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.587" endtime="20201115 22:03:06.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.210" endtime="20201115 22:03:06.613"></status>
</kw>
<msg timestamp="20201115 22:03:06.613" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.622" endtime="20201115 22:03:06.649"></status>
</kw>
<msg timestamp="20201115 22:03:06.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.620" endtime="20201115 22:03:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.652" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:06.651" endtime="20201115 22:03:06.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.653" endtime="20201115 22:03:06.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.617" endtime="20201115 22:03:06.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.615" endtime="20201115 22:03:06.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.663" endtime="20201115 22:03:06.948"></status>
</kw>
<msg timestamp="20201115 22:03:06.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023344542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023350917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.662" endtime="20201115 22:03:06.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023344542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023350917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:06.952" endtime="20201115 22:03:06.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.960" endtime="20201115 22:03:06.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.659" endtime="20201115 22:03:06.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.657" endtime="20201115 22:03:06.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:06.967" level="INFO">${RESULT} = [{'time': 0.023350917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:03:06.963" endtime="20201115 22:03:06.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:06.980" level="INFO">${OVERHEAD} = {'source_diff': [6.374999999999437e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.360999999999867e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:06.968" endtime="20201115 22:03:06.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.984" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:06.983" endtime="20201115 22:03:06.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:06.987" level="INFO">VALUE: [6.374999999999437e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.347000000000297e-06, 6.445000000000756e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.387999999999533e-06, 6.360999999999867e-06, 6.333000000000727e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.458000000000852e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.388999999995537e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.361000000003336e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.36200000000281e-06, 6.375000000002906e-06, 6.346999999996827e-06, 6.375000000002906e-06, 6.417000000001616e-06, 6.403000000002046e-06, 6.389000000002476e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.333000000004196e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.375000000002906e-06]</msg>
<status status="PASS" starttime="20201115 22:03:06.985" endtime="20201115 22:03:06.987"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.981" endtime="20201115 22:03:06.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:06.990" endtime="20201115 22:03:06.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:06.994" endtime="20201115 22:03:07.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.992" endtime="20201115 22:03:07.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.988" endtime="20201115 22:03:07.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:06.613" endtime="20201115 22:03:07.015"></status>
</kw>
<msg timestamp="20201115 22:03:07.015" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.024" endtime="20201115 22:03:07.050"></status>
</kw>
<msg timestamp="20201115 22:03:07.051" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.022" endtime="20201115 22:03:07.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.053" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.052" endtime="20201115 22:03:07.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.054" endtime="20201115 22:03:07.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.020" endtime="20201115 22:03:07.057"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.017" endtime="20201115 22:03:07.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.064" endtime="20201115 22:03:07.350"></status>
</kw>
<msg timestamp="20201115 22:03:07.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023168528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.063" endtime="20201115 22:03:07.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023168528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.354" endtime="20201115 22:03:07.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.362" endtime="20201115 22:03:07.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.060" endtime="20201115 22:03:07.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.058" endtime="20201115 22:03:07.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.369" level="INFO">${RESULT} = [{'time': 0.023174903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023498167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.365" endtime="20201115 22:03:07.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.382" level="INFO">${OVERHEAD} = {'source_diff': [6.374999999999437e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.346999999996827e-06, 6.388999999999007e-06, 6.360999999999867e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:07.370" endtime="20201115 22:03:07.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.387" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.386" endtime="20201115 22:03:07.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.389" level="INFO">VALUE: [6.374999999999437e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.346999999996827e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.36199999999934e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.320000000000631e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.415999999998673e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.387999999999533e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.347000000003766e-06, 6.375000000002906e-06, 6.360999999996397e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.361000000003336e-06, 6.388999999995537e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.3329999999972575e-06, 6.360999999996397e-06, 6.361000000003336e-06, 6.374999999995967e-06, 6.361000000003336e-06, 6.389000000002476e-06, 6.388999999995537e-06, 6.375000000002906e-06, 6.402000000002572e-06, 6.347000000003766e-06, 6.361999999995871e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.388" endtime="20201115 22:03:07.390"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.383" endtime="20201115 22:03:07.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.393" endtime="20201115 22:03:07.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.396" endtime="20201115 22:03:07.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.395" endtime="20201115 22:03:07.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.391" endtime="20201115 22:03:07.417"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.015" endtime="20201115 22:03:07.417"></status>
</kw>
<msg timestamp="20201115 22:03:07.417" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.426" endtime="20201115 22:03:07.452"></status>
</kw>
<msg timestamp="20201115 22:03:07.453" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.425" endtime="20201115 22:03:07.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.455" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.454" endtime="20201115 22:03:07.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.456" endtime="20201115 22:03:07.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.422" endtime="20201115 22:03:07.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.420" endtime="20201115 22:03:07.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.466" endtime="20201115 22:03:07.753"></status>
</kw>
<msg timestamp="20201115 22:03:07.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.465" endtime="20201115 22:03:07.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:07.757" endtime="20201115 22:03:07.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.765" endtime="20201115 22:03:07.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.462" endtime="20201115 22:03:07.767"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.460" endtime="20201115 22:03:07.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:07.771" level="INFO">${RESULT} = [{'time': 0.022863417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.023183472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:07.768" endtime="20201115 22:03:07.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:07.785" level="INFO">${OVERHEAD} = {'source_diff': [6.374999999999437e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.403000000002046e-06, 6.458000000000852e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:07.772" endtime="20201115 22:03:07.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.789" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:03:07.788" endtime="20201115 22:03:07.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.792" level="INFO">VALUE: [6.374999999999437e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.403000000002046e-06, 6.458000000000852e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.320000000000631e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.374999999999437e-06, 6.375000000002906e-06, 6.374999999999437e-06, 6.360999999999867e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.334000000000201e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.458000000000852e-06, 6.375000000002906e-06, 6.33400000000367e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.361000000003336e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.375000000002906e-06, 6.33400000000367e-06, 6.361999999995871e-06, 6.375000000002906e-06, 6.375000000002906e-06, 6.319999999997161e-06, 6.374999999995967e-06, 6.360999999996397e-06, 6.374999999995967e-06, 6.403000000002046e-06, 6.375000000002906e-06, 6.374999999995967e-06, 6.374999999995967e-06, 6.431000000001186e-06]</msg>
<status status="PASS" starttime="20201115 22:03:07.790" endtime="20201115 22:03:07.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.786" endtime="20201115 22:03:07.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.795" endtime="20201115 22:03:07.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:07.799" endtime="20201115 22:03:07.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.797" endtime="20201115 22:03:07.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.794" endtime="20201115 22:03:07.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.418" endtime="20201115 22:03:07.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.806" endtime="20201115 22:03:07.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:05.805" endtime="20201115 22:03:07.820"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.822" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.831" endtime="20201115 22:03:07.859"></status>
</kw>
<msg timestamp="20201115 22:03:07.860" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.829" endtime="20201115 22:03:07.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:07.863" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:07.861" endtime="20201115 22:03:07.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.864" endtime="20201115 22:03:07.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.827" endtime="20201115 22:03:07.866"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.825" endtime="20201115 22:03:07.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:07.873" endtime="20201115 22:03:08.158"></status>
</kw>
<msg timestamp="20201115 22:03:08.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0259225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025929167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:07.871" endtime="20201115 22:03:08.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0259225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025929167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:08.162" endtime="20201115 22:03:08.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.170" endtime="20201115 22:03:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.869" endtime="20201115 22:03:08.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.867" endtime="20201115 22:03:08.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.177" level="INFO">${RESULT} = [{'time': 0.025929167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.026272319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:08.173" endtime="20201115 22:03:08.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.191" level="INFO">${OVERHEAD} = {'source_diff': [6.6669999999983964e-06, 6.7079999999976325e-06, 6.679999999998493e-06, 6.6669999999983964e-06, 6.694000000001532e-06, 6.611000000000117e-06, 6.722000000000672e-06, 6.667000000001866e-...</msg>
<status status="PASS" starttime="20201115 22:03:08.178" endtime="20201115 22:03:08.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.196" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.195" endtime="20201115 22:03:08.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.199" level="INFO">VALUE: [6.6669999999983964e-06, 6.7079999999976325e-06, 6.679999999998493e-06, 6.6669999999983964e-06, 6.694000000001532e-06, 6.611000000000117e-06, 6.722000000000672e-06, 6.667000000001866e-06, 6.638999999999257e-06, 6.722000000000672e-06, 6.679999999998493e-06, 6.722000000000672e-06, 6.665999999998923e-06, 6.667000000001866e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.695000000001006e-06, 6.624999999996217e-06, 6.666999999994927e-06, 6.638999999995787e-06, 6.666000000002392e-06, 6.665999999995453e-06, 6.667000000001866e-06, 6.652999999995357e-06, 6.679999999995023e-06, 6.610999999996647e-06, 6.5969999999970774e-06, 6.681000000001436e-06, 6.638999999995787e-06, 6.665999999995453e-06, 6.667000000001866e-06, 6.681000000001436e-06, 6.639000000002726e-06, 6.681000000001436e-06, 6.665999999995453e-06, 6.665999999995453e-06, 6.667000000001866e-06, 6.680000000001962e-06, 6.639000000002726e-06, 6.665999999995453e-06, 6.681000000001436e-06, 6.653000000002296e-06, 6.708000000001102e-06, 6.653000000002296e-06, 6.597000000004016e-06, 6.653000000002296e-06, 6.665999999995453e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.665999999995453e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.197" endtime="20201115 22:03:08.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.192" endtime="20201115 22:03:08.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.202" endtime="20201115 22:03:08.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.205" endtime="20201115 22:03:08.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.204" endtime="20201115 22:03:08.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.200" endtime="20201115 22:03:08.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.823" endtime="20201115 22:03:08.226"></status>
</kw>
<msg timestamp="20201115 22:03:08.226" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.235" endtime="20201115 22:03:08.263"></status>
</kw>
<msg timestamp="20201115 22:03:08.264" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.233" endtime="20201115 22:03:08.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.265" endtime="20201115 22:03:08.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.267" endtime="20201115 22:03:08.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.231" endtime="20201115 22:03:08.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.229" endtime="20201115 22:03:08.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.277" endtime="20201115 22:03:08.563"></status>
</kw>
<msg timestamp="20201115 22:03:08.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.276" endtime="20201115 22:03:08.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023116361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.567" endtime="20201115 22:03:08.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.575" endtime="20201115 22:03:08.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.273" endtime="20201115 22:03:08.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.271" endtime="20201115 22:03:08.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.582" level="INFO">${RESULT} = [{'time': 0.023122986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.023465903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.578" endtime="20201115 22:03:08.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:08.595" level="INFO">${OVERHEAD} = {'source_diff': [6.625000000003156e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.611000000000117e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.666000000002392e-06, 6.665999999998923e-0...</msg>
<status status="PASS" starttime="20201115 22:03:08.583" endtime="20201115 22:03:08.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.600" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:08.599" endtime="20201115 22:03:08.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.602" level="INFO">VALUE: [6.625000000003156e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.611000000000117e-06, 6.680999999997966e-06, 6.6669999999983964e-06, 6.666000000002392e-06, 6.665999999998923e-06, 6.653000000002296e-06, 6.680999999997966e-06, 6.666000000002392e-06, 6.681000000001436e-06, 6.6529999999988265e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.749999999999812e-06, 6.681000000001436e-06, 6.638999999999257e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.681000000001436e-06, 6.666999999994927e-06, 6.653000000002296e-06, 6.695000000001006e-06, 6.666000000002392e-06, 6.653000000002296e-06, 6.639000000002726e-06, 6.666000000002392e-06, 6.652999999995357e-06, 6.667000000001866e-06, 6.666999999994927e-06, 6.653000000002296e-06, 6.667000000001866e-06, 6.639000000002726e-06, 6.667000000001866e-06, 6.652999999995357e-06, 6.665999999995453e-06, 6.666000000002392e-06, 6.639000000002726e-06, 6.666000000002392e-06, 6.611999999996121e-06, 6.680000000001962e-06, 6.610999999996647e-06, 6.652999999995357e-06, 6.667000000001866e-06]</msg>
<status status="PASS" starttime="20201115 22:03:08.601" endtime="20201115 22:03:08.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.596" endtime="20201115 22:03:08.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.606" endtime="20201115 22:03:08.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:08.609" endtime="20201115 22:03:08.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.607" endtime="20201115 22:03:08.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.604" endtime="20201115 22:03:08.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.227" endtime="20201115 22:03:08.630"></status>
</kw>
<msg timestamp="20201115 22:03:08.630" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.639" endtime="20201115 22:03:08.667"></status>
</kw>
<msg timestamp="20201115 22:03:08.667" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.637" endtime="20201115 22:03:08.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:08.668" endtime="20201115 22:03:08.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.671" endtime="20201115 22:03:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.635" endtime="20201115 22:03:08.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.633" endtime="20201115 22:03:08.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.681" endtime="20201115 22:03:08.968"></status>
</kw>
<msg timestamp="20201115 22:03:08.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.679" endtime="20201115 22:03:08.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:08.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:08.972" endtime="20201115 22:03:08.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:08.980" endtime="20201115 22:03:08.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.677" endtime="20201115 22:03:08.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.675" endtime="20201115 22:03:08.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:08.987" level="INFO">${RESULT} = [{'time': 0.023151847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999998923e-06, 'source_diff': 6.665999999998923e-06}, {'time': 0.023488778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:08.983" endtime="20201115 22:03:08.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.001" level="INFO">${OVERHEAD} = {'source_diff': [6.665999999998923e-06, 6.6669999999983964e-06, 6.7230000000001455e-06, 6.638999999999257e-06, 6.666000000002392e-06, 6.638999999999257e-06, 6.6669999999983964e-06, 6.667000000001866e-...</msg>
<status status="PASS" starttime="20201115 22:03:08.988" endtime="20201115 22:03:09.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.005" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.004" endtime="20201115 22:03:09.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.008" level="INFO">VALUE: [6.665999999998923e-06, 6.6669999999983964e-06, 6.7230000000001455e-06, 6.638999999999257e-06, 6.666000000002392e-06, 6.638999999999257e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.679999999998493e-06, 6.667000000001866e-06, 6.665999999998923e-06, 6.5969999999970774e-06, 6.680999999997966e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.7079999999976325e-06, 6.6669999999983964e-06, 6.6669999999983964e-06, 6.680000000001962e-06, 6.637999999999783e-06, 6.6669999999983964e-06, 6.651999999999353e-06, 6.681000000001436e-06, 6.709000000000576e-06, 6.666000000002392e-06, 6.665999999995453e-06, 6.667000000001866e-06, 6.653000000002296e-06, 6.666000000002392e-06, 6.667000000001866e-06, 6.666999999994927e-06, 6.597000000004016e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.666999999994927e-06, 6.666999999994927e-06, 6.653000000002296e-06, 6.639000000002726e-06, 6.665999999995453e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.722000000000672e-06, 6.638999999995787e-06, 6.653000000002296e-06, 6.624999999996217e-06, 6.665999999995453e-06, 6.681000000001436e-06, 6.708000000001102e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.006" endtime="20201115 22:03:09.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.002" endtime="20201115 22:03:09.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.011" endtime="20201115 22:03:09.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.014" endtime="20201115 22:03:09.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.013" endtime="20201115 22:03:09.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.009" endtime="20201115 22:03:09.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:08.631" endtime="20201115 22:03:09.035"></status>
</kw>
<msg timestamp="20201115 22:03:09.035" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.044" endtime="20201115 22:03:09.072"></status>
</kw>
<msg timestamp="20201115 22:03:09.072" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.043" endtime="20201115 22:03:09.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.073" endtime="20201115 22:03:09.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.076" endtime="20201115 22:03:09.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.040" endtime="20201115 22:03:09.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.038" endtime="20201115 22:03:09.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.086" endtime="20201115 22:03:09.374"></status>
</kw>
<msg timestamp="20201115 22:03:09.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.084" endtime="20201115 22:03:09.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.384" endtime="20201115 22:03:09.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.403" endtime="20201115 22:03:09.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.082" endtime="20201115 22:03:09.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.080" endtime="20201115 22:03:09.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.417" level="INFO">${RESULT} = [{'time': 0.022778764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6669999999983964e-06, 'source_diff': 6.6669999999983964e-06}, {'time': 0.023124708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:09.410" endtime="20201115 22:03:09.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.447" level="INFO">${OVERHEAD} = {'source_diff': [6.6669999999983964e-06, 6.651999999999353e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.638999999999257e-06, 6.680999999997966e-06, 6.680999999997966e-06...</msg>
<status status="PASS" starttime="20201115 22:03:09.419" endtime="20201115 22:03:09.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.457" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.455" endtime="20201115 22:03:09.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.462" level="INFO">VALUE: [6.6669999999983964e-06, 6.651999999999353e-06, 6.680999999997966e-06, 6.667000000001866e-06, 6.680999999997966e-06, 6.638999999999257e-06, 6.680999999997966e-06, 6.680999999997966e-06, 6.653000000002296e-06, 6.6669999999983964e-06, 6.6529999999988265e-06, 6.665999999998923e-06, 6.597000000000547e-06, 6.6669999999983964e-06, 6.665999999998923e-06, 6.736000000000242e-06, 6.6529999999988265e-06, 6.679999999998493e-06, 6.680000000001962e-06, 6.653000000002296e-06, 6.6669999999983964e-06, 6.667000000001866e-06, 6.679999999998493e-06, 6.666000000002392e-06, 6.665999999998923e-06, 6.667000000001866e-06, 6.625000000003156e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.611000000003586e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.5969999999970774e-06, 6.653000000002296e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.694000000001532e-06, 6.624999999996217e-06, 6.666000000002392e-06, 6.666999999994927e-06, 6.667000000001866e-06, 6.666999999994927e-06, 6.652000000002822e-06, 6.6519999999958834e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.652000000002822e-06, 6.709000000000576e-06, 6.666000000002392e-06, 6.680000000001962e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.459" endtime="20201115 22:03:09.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.449" endtime="20201115 22:03:09.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.468" endtime="20201115 22:03:09.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.471" endtime="20201115 22:03:09.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.470" endtime="20201115 22:03:09.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.465" endtime="20201115 22:03:09.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.036" endtime="20201115 22:03:09.492"></status>
</kw>
<msg timestamp="20201115 22:03:09.492" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.501" endtime="20201115 22:03:09.529"></status>
</kw>
<msg timestamp="20201115 22:03:09.530" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.499" endtime="20201115 22:03:09.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.531" endtime="20201115 22:03:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.533" endtime="20201115 22:03:09.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.497" endtime="20201115 22:03:09.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.495" endtime="20201115 22:03:09.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.543" endtime="20201115 22:03:09.829"></status>
</kw>
<msg timestamp="20201115 22:03:09.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02293575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:09.542" endtime="20201115 22:03:09.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02293575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:09.834" endtime="20201115 22:03:09.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.842" endtime="20201115 22:03:09.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.539" endtime="20201115 22:03:09.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.537" endtime="20201115 22:03:09.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:09.849" level="INFO">${RESULT} = [{'time': 0.02293575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.023282708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:09.845" endtime="20201115 22:03:09.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:09.863" level="INFO">${OVERHEAD} = {'source_diff': [6.667000000001866e-06, 6.665999999998923e-06, 6.6669999999983964e-06, 6.666000000002392e-06, 6.695000000001006e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.651999999999353e-06...</msg>
<status status="PASS" starttime="20201115 22:03:09.850" endtime="20201115 22:03:09.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.867" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:03:09.866" endtime="20201115 22:03:09.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.870" level="INFO">VALUE: [6.667000000001866e-06, 6.665999999998923e-06, 6.6669999999983964e-06, 6.666000000002392e-06, 6.695000000001006e-06, 6.667000000001866e-06, 6.666000000002392e-06, 6.651999999999353e-06, 6.679999999998493e-06, 6.666000000002392e-06, 6.653000000002296e-06, 6.6529999999988265e-06, 6.665999999998923e-06, 6.624999999999687e-06, 6.6529999999988265e-06, 6.651999999999353e-06, 6.6669999999983964e-06, 6.6529999999988265e-06, 6.695000000001006e-06, 6.679999999998493e-06, 6.681000000001436e-06, 6.693999999998063e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.681000000001436e-06, 6.667000000001866e-06, 6.667000000001866e-06, 6.681000000001436e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.667000000001866e-06, 6.625000000003156e-06, 6.653000000002296e-06, 6.653000000002296e-06, 6.681000000001436e-06, 6.666000000002392e-06, 6.610999999996647e-06, 6.681000000001436e-06, 6.665999999995453e-06, 6.680999999994497e-06, 6.652999999995357e-06, 6.694999999994067e-06, 6.722000000000672e-06, 6.665999999995453e-06, 6.59800000000349e-06, 6.666000000002392e-06, 6.667000000001866e-06, 6.666999999994927e-06, 6.667000000001866e-06, 6.652999999995357e-06]</msg>
<status status="PASS" starttime="20201115 22:03:09.868" endtime="20201115 22:03:09.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.864" endtime="20201115 22:03:09.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.873" endtime="20201115 22:03:09.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:09.876" endtime="20201115 22:03:09.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.875" endtime="20201115 22:03:09.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.871" endtime="20201115 22:03:09.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.493" endtime="20201115 22:03:09.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.821" endtime="20201115 22:03:09.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:07.820" endtime="20201115 22:03:09.897"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.900" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.908" endtime="20201115 22:03:09.937"></status>
</kw>
<msg timestamp="20201115 22:03:09.938" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.907" endtime="20201115 22:03:09.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:09.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:09.939" endtime="20201115 22:03:09.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.941" endtime="20201115 22:03:09.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.904" endtime="20201115 22:03:09.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.902" endtime="20201115 22:03:09.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:09.952" endtime="20201115 22:03:10.251"></status>
</kw>
<msg timestamp="20201115 22:03:10.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:09.950" endtime="20201115 22:03:10.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024988347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.260" endtime="20201115 22:03:10.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.278" endtime="20201115 22:03:10.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.947" endtime="20201115 22:03:10.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.945" endtime="20201115 22:03:10.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.286" level="INFO">${RESULT} = [{'time': 0.024988347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.025355569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.283" endtime="20201115 22:03:10.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.300" level="INFO">${OVERHEAD} = {'source_diff': [6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.972000000000922e-06, 6.972000000000922e-06...</msg>
<status status="PASS" starttime="20201115 22:03:10.287" endtime="20201115 22:03:10.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.304" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.303" endtime="20201115 22:03:10.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.307" level="INFO">VALUE: [6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.944999999997786e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.943999999998313e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.958999999997356e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.958999999993887e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.929999999995273e-06, 6.889000000002976e-06, 6.958000000001352e-06, 7.0419999999987715e-06, 6.9730000000003955e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.943999999994843e-06, 6.958000000001352e-06, 6.9730000000003955e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.9869999999999655e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.916999999995177e-06, 6.986000000000492e-06, 6.957999999994413e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.9869999999999655e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.305" endtime="20201115 22:03:10.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.301" endtime="20201115 22:03:10.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.310" endtime="20201115 22:03:10.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.313" endtime="20201115 22:03:10.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.312" endtime="20201115 22:03:10.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.308" endtime="20201115 22:03:10.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.900" endtime="20201115 22:03:10.334"></status>
</kw>
<msg timestamp="20201115 22:03:10.334" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.343" endtime="20201115 22:03:10.372"></status>
</kw>
<msg timestamp="20201115 22:03:10.372" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.342" endtime="20201115 22:03:10.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.375" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.374" endtime="20201115 22:03:10.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.376" endtime="20201115 22:03:10.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.339" endtime="20201115 22:03:10.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.337" endtime="20201115 22:03:10.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.386" endtime="20201115 22:03:10.672"></status>
</kw>
<msg timestamp="20201115 22:03:10.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.385" endtime="20201115 22:03:10.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.676" endtime="20201115 22:03:10.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.684" endtime="20201115 22:03:10.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.382" endtime="20201115 22:03:10.686"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.381" endtime="20201115 22:03:10.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:10.691" level="INFO">${RESULT} = [{'time': 0.022758722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999998313e-06, 'source_diff': 6.943999999998313e-06}, {'time': 0.023126764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:10.687" endtime="20201115 22:03:10.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:10.704" level="INFO">${OVERHEAD} = {'source_diff': [6.943999999998313e-06, 6.903000000002546e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.958000000001352e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:10.692" endtime="20201115 22:03:10.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.709" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:10.707" endtime="20201115 22:03:10.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.711" level="INFO">VALUE: [6.943999999998313e-06, 6.903000000002546e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.888999999999507e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.931000000001686e-06, 6.888000000000033e-06, 6.9579999999978825e-06, 6.943999999998313e-06, 6.944999999997786e-06, 6.958000000001352e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.929999999995273e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.931000000001686e-06, 6.959000000000826e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.944000000001782e-06, 6.944000000001782e-06, 6.916999999995177e-06, 6.958000000001352e-06, 6.902999999995607e-06, 6.959000000000826e-06, 7.000000000000062e-06, 6.944000000001782e-06, 6.959000000000826e-06, 7.000000000000062e-06, 6.958000000001352e-06, 6.9730000000003955e-06, 6.943999999994843e-06, 6.957999999994413e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:03:10.710" endtime="20201115 22:03:10.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.705" endtime="20201115 22:03:10.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.714" endtime="20201115 22:03:10.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:10.718" endtime="20201115 22:03:10.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.716" endtime="20201115 22:03:10.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.713" endtime="20201115 22:03:10.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.335" endtime="20201115 22:03:10.738"></status>
</kw>
<msg timestamp="20201115 22:03:10.738" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.748" endtime="20201115 22:03:10.777"></status>
</kw>
<msg timestamp="20201115 22:03:10.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.746" endtime="20201115 22:03:10.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:10.780" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:10.778" endtime="20201115 22:03:10.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.781" endtime="20201115 22:03:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.743" endtime="20201115 22:03:10.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.741" endtime="20201115 22:03:10.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:10.791" endtime="20201115 22:03:11.075"></status>
</kw>
<msg timestamp="20201115 22:03:11.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:10.789" endtime="20201115 22:03:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023335528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.079" endtime="20201115 22:03:11.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.087" endtime="20201115 22:03:11.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.787" endtime="20201115 22:03:11.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.785" endtime="20201115 22:03:11.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.094" level="INFO">${RESULT} = [{'time': 0.023335528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.023698403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.091" endtime="20201115 22:03:11.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.107" level="INFO">${OVERHEAD} = {'source_diff': [6.959000000000826e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.972000000000922e-0...</msg>
<status status="PASS" starttime="20201115 22:03:11.095" endtime="20201115 22:03:11.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.112" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.111" endtime="20201115 22:03:11.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.115" level="INFO">VALUE: [6.959000000000826e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.930000000002212e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.972000000000922e-06, 6.958000000001352e-06, 6.9169999999986465e-06, 6.972000000000922e-06, 6.959000000000826e-06, 6.944000000001782e-06, 6.9719999999974525e-06, 6.959000000000826e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.972999999996926e-06, 7.014000000003101e-06, 6.9579999999978825e-06, 6.888999999999507e-06, 6.944000000001782e-06, 6.986000000000492e-06, 6.943999999994843e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.943999999994843e-06, 6.972999999993457e-06, 6.9730000000003955e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06, 6.957999999994413e-06, 6.9730000000003955e-06, 6.959000000000826e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.902999999995607e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.916999999995177e-06, 6.971999999993983e-06, 6.959000000000826e-06, 6.9019999999961335e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.113" endtime="20201115 22:03:11.115"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.108" endtime="20201115 22:03:11.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.118" endtime="20201115 22:03:11.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.121" endtime="20201115 22:03:11.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.120" endtime="20201115 22:03:11.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.116" endtime="20201115 22:03:11.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:10.739" endtime="20201115 22:03:11.142"></status>
</kw>
<msg timestamp="20201115 22:03:11.142" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.151" endtime="20201115 22:03:11.180"></status>
</kw>
<msg timestamp="20201115 22:03:11.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.150" endtime="20201115 22:03:11.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.182" endtime="20201115 22:03:11.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.184" endtime="20201115 22:03:11.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.147" endtime="20201115 22:03:11.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.145" endtime="20201115 22:03:11.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.194" endtime="20201115 22:03:11.478"></status>
</kw>
<msg timestamp="20201115 22:03:11.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.193" endtime="20201115 22:03:11.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023137361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.482" endtime="20201115 22:03:11.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.491" endtime="20201115 22:03:11.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.190" endtime="20201115 22:03:11.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.188" endtime="20201115 22:03:11.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.497" level="INFO">${RESULT} = [{'time': 0.023137361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.929999999998743e-06, 'source_diff': 6.929999999998743e-06}, {'time': 0.023502417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.494" endtime="20201115 22:03:11.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.511" level="INFO">${OVERHEAD} = {'source_diff': [6.929999999998743e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.958999999997356e-06, 6.9579999999978825e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.9579999999978825e-...</msg>
<status status="PASS" starttime="20201115 22:03:11.498" endtime="20201115 22:03:11.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.516" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.515" endtime="20201115 22:03:11.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.518" level="INFO">VALUE: [6.929999999998743e-06, 6.945000000001256e-06, 6.959000000000826e-06, 6.958999999997356e-06, 6.9579999999978825e-06, 6.9579999999978825e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.9719999999974525e-06, 6.944000000001782e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.972000000000922e-06, 6.986000000000492e-06, 6.972000000000922e-06, 6.958999999997356e-06, 6.9169999999986465e-06, 6.959000000000826e-06, 6.945000000001256e-06, 6.930999999998216e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.9579999999978825e-06, 7.000000000000062e-06, 6.931000000001686e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.943999999994843e-06, 6.972000000000922e-06, 6.944999999994317e-06, 6.958000000001352e-06, 7.000000000000062e-06, 6.889000000002976e-06, 6.971999999993983e-06, 6.972000000000922e-06, 6.957999999994413e-06, 6.944999999994317e-06, 6.945000000001256e-06, 6.944999999994317e-06, 6.958000000001352e-06, 6.888999999996037e-06, 6.943999999994843e-06, 6.944000000001782e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.957999999994413e-06, 6.916000000002642e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.517" endtime="20201115 22:03:11.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.512" endtime="20201115 22:03:11.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.522" endtime="20201115 22:03:11.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.525" endtime="20201115 22:03:11.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.524" endtime="20201115 22:03:11.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.520" endtime="20201115 22:03:11.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.143" endtime="20201115 22:03:11.546"></status>
</kw>
<msg timestamp="20201115 22:03:11.546" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.555" endtime="20201115 22:03:11.584"></status>
</kw>
<msg timestamp="20201115 22:03:11.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.553" endtime="20201115 22:03:11.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.586" endtime="20201115 22:03:11.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.588" endtime="20201115 22:03:11.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.551" endtime="20201115 22:03:11.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.549" endtime="20201115 22:03:11.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.598" endtime="20201115 22:03:11.882"></status>
</kw>
<msg timestamp="20201115 22:03:11.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.596" endtime="20201115 22:03:11.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:11.886" endtime="20201115 22:03:11.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.894" endtime="20201115 22:03:11.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.594" endtime="20201115 22:03:11.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.592" endtime="20201115 22:03:11.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:11.901" level="INFO">${RESULT} = [{'time': 0.022721542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.023087917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:11.898" endtime="20201115 22:03:11.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:11.914" level="INFO">${OVERHEAD} = {'source_diff': [6.959000000000826e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.9730000000003955e-0...</msg>
<status status="PASS" starttime="20201115 22:03:11.902" endtime="20201115 22:03:11.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.919" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:03:11.918" endtime="20201115 22:03:11.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.921" level="INFO">VALUE: [6.959000000000826e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.888999999999507e-06, 6.9579999999978825e-06, 6.9579999999978825e-06, 6.9719999999974525e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.9579999999978825e-06, 6.972000000000922e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.943999999998313e-06, 6.959000000000826e-06, 6.958000000001352e-06, 6.958000000001352e-06, 7.013999999999632e-06, 6.959000000000826e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.930000000002212e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.972000000000922e-06, 6.972000000000922e-06, 6.945000000001256e-06, 6.943999999994843e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 6.944000000001782e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.903000000002546e-06, 6.958000000001352e-06, 6.888999999996037e-06, 6.9730000000003955e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.958000000001352e-06, 6.959000000000826e-06]</msg>
<status status="PASS" starttime="20201115 22:03:11.920" endtime="20201115 22:03:11.922"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.915" endtime="20201115 22:03:11.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.925" endtime="20201115 22:03:11.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:11.928" endtime="20201115 22:03:11.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.927" endtime="20201115 22:03:11.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.923" endtime="20201115 22:03:11.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.547" endtime="20201115 22:03:11.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.898" endtime="20201115 22:03:11.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:09.898" endtime="20201115 22:03:11.949"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.952" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.960" endtime="20201115 22:03:11.991"></status>
</kw>
<msg timestamp="20201115 22:03:11.991" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.959" endtime="20201115 22:03:11.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:11.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:11.992" endtime="20201115 22:03:11.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:11.995" endtime="20201115 22:03:11.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.956" endtime="20201115 22:03:11.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.954" endtime="20201115 22:03:11.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.004" endtime="20201115 22:03:12.290"></status>
</kw>
<msg timestamp="20201115 22:03:12.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025586931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.002" endtime="20201115 22:03:12.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025586931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025594181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.294" endtime="20201115 22:03:12.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.302" endtime="20201115 22:03:12.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.000" endtime="20201115 22:03:12.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.998" endtime="20201115 22:03:12.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.309" level="INFO">${RESULT} = [{'time': 0.025594181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.025988847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.305" endtime="20201115 22:03:12.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.322" level="INFO">${OVERHEAD} = {'source_diff': [7.250000000000312e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.1669999999988965e-06, 7.305000000002587e-06, 7.2219999999977025e-06, 7.250000000000312e-0...</msg>
<status status="PASS" starttime="20201115 22:03:12.310" endtime="20201115 22:03:12.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.327" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.326" endtime="20201115 22:03:12.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.329" level="INFO">VALUE: [7.250000000000312e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.1669999999988965e-06, 7.305000000002587e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.208000000001602e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.264000000003351e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.305999999998591e-06, 7.222000000001172e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.305999999998591e-06, 7.333999999997731e-06, 7.236000000000742e-06, 7.193999999995093e-06, 7.221999999994233e-06, 7.236000000000742e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.221999999994233e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.263000000000408e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.328" endtime="20201115 22:03:12.330"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.323" endtime="20201115 22:03:12.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.333" endtime="20201115 22:03:12.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.336" endtime="20201115 22:03:12.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.335" endtime="20201115 22:03:12.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.331" endtime="20201115 22:03:12.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.952" endtime="20201115 22:03:12.357"></status>
</kw>
<msg timestamp="20201115 22:03:12.357" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.366" endtime="20201115 22:03:12.396"></status>
</kw>
<msg timestamp="20201115 22:03:12.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.364" endtime="20201115 22:03:12.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.398" endtime="20201115 22:03:12.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.400" endtime="20201115 22:03:12.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.362" endtime="20201115 22:03:12.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.359" endtime="20201115 22:03:12.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.410" endtime="20201115 22:03:12.698"></status>
</kw>
<msg timestamp="20201115 22:03:12.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.408" endtime="20201115 22:03:12.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.702" endtime="20201115 22:03:12.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.710" endtime="20201115 22:03:12.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.406" endtime="20201115 22:03:12.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.404" endtime="20201115 22:03:12.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:12.717" level="INFO">${RESULT} = [{'time': 0.023003875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.023390139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:12.713" endtime="20201115 22:03:12.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:12.730" level="INFO">${OVERHEAD} = {'source_diff': [7.305999999998591e-06, 7.263999999999882e-06, 7.2370000000002155e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.263999999999882e-06, 7.250000000000312e-06...</msg>
<status status="PASS" starttime="20201115 22:03:12.718" endtime="20201115 22:03:12.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.735" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:12.734" endtime="20201115 22:03:12.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.737" level="INFO">VALUE: [7.305999999998591e-06, 7.263999999999882e-06, 7.2370000000002155e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.249999999996842e-06, 7.290999999999548e-06, 7.2079999999981326e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.305999999998591e-06, 7.208999999997606e-06, 7.194999999994567e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.304999999999118e-06, 7.208000000001602e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.235999999993803e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.195000000001506e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.263000000000408e-06, 7.250000000000312e-06]</msg>
<status status="PASS" starttime="20201115 22:03:12.736" endtime="20201115 22:03:12.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.731" endtime="20201115 22:03:12.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.741" endtime="20201115 22:03:12.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:12.744" endtime="20201115 22:03:12.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.743" endtime="20201115 22:03:12.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.739" endtime="20201115 22:03:12.764"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.357" endtime="20201115 22:03:12.765"></status>
</kw>
<msg timestamp="20201115 22:03:12.765" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.774" endtime="20201115 22:03:12.803"></status>
</kw>
<msg timestamp="20201115 22:03:12.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.772" endtime="20201115 22:03:12.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:12.806" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:12.805" endtime="20201115 22:03:12.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.807" endtime="20201115 22:03:12.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.770" endtime="20201115 22:03:12.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.768" endtime="20201115 22:03:12.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:12.818" endtime="20201115 22:03:13.103"></status>
</kw>
<msg timestamp="20201115 22:03:13.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:12.816" endtime="20201115 22:03:13.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.107" endtime="20201115 22:03:13.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.115" endtime="20201115 22:03:13.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.813" endtime="20201115 22:03:13.117"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.812" endtime="20201115 22:03:13.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.122" level="INFO">${RESULT} = [{'time': 0.022828167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.023220139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:13.118" endtime="20201115 22:03:13.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.136" level="INFO">${OVERHEAD} = {'source_diff': [7.236000000000742e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2230000000006456e-06, 7.249999999996842e-0...</msg>
<status status="PASS" starttime="20201115 22:03:13.123" endtime="20201115 22:03:13.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.141" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.140" endtime="20201115 22:03:13.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.143" level="INFO">VALUE: [7.236000000000742e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.2219999999977025e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2230000000006456e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.320000000001631e-06, 7.250000000000312e-06, 7.249999999996842e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.167000000002366e-06, 7.250000000000312e-06, 7.195000000001506e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.305999999998591e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2370000000002155e-06, 7.2779999999994516e-06, 7.305999999998591e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.2919999999990215e-06, 7.263999999999882e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.142" endtime="20201115 22:03:13.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.137" endtime="20201115 22:03:13.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.147" endtime="20201115 22:03:13.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.150" endtime="20201115 22:03:13.169"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.148" endtime="20201115 22:03:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.145" endtime="20201115 22:03:13.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:12.765" endtime="20201115 22:03:13.171"></status>
</kw>
<msg timestamp="20201115 22:03:13.171" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.180" endtime="20201115 22:03:13.211"></status>
</kw>
<msg timestamp="20201115 22:03:13.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.178" endtime="20201115 22:03:13.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.212" endtime="20201115 22:03:13.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.215" endtime="20201115 22:03:13.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.176" endtime="20201115 22:03:13.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.173" endtime="20201115 22:03:13.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.225" endtime="20201115 22:03:13.509"></status>
</kw>
<msg timestamp="20201115 22:03:13.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02310125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231085, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:13.223" endtime="20201115 22:03:13.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02310125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231085, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:13.513" endtime="20201115 22:03:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.522" endtime="20201115 22:03:13.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.221" endtime="20201115 22:03:13.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.219" endtime="20201115 22:03:13.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.528" level="INFO">${RESULT} = [{'time': 0.0231085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.023495833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:13.525" endtime="20201115 22:03:13.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.542" level="INFO">${OVERHEAD} = {'source_diff': [7.250000000000312e-06, 7.250000000000312e-06, 7.263000000000408e-06, 7.181000000001936e-06, 7.249999999996842e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.236000000000742e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:13.529" endtime="20201115 22:03:13.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.546" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.545" endtime="20201115 22:03:13.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.549" level="INFO">VALUE: [7.250000000000312e-06, 7.250000000000312e-06, 7.263000000000408e-06, 7.181000000001936e-06, 7.249999999996842e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.236000000000742e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.264000000003351e-06, 7.193999999998563e-06, 7.318999999998688e-06, 7.236000000000742e-06, 7.249999999996842e-06, 7.250000000000312e-06, 7.209000000001076e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.222999999997176e-06, 7.2079999999981326e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.208000000001602e-06, 7.236000000000742e-06, 7.181000000001936e-06, 7.250000000000312e-06, 7.29200000000596e-06, 7.235999999993803e-06, 7.236000000000742e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.249999999993373e-06, 7.290999999999548e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.235999999993803e-06, 7.249999999993373e-06, 7.236000000000742e-06, 7.180000000002462e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.263999999999882e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.547" endtime="20201115 22:03:13.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.543" endtime="20201115 22:03:13.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.552" endtime="20201115 22:03:13.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.555" endtime="20201115 22:03:13.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.554" endtime="20201115 22:03:13.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.550" endtime="20201115 22:03:13.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.171" endtime="20201115 22:03:13.576"></status>
</kw>
<msg timestamp="20201115 22:03:13.576" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.585" endtime="20201115 22:03:13.615"></status>
</kw>
<msg timestamp="20201115 22:03:13.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.583" endtime="20201115 22:03:13.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.617" endtime="20201115 22:03:13.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.619" endtime="20201115 22:03:13.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.581" endtime="20201115 22:03:13.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.579" endtime="20201115 22:03:13.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.629" endtime="20201115 22:03:13.913"></status>
</kw>
<msg timestamp="20201115 22:03:13.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.628" endtime="20201115 22:03:13.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:13.918" endtime="20201115 22:03:13.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.926" endtime="20201115 22:03:13.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.625" endtime="20201115 22:03:13.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.623" endtime="20201115 22:03:13.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:13.933" level="INFO">${RESULT} = [{'time': 0.022858153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.023242819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:13.929" endtime="20201115 22:03:13.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:13.946" level="INFO">${OVERHEAD} = {'source_diff': [7.208999999997606e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.222000000001172e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:13.934" endtime="20201115 22:03:13.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.951" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:03:13.950" endtime="20201115 22:03:13.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.953" level="INFO">VALUE: [7.208999999997606e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.235999999997272e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.2919999999990215e-06, 7.305999999998591e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.236000000000742e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.250000000000312e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.3190000000056266e-06, 7.250000000000312e-06, 7.222000000001172e-06, 7.236000000000742e-06, 7.250000000000312e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.318999999998688e-06, 7.263999999999882e-06, 7.194000000002032e-06, 7.236000000000742e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.2370000000002155e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.193999999995093e-06, 7.222000000001172e-06, 7.30600000000553e-06]</msg>
<status status="PASS" starttime="20201115 22:03:13.952" endtime="20201115 22:03:13.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.947" endtime="20201115 22:03:13.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.956" endtime="20201115 22:03:13.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:13.960" endtime="20201115 22:03:13.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.958" endtime="20201115 22:03:13.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.955" endtime="20201115 22:03:13.980"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.577" endtime="20201115 22:03:13.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.951" endtime="20201115 22:03:13.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:11.950" endtime="20201115 22:03:13.981"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:13.983" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:13.992" endtime="20201115 22:03:14.023"></status>
</kw>
<msg timestamp="20201115 22:03:14.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:13.990" endtime="20201115 22:03:14.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.024" endtime="20201115 22:03:14.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.027" endtime="20201115 22:03:14.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.988" endtime="20201115 22:03:14.029"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.986" endtime="20201115 22:03:14.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.037" endtime="20201115 22:03:14.322"></status>
</kw>
<msg timestamp="20201115 22:03:14.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.035" endtime="20201115 22:03:14.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025324764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025332264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.327" endtime="20201115 22:03:14.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.335" endtime="20201115 22:03:14.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.032" endtime="20201115 22:03:14.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.031" endtime="20201115 22:03:14.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.342" level="INFO">${RESULT} = [{'time': 0.025332264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.025746694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:14.338" endtime="20201115 22:03:14.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.355" level="INFO">${OVERHEAD} = {'source_diff': [7.500000000000562e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.570000000001881e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.583000000001977e-0...</msg>
<status status="PASS" starttime="20201115 22:03:14.343" endtime="20201115 22:03:14.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.360" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.358" endtime="20201115 22:03:14.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.362" level="INFO">VALUE: [7.500000000000562e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.570000000001881e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.583000000001977e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.5969999999980775e-06, 7.540999999999798e-06, 7.485999999997522e-06, 7.555999999998841e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.569000000005877e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.513000000000658e-06, 7.526999999993289e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.514000000000132e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.569999999998411e-06, 7.54200000000621e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.527999999999702e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.361" endtime="20201115 22:03:14.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.356" endtime="20201115 22:03:14.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.365" endtime="20201115 22:03:14.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.369" endtime="20201115 22:03:14.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.367" endtime="20201115 22:03:14.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.364" endtime="20201115 22:03:14.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.984" endtime="20201115 22:03:14.389"></status>
</kw>
<msg timestamp="20201115 22:03:14.390" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.398" endtime="20201115 22:03:14.430"></status>
</kw>
<msg timestamp="20201115 22:03:14.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.397" endtime="20201115 22:03:14.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.432" endtime="20201115 22:03:14.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.439" endtime="20201115 22:03:14.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.394" endtime="20201115 22:03:14.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.392" endtime="20201115 22:03:14.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.449" endtime="20201115 22:03:14.735"></status>
</kw>
<msg timestamp="20201115 22:03:14.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.448" endtime="20201115 22:03:14.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:14.739" endtime="20201115 22:03:14.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.747" endtime="20201115 22:03:14.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.445" endtime="20201115 22:03:14.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.443" endtime="20201115 22:03:14.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:14.754" level="INFO">${RESULT} = [{'time': 0.022772639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.02319225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:03:14.751" endtime="20201115 22:03:14.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:14.768" level="INFO">${OVERHEAD} = {'source_diff': [7.5419999999992715e-06, 7.542000000002741e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.540999999999798e-...</msg>
<status status="PASS" starttime="20201115 22:03:14.755" endtime="20201115 22:03:14.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.773" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:14.772" endtime="20201115 22:03:14.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.775" level="INFO">VALUE: [7.5419999999992715e-06, 7.542000000002741e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.527000000000228e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.540999999999798e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.583999999997981e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.555000000006307e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.540999999999798e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.513000000000658e-06, 7.527999999999702e-06, 7.486000000000992e-06, 7.540999999999798e-06]</msg>
<status status="PASS" starttime="20201115 22:03:14.774" endtime="20201115 22:03:14.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.769" endtime="20201115 22:03:14.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.778" endtime="20201115 22:03:14.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:14.782" endtime="20201115 22:03:14.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.780" endtime="20201115 22:03:14.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.777" endtime="20201115 22:03:14.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.390" endtime="20201115 22:03:14.803"></status>
</kw>
<msg timestamp="20201115 22:03:14.803" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.812" endtime="20201115 22:03:14.843"></status>
</kw>
<msg timestamp="20201115 22:03:14.844" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.810" endtime="20201115 22:03:14.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:14.846" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:14.845" endtime="20201115 22:03:14.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.847" endtime="20201115 22:03:14.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.807" endtime="20201115 22:03:14.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.805" endtime="20201115 22:03:14.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:14.857" endtime="20201115 22:03:15.143"></status>
</kw>
<msg timestamp="20201115 22:03:15.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02335125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:14.856" endtime="20201115 22:03:15.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02335125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:15.147" endtime="20201115 22:03:15.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.155" endtime="20201115 22:03:15.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.853" endtime="20201115 22:03:15.157"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.851" endtime="20201115 22:03:15.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.162" level="INFO">${RESULT} = [{'time': 0.02335125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.023769847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:15.158" endtime="20201115 22:03:15.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.175" level="INFO">${OVERHEAD} = {'source_diff': [7.527999999999702e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-0...</msg>
<status status="PASS" starttime="20201115 22:03:15.163" endtime="20201115 22:03:15.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.179" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.178" endtime="20201115 22:03:15.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.182" level="INFO">VALUE: [7.527999999999702e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.528000000003171e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.57000000000535e-06, 7.527999999999702e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.485999999994053e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.54200000000621e-06, 7.540999999999798e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.58400000000492e-06, 7.582999999998508e-06, 7.500000000000562e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.568999999998938e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.181" endtime="20201115 22:03:15.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.176" endtime="20201115 22:03:15.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.185" endtime="20201115 22:03:15.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.188" endtime="20201115 22:03:15.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.187" endtime="20201115 22:03:15.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.183" endtime="20201115 22:03:15.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:14.803" endtime="20201115 22:03:15.209"></status>
</kw>
<msg timestamp="20201115 22:03:15.210" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.219" endtime="20201115 22:03:15.250"></status>
</kw>
<msg timestamp="20201115 22:03:15.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.217" endtime="20201115 22:03:15.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.252" endtime="20201115 22:03:15.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.254" endtime="20201115 22:03:15.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.214" endtime="20201115 22:03:15.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.212" endtime="20201115 22:03:15.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.264" endtime="20201115 22:03:15.550"></status>
</kw>
<msg timestamp="20201115 22:03:15.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023560653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023568181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.263" endtime="20201115 22:03:15.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023560653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023568181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.554" endtime="20201115 22:03:15.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.562" endtime="20201115 22:03:15.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.260" endtime="20201115 22:03:15.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.258" endtime="20201115 22:03:15.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:15.569" level="INFO">${RESULT} = [{'time': 0.023568181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.023980472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:15.565" endtime="20201115 22:03:15.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:15.582" level="INFO">${OVERHEAD} = {'source_diff': [7.527999999999702e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5269999999967585e-06, 7.540999999999798e-06, 7.500000000000562e-...</msg>
<status status="PASS" starttime="20201115 22:03:15.570" endtime="20201115 22:03:15.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.586" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:15.585" endtime="20201115 22:03:15.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.589" level="INFO">VALUE: [7.527999999999702e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5269999999967585e-06, 7.540999999999798e-06, 7.500000000000562e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.5969999999980775e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.568999999998938e-06, 7.514000000000132e-06, 7.527999999999702e-06, 7.556000000002311e-06, 7.540999999999798e-06, 7.554999999999368e-06, 7.569000000005877e-06, 7.582999999998508e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.583999999997981e-06, 7.5419999999992715e-06, 7.485999999994053e-06, 7.5969999999980775e-06, 7.554999999999368e-06, 7.55600000000578e-06, 7.527000000000228e-06, 7.527999999999702e-06, 7.54200000000621e-06, 7.540999999999798e-06, 7.59800000000449e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.5280000000066405e-06, 7.486000000000992e-06, 7.527000000000228e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.58400000000492e-06, 7.5280000000066405e-06, 7.5419999999992715e-06, 7.527000000000228e-06]</msg>
<status status="PASS" starttime="20201115 22:03:15.587" endtime="20201115 22:03:15.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.583" endtime="20201115 22:03:15.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.592" endtime="20201115 22:03:15.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:15.596" endtime="20201115 22:03:15.615"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.594" endtime="20201115 22:03:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.591" endtime="20201115 22:03:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.210" endtime="20201115 22:03:15.617"></status>
</kw>
<msg timestamp="20201115 22:03:15.617" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.626" endtime="20201115 22:03:15.657"></status>
</kw>
<msg timestamp="20201115 22:03:15.657" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.624" endtime="20201115 22:03:15.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:15.658" endtime="20201115 22:03:15.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.661" endtime="20201115 22:03:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.622" endtime="20201115 22:03:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.620" endtime="20201115 22:03:15.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.671" endtime="20201115 22:03:15.961"></status>
</kw>
<msg timestamp="20201115 22:03:15.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.670" endtime="20201115 22:03:15.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:15.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:15.970" endtime="20201115 22:03:15.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:15.988" endtime="20201115 22:03:15.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.667" endtime="20201115 22:03:15.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.665" endtime="20201115 22:03:15.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.003" level="INFO">${RESULT} = [{'time': 0.023420417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.023838514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:03:15.995" endtime="20201115 22:03:16.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.033" level="INFO">${OVERHEAD} = {'source_diff': [7.5419999999992715e-06, 7.542000000002741e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527000000000228e-06, 7.556000000002311e-06, 7.540999999999798e-06, 7.582999999998508e-0...</msg>
<status status="PASS" starttime="20201115 22:03:16.005" endtime="20201115 22:03:16.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.042" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.040" endtime="20201115 22:03:16.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.048" level="INFO">VALUE: [7.5419999999992715e-06, 7.542000000002741e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.527000000000228e-06, 7.556000000002311e-06, 7.540999999999798e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.570000000001881e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.540999999999798e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.54200000000621e-06, 7.5419999999992715e-06, 7.527000000000228e-06, 7.568999999998938e-06, 7.473000000000896e-06, 7.513000000000658e-06, 7.486000000000992e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.512999999993719e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.527999999999702e-06, 7.541000000006737e-06, 7.485999999994053e-06, 7.527999999999702e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.555000000006307e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 7.554999999999368e-06, 7.582999999998508e-06, 7.554999999999368e-06, 7.568999999998938e-06, 7.527999999999702e-06, 7.5419999999992715e-06, 7.54200000000621e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.045" endtime="20201115 22:03:16.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.035" endtime="20201115 22:03:16.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.053" endtime="20201115 22:03:16.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.056" endtime="20201115 22:03:16.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.055" endtime="20201115 22:03:16.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.051" endtime="20201115 22:03:16.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:15.617" endtime="20201115 22:03:16.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.982" endtime="20201115 22:03:16.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:13.981" endtime="20201115 22:03:16.078"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.080" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.089" endtime="20201115 22:03:16.122"></status>
</kw>
<msg timestamp="20201115 22:03:16.122" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.087" endtime="20201115 22:03:16.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.123" endtime="20201115 22:03:16.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.126" endtime="20201115 22:03:16.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.085" endtime="20201115 22:03:16.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.083" endtime="20201115 22:03:16.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.135" endtime="20201115 22:03:16.421"></status>
</kw>
<msg timestamp="20201115 22:03:16.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025356917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02536475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:16.133" endtime="20201115 22:03:16.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025356917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02536475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:16.425" endtime="20201115 22:03:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.433" endtime="20201115 22:03:16.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.131" endtime="20201115 22:03:16.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.129" endtime="20201115 22:03:16.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.440" level="INFO">${RESULT} = [{'time': 0.02536475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.025806347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:16.436" endtime="20201115 22:03:16.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.454" level="INFO">${OVERHEAD} = {'source_diff': [7.832999999998758e-06, 7.847000000001797e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.875000000000937e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.846999999998328e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:16.441" endtime="20201115 22:03:16.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.459" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.458" endtime="20201115 22:03:16.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.461" level="INFO">VALUE: [7.832999999998758e-06, 7.847000000001797e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.875000000000937e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.846999999998328e-06, 7.791000000000048e-06, 7.818999999999188e-06, 7.847000000001797e-06, 7.8340000000017e-06, 7.8340000000017e-06, 7.8340000000017e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.819999999998661e-06, 7.833000000005697e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.860999999997897e-06, 7.80600000000603e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.84800000000474e-06, 7.84800000000474e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.83400000000517e-06, 7.846999999998328e-06, 7.8200000000056e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.833000000005697e-06, 7.804999999999618e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.833999999998231e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.833000000005697e-06, 7.833999999998231e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.460" endtime="20201115 22:03:16.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.455" endtime="20201115 22:03:16.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.465" endtime="20201115 22:03:16.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.468" endtime="20201115 22:03:16.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.466" endtime="20201115 22:03:16.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.463" endtime="20201115 22:03:16.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.081" endtime="20201115 22:03:16.489"></status>
</kw>
<msg timestamp="20201115 22:03:16.489" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.498" endtime="20201115 22:03:16.530"></status>
</kw>
<msg timestamp="20201115 22:03:16.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.496" endtime="20201115 22:03:16.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.533" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.532" endtime="20201115 22:03:16.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.534" endtime="20201115 22:03:16.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.494" endtime="20201115 22:03:16.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.491" endtime="20201115 22:03:16.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.544" endtime="20201115 22:03:16.844"></status>
</kw>
<msg timestamp="20201115 22:03:16.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:16.543" endtime="20201115 22:03:16.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:16.853" endtime="20201115 22:03:16.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.863" endtime="20201115 22:03:16.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.540" endtime="20201115 22:03:16.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.538" endtime="20201115 22:03:16.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:16.870" level="INFO">${RESULT} = [{'time': 0.02270925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.023147931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:16.866" endtime="20201115 22:03:16.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:16.883" level="INFO">${OVERHEAD} = {'source_diff': [7.916999999999647e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7....</msg>
<status status="PASS" starttime="20201115 22:03:16.871" endtime="20201115 22:03:16.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.888" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:16.887" endtime="20201115 22:03:16.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.891" level="INFO">VALUE: [7.916999999999647e-06, 7.8340000000017e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.82000000000213e-06, 7.847000000001797e-06, 7.846999999998328e-06, 7.8340000000017e-06, 7.804999999999618e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.791000000000048e-06, 7.833999999998231e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.833000000005697e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.819000000006127e-06, 7.805999999999091e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.875000000004406e-06, 7.818999999999188e-06, 7.819999999998661e-06, 7.846999999998328e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.805999999999091e-06, 7.777999999999952e-06]</msg>
<status status="PASS" starttime="20201115 22:03:16.889" endtime="20201115 22:03:16.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.885" endtime="20201115 22:03:16.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.894" endtime="20201115 22:03:16.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:16.897" endtime="20201115 22:03:16.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.896" endtime="20201115 22:03:16.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.892" endtime="20201115 22:03:16.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.489" endtime="20201115 22:03:16.918"></status>
</kw>
<msg timestamp="20201115 22:03:16.918" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.927" endtime="20201115 22:03:16.959"></status>
</kw>
<msg timestamp="20201115 22:03:16.959" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.925" endtime="20201115 22:03:16.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:16.962" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:16.961" endtime="20201115 22:03:16.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.963" endtime="20201115 22:03:16.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.923" endtime="20201115 22:03:16.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.921" endtime="20201115 22:03:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:16.973" endtime="20201115 22:03:17.259"></status>
</kw>
<msg timestamp="20201115 22:03:17.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:16.971" endtime="20201115 22:03:17.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.263" endtime="20201115 22:03:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.271" endtime="20201115 22:03:17.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.969" endtime="20201115 22:03:17.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.967" endtime="20201115 22:03:17.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.278" level="INFO">${RESULT} = [{'time': 0.023090681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.023530444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.275" endtime="20201115 22:03:17.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.292" level="INFO">${OVERHEAD} = {'source_diff': [7.833999999998231e-06, 7.819000000002657e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.833999999998231e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:17.279" endtime="20201115 22:03:17.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.296" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.295" endtime="20201115 22:03:17.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.299" level="INFO">VALUE: [7.833999999998231e-06, 7.819000000002657e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.804999999999618e-06, 7.819000000002657e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.806000000002561e-06, 7.875000000000937e-06, 7.818999999999188e-06, 7.791999999999522e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.777999999999952e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.8200000000056e-06, 7.847999999997801e-06, 7.833999999998231e-06, 7.847999999997801e-06, 7.804999999999618e-06, 7.847000000005266e-06, 7.833999999998231e-06, 7.833999999998231e-06, 7.805999999999091e-06, 7.847000000005266e-06, 7.832999999998758e-06, 7.860999999997897e-06, 7.777999999999952e-06, 7.833999999998231e-06, 7.847000000005266e-06, 7.8200000000056e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.777999999999952e-06, 7.83400000000517e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.86200000000431e-06, 7.860999999997897e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.297" endtime="20201115 22:03:17.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.293" endtime="20201115 22:03:17.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.302" endtime="20201115 22:03:17.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.305" endtime="20201115 22:03:17.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.304" endtime="20201115 22:03:17.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.300" endtime="20201115 22:03:17.326"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.918" endtime="20201115 22:03:17.326"></status>
</kw>
<msg timestamp="20201115 22:03:17.326" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.335" endtime="20201115 22:03:17.367"></status>
</kw>
<msg timestamp="20201115 22:03:17.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.333" endtime="20201115 22:03:17.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.369" endtime="20201115 22:03:17.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.371" endtime="20201115 22:03:17.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.331" endtime="20201115 22:03:17.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.329" endtime="20201115 22:03:17.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.381" endtime="20201115 22:03:17.667"></status>
</kw>
<msg timestamp="20201115 22:03:17.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.380" endtime="20201115 22:03:17.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022862625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.671" endtime="20201115 22:03:17.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.680" endtime="20201115 22:03:17.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.377" endtime="20201115 22:03:17.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.375" endtime="20201115 22:03:17.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:17.687" level="INFO">${RESULT} = [{'time': 0.022862625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833000000002227e-06, 'source_diff': 7.833000000002227e-06}, {'time': 0.023301389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:17.683" endtime="20201115 22:03:17.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:17.700" level="INFO">${OVERHEAD} = {'source_diff': [7.833000000002227e-06, 7.805999999999091e-06, 7.791999999999522e-06, 7.8340000000017e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7...</msg>
<status status="PASS" starttime="20201115 22:03:17.688" endtime="20201115 22:03:17.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.705" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:17.704" endtime="20201115 22:03:17.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.707" level="INFO">VALUE: [7.833000000002227e-06, 7.805999999999091e-06, 7.791999999999522e-06, 7.8340000000017e-06, 7.833999999998231e-06, 7.819999999998661e-06, 7.764000000000382e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.806000000002561e-06, 7.833999999998231e-06, 7.82000000000213e-06, 7.818999999999188e-06, 7.833000000002227e-06, 7.833000000002227e-06, 7.819999999998661e-06, 7.833000000002227e-06, 7.832999999998758e-06, 7.819999999998661e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.861000000004836e-06, 7.819999999998661e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.833000000005697e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.901999999997134e-06, 7.832999999998758e-06, 7.818999999999188e-06, 7.83400000000517e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.833999999998231e-06, 7.847000000005266e-06, 7.833999999998231e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.847000000005266e-06, 7.83400000000517e-06, 7.84800000000474e-06, 7.805000000006557e-06, 7.847000000005266e-06, 7.83400000000517e-06, 7.818999999999188e-06]</msg>
<status status="PASS" starttime="20201115 22:03:17.706" endtime="20201115 22:03:17.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.701" endtime="20201115 22:03:17.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.710" endtime="20201115 22:03:17.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:17.714" endtime="20201115 22:03:17.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.712" endtime="20201115 22:03:17.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.708" endtime="20201115 22:03:17.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.327" endtime="20201115 22:03:17.734"></status>
</kw>
<msg timestamp="20201115 22:03:17.735" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.743" endtime="20201115 22:03:17.776"></status>
</kw>
<msg timestamp="20201115 22:03:17.777" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.742" endtime="20201115 22:03:17.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:17.779" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:17.778" endtime="20201115 22:03:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.780" endtime="20201115 22:03:17.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.739" endtime="20201115 22:03:17.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.737" endtime="20201115 22:03:17.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:17.790" endtime="20201115 22:03:18.076"></status>
</kw>
<msg timestamp="20201115 22:03:18.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:17.789" endtime="20201115 22:03:18.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.081" endtime="20201115 22:03:18.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.089" endtime="20201115 22:03:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.786" endtime="20201115 22:03:18.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.784" endtime="20201115 22:03:18.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.096" level="INFO">${RESULT} = [{'time': 0.023005125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.023443861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.093" endtime="20201115 22:03:18.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.110" level="INFO">${OVERHEAD} = {'source_diff': [7.847000000001797e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.833000000002227e-06, 7.846999999998328e-06, 7.833000000002227e-06, 7.847000000001797e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:18.097" endtime="20201115 22:03:18.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.115" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.114" endtime="20201115 22:03:18.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.117" level="INFO">VALUE: [7.847000000001797e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.833000000002227e-06, 7.833000000002227e-06, 7.846999999998328e-06, 7.833000000002227e-06, 7.847000000001797e-06, 7.82000000000213e-06, 7.832999999998758e-06, 7.861000000001367e-06, 7.847000000001797e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.833999999998231e-06, 7.8340000000017e-06, 7.875000000000937e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.832999999998758e-06, 7.777999999999952e-06, 7.819999999998661e-06, 7.874999999997467e-06, 7.847999999997801e-06, 7.832999999998758e-06, 7.833000000005697e-06, 7.847000000005266e-06, 7.833999999998231e-06, 7.833000000005697e-06, 7.846999999998328e-06, 7.833999999998231e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.833999999998231e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.80600000000603e-06, 7.819999999998661e-06, 7.846999999998328e-06, 7.832999999998758e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.847999999997801e-06, 7.818999999999188e-06, 7.832999999998758e-06, 7.846999999998328e-06, 7.86200000000431e-06, 7.833000000005697e-06, 7.819000000006127e-06, 7.819999999998661e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.116" endtime="20201115 22:03:18.118"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.111" endtime="20201115 22:03:18.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.121" endtime="20201115 22:03:18.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.124" endtime="20201115 22:03:18.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.123" endtime="20201115 22:03:18.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.119" endtime="20201115 22:03:18.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:17.735" endtime="20201115 22:03:18.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.079" endtime="20201115 22:03:18.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:16.078" endtime="20201115 22:03:18.145"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.147" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.156" endtime="20201115 22:03:18.191"></status>
</kw>
<msg timestamp="20201115 22:03:18.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.155" endtime="20201115 22:03:18.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.193" endtime="20201115 22:03:18.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.195" endtime="20201115 22:03:18.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.152" endtime="20201115 22:03:18.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.150" endtime="20201115 22:03:18.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.205" endtime="20201115 22:03:18.490"></status>
</kw>
<msg timestamp="20201115 22:03:18.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02565325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025661389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:18.203" endtime="20201115 22:03:18.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02565325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025661389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:18.494" endtime="20201115 22:03:18.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.502" endtime="20201115 22:03:18.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.201" endtime="20201115 22:03:18.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.199" endtime="20201115 22:03:18.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.509" level="INFO">${RESULT} = [{'time': 0.025661389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.026132125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.505" endtime="20201115 22:03:18.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.522" level="INFO">${OVERHEAD} = {'source_diff': [8.139000000000757e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.138999999997287e-06, 8.125000000001187e-06, 8.139000000000757e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:18.510" endtime="20201115 22:03:18.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.527" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.526" endtime="20201115 22:03:18.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.529" level="INFO">VALUE: [8.139000000000757e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.138999999997287e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.110999999998147e-06, 8.153000000000327e-06, 8.166999999999897e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.111000000005086e-06, 8.139000000004226e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.180000000003462e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.138999999997287e-06, 8.082999999999008e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.166999999996427e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.054999999999868e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.069999999998911e-06, 8.07000000000585e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.139000000004226e-06, 8.152999999996857e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.179999999996523e-06, 8.110999999998147e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.528" endtime="20201115 22:03:18.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.523" endtime="20201115 22:03:18.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.532" endtime="20201115 22:03:18.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.536" endtime="20201115 22:03:18.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.534" endtime="20201115 22:03:18.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.531" endtime="20201115 22:03:18.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.148" endtime="20201115 22:03:18.557"></status>
</kw>
<msg timestamp="20201115 22:03:18.557" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.566" endtime="20201115 22:03:18.600"></status>
</kw>
<msg timestamp="20201115 22:03:18.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.564" endtime="20201115 22:03:18.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.602" endtime="20201115 22:03:18.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.605" endtime="20201115 22:03:18.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.562" endtime="20201115 22:03:18.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.559" endtime="20201115 22:03:18.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.615" endtime="20201115 22:03:18.900"></status>
</kw>
<msg timestamp="20201115 22:03:18.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.613" endtime="20201115 22:03:18.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:18.905" endtime="20201115 22:03:18.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.913" endtime="20201115 22:03:18.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.611" endtime="20201115 22:03:18.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.609" endtime="20201115 22:03:18.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:18.919" level="INFO">${RESULT} = [{'time': 0.023081125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083000000002477e-06, 'source_diff': 8.083000000002477e-06}, {'time': 0.023553028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:18.916" endtime="20201115 22:03:18.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:18.933" level="INFO">${OVERHEAD} = {'source_diff': [8.083000000002477e-06, 8.111000000001617e-06, 8.194999999999036e-06, 8.125000000001187e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.125000000001187e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:18.920" endtime="20201115 22:03:18.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.937" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:18.936" endtime="20201115 22:03:18.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:18.940" level="INFO">VALUE: [8.083000000002477e-06, 8.111000000001617e-06, 8.194999999999036e-06, 8.125000000001187e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.165999999996953e-06, 8.139000000000757e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.11200000000109e-06, 8.082999999999008e-06, 8.068999999999438e-06, 8.124999999997717e-06, 8.180999999995997e-06, 8.125000000004656e-06, 8.139000000004226e-06, 8.138000000004753e-06, 8.125000000004656e-06, 8.055999999999341e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.166000000003892e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.111999999997621e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.111000000005086e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.195000000002506e-06, 8.068999999999438e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.110999999998147e-06]</msg>
<status status="PASS" starttime="20201115 22:03:18.938" endtime="20201115 22:03:18.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.934" endtime="20201115 22:03:18.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.943" endtime="20201115 22:03:18.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:18.946" endtime="20201115 22:03:18.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.945" endtime="20201115 22:03:18.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.941" endtime="20201115 22:03:18.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.557" endtime="20201115 22:03:18.967"></status>
</kw>
<msg timestamp="20201115 22:03:18.967" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:18.977" endtime="20201115 22:03:19.010"></status>
</kw>
<msg timestamp="20201115 22:03:19.011" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:18.975" endtime="20201115 22:03:19.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.012" endtime="20201115 22:03:19.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.015" endtime="20201115 22:03:19.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.972" endtime="20201115 22:03:19.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.970" endtime="20201115 22:03:19.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.025" endtime="20201115 22:03:19.310"></status>
</kw>
<msg timestamp="20201115 22:03:19.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.023" endtime="20201115 22:03:19.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.314" endtime="20201115 22:03:19.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.323" endtime="20201115 22:03:19.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.021" endtime="20201115 22:03:19.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.019" endtime="20201115 22:03:19.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.329" level="INFO">${RESULT} = [{'time': 0.023578778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.07000000000238e-06, 'source_diff': 8.07000000000238e-06}, {'time': 0.024046042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:19.326" endtime="20201115 22:03:19.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.343" level="INFO">${OVERHEAD} = {'source_diff': [8.07000000000238e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.11200000000109e-06, 8.152000000000853e-06, 8...</msg>
<status status="PASS" starttime="20201115 22:03:19.330" endtime="20201115 22:03:19.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.347" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.346" endtime="20201115 22:03:19.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.350" level="INFO">VALUE: [8.07000000000238e-06, 8.125000000001187e-06, 8.139000000000757e-06, 8.139000000000757e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.11200000000109e-06, 8.152000000000853e-06, 8.166999999999897e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.097000000002047e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.097999999998051e-06, 8.138999999997287e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.138999999997287e-06, 8.111000000005086e-06, 8.08400000000542e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.068999999999438e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.138999999997287e-06, 8.125000000004656e-06, 8.125000000004656e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.069999999998911e-06, 8.110999999998147e-06, 8.111000000005086e-06, 8.139000000004226e-06, 8.124999999997717e-06, 8.07000000000585e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.138999999997287e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.348" endtime="20201115 22:03:19.350"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.343" endtime="20201115 22:03:19.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.353" endtime="20201115 22:03:19.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.356" endtime="20201115 22:03:19.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.355" endtime="20201115 22:03:19.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.351" endtime="20201115 22:03:19.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.968" endtime="20201115 22:03:19.377"></status>
</kw>
<msg timestamp="20201115 22:03:19.377" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.386" endtime="20201115 22:03:19.421"></status>
</kw>
<msg timestamp="20201115 22:03:19.421" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.385" endtime="20201115 22:03:19.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.424" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.422" endtime="20201115 22:03:19.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.425" endtime="20201115 22:03:19.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.382" endtime="20201115 22:03:19.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.380" endtime="20201115 22:03:19.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.435" endtime="20201115 22:03:19.729"></status>
</kw>
<msg timestamp="20201115 22:03:19.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023316014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.433" endtime="20201115 22:03:19.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023316014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.738" endtime="20201115 22:03:19.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.757" endtime="20201115 22:03:19.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.431" endtime="20201115 22:03:19.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.429" endtime="20201115 22:03:19.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:19.771" level="INFO">${RESULT} = [{'time': 0.023324139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000001187e-06, 'source_diff': 8.125000000001187e-06}, {'time': 0.023791903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:19.764" endtime="20201115 22:03:19.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:19.797" level="INFO">${OVERHEAD} = {'source_diff': [8.125000000001187e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.139000000000757e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.138999999997287e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:19.773" endtime="20201115 22:03:19.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.801" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:19.800" endtime="20201115 22:03:19.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.804" level="INFO">VALUE: [8.125000000001187e-06, 8.125000000001187e-06, 8.124999999997717e-06, 8.139000000000757e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.111000000001617e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.138000000001283e-06, 8.124999999997717e-06, 8.166000000000423e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.125000000004656e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.194000000003032e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.208000000002602e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.138000000004753e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.167000000003366e-06, 8.125000000004656e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.110999999998147e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.055999999999341e-06, 8.11200000000456e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.097999999998051e-06, 8.111000000005086e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.110999999998147e-06, 8.069000000006377e-06]</msg>
<status status="PASS" starttime="20201115 22:03:19.802" endtime="20201115 22:03:19.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.797" endtime="20201115 22:03:19.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.807" endtime="20201115 22:03:19.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:19.816" endtime="20201115 22:03:19.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.814" endtime="20201115 22:03:19.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.805" endtime="20201115 22:03:19.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.378" endtime="20201115 22:03:19.836"></status>
</kw>
<msg timestamp="20201115 22:03:19.837" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.845" endtime="20201115 22:03:19.880"></status>
</kw>
<msg timestamp="20201115 22:03:19.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.844" endtime="20201115 22:03:19.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:19.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:19.881" endtime="20201115 22:03:19.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.884" endtime="20201115 22:03:19.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.841" endtime="20201115 22:03:19.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.839" endtime="20201115 22:03:19.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:19.894" endtime="20201115 22:03:20.180"></status>
</kw>
<msg timestamp="20201115 22:03:20.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:19.892" endtime="20201115 22:03:20.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.184" endtime="20201115 22:03:20.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.193" endtime="20201115 22:03:20.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.890" endtime="20201115 22:03:20.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.888" endtime="20201115 22:03:20.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.199" level="INFO">${RESULT} = [{'time': 0.023102278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.023571917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.196" endtime="20201115 22:03:20.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.213" level="INFO">${OVERHEAD} = {'source_diff': [8.069999999998911e-06, 8.166999999999897e-06, 8.125000000001187e-06, 8.096999999998578e-06, 8.152000000000853e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.110999999998147e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:20.200" endtime="20201115 22:03:20.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.217" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.216" endtime="20201115 22:03:20.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.220" level="INFO">VALUE: [8.069999999998911e-06, 8.166999999999897e-06, 8.125000000001187e-06, 8.096999999998578e-06, 8.152000000000853e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.125000000001187e-06, 8.181000000002936e-06, 8.139000000000757e-06, 8.137999999997814e-06, 8.124999999997717e-06, 8.193999999999563e-06, 8.193999999999563e-06, 8.125000000001187e-06, 8.055999999999341e-06, 8.11200000000456e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.097000000005516e-06, 8.138999999997287e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.097999999998051e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.097999999998051e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.152999999996857e-06, 8.110999999998147e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.125000000004656e-06, 8.124999999997717e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.139000000004226e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.218" endtime="20201115 22:03:20.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.214" endtime="20201115 22:03:20.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.223" endtime="20201115 22:03:20.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.227" endtime="20201115 22:03:20.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.225" endtime="20201115 22:03:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.222" endtime="20201115 22:03:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:19.837" endtime="20201115 22:03:20.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.146" endtime="20201115 22:03:20.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:18.145" endtime="20201115 22:03:20.248"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.250" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.259" endtime="20201115 22:03:20.294"></status>
</kw>
<msg timestamp="20201115 22:03:20.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.257" endtime="20201115 22:03:20.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.296" endtime="20201115 22:03:20.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.299" endtime="20201115 22:03:20.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.255" endtime="20201115 22:03:20.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.253" endtime="20201115 22:03:20.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.308" endtime="20201115 22:03:20.594"></status>
</kw>
<msg timestamp="20201115 22:03:20.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.306" endtime="20201115 22:03:20.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025390708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025399125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.598" endtime="20201115 22:03:20.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.606" endtime="20201115 22:03:20.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.303" endtime="20201115 22:03:20.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.302" endtime="20201115 22:03:20.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:20.613" level="INFO">${RESULT} = [{'time': 0.025399125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.025894417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:20.609" endtime="20201115 22:03:20.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:20.626" level="INFO">${OVERHEAD} = {'source_diff': [8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.375000000001437e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:20.614" endtime="20201115 22:03:20.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.631" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:20.630" endtime="20201115 22:03:20.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.634" level="INFO">VALUE: [8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.403000000000577e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.375000000001437e-06, 8.389000000001007e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.430999999999716e-06, 8.444999999995817e-06, 8.445000000002756e-06, 8.416999999996677e-06, 8.402000000004572e-06, 8.402999999997107e-06, 8.472999999994957e-06, 8.360999999998397e-06, 8.360999999998397e-06, 8.388999999997537e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.417000000003616e-06, 8.416000000004142e-06, 8.415999999997203e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.417000000003616e-06, 8.403000000004046e-06, 8.417000000003616e-06, 8.416999999996677e-06, 8.417000000003616e-06, 8.431000000003186e-06, 8.471999999995483e-06, 8.402999999997107e-06, 8.332999999999258e-06, 8.430000000003712e-06, 8.431000000003186e-06, 8.402999999997107e-06, 8.458999999995387e-06, 8.416999999996677e-06, 8.416000000004142e-06, 8.402999999997107e-06, 8.431000000003186e-06, 8.430000000003712e-06, 8.415999999997203e-06, 8.444000000003282e-06, 8.416000000004142e-06]</msg>
<status status="PASS" starttime="20201115 22:03:20.632" endtime="20201115 22:03:20.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.627" endtime="20201115 22:03:20.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.637" endtime="20201115 22:03:20.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:20.640" endtime="20201115 22:03:20.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.639" endtime="20201115 22:03:20.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.635" endtime="20201115 22:03:20.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.251" endtime="20201115 22:03:20.661"></status>
</kw>
<msg timestamp="20201115 22:03:20.661" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.670" endtime="20201115 22:03:20.705"></status>
</kw>
<msg timestamp="20201115 22:03:20.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.668" endtime="20201115 22:03:20.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:20.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:20.707" endtime="20201115 22:03:20.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.709" endtime="20201115 22:03:20.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.666" endtime="20201115 22:03:20.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.664" endtime="20201115 22:03:20.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:20.719" endtime="20201115 22:03:21.004"></status>
</kw>
<msg timestamp="20201115 22:03:21.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022931319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:20.718" endtime="20201115 22:03:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022931319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.008" endtime="20201115 22:03:21.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.017" endtime="20201115 22:03:21.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.715" endtime="20201115 22:03:21.019"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.713" endtime="20201115 22:03:21.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.023" level="INFO">${RESULT} = [{'time': 0.022939736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.023434028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.020" endtime="20201115 22:03:21.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.037" level="INFO">${OVERHEAD} = {'source_diff': [8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.401999999997634e-06, 8.417000000000147e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:21.024" endtime="20201115 22:03:21.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.042" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.041" endtime="20201115 22:03:21.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.044" level="INFO">VALUE: [8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.401999999997634e-06, 8.417000000000147e-06, 8.402000000001103e-06, 8.443999999999813e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.389000000001007e-06, 8.375000000001437e-06, 8.443999999999813e-06, 8.401999999997634e-06, 8.431000000003186e-06, 8.389000000004476e-06, 8.416000000004142e-06, 8.429999999996773e-06, 8.416999999996677e-06, 8.415999999997203e-06, 8.444999999995817e-06, 8.458000000002852e-06, 8.416000000004142e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.402999999997107e-06, 8.459000000002326e-06, 8.430999999996247e-06, 8.416999999996677e-06, 8.431000000003186e-06, 8.430999999996247e-06, 8.430999999996247e-06, 8.417000000003616e-06, 8.389000000004476e-06, 8.416000000004142e-06, 8.459000000002326e-06, 8.417000000003616e-06, 8.389000000004476e-06, 8.388999999997537e-06, 8.430000000003712e-06, 8.471999999995483e-06, 8.416999999996677e-06, 8.347999999998301e-06, 8.431000000003186e-06, 8.417000000003616e-06, 8.444999999995817e-06, 8.500000000001562e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.043" endtime="20201115 22:03:21.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.038" endtime="20201115 22:03:21.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.047" endtime="20201115 22:03:21.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.051" endtime="20201115 22:03:21.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.049" endtime="20201115 22:03:21.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.045" endtime="20201115 22:03:21.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.662" endtime="20201115 22:03:21.071"></status>
</kw>
<msg timestamp="20201115 22:03:21.072" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.080" endtime="20201115 22:03:21.116"></status>
</kw>
<msg timestamp="20201115 22:03:21.117" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.079" endtime="20201115 22:03:21.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.119" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.118" endtime="20201115 22:03:21.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.121" endtime="20201115 22:03:21.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.076" endtime="20201115 22:03:21.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.074" endtime="20201115 22:03:21.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.132" endtime="20201115 22:03:21.418"></status>
</kw>
<msg timestamp="20201115 22:03:21.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.130" endtime="20201115 22:03:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023167222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.423" endtime="20201115 22:03:21.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.431" endtime="20201115 22:03:21.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.127" endtime="20201115 22:03:21.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.125" endtime="20201115 22:03:21.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.438" level="INFO">${RESULT} = [{'time': 0.023167222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.023665417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.434" endtime="20201115 22:03:21.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.452" level="INFO">${OVERHEAD} = {'source_diff': [8.416000000000673e-06, 8.473000000001896e-06, 8.417000000000147e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.389000000001007e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:21.439" endtime="20201115 22:03:21.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.457" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.456" endtime="20201115 22:03:21.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.459" level="INFO">VALUE: [8.416000000000673e-06, 8.473000000001896e-06, 8.417000000000147e-06, 8.402999999997107e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.430999999999716e-06, 8.415999999997203e-06, 8.472000000002422e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.402999999997107e-06, 8.417000000003616e-06, 8.401999999997634e-06, 8.417000000003616e-06, 8.430999999996247e-06, 8.417000000003616e-06, 8.416000000004142e-06, 8.332999999999258e-06, 8.417000000003616e-06, 8.415999999997203e-06, 8.443999999996343e-06, 8.402999999997107e-06, 8.431000000003186e-06, 8.445000000002756e-06, 8.416999999996677e-06, 8.430999999996247e-06, 8.472999999994957e-06, 8.430999999996247e-06, 8.444000000003282e-06, 8.416999999996677e-06, 8.402999999997107e-06, 8.430999999996247e-06, 8.417000000003616e-06, 8.415999999997203e-06, 8.401999999997634e-06, 8.417000000003616e-06, 8.388999999997537e-06, 8.389000000004476e-06, 8.430000000003712e-06, 8.472999999994957e-06, 8.444000000003282e-06, 8.417000000003616e-06, 8.445000000002756e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.458" endtime="20201115 22:03:21.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.453" endtime="20201115 22:03:21.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.462" endtime="20201115 22:03:21.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.466" endtime="20201115 22:03:21.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.464" endtime="20201115 22:03:21.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.461" endtime="20201115 22:03:21.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.072" endtime="20201115 22:03:21.486"></status>
</kw>
<msg timestamp="20201115 22:03:21.487" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.496" endtime="20201115 22:03:21.531"></status>
</kw>
<msg timestamp="20201115 22:03:21.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.494" endtime="20201115 22:03:21.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.534" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.532" endtime="20201115 22:03:21.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.535" endtime="20201115 22:03:21.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.491" endtime="20201115 22:03:21.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.489" endtime="20201115 22:03:21.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.545" endtime="20201115 22:03:21.829"></status>
</kw>
<msg timestamp="20201115 22:03:21.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023280139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023288542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.543" endtime="20201115 22:03:21.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023280139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023288542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:21.833" endtime="20201115 22:03:21.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.842" endtime="20201115 22:03:21.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.541" endtime="20201115 22:03:21.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.539" endtime="20201115 22:03:21.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:21.848" level="INFO">${RESULT} = [{'time': 0.023288542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000000577e-06, 'source_diff': 8.403000000000577e-06}, {'time': 0.023780514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:21.845" endtime="20201115 22:03:21.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:21.862" level="INFO">${OVERHEAD} = {'source_diff': [8.403000000000577e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.360999999998397e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.471999999998953e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:21.849" endtime="20201115 22:03:21.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.866" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:21.865" endtime="20201115 22:03:21.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.869" level="INFO">VALUE: [8.403000000000577e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.360999999998397e-06, 8.430000000000243e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.471999999998953e-06, 8.389000000001007e-06, 8.429999999996773e-06, 8.403000000000577e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.457999999999383e-06, 8.415999999997203e-06, 8.500000000001562e-06, 8.415999999997203e-06, 8.416999999996677e-06, 8.416999999996677e-06, 8.417000000003616e-06, 8.402999999997107e-06, 8.403000000004046e-06, 8.415999999997203e-06, 8.402999999997107e-06, 8.416000000004142e-06, 8.403000000004046e-06, 8.416000000004142e-06, 8.429999999996773e-06, 8.431000000003186e-06, 8.430000000003712e-06, 8.429999999996773e-06, 8.416999999996677e-06, 8.471999999995483e-06, 8.402999999997107e-06, 8.416000000004142e-06, 8.431000000003186e-06, 8.430000000003712e-06, 8.445000000002756e-06, 8.457999999995913e-06, 8.416999999996677e-06, 8.402999999997107e-06, 8.416999999996677e-06, 8.415999999997203e-06, 8.430999999996247e-06, 8.388999999997537e-06, 8.416999999996677e-06, 8.375000000004906e-06, 8.403000000004046e-06]</msg>
<status status="PASS" starttime="20201115 22:03:21.867" endtime="20201115 22:03:21.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.863" endtime="20201115 22:03:21.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.872" endtime="20201115 22:03:21.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:21.875" endtime="20201115 22:03:21.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.874" endtime="20201115 22:03:21.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.870" endtime="20201115 22:03:21.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.487" endtime="20201115 22:03:21.896"></status>
</kw>
<msg timestamp="20201115 22:03:21.896" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.905" endtime="20201115 22:03:21.940"></status>
</kw>
<msg timestamp="20201115 22:03:21.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.903" endtime="20201115 22:03:21.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:21.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:21.942" endtime="20201115 22:03:21.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.944" endtime="20201115 22:03:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.901" endtime="20201115 22:03:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.899" endtime="20201115 22:03:21.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:21.954" endtime="20201115 22:03:22.240"></status>
</kw>
<msg timestamp="20201115 22:03:22.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:21.952" endtime="20201115 22:03:22.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:03:22.245" endtime="20201115 22:03:22.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.253" endtime="20201115 22:03:22.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.950" endtime="20201115 22:03:22.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.948" endtime="20201115 22:03:22.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.260" level="INFO">${RESULT} = [{'time': 0.0229785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000000147e-06, 'source_diff': 8.417000000000147e-06}, {'time': 0.023477111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:03:22.256" endtime="20201115 22:03:22.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.273" level="INFO">${OVERHEAD} = {'source_diff': [8.417000000000147e-06, 8.402999999997107e-06, 8.417000000000147e-06, 8.402000000001103e-06, 8.485999999998523e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:22.261" endtime="20201115 22:03:22.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.277" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.276" endtime="20201115 22:03:22.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.280" level="INFO">VALUE: [8.417000000000147e-06, 8.402999999997107e-06, 8.417000000000147e-06, 8.402000000001103e-06, 8.485999999998523e-06, 8.417000000000147e-06, 8.417000000000147e-06, 8.403000000000577e-06, 8.471999999998953e-06, 8.402000000001103e-06, 8.417000000000147e-06, 8.444999999999286e-06, 8.417000000000147e-06, 8.388999999997537e-06, 8.430999999999716e-06, 8.443999999999813e-06, 8.417000000000147e-06, 8.402000000004572e-06, 8.415999999997203e-06, 8.429999999996773e-06, 8.416999999996677e-06, 8.416999999996677e-06, 8.415999999997203e-06, 8.416999999996677e-06, 8.401999999997634e-06, 8.402999999997107e-06, 8.402999999997107e-06, 8.458000000002852e-06, 8.416999999996677e-06, 8.346999999998828e-06, 8.429999999996773e-06, 8.429999999996773e-06, 8.34800000000524e-06, 8.402999999997107e-06, 8.415999999997203e-06, 8.416000000004142e-06, 8.471999999995483e-06, 8.360999999998397e-06, 8.417000000003616e-06, 8.416000000004142e-06, 8.415999999997203e-06, 8.416999999996677e-06, 8.402999999997107e-06, 8.401999999997634e-06, 8.459000000002326e-06, 8.402999999997107e-06, 8.429999999996773e-06, 8.417000000003616e-06, 8.417000000003616e-06, 8.416000000004142e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.279" endtime="20201115 22:03:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.274" endtime="20201115 22:03:22.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.283" endtime="20201115 22:03:22.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.286" endtime="20201115 22:03:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.285" endtime="20201115 22:03:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.281" endtime="20201115 22:03:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:21.897" endtime="20201115 22:03:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.249" endtime="20201115 22:03:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:20.248" endtime="20201115 22:03:22.307"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.310" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.319" endtime="20201115 22:03:22.356"></status>
</kw>
<msg timestamp="20201115 22:03:22.356" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.317" endtime="20201115 22:03:22.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.357" endtime="20201115 22:03:22.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.360" endtime="20201115 22:03:22.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.314" endtime="20201115 22:03:22.362"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.312" endtime="20201115 22:03:22.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.369" endtime="20201115 22:03:22.663"></status>
</kw>
<msg timestamp="20201115 22:03:22.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.368" endtime="20201115 22:03:22.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025371875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025380611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:22.672" endtime="20201115 22:03:22.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.690" endtime="20201115 22:03:22.693"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.365" endtime="20201115 22:03:22.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.363" endtime="20201115 22:03:22.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:22.704" level="INFO">${RESULT} = [{'time': 0.025380611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.02591075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:22.697" endtime="20201115 22:03:22.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:22.727" level="INFO">${OVERHEAD} = {'source_diff': [8.736000000002242e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.721999999999203e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:22.706" endtime="20201115 22:03:22.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.732" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:22.731" endtime="20201115 22:03:22.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.734" level="INFO">VALUE: [8.736000000002242e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.708999999995637e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.695000000003006e-06, 8.721999999995733e-06, 8.693999999996593e-06, 8.707999999996163e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.723000000002146e-06, 8.708000000003102e-06, 8.721999999995733e-06, 8.709000000002576e-06, 8.722000000002672e-06, 8.651999999997884e-06, 8.707999999996163e-06, 8.653000000004296e-06, 8.791000000001048e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.722999999995207e-06, 8.694999999996067e-06, 8.666999999996927e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.792000000000522e-06, 8.708999999995637e-06, 8.736000000002242e-06, 8.721999999995733e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.723000000002146e-06, 8.681000000003436e-06, 8.708000000003102e-06, 8.707999999996163e-06]</msg>
<status status="PASS" starttime="20201115 22:03:22.733" endtime="20201115 22:03:22.735"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.728" endtime="20201115 22:03:22.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.737" endtime="20201115 22:03:22.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:22.741" endtime="20201115 22:03:22.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.739" endtime="20201115 22:03:22.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.736" endtime="20201115 22:03:22.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.310" endtime="20201115 22:03:22.762"></status>
</kw>
<msg timestamp="20201115 22:03:22.762" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.771" endtime="20201115 22:03:22.808"></status>
</kw>
<msg timestamp="20201115 22:03:22.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.769" endtime="20201115 22:03:22.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:22.811" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:22.809" endtime="20201115 22:03:22.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.812" endtime="20201115 22:03:22.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.766" endtime="20201115 22:03:22.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.764" endtime="20201115 22:03:22.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:22.822" endtime="20201115 22:03:23.108"></status>
</kw>
<msg timestamp="20201115 22:03:23.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:22.821" endtime="20201115 22:03:23.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:03:23.112" endtime="20201115 22:03:23.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.121" endtime="20201115 22:03:23.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.818" endtime="20201115 22:03:23.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.816" endtime="20201115 22:03:23.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.127" level="INFO">${RESULT} = [{'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.023410042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.124" endtime="20201115 22:03:23.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.142" level="INFO">${OVERHEAD} = {'source_diff': [8.721999999999203e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.708999999999106e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:23.128" endtime="20201115 22:03:23.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.146" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.145" endtime="20201115 22:03:23.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.149" level="INFO">VALUE: [8.721999999999203e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.736999999998246e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.681000000003436e-06, 8.722999999995207e-06, 8.694000000003532e-06, 8.694999999996067e-06, 8.778000000000952e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.638999999997787e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.708999999995637e-06, 8.723000000002146e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.638999999997787e-06, 8.693999999996593e-06, 8.708000000003102e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.708000000003102e-06, 8.694000000003532e-06, 8.735999999995303e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.147" endtime="20201115 22:03:23.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.143" endtime="20201115 22:03:23.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.152" endtime="20201115 22:03:23.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.156" endtime="20201115 22:03:23.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.154" endtime="20201115 22:03:23.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.151" endtime="20201115 22:03:23.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.762" endtime="20201115 22:03:23.177"></status>
</kw>
<msg timestamp="20201115 22:03:23.177" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.187" endtime="20201115 22:03:23.224"></status>
</kw>
<msg timestamp="20201115 22:03:23.224" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.184" endtime="20201115 22:03:23.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.227" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.225" endtime="20201115 22:03:23.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.228" endtime="20201115 22:03:23.230"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.182" endtime="20201115 22:03:23.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.180" endtime="20201115 22:03:23.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.238" endtime="20201115 22:03:23.537"></status>
</kw>
<msg timestamp="20201115 22:03:23.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.236" endtime="20201115 22:03:23.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023472556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.542" endtime="20201115 22:03:23.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.550" endtime="20201115 22:03:23.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.234" endtime="20201115 22:03:23.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.232" endtime="20201115 22:03:23.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.556" level="INFO">${RESULT} = [{'time': 0.023472556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999998342e-06, 'source_diff': 8.749999999998342e-06}, {'time': 0.023996167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.553" endtime="20201115 22:03:23.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.570" level="INFO">${OVERHEAD} = {'source_diff': [8.749999999998342e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:23.557" endtime="20201115 22:03:23.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.574" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.573" endtime="20201115 22:03:23.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.577" level="INFO">VALUE: [8.749999999998342e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.708999999999106e-06, 8.792000000000522e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.694999999996067e-06, 8.709000000002576e-06, 8.708999999995637e-06, 8.694000000003532e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.707999999996163e-06, 8.667000000003866e-06, 8.736000000002242e-06, 8.694000000003532e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.667000000003866e-06, 8.709000000002576e-06, 8.638999999997787e-06, 8.693999999996593e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.679999999997023e-06, 8.681000000003436e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.721999999995733e-06, 8.695000000003006e-06, 8.610999999998648e-06, 8.695000000003006e-06, 8.652999999997357e-06, 8.681000000003436e-06, 8.693999999996593e-06, 8.722000000002672e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.575" endtime="20201115 22:03:23.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.571" endtime="20201115 22:03:23.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.580" endtime="20201115 22:03:23.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.583" endtime="20201115 22:03:23.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.582" endtime="20201115 22:03:23.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.578" endtime="20201115 22:03:23.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.178" endtime="20201115 22:03:23.604"></status>
</kw>
<msg timestamp="20201115 22:03:23.605" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.614" endtime="20201115 22:03:23.651"></status>
</kw>
<msg timestamp="20201115 22:03:23.651" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.612" endtime="20201115 22:03:23.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.654" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:23.652" endtime="20201115 22:03:23.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.655" endtime="20201115 22:03:23.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.609" endtime="20201115 22:03:23.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.607" endtime="20201115 22:03:23.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.665" endtime="20201115 22:03:23.950"></status>
</kw>
<msg timestamp="20201115 22:03:23.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023380042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.663" endtime="20201115 22:03:23.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023380042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:23.954" endtime="20201115 22:03:23.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.962" endtime="20201115 22:03:23.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.661" endtime="20201115 22:03:23.964"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.659" endtime="20201115 22:03:23.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:23.969" level="INFO">${RESULT} = [{'time': 0.023380042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.023902042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:23.966" endtime="20201115 22:03:23.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:23.982" level="INFO">${OVERHEAD} = {'source_diff': [8.708999999999106e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:23.970" endtime="20201115 22:03:23.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.987" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:23.986" endtime="20201115 22:03:23.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:23.989" level="INFO">VALUE: [8.708999999999106e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000003532e-06, 8.666999999996927e-06, 8.709000000002576e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.736000000002242e-06, 8.693999999996593e-06, 8.708999999995637e-06, 8.722000000002672e-06, 8.708000000003102e-06, 8.708999999995637e-06, 8.708000000003102e-06, 8.709000000002576e-06, 8.721999999995733e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.708000000003102e-06, 8.708999999995637e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.707999999996163e-06, 8.695000000003006e-06, 8.707999999996163e-06, 8.693999999996593e-06, 8.737000000001716e-06, 8.695000000003006e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.721999999995733e-06]</msg>
<status status="PASS" starttime="20201115 22:03:23.988" endtime="20201115 22:03:23.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.983" endtime="20201115 22:03:23.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:23.992" endtime="20201115 22:03:23.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:23.996" endtime="20201115 22:03:24.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.995" endtime="20201115 22:03:24.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.991" endtime="20201115 22:03:24.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:23.605" endtime="20201115 22:03:24.017"></status>
</kw>
<msg timestamp="20201115 22:03:24.017" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.026" endtime="20201115 22:03:24.064"></status>
</kw>
<msg timestamp="20201115 22:03:24.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.025" endtime="20201115 22:03:24.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.067" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.065" endtime="20201115 22:03:24.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.068" endtime="20201115 22:03:24.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.022" endtime="20201115 22:03:24.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.020" endtime="20201115 22:03:24.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.078" endtime="20201115 22:03:24.363"></status>
</kw>
<msg timestamp="20201115 22:03:24.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.076" endtime="20201115 22:03:24.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.367" endtime="20201115 22:03:24.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.376" endtime="20201115 22:03:24.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.074" endtime="20201115 22:03:24.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.072" endtime="20201115 22:03:24.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.382" level="INFO">${RESULT} = [{'time': 0.023371819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.023892319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.379" endtime="20201115 22:03:24.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.396" level="INFO">${OVERHEAD} = {'source_diff': [8.694000000000063e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:24.383" endtime="20201115 22:03:24.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.400" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.399" endtime="20201115 22:03:24.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.403" level="INFO">VALUE: [8.694000000000063e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.722999999995207e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.638999999997787e-06, 8.709000000002576e-06, 8.721999999995733e-06, 8.708999999995637e-06, 8.708000000003102e-06, 8.708999999995637e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.707999999996163e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.694999999996067e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.693999999996593e-06, 8.680999999996497e-06, 8.680999999996497e-06, 8.723000000002146e-06, 8.709000000002576e-06, 8.721999999995733e-06, 8.722999999995207e-06, 8.693999999996593e-06, 8.708000000003102e-06, 8.707999999996163e-06, 8.708000000003102e-06, 8.736000000002242e-06, 8.694000000003532e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.401" endtime="20201115 22:03:24.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.396" endtime="20201115 22:03:24.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.406" endtime="20201115 22:03:24.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.410" endtime="20201115 22:03:24.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.408" endtime="20201115 22:03:24.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.404" endtime="20201115 22:03:24.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.018" endtime="20201115 22:03:24.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.309" endtime="20201115 22:03:24.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:22.308" endtime="20201115 22:03:24.431"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.433" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.442" endtime="20201115 22:03:24.481"></status>
</kw>
<msg timestamp="20201115 22:03:24.481" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.440" endtime="20201115 22:03:24.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.482" endtime="20201115 22:03:24.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.485" endtime="20201115 22:03:24.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.438" endtime="20201115 22:03:24.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.436" endtime="20201115 22:03:24.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.494" endtime="20201115 22:03:24.779"></status>
</kw>
<msg timestamp="20201115 22:03:24.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025481875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.492" endtime="20201115 22:03:24.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025481875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.784" endtime="20201115 22:03:24.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.792" endtime="20201115 22:03:24.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.490" endtime="20201115 22:03:24.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.488" endtime="20201115 22:03:24.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:24.798" level="INFO">${RESULT} = [{'time': 0.025481875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944000000000313e-06, 'source_diff': 8.944000000000313e-06}, {'time': 0.026036597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:24.795" endtime="20201115 22:03:24.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:24.813" level="INFO">${OVERHEAD} = {'source_diff': [8.944000000000313e-06, 9.000000000002062e-06, 8.930000000000743e-06, 8.957999999999883e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.083000000000008e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:24.799" endtime="20201115 22:03:24.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.817" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:24.816" endtime="20201115 22:03:24.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.828" level="INFO">VALUE: [8.944000000000313e-06, 9.000000000002062e-06, 8.930000000000743e-06, 8.957999999999883e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.083000000000008e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.056000000000342e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.056000000000342e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.027000000001728e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.028000000001202e-06, 9.014000000001632e-06, 8.971999999995983e-06, 8.986000000002492e-06, 9.027000000001728e-06, 9.000000000002062e-06, 8.930000000004212e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.027000000001728e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.985999999995553e-06, 9.013000000002158e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.986000000002492e-06, 8.972000000002922e-06, 9.014000000001632e-06, 8.957999999996413e-06]</msg>
<status status="PASS" starttime="20201115 22:03:24.818" endtime="20201115 22:03:24.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.814" endtime="20201115 22:03:24.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.831" endtime="20201115 22:03:24.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:24.834" endtime="20201115 22:03:24.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.833" endtime="20201115 22:03:24.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.829" endtime="20201115 22:03:24.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.433" endtime="20201115 22:03:24.855"></status>
</kw>
<msg timestamp="20201115 22:03:24.855" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.864" endtime="20201115 22:03:24.903"></status>
</kw>
<msg timestamp="20201115 22:03:24.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.863" endtime="20201115 22:03:24.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:24.906" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:24.904" endtime="20201115 22:03:24.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.907" endtime="20201115 22:03:24.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.860" endtime="20201115 22:03:24.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.858" endtime="20201115 22:03:24.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:24.917" endtime="20201115 22:03:25.202"></status>
</kw>
<msg timestamp="20201115 22:03:25.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:24.915" endtime="20201115 22:03:25.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.206" endtime="20201115 22:03:25.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.215" endtime="20201115 22:03:25.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.913" endtime="20201115 22:03:25.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.911" endtime="20201115 22:03:25.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.221" level="INFO">${RESULT} = [{'time': 0.022861139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.023413889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.218" endtime="20201115 22:03:25.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.235" level="INFO">${OVERHEAD} = {'source_diff': [8.985999999999023e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.985999999999023e-06, 9.014000000001632e-06, 9.000000000002062e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:25.222" endtime="20201115 22:03:25.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.240" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.239" endtime="20201115 22:03:25.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.242" level="INFO">VALUE: [8.985999999999023e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.985999999999023e-06, 8.985999999999023e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.042000000000772e-06, 9.014000000001632e-06, 9.014000000001632e-06, 8.985999999999023e-06, 8.944000000000313e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.999999999998592e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.000000000002062e-06, 8.986000000002492e-06, 8.985999999995553e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.945000000003256e-06, 9.013999999994693e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.999999999995123e-06, 8.972999999995457e-06, 9.000000000002062e-06, 9.069000000000438e-06, 8.986000000002492e-06, 9.014000000001632e-06, 9.055000000000868e-06, 8.916999999997177e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.014000000001632e-06, 8.972000000002922e-06, 9.013999999994693e-06, 8.986000000002492e-06, 9.014000000001632e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.241" endtime="20201115 22:03:25.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.236" endtime="20201115 22:03:25.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.245" endtime="20201115 22:03:25.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.249" endtime="20201115 22:03:25.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.247" endtime="20201115 22:03:25.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.244" endtime="20201115 22:03:25.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.856" endtime="20201115 22:03:25.269"></status>
</kw>
<msg timestamp="20201115 22:03:25.270" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.279" endtime="20201115 22:03:25.316"></status>
</kw>
<msg timestamp="20201115 22:03:25.317" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.277" endtime="20201115 22:03:25.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.319" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.318" endtime="20201115 22:03:25.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.321" endtime="20201115 22:03:25.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.274" endtime="20201115 22:03:25.324"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.272" endtime="20201115 22:03:25.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.331" endtime="20201115 22:03:25.615"></status>
</kw>
<msg timestamp="20201115 22:03:25.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.329" endtime="20201115 22:03:25.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.620" endtime="20201115 22:03:25.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.628" endtime="20201115 22:03:25.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.327" endtime="20201115 22:03:25.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.325" endtime="20201115 22:03:25.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:25.634" level="INFO">${RESULT} = [{'time': 0.023145958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.023705014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:25.631" endtime="20201115 22:03:25.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:25.648" level="INFO">${OVERHEAD} = {'source_diff': [9.000000000002062e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.014000000001632e-06, 9.027999999997732e-06, 9.000000000002062e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:25.636" endtime="20201115 22:03:25.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.653" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:25.652" endtime="20201115 22:03:25.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.655" level="INFO">VALUE: [9.000000000002062e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.014000000001632e-06, 9.027999999997732e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.985999999999023e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.013999999994693e-06, 9.000000000002062e-06, 8.985999999995553e-06, 9.055000000000868e-06, 9.014000000001632e-06, 9.069999999999911e-06, 9.056000000000342e-06, 8.930999999996747e-06, 9.014000000001632e-06, 8.999999999995123e-06, 8.999999999995123e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.042000000000772e-06, 9.000000000002062e-06, 8.985999999995553e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.986999999995027e-06, 8.985999999995553e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.957999999996413e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.069999999999911e-06, 9.028000000001202e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.000000000002062e-06, 8.999999999995123e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201115 22:03:25.654" endtime="20201115 22:03:25.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.649" endtime="20201115 22:03:25.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.658" endtime="20201115 22:03:25.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:25.662" endtime="20201115 22:03:25.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.660" endtime="20201115 22:03:25.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.657" endtime="20201115 22:03:25.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.270" endtime="20201115 22:03:25.683"></status>
</kw>
<msg timestamp="20201115 22:03:25.683" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.692" endtime="20201115 22:03:25.730"></status>
</kw>
<msg timestamp="20201115 22:03:25.731" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.690" endtime="20201115 22:03:25.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:25.733" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:25.732" endtime="20201115 22:03:25.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.734" endtime="20201115 22:03:25.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.687" endtime="20201115 22:03:25.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.685" endtime="20201115 22:03:25.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:25.744" endtime="20201115 22:03:26.029"></status>
</kw>
<msg timestamp="20201115 22:03:26.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:25.743" endtime="20201115 22:03:26.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023334583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.033" endtime="20201115 22:03:26.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.042" endtime="20201115 22:03:26.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.740" endtime="20201115 22:03:26.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.738" endtime="20201115 22:03:26.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.049" level="INFO">${RESULT} = [{'time': 0.023343569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.023899306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.045" endtime="20201115 22:03:26.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.062" level="INFO">${OVERHEAD} = {'source_diff': [8.986000000002492e-06, 8.958999999999356e-06, 9.000000000002062e-06, 9.012999999998689e-06, 8.999999999998592e-06, 9.000000000002062e-06, 8.999999999998592e-06, 9.014000000001632e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:26.050" endtime="20201115 22:03:26.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.066" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.065" endtime="20201115 22:03:26.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.069" level="INFO">VALUE: [8.986000000002492e-06, 8.958999999999356e-06, 9.000000000002062e-06, 9.012999999998689e-06, 8.999999999998592e-06, 9.000000000002062e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.944000000000313e-06, 9.041000000001298e-06, 8.999999999998592e-06, 8.999999999998592e-06, 9.013999999998162e-06, 8.985999999999023e-06, 8.986000000002492e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.957999999996413e-06, 9.042000000000772e-06, 9.000000000002062e-06, 8.973000000002396e-06, 9.013999999994693e-06, 9.000000000002062e-06, 8.959000000002826e-06, 9.013999999994693e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.985999999995553e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.013999999994693e-06, 8.986000000002492e-06, 8.999999999995123e-06, 9.014000000001632e-06, 8.999999999995123e-06, 8.944000000003782e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.041999999993833e-06, 8.930000000004212e-06, 9.000000000002062e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.068" endtime="20201115 22:03:26.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.063" endtime="20201115 22:03:26.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.072" endtime="20201115 22:03:26.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.075" endtime="20201115 22:03:26.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.074" endtime="20201115 22:03:26.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.070" endtime="20201115 22:03:26.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:25.683" endtime="20201115 22:03:26.096"></status>
</kw>
<msg timestamp="20201115 22:03:26.096" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.105" endtime="20201115 22:03:26.143"></status>
</kw>
<msg timestamp="20201115 22:03:26.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.104" endtime="20201115 22:03:26.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.146" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.144" endtime="20201115 22:03:26.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.147" endtime="20201115 22:03:26.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.101" endtime="20201115 22:03:26.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.099" endtime="20201115 22:03:26.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.157" endtime="20201115 22:03:26.460"></status>
</kw>
<msg timestamp="20201115 22:03:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.155" endtime="20201115 22:03:26.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:26.465" endtime="20201115 22:03:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.473" endtime="20201115 22:03:26.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.153" endtime="20201115 22:03:26.475"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.151" endtime="20201115 22:03:26.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.479" level="INFO">${RESULT} = [{'time': 0.022921153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.023480889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:26.476" endtime="20201115 22:03:26.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.494" level="INFO">${OVERHEAD} = {'source_diff': [8.999999999998592e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.985999999999023e-06, 9.028000000001202e-06, 8.999999999998592e-06, 8.985999999999023e-06, 9.000000000002062e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:26.480" endtime="20201115 22:03:26.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.498" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.497" endtime="20201115 22:03:26.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.501" level="INFO">VALUE: [8.999999999998592e-06, 9.000000000002062e-06, 8.957999999999883e-06, 8.985999999999023e-06, 9.028000000001202e-06, 8.999999999998592e-06, 8.985999999999023e-06, 9.000000000002062e-06, 8.999999999998592e-06, 8.999999999998592e-06, 8.985999999999023e-06, 8.999999999998592e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.972000000002922e-06, 8.986000000002492e-06, 9.013000000002158e-06, 9.028000000001202e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.013000000002158e-06, 8.999999999995123e-06, 9.000000000002062e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.929999999997273e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.000000000002062e-06, 9.014000000001632e-06, 8.986000000002492e-06, 9.013000000002158e-06, 9.000000000002062e-06, 8.986000000002492e-06, 8.985999999995553e-06, 9.014000000001632e-06, 9.027999999994263e-06, 8.986000000002492e-06, 9.027999999994263e-06, 9.000000000002062e-06, 9.000000000002062e-06, 8.985999999995553e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.499" endtime="20201115 22:03:26.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.495" endtime="20201115 22:03:26.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.504" endtime="20201115 22:03:26.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.507" endtime="20201115 22:03:26.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.506" endtime="20201115 22:03:26.527"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.502" endtime="20201115 22:03:26.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.097" endtime="20201115 22:03:26.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.432" endtime="20201115 22:03:26.528"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:24.431" endtime="20201115 22:03:26.528"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.531" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.539" endtime="20201115 22:03:26.579"></status>
</kw>
<msg timestamp="20201115 22:03:26.579" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.538" endtime="20201115 22:03:26.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.582" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.580" endtime="20201115 22:03:26.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.583" endtime="20201115 22:03:26.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.535" endtime="20201115 22:03:26.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.533" endtime="20201115 22:03:26.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.593" endtime="20201115 22:03:26.878"></status>
</kw>
<msg timestamp="20201115 22:03:26.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025498444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02550775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:26.591" endtime="20201115 22:03:26.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025498444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02550775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:03:26.882" endtime="20201115 22:03:26.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.890" endtime="20201115 22:03:26.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.588" endtime="20201115 22:03:26.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.587" endtime="20201115 22:03:26.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:26.897" level="INFO">${RESULT} = [{'time': 0.02550775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.026090722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:03:26.893" endtime="20201115 22:03:26.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:26.910" level="INFO">${OVERHEAD} = {'source_diff': [9.306000000000592e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.333000000000258e-06, 9.292000000001022e-06, 9.291999999997552e-06, 9.263999999998412e-06, 9.291000000001548e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:26.898" endtime="20201115 22:03:26.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.915" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:26.914" endtime="20201115 22:03:26.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.917" level="INFO">VALUE: [9.306000000000592e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.333000000000258e-06, 9.292000000001022e-06, 9.291999999997552e-06, 9.263999999998412e-06, 9.291000000001548e-06, 9.333000000000258e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.278000000001452e-06, 9.277999999994513e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.347999999999301e-06, 9.320000000000161e-06, 9.27699999999504e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.277999999994513e-06, 9.278000000001452e-06, 9.277999999994513e-06, 9.292000000001022e-06, 9.290999999994609e-06, 9.277000000001978e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.292000000001022e-06, 9.277999999994513e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.277999999994513e-06, 9.305000000001118e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.278000000001452e-06, 9.320000000000161e-06, 9.292000000001022e-06]</msg>
<status status="PASS" starttime="20201115 22:03:26.916" endtime="20201115 22:03:26.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.911" endtime="20201115 22:03:26.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.920" endtime="20201115 22:03:26.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:26.924" endtime="20201115 22:03:26.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.922" endtime="20201115 22:03:26.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.919" endtime="20201115 22:03:26.944"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.531" endtime="20201115 22:03:26.944"></status>
</kw>
<msg timestamp="20201115 22:03:26.945" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.954" endtime="20201115 22:03:26.993"></status>
</kw>
<msg timestamp="20201115 22:03:26.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.952" endtime="20201115 22:03:26.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:26.997" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:26.995" endtime="20201115 22:03:26.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:26.998" endtime="20201115 22:03:27.000"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.949" endtime="20201115 22:03:27.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.947" endtime="20201115 22:03:27.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.008" endtime="20201115 22:03:27.293"></status>
</kw>
<msg timestamp="20201115 22:03:27.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.006" endtime="20201115 22:03:27.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.297" endtime="20201115 22:03:27.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.305" endtime="20201115 22:03:27.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.004" endtime="20201115 22:03:27.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.002" endtime="20201115 22:03:27.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.312" level="INFO">${RESULT} = [{'time': 0.023028042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.023617528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.308" endtime="20201115 22:03:27.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.325" level="INFO">${OVERHEAD} = {'source_diff': [9.305999999997122e-06, 9.291999999997552e-06, 9.290999999998079e-06, 9.292000000001022e-06, 9.277999999997982e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.290999999998079e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:27.313" endtime="20201115 22:03:27.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.330" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.329" endtime="20201115 22:03:27.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.332" level="INFO">VALUE: [9.305999999997122e-06, 9.291999999997552e-06, 9.290999999998079e-06, 9.292000000001022e-06, 9.277999999997982e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.290999999998079e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.235999999999273e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.292000000001022e-06, 9.305999999993653e-06, 9.291000000001548e-06, 9.264000000001882e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.291999999994083e-06, 9.305000000001118e-06, 9.278000000001452e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.319000000000688e-06, 9.292000000001022e-06, 9.333000000000258e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.278000000001452e-06, 9.346999999999828e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.305999999993653e-06, 9.305000000001118e-06, 9.291000000001548e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.331" endtime="20201115 22:03:27.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.326" endtime="20201115 22:03:27.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.335" endtime="20201115 22:03:27.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.339" endtime="20201115 22:03:27.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.337" endtime="20201115 22:03:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.334" endtime="20201115 22:03:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.945" endtime="20201115 22:03:27.360"></status>
</kw>
<msg timestamp="20201115 22:03:27.360" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.369" endtime="20201115 22:03:27.409"></status>
</kw>
<msg timestamp="20201115 22:03:27.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.367" endtime="20201115 22:03:27.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.411" endtime="20201115 22:03:27.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.413" endtime="20201115 22:03:27.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.365" endtime="20201115 22:03:27.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.362" endtime="20201115 22:03:27.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.423" endtime="20201115 22:03:27.709"></status>
</kw>
<msg timestamp="20201115 22:03:27.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023643708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.422" endtime="20201115 22:03:27.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023643708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.713" endtime="20201115 22:03:27.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.721" endtime="20201115 22:03:27.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.419" endtime="20201115 22:03:27.723"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.417" endtime="20201115 22:03:27.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:27.728" level="INFO">${RESULT} = [{'time': 0.023653014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.024242819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:27.725" endtime="20201115 22:03:27.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:27.741" level="INFO">${OVERHEAD} = {'source_diff': [9.306000000000592e-06, 9.290999999998079e-06, 9.333000000000258e-06, 9.305999999997122e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.290999999998079e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:27.729" endtime="20201115 22:03:27.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.746" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:27.745" endtime="20201115 22:03:27.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.748" level="INFO">VALUE: [9.306000000000592e-06, 9.290999999998079e-06, 9.333000000000258e-06, 9.305999999997122e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.290999999998079e-06, 9.276999999998509e-06, 9.290999999998079e-06, 9.291000000001548e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.333999999999731e-06, 9.291000000001548e-06, 9.236000000002742e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.222000000003172e-06, 9.278000000001452e-06, 9.277000000001978e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.236000000002742e-06, 9.278000000001452e-06, 9.249999999995373e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.304999999994179e-06, 9.207999999996663e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.319000000000688e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.278000000001452e-06, 9.291000000001548e-06, 9.319000000000688e-06, 9.277999999994513e-06, 9.292000000001022e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201115 22:03:27.747" endtime="20201115 22:03:27.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.742" endtime="20201115 22:03:27.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.751" endtime="20201115 22:03:27.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:27.755" endtime="20201115 22:03:27.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.753" endtime="20201115 22:03:27.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.750" endtime="20201115 22:03:27.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.360" endtime="20201115 22:03:27.776"></status>
</kw>
<msg timestamp="20201115 22:03:27.776" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.785" endtime="20201115 22:03:27.825"></status>
</kw>
<msg timestamp="20201115 22:03:27.826" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.783" endtime="20201115 22:03:27.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:27.828" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:27.827" endtime="20201115 22:03:27.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.830" endtime="20201115 22:03:27.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.781" endtime="20201115 22:03:27.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.779" endtime="20201115 22:03:27.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:27.839" endtime="20201115 22:03:28.125"></status>
</kw>
<msg timestamp="20201115 22:03:28.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:27.838" endtime="20201115 22:03:28.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023614611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.129" endtime="20201115 22:03:28.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.137" endtime="20201115 22:03:28.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.835" endtime="20201115 22:03:28.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.834" endtime="20201115 22:03:28.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.144" level="INFO">${RESULT} = [{'time': 0.023623972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.024206208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:28.141" endtime="20201115 22:03:28.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.158" level="INFO">${OVERHEAD} = {'source_diff': [9.360999999999398e-06, 9.291000000001548e-06, 9.276999999998509e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.208999999999606e-06, 9.292000000001022e-06, 9.291999999997552e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:28.145" endtime="20201115 22:03:28.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.163" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.162" endtime="20201115 22:03:28.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.165" level="INFO">VALUE: [9.360999999999398e-06, 9.291000000001548e-06, 9.276999999998509e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.208999999999606e-06, 9.292000000001022e-06, 9.291999999997552e-06, 9.291000000001548e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.277000000001978e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.208000000003602e-06, 9.278000000001452e-06, 9.291000000001548e-06, 9.306000000000592e-06, 9.291000000001548e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.333999999999731e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.277999999994513e-06, 9.291000000001548e-06, 9.277999999994513e-06, 9.235999999995803e-06, 9.290999999994609e-06, 9.292000000001022e-06, 9.291999999994083e-06, 9.333999999999731e-06, 9.291000000001548e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.304999999994179e-06, 9.306000000000592e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.305000000001118e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.164" endtime="20201115 22:03:28.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.159" endtime="20201115 22:03:28.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.169" endtime="20201115 22:03:28.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.173" endtime="20201115 22:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.171" endtime="20201115 22:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.167" endtime="20201115 22:03:28.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:27.777" endtime="20201115 22:03:28.193"></status>
</kw>
<msg timestamp="20201115 22:03:28.193" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.202" endtime="20201115 22:03:28.242"></status>
</kw>
<msg timestamp="20201115 22:03:28.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.201" endtime="20201115 22:03:28.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:03:28.244" endtime="20201115 22:03:28.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.246" endtime="20201115 22:03:28.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.198" endtime="20201115 22:03:28.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.196" endtime="20201115 22:03:28.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.256" endtime="20201115 22:03:28.542"></status>
</kw>
<msg timestamp="20201115 22:03:28.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.255" endtime="20201115 22:03:28.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:03:28.546" endtime="20201115 22:03:28.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.554" endtime="20201115 22:03:28.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.252" endtime="20201115 22:03:28.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.250" endtime="20201115 22:03:28.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:03:28.561" level="INFO">${RESULT} = [{'time': 0.023397764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.023981736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:03:28.557" endtime="20201115 22:03:28.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:03:28.574" level="INFO">${OVERHEAD} = {'source_diff': [9.292000000001022e-06, 9.278000000001452e-06, 9.305999999997122e-06, 9.306000000000592e-06, 9.375000000002437e-06, 9.277000000001978e-06, 9.222999999999176e-06, 9.292000000001022e-06,...</msg>
<status status="PASS" starttime="20201115 22:03:28.562" endtime="20201115 22:03:28.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.578" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:03:28.577" endtime="20201115 22:03:28.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:03:28.581" level="INFO">VALUE: [9.292000000001022e-06, 9.278000000001452e-06, 9.305999999997122e-06, 9.306000000000592e-06, 9.375000000002437e-06, 9.277000000001978e-06, 9.222999999999176e-06, 9.292000000001022e-06, 9.277999999997982e-06, 9.305000000001118e-06, 9.346999999999828e-06, 9.306000000000592e-06, 9.319000000000688e-06, 9.290999999998079e-06, 9.291000000001548e-06, 9.277999999994513e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.305000000001118e-06, 9.277000000001978e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.263999999994943e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.264000000001882e-06, 9.291999999994083e-06, 9.263999999994943e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.278000000001452e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.291000000001548e-06, 9.291000000001548e-06, 9.306000000000592e-06, 9.291999999994083e-06, 9.290999999994609e-06, 9.292000000001022e-06, 9.333999999999731e-06, 9.333999999999731e-06, 9.278000000001452e-06, 9.292000000001022e-06, 9.292000000001022e-06]</msg>
<status status="PASS" starttime="20201115 22:03:28.580" endtime="20201115 22:03:28.582"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.575" endtime="20201115 22:03:28.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:03:28.585" endtime="20201115 22:03:28.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.588" endtime="20201115 22:03:28.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.586" endtime="20201115 22:03:28.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.583" endtime="20201115 22:03:28.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.194" endtime="20201115 22:03:28.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.530" endtime="20201115 22:03:28.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:26.529" endtime="20201115 22:03:28.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:02:37.930" endtime="20201115 22:03:28.609"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:03:28.614" endtime="20201115 22:03:28.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.612" endtime="20201115 22:03:28.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:03:28.611" endtime="20201115 22:03:28.634"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:02:37.855" endtime="20201115 22:03:28.635" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:01:41.335" endtime="20201115 22:03:28.641"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:01:39.324" endtime="20201115 22:03:28.660"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
