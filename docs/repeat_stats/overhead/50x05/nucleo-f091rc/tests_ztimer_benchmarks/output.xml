<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 21:59:44.823" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:45.383" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:45.391" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:46.492" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:45.382" endtime="20201115 21:59:46.493"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.495" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:46.494" endtime="20201115 21:59:46.495"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:45.380" endtime="20201115 21:59:46.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:46.498" endtime="20201115 21:59:46.683"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.497" endtime="20201115 21:59:46.683"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.696" endtime="20201115 21:59:46.711"></status>
</kw>
<msg timestamp="20201115 21:59:46.712" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201115 21:59:46.695" endtime="20201115 21:59:46.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.715" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201115 21:59:46.713" endtime="20201115 21:59:46.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.718" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:46.716" endtime="20201115 21:59:46.718"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.692" endtime="20201115 21:59:46.719"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.690" endtime="20201115 21:59:46.719"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.689" endtime="20201115 21:59:46.720"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:46.723" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:46.723" endtime="20201115 21:59:46.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.720" endtime="20201115 21:59:46.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.688" endtime="20201115 21:59:46.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.687" endtime="20201115 21:59:46.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.725" endtime="20201115 21:59:46.727"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.686" endtime="20201115 21:59:46.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.728" endtime="20201115 21:59:46.729"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.684" endtime="20201115 21:59:46.730"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:45.378" endtime="20201115 21:59:46.730"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:46.737" endtime="20201115 21:59:46.756"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.735" endtime="20201115 21:59:46.757"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.772" endtime="20201115 21:59:46.786"></status>
</kw>
<msg timestamp="20201115 21:59:46.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.769" endtime="20201115 21:59:46.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.788" endtime="20201115 21:59:46.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.792" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:46.791" endtime="20201115 21:59:46.793"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.766" endtime="20201115 21:59:46.793"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:46.764" endtime="20201115 21:59:46.794"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.762" endtime="20201115 21:59:46.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:46.798" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:46.798" endtime="20201115 21:59:46.799"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.795" endtime="20201115 21:59:46.799"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.761" endtime="20201115 21:59:46.799"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.760" endtime="20201115 21:59:46.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.800" endtime="20201115 21:59:46.802"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.759" endtime="20201115 21:59:46.802"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.757" endtime="20201115 21:59:46.803"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.734" endtime="20201115 21:59:46.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.812" endtime="20201115 21:59:46.823"></status>
</kw>
<msg timestamp="20201115 21:59:46.823" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.809" endtime="20201115 21:59:46.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.826" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:46.824" endtime="20201115 21:59:46.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:46.827" endtime="20201115 21:59:46.828"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.806" endtime="20201115 21:59:46.829"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.804" endtime="20201115 21:59:46.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.834" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 21:59:46.833" endtime="20201115 21:59:46.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.836" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 21:59:46.835" endtime="20201115 21:59:46.836"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.830" endtime="20201115 21:59:46.837"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:46.731" endtime="20201115 21:59:46.837" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:44.934" endtime="20201115 21:59:46.840"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 21:59:46.893" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 21:59:46.901" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 21:59:48.117" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 21:59:46.891" endtime="20201115 21:59:48.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.120" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 21:59:48.118" endtime="20201115 21:59:48.120"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.890" endtime="20201115 21:59:48.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.123" endtime="20201115 21:59:48.343"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.122" endtime="20201115 21:59:48.344"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.356" endtime="20201115 21:59:48.370"></status>
</kw>
<msg timestamp="20201115 21:59:48.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.354" endtime="20201115 21:59:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.372" endtime="20201115 21:59:48.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.376" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.374" endtime="20201115 21:59:48.377"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.352" endtime="20201115 21:59:48.377"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.350" endtime="20201115 21:59:48.378"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.348" endtime="20201115 21:59:48.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.381" endtime="20201115 21:59:48.382"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.379" endtime="20201115 21:59:48.383"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.348" endtime="20201115 21:59:48.383"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.347" endtime="20201115 21:59:48.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.384" endtime="20201115 21:59:48.385"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.346" endtime="20201115 21:59:48.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.386" endtime="20201115 21:59:48.388"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.344" endtime="20201115 21:59:48.389"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:46.888" endtime="20201115 21:59:48.389"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO/">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.396" endtime="20201115 21:59:48.415"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.393" endtime="20201115 21:59:48.416"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.429" endtime="20201115 21:59:48.444"></status>
</kw>
<msg timestamp="20201115 21:59:48.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.427" endtime="20201115 21:59:48.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.445" endtime="20201115 21:59:48.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.450" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:48.448" endtime="20201115 21:59:48.450"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.425" endtime="20201115 21:59:48.451"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:48.422" endtime="20201115 21:59:48.451"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.421" endtime="20201115 21:59:48.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:48.455" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:48.454" endtime="20201115 21:59:48.455"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.452" endtime="20201115 21:59:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.420" endtime="20201115 21:59:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.419" endtime="20201115 21:59:48.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.457" endtime="20201115 21:59:48.458"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.418" endtime="20201115 21:59:48.459"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.416" endtime="20201115 21:59:48.459"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.392" endtime="20201115 21:59:48.459"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:48.462" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.470" endtime="20201115 21:59:48.481"></status>
</kw>
<msg timestamp="20201115 21:59:48.481" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.468" endtime="20201115 21:59:48.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.484" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.482" endtime="20201115 21:59:48.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.485" endtime="20201115 21:59:48.486"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.465" endtime="20201115 21:59:48.487"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.464" endtime="20201115 21:59:48.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.494" endtime="20201115 21:59:48.796"></status>
</kw>
<msg timestamp="20201115 21:59:48.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064734403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:48.492" endtime="20201115 21:59:48.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064734403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:48.800" endtime="20201115 21:59:48.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.808" endtime="20201115 21:59:48.810"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.490" endtime="20201115 21:59:48.811"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.488" endtime="20201115 21:59:48.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:48.816" level="INFO">${RESULT} = [{'time': 0.064734403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.064747236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:48.813" endtime="20201115 21:59:48.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:48.830" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:48.817" endtime="20201115 21:59:48.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.835" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:48.834" endtime="20201115 21:59:48.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.837" level="INFO">VALUE: [4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.869999999934649e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201115 21:59:48.836" endtime="20201115 21:59:48.838"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.831" endtime="20201115 21:59:48.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.841" endtime="20201115 21:59:48.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:48.845" endtime="20201115 21:59:48.864"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.843" endtime="20201115 21:59:48.864"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.839" endtime="20201115 21:59:48.865"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.462" endtime="20201115 21:59:48.865"></status>
</kw>
<msg timestamp="20201115 21:59:48.865" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.873" endtime="20201115 21:59:48.883"></status>
</kw>
<msg timestamp="20201115 21:59:48.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.872" endtime="20201115 21:59:48.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:48.886" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:48.885" endtime="20201115 21:59:48.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.887" endtime="20201115 21:59:48.890"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.869" endtime="20201115 21:59:48.890"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.867" endtime="20201115 21:59:48.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:48.897" endtime="20201115 21:59:49.184"></status>
</kw>
<msg timestamp="20201115 21:59:49.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018440236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018440708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:48.896" endtime="20201115 21:59:49.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018440236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018440708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.188" endtime="20201115 21:59:49.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.196" endtime="20201115 21:59:49.198"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.893" endtime="20201115 21:59:49.199"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.891" endtime="20201115 21:59:49.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.203" level="INFO">${RESULT} = [{'time': 0.018440708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018453028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:49.200" endtime="20201115 21:59:49.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.218" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:49.204" endtime="20201115 21:59:49.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.222" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.221" endtime="20201115 21:59:49.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.224" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201115 21:59:49.223" endtime="20201115 21:59:49.225"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.219" endtime="20201115 21:59:49.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.228" endtime="20201115 21:59:49.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.231" endtime="20201115 21:59:49.250"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.229" endtime="20201115 21:59:49.251"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.226" endtime="20201115 21:59:49.251"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.866" endtime="20201115 21:59:49.252"></status>
</kw>
<msg timestamp="20201115 21:59:49.252" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.260" endtime="20201115 21:59:49.270"></status>
</kw>
<msg timestamp="20201115 21:59:49.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.258" endtime="20201115 21:59:49.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.271" endtime="20201115 21:59:49.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.274" endtime="20201115 21:59:49.275"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.255" endtime="20201115 21:59:49.276"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.254" endtime="20201115 21:59:49.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.284" endtime="20201115 21:59:49.571"></status>
</kw>
<msg timestamp="20201115 21:59:49.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018644889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.282" endtime="20201115 21:59:49.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018644889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.575" endtime="20201115 21:59:49.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.584" endtime="20201115 21:59:49.586"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.279" endtime="20201115 21:59:49.586"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.277" endtime="20201115 21:59:49.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.591" level="INFO">${RESULT} = [{'time': 0.018645361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018657194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:49.587" endtime="20201115 21:59:49.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.605" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:49.592" endtime="20201115 21:59:49.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.609" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.608" endtime="20201115 21:59:49.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.613" level="INFO">VALUE: [4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 21:59:49.610" endtime="20201115 21:59:49.613"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.606" endtime="20201115 21:59:49.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.616" endtime="20201115 21:59:49.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:49.619" endtime="20201115 21:59:49.638"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.618" endtime="20201115 21:59:49.639"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.614" endtime="20201115 21:59:49.640"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.252" endtime="20201115 21:59:49.640"></status>
</kw>
<msg timestamp="20201115 21:59:49.640" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.648" endtime="20201115 21:59:49.658"></status>
</kw>
<msg timestamp="20201115 21:59:49.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.646" endtime="20201115 21:59:49.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:49.660" endtime="20201115 21:59:49.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.662" endtime="20201115 21:59:49.664"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.644" endtime="20201115 21:59:49.664"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.642" endtime="20201115 21:59:49.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.672" endtime="20201115 21:59:49.959"></status>
</kw>
<msg timestamp="20201115 21:59:49.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018367431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.669" endtime="20201115 21:59:49.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018367431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:49.963" endtime="20201115 21:59:49.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:49.972" endtime="20201115 21:59:49.973"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.667" endtime="20201115 21:59:49.974"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.665" endtime="20201115 21:59:49.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:49.978" level="INFO">${RESULT} = [{'time': 0.018367431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018377444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:49.975" endtime="20201115 21:59:49.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:49.992" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:49.979" endtime="20201115 21:59:49.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:49.995" endtime="20201115 21:59:49.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:49.998" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201115 21:59:49.997" endtime="20201115 21:59:49.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.992" endtime="20201115 21:59:49.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.002" endtime="20201115 21:59:50.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.005" endtime="20201115 21:59:50.024"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.003" endtime="20201115 21:59:50.025"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.000" endtime="20201115 21:59:50.025"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:49.641" endtime="20201115 21:59:50.026"></status>
</kw>
<msg timestamp="20201115 21:59:50.026" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.033" endtime="20201115 21:59:50.043"></status>
</kw>
<msg timestamp="20201115 21:59:50.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.032" endtime="20201115 21:59:50.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.045" endtime="20201115 21:59:50.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.047" endtime="20201115 21:59:50.049"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.029" endtime="20201115 21:59:50.050"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.028" endtime="20201115 21:59:50.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.057" endtime="20201115 21:59:50.345"></status>
</kw>
<msg timestamp="20201115 21:59:50.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018441069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018441542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.055" endtime="20201115 21:59:50.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018441069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018441542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.349" endtime="20201115 21:59:50.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.357" endtime="20201115 21:59:50.359"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.053" endtime="20201115 21:59:50.359"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.051" endtime="20201115 21:59:50.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.364" level="INFO">${RESULT} = [{'time': 0.018441542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018448875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:50.361" endtime="20201115 21:59:50.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.377" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:50.365" endtime="20201115 21:59:50.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201115 21:59:50.380" endtime="20201115 21:59:50.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.384" level="INFO">VALUE: [4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201115 21:59:50.382" endtime="20201115 21:59:50.384"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.378" endtime="20201115 21:59:50.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.387" endtime="20201115 21:59:50.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.390" endtime="20201115 21:59:50.410"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.389" endtime="20201115 21:59:50.410"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.385" endtime="20201115 21:59:50.411"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.026" endtime="20201115 21:59:50.411"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:48.461" endtime="20201115 21:59:50.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.416" endtime="20201115 21:59:50.435"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.415" endtime="20201115 21:59:50.436"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.413" endtime="20201115 21:59:50.436"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:48.389" endtime="20201115 21:59:50.437" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.447" endtime="20201115 21:59:50.466"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.445" endtime="20201115 21:59:50.467"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.481" endtime="20201115 21:59:50.496"></status>
</kw>
<msg timestamp="20201115 21:59:50.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.479" endtime="20201115 21:59:50.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.497" endtime="20201115 21:59:50.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:50.500" endtime="20201115 21:59:50.502"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.476" endtime="20201115 21:59:50.502"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:50.474" endtime="20201115 21:59:50.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.472" endtime="20201115 21:59:50.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:50.507" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:50.506" endtime="20201115 21:59:50.507"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.504" endtime="20201115 21:59:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.472" endtime="20201115 21:59:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.471" endtime="20201115 21:59:50.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.509" endtime="20201115 21:59:50.510"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.469" endtime="20201115 21:59:50.511"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.467" endtime="20201115 21:59:50.511"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.444" endtime="20201115 21:59:50.511"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201115 21:59:50.514" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.522" endtime="20201115 21:59:50.533"></status>
</kw>
<msg timestamp="20201115 21:59:50.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.520" endtime="20201115 21:59:50.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.536" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.535" endtime="20201115 21:59:50.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.537" endtime="20201115 21:59:50.539"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.518" endtime="20201115 21:59:50.540"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.516" endtime="20201115 21:59:50.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.546" endtime="20201115 21:59:50.843"></status>
</kw>
<msg timestamp="20201115 21:59:50.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065963014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065966042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.545" endtime="20201115 21:59:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065963014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065966042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:50.852" endtime="20201115 21:59:50.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.872" endtime="20201115 21:59:50.877"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.542" endtime="20201115 21:59:50.878"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.541" endtime="20201115 21:59:50.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:50.888" level="INFO">${RESULT} = [{'time': 0.065966042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.065974583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:50.881" endtime="20201115 21:59:50.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:50.909" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:50.891" endtime="20201115 21:59:50.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.913" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:50.912" endtime="20201115 21:59:50.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.915" level="INFO">VALUE: [3.02800000000214e-06, 3.014000000009509e-06, 2.9999999999891225e-06, 3.083000000000946e-06, 3.02800000000214e-06, 2.9579999999973516e-06, 3.0279999999882623e-06, 3.0139999999956313e-06, 2.9589999999968253e-06, 3.0279999999882623e-06, 3.0270000000026664e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.0000000000030003e-06, 3.0139999999956313e-06, 3.02800000000214e-06, 3.014000000009509e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.041999999994771e-06, 3.0279999999882623e-06, 3.014000000009509e-06, 3.0270000000026664e-06, 3.0000000000030003e-06, 3.0000000000030003e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.0130000000100354e-06, 3.014000000009509e-06, 3.0130000000100354e-06, 3.0000000000030003e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 3.014000000009509e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.014000000009509e-06, 3.0000000000030003e-06, 3.02800000000214e-06, 2.9999999999891225e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.0139999999956313e-06, 3.0279999999882623e-06]</msg>
<status status="PASS" starttime="20201115 21:59:50.914" endtime="20201115 21:59:50.916"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.910" endtime="20201115 21:59:50.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.918" endtime="20201115 21:59:50.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:50.922" endtime="20201115 21:59:50.941"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.920" endtime="20201115 21:59:50.942"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.917" endtime="20201115 21:59:50.942"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.515" endtime="20201115 21:59:50.943"></status>
</kw>
<msg timestamp="20201115 21:59:50.943" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.950" endtime="20201115 21:59:50.963"></status>
</kw>
<msg timestamp="20201115 21:59:50.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.949" endtime="20201115 21:59:50.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:50.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:50.964" endtime="20201115 21:59:50.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.966" endtime="20201115 21:59:50.968"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.946" endtime="20201115 21:59:50.968"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.945" endtime="20201115 21:59:50.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:50.976" endtime="20201115 21:59:51.267"></status>
</kw>
<msg timestamp="20201115 21:59:51.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:50.975" endtime="20201115 21:59:51.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:51.271" endtime="20201115 21:59:51.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.280" endtime="20201115 21:59:51.282"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.972" endtime="20201115 21:59:51.282"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.970" endtime="20201115 21:59:51.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.287" level="INFO">${RESULT} = [{'time': 0.019461528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.019479292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:51.283" endtime="20201115 21:59:51.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.301" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:51.288" endtime="20201115 21:59:51.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.305" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.304" endtime="20201115 21:59:51.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.308" level="INFO">VALUE: [3.0279999999986706e-06, 3.0699999999973804e-06, 2.972000000000391e-06, 3.040999999998767e-06, 2.985999999999961e-06, 3.012999999999627e-06, 3.0410000000022364e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.097000000000516e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 3.01400000000257e-06, 3.01400000000257e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 2.985999999999961e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 2.945000000000725e-06, 3.012999999999627e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.01400000000257e-06, 3.012999999999627e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 2.985999999999961e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.012999999999627e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.012999999999627e-06, 3.0550000000018063e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.307" endtime="20201115 21:59:51.308"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.302" endtime="20201115 21:59:51.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.311" endtime="20201115 21:59:51.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.314" endtime="20201115 21:59:51.334"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.313" endtime="20201115 21:59:51.334"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.309" endtime="20201115 21:59:51.335"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.943" endtime="20201115 21:59:51.335"></status>
</kw>
<msg timestamp="20201115 21:59:51.335" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.343" endtime="20201115 21:59:51.355"></status>
</kw>
<msg timestamp="20201115 21:59:51.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.341" endtime="20201115 21:59:51.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.358" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.357" endtime="20201115 21:59:51.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.359" endtime="20201115 21:59:51.361"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.339" endtime="20201115 21:59:51.361"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.337" endtime="20201115 21:59:51.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.368" endtime="20201115 21:59:51.653"></status>
</kw>
<msg timestamp="20201115 21:59:51.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01987525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:51.367" endtime="20201115 21:59:51.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01987525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:51.658" endtime="20201115 21:59:51.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.666" endtime="20201115 21:59:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.364" endtime="20201115 21:59:51.668"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.362" endtime="20201115 21:59:51.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:51.673" level="INFO">${RESULT} = [{'time': 0.019878264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.019889486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:51.669" endtime="20201115 21:59:51.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:51.686" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:51.674" endtime="20201115 21:59:51.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.690" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:51.689" endtime="20201115 21:59:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.693" level="INFO">VALUE: [3.0139999999991007e-06, 3.01400000000257e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.012999999999627e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.01400000000257e-06, 3.02800000000214e-06, 3.01400000000257e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.0279999999986706e-06, 3.069000000001376e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 2.985999999999961e-06, 3.0000000000030003e-06, 3.012999999999627e-06, 3.012999999999627e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0270000000026664e-06, 3.069000000001376e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201115 21:59:51.691" endtime="20201115 21:59:51.693"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.687" endtime="20201115 21:59:51.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.696" endtime="20201115 21:59:51.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:51.699" endtime="20201115 21:59:51.719"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.698" endtime="20201115 21:59:51.719"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.694" endtime="20201115 21:59:51.720"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.336" endtime="20201115 21:59:51.720"></status>
</kw>
<msg timestamp="20201115 21:59:51.720" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.728" endtime="20201115 21:59:51.740"></status>
</kw>
<msg timestamp="20201115 21:59:51.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.726" endtime="20201115 21:59:51.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:51.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:51.741" endtime="20201115 21:59:51.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.744" endtime="20201115 21:59:51.746"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.724" endtime="20201115 21:59:51.746"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.722" endtime="20201115 21:59:51.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:51.753" endtime="20201115 21:59:52.042"></status>
</kw>
<msg timestamp="20201115 21:59:52.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019396208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:51.752" endtime="20201115 21:59:52.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019393194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019396208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.046" endtime="20201115 21:59:52.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.055" endtime="20201115 21:59:52.056"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.749" endtime="20201115 21:59:52.057"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.747" endtime="20201115 21:59:52.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.061" level="INFO">${RESULT} = [{'time': 0.019396208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.019403403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:52.058" endtime="20201115 21:59:52.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.074" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.062" endtime="20201115 21:59:52.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.079" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.078" endtime="20201115 21:59:52.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.081" level="INFO">VALUE: [3.01400000000257e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 2.958000000000821e-06, 3.02800000000214e-06, 2.944000000001251e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.9579999999973516e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 2.999999999999531e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.01400000000257e-06, 2.999999999999531e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0139999999991007e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.080" endtime="20201115 21:59:52.082"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.075" endtime="20201115 21:59:52.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.084" endtime="20201115 21:59:52.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.088" endtime="20201115 21:59:52.107"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.086" endtime="20201115 21:59:52.107"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.083" endtime="20201115 21:59:52.108"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:51.721" endtime="20201115 21:59:52.108"></status>
</kw>
<msg timestamp="20201115 21:59:52.108" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.116" endtime="20201115 21:59:52.127"></status>
</kw>
<msg timestamp="20201115 21:59:52.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.114" endtime="20201115 21:59:52.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.135" endtime="20201115 21:59:52.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.138" endtime="20201115 21:59:52.140"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.112" endtime="20201115 21:59:52.140"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.110" endtime="20201115 21:59:52.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.147" endtime="20201115 21:59:52.436"></status>
</kw>
<msg timestamp="20201115 21:59:52.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.146" endtime="20201115 21:59:52.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:52.441" endtime="20201115 21:59:52.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.449" endtime="20201115 21:59:52.451"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.143" endtime="20201115 21:59:52.451"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.141" endtime="20201115 21:59:52.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.456" level="INFO">${RESULT} = [{'time': 0.019424986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.019433694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 21:59:52.453" endtime="20201115 21:59:52.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.469" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.457" endtime="20201115 21:59:52.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201115 21:59:52.472" endtime="20201115 21:59:52.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.476" level="INFO">VALUE: [3.01400000000257e-06, 3.0000000000030003e-06, 2.999999999999531e-06, 3.0000000000030003e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.0270000000026664e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0270000000026664e-06, 2.9579999999973516e-06, 2.999999999999531e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0270000000026664e-06, 3.01400000000257e-06, 3.0410000000022364e-06, 3.012999999999627e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 2.999999999999531e-06, 2.985999999999961e-06, 3.012999999999627e-06, 3.012999999999627e-06, 3.0130000000030965e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.474" endtime="20201115 21:59:52.476"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.470" endtime="20201115 21:59:52.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.479" endtime="20201115 21:59:52.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.482" endtime="20201115 21:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.481" endtime="20201115 21:59:52.502"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.477" endtime="20201115 21:59:52.502"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.109" endtime="20201115 21:59:52.503"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:50.513" endtime="20201115 21:59:52.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.508" endtime="20201115 21:59:52.527"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.506" endtime="20201115 21:59:52.528"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.505" endtime="20201115 21:59:52.528"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:50.441" endtime="20201115 21:59:52.529" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.539" endtime="20201115 21:59:52.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.537" endtime="20201115 21:59:52.559"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.572" endtime="20201115 21:59:52.586"></status>
</kw>
<msg timestamp="20201115 21:59:52.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.570" endtime="20201115 21:59:52.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.588" endtime="20201115 21:59:52.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.592" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 21:59:52.590" endtime="20201115 21:59:52.593"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.567" endtime="20201115 21:59:52.593"></status>
</kw>
<status status="FAIL" starttime="20201115 21:59:52.565" endtime="20201115 21:59:52.594"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.564" endtime="20201115 21:59:52.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 21:59:52.598" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 21:59:52.597" endtime="20201115 21:59:52.598"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.595" endtime="20201115 21:59:52.599"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.563" endtime="20201115 21:59:52.599"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.563" endtime="20201115 21:59:52.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.600" endtime="20201115 21:59:52.601"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.561" endtime="20201115 21:59:52.602"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.559" endtime="20201115 21:59:52.602"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.536" endtime="20201115 21:59:52.602"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.606" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.615" endtime="20201115 21:59:52.631"></status>
</kw>
<msg timestamp="20201115 21:59:52.631" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.614" endtime="20201115 21:59:52.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:52.632" endtime="20201115 21:59:52.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.635" endtime="20201115 21:59:52.636"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.611" endtime="20201115 21:59:52.637"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.609" endtime="20201115 21:59:52.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.644" endtime="20201115 21:59:52.931"></status>
</kw>
<msg timestamp="20201115 21:59:52.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068731833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06874075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:52.643" endtime="20201115 21:59:52.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068731833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06874075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:52.935" endtime="20201115 21:59:52.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.943" endtime="20201115 21:59:52.945"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.640" endtime="20201115 21:59:52.945"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.638" endtime="20201115 21:59:52.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:52.950" level="INFO">${RESULT} = [{'time': 0.06874075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.068827111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:52.947" endtime="20201115 21:59:52.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:52.965" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:52.951" endtime="20201115 21:59:52.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.970" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:52.969" endtime="20201115 21:59:52.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:52.972" level="INFO">VALUE: [8.916999999997177e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.901999999991195e-06, 8.888999999998037e-06, 8.959000000002826e-06, 8.889000000011915e-06, 8.916999999997177e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.819999999992723e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.847000000006267e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.917000000011055e-06, 8.902000000005073e-06, 8.84800000000574e-06, 8.903000000004546e-06, 8.860999999998898e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.902000000005073e-06, 8.889000000011915e-06, 8.901999999991195e-06, 8.875000000005406e-06, 8.875000000005406e-06, 8.917000000011055e-06, 8.889000000011915e-06, 8.902999999990668e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.903000000004546e-06, 8.902000000005073e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.874999999991529e-06, 8.889000000011915e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.916999999997177e-06]</msg>
<status status="PASS" starttime="20201115 21:59:52.971" endtime="20201115 21:59:52.973"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.966" endtime="20201115 21:59:52.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:52.975" endtime="20201115 21:59:52.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:52.979" endtime="20201115 21:59:52.998"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.977" endtime="20201115 21:59:52.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.974" endtime="20201115 21:59:52.999"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.607" endtime="20201115 21:59:52.999"></status>
</kw>
<msg timestamp="20201115 21:59:53.000" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.008" endtime="20201115 21:59:53.023"></status>
</kw>
<msg timestamp="20201115 21:59:53.023" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.007" endtime="20201115 21:59:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.026" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.024" endtime="20201115 21:59:53.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.027" endtime="20201115 21:59:53.029"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.004" endtime="20201115 21:59:53.029"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.002" endtime="20201115 21:59:53.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.036" endtime="20201115 21:59:53.321"></status>
</kw>
<msg timestamp="20201115 21:59:53.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.034" endtime="20201115 21:59:53.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.325" endtime="20201115 21:59:53.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.333" endtime="20201115 21:59:53.335"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.032" endtime="20201115 21:59:53.335"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.030" endtime="20201115 21:59:53.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.340" level="INFO">${RESULT} = [{'time': 0.022012833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.022097194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:53.336" endtime="20201115 21:59:53.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.354" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.341" endtime="20201115 21:59:53.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.358" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.357" endtime="20201115 21:59:53.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.361" level="INFO">VALUE: [8.915999999997704e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.901999999998134e-06, 8.887999999998564e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.887999999998564e-06, 8.916000000001173e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.888000000002033e-06, 8.887999999998564e-06, 8.888999999998037e-06, 8.931000000000217e-06, 8.888999999998037e-06, 8.930000000000743e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.931000000000217e-06, 8.916000000001173e-06, 8.930000000000743e-06, 8.901999999998134e-06, 8.874999999998467e-06, 8.819000000000188e-06, 8.806000000000092e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.957999999999883e-06, 8.819000000000188e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.888000000002033e-06, 8.958999999999356e-06, 8.902999999997607e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.889000000001507e-06]</msg>
<status status="PASS" starttime="20201115 21:59:53.359" endtime="20201115 21:59:53.361"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.355" endtime="20201115 21:59:53.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.364" endtime="20201115 21:59:53.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.367" endtime="20201115 21:59:53.386"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.366" endtime="20201115 21:59:53.387"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.362" endtime="20201115 21:59:53.387"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.000" endtime="20201115 21:59:53.388"></status>
</kw>
<msg timestamp="20201115 21:59:53.388" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.397" endtime="20201115 21:59:53.412"></status>
</kw>
<msg timestamp="20201115 21:59:53.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.395" endtime="20201115 21:59:53.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.414" endtime="20201115 21:59:53.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.416" endtime="20201115 21:59:53.418"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.393" endtime="20201115 21:59:53.418"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.391" endtime="20201115 21:59:53.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.425" endtime="20201115 21:59:53.710"></status>
</kw>
<msg timestamp="20201115 21:59:53.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02271675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:53.424" endtime="20201115 21:59:53.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02271675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 21:59:53.714" endtime="20201115 21:59:53.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.723" endtime="20201115 21:59:53.724"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.421" endtime="20201115 21:59:53.725"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.419" endtime="20201115 21:59:53.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:53.729" level="INFO">${RESULT} = [{'time': 0.02271675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.022795181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 21:59:53.726" endtime="20201115 21:59:53.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:53.743" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:53.730" endtime="20201115 21:59:53.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.748" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:53.747" endtime="20201115 21:59:53.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.751" level="INFO">VALUE: [8.971999999999453e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.819000000000188e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.875000000001937e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.930000000000743e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.916000000001173e-06, 8.888999999998037e-06, 8.916000000001173e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.847000000002797e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.929999999997273e-06, 8.944999999999786e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.84800000000227e-06, 8.903000000001077e-06, 8.875000000001937e-06]</msg>
<status status="PASS" starttime="20201115 21:59:53.749" endtime="20201115 21:59:53.751"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.744" endtime="20201115 21:59:53.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.754" endtime="20201115 21:59:53.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:53.757" endtime="20201115 21:59:53.776"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.755" endtime="20201115 21:59:53.777"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.752" endtime="20201115 21:59:53.777"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.388" endtime="20201115 21:59:53.778"></status>
</kw>
<msg timestamp="20201115 21:59:53.778" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.787" endtime="20201115 21:59:53.801"></status>
</kw>
<msg timestamp="20201115 21:59:53.802" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.785" endtime="20201115 21:59:53.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:53.804" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:53.803" endtime="20201115 21:59:53.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.805" endtime="20201115 21:59:53.807"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.783" endtime="20201115 21:59:53.808"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.781" endtime="20201115 21:59:53.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:53.814" endtime="20201115 21:59:54.101"></status>
</kw>
<msg timestamp="20201115 21:59:54.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:53.813" endtime="20201115 21:59:54.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022333306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.105" endtime="20201115 21:59:54.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.113" endtime="20201115 21:59:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.810" endtime="20201115 21:59:54.116"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.809" endtime="20201115 21:59:54.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.121" level="INFO">${RESULT} = [{'time': 0.022342181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.022427528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.117" endtime="20201115 21:59:54.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.134" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.122" endtime="20201115 21:59:54.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.138" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.137" endtime="20201115 21:59:54.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.141" level="INFO">VALUE: [8.874999999998467e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.944000000000313e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.847999999998801e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.902000000001603e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.915999999997704e-06, 8.944999999999786e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.944000000000313e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.847999999998801e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.957999999999883e-06, 8.903000000001077e-06, 8.861000000002367e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.931000000000217e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.139" endtime="20201115 21:59:54.141"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.135" endtime="20201115 21:59:54.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.144" endtime="20201115 21:59:54.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.148" endtime="20201115 21:59:54.167"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.146" endtime="20201115 21:59:54.168"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.142" endtime="20201115 21:59:54.168"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:53.779" endtime="20201115 21:59:54.168"></status>
</kw>
<msg timestamp="20201115 21:59:54.169" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.177" endtime="20201115 21:59:54.191"></status>
</kw>
<msg timestamp="20201115 21:59:54.192" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.176" endtime="20201115 21:59:54.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 1', 'msg': ['overhead_timer_list set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.193" endtime="20201115 21:59:54.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.195" endtime="20201115 21:59:54.197"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.173" endtime="20201115 21:59:54.197"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.171" endtime="20201115 21:59:54.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.204" endtime="20201115 21:59:54.492"></status>
</kw>
<msg timestamp="20201115 21:59:54.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.203" endtime="20201115 21:59:54.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.496" endtime="20201115 21:59:54.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.504" endtime="20201115 21:59:54.506"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.200" endtime="20201115 21:59:54.506"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.198" endtime="20201115 21:59:54.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.511" level="INFO">${RESULT} = [{'time': 0.021719306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999999356e-06, 'source_diff': 8.958999999999356e-06}, {'time': 0.021799417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.508" endtime="20201115 21:59:54.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.524" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.512" endtime="20201115 21:59:54.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.528" level="INFO">NAME: 00-overhead-1-set</msg>
<status status="PASS" starttime="20201115 21:59:54.527" endtime="20201115 21:59:54.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.531" level="INFO">VALUE: [8.958999999999356e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.861000000002367e-06, 8.833999999999231e-06, 8.903000000001077e-06, 8.901999999998134e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.901999999998134e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.916000000001173e-06, 8.832999999999758e-06, 8.902999999997607e-06, 8.888000000002033e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.931000000000217e-06, 8.887999999998564e-06, 8.861000000002367e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.530" endtime="20201115 21:59:54.532"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.525" endtime="20201115 21:59:54.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.535" endtime="20201115 21:59:54.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.538" endtime="20201115 21:59:54.557"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.536" endtime="20201115 21:59:54.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.533" endtime="20201115 21:59:54.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.169" endtime="20201115 21:59:54.558"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.605" endtime="20201115 21:59:54.559"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.604" endtime="20201115 21:59:54.559"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.561" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.570" endtime="20201115 21:59:54.584"></status>
</kw>
<msg timestamp="20201115 21:59:54.585" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.568" endtime="20201115 21:59:54.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.587" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.586" endtime="20201115 21:59:54.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.588" endtime="20201115 21:59:54.590"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.566" endtime="20201115 21:59:54.591"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.564" endtime="20201115 21:59:54.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.597" endtime="20201115 21:59:54.885"></status>
</kw>
<msg timestamp="20201115 21:59:54.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.596" endtime="20201115 21:59:54.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024397917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024404264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.889" endtime="20201115 21:59:54.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.897" endtime="20201115 21:59:54.899"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.593" endtime="20201115 21:59:54.899"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.592" endtime="20201115 21:59:54.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:54.904" level="INFO">${RESULT} = [{'time': 0.024404264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.346999999996827e-06, 'source_diff': 6.346999999996827e-06}, {'time': 0.024496819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:54.901" endtime="20201115 21:59:54.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:54.917" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:54.905" endtime="20201115 21:59:54.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.922" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:54.921" endtime="20201115 21:59:54.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.924" level="INFO">VALUE: [6.346999999996827e-06, 6.458000000000852e-06, 6.4029999999985765e-06, 6.333000000000727e-06, 6.415999999998673e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.4029999999985765e-06, 6.431000000001186e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.430999999997716e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.416999999998146e-06, 6.387999999999533e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.375000000002906e-06, 6.389000000002476e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.416999999998146e-06, 6.458000000000852e-06, 6.374999999999437e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.415999999998673e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.415999999998673e-06, 6.445000000000756e-06, 6.388999999999007e-06, 6.320000000000631e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.4029999999985765e-06]</msg>
<status status="PASS" starttime="20201115 21:59:54.923" endtime="20201115 21:59:54.925"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.918" endtime="20201115 21:59:54.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.928" endtime="20201115 21:59:54.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:54.931" endtime="20201115 21:59:54.950"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.929" endtime="20201115 21:59:54.951"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.926" endtime="20201115 21:59:54.951"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.562" endtime="20201115 21:59:54.952"></status>
</kw>
<msg timestamp="20201115 21:59:54.952" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.961" endtime="20201115 21:59:54.976"></status>
</kw>
<msg timestamp="20201115 21:59:54.976" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.959" endtime="20201115 21:59:54.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:54.979" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:54.977" endtime="20201115 21:59:54.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.980" endtime="20201115 21:59:54.981"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.956" endtime="20201115 21:59:54.982"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.954" endtime="20201115 21:59:54.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:54.989" endtime="20201115 21:59:55.275"></status>
</kw>
<msg timestamp="20201115 21:59:55.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:54.987" endtime="20201115 21:59:55.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.279" endtime="20201115 21:59:55.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.287" endtime="20201115 21:59:55.289"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.985" endtime="20201115 21:59:55.289"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.983" endtime="20201115 21:59:55.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.294" level="INFO">${RESULT} = [{'time': 0.022077986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.022174472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.291" endtime="20201115 21:59:55.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.307" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.295" endtime="20201115 21:59:55.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.312" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.311" endtime="20201115 21:59:55.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.315" level="INFO">VALUE: [6.374999999999437e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.402000000002572e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.416000000002142e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.416999999998146e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.347000000000297e-06, 6.374999999999437e-06, 6.402000000002572e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.3329999999972575e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.458000000000852e-06, 6.360999999999867e-06, 6.485999999999992e-06, 6.388999999999007e-06, 6.387999999999533e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.459000000000326e-06, 6.389000000002476e-06, 6.347000000000297e-06, 6.388999999999007e-06, 6.444000000001282e-06, 6.388999999999007e-06, 6.360999999999867e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.313" endtime="20201115 21:59:55.315"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.309" endtime="20201115 21:59:55.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.318" endtime="20201115 21:59:55.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.321" endtime="20201115 21:59:55.340"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.320" endtime="20201115 21:59:55.341"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.316" endtime="20201115 21:59:55.342"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.952" endtime="20201115 21:59:55.342"></status>
</kw>
<msg timestamp="20201115 21:59:55.342" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.351" endtime="20201115 21:59:55.365"></status>
</kw>
<msg timestamp="20201115 21:59:55.366" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.349" endtime="20201115 21:59:55.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.368" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.367" endtime="20201115 21:59:55.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.369" endtime="20201115 21:59:55.371"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.347" endtime="20201115 21:59:55.371"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.345" endtime="20201115 21:59:55.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.378" endtime="20201115 21:59:55.665"></status>
</kw>
<msg timestamp="20201115 21:59:55.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.377" endtime="20201115 21:59:55.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.669" endtime="20201115 21:59:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.677" endtime="20201115 21:59:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.374" endtime="20201115 21:59:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.372" endtime="20201115 21:59:55.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:55.684" level="INFO">${RESULT} = [{'time': 0.022263028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.022358639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:55.680" endtime="20201115 21:59:55.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:55.697" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:55.685" endtime="20201115 21:59:55.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.702" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:55.701" endtime="20201115 21:59:55.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.705" level="INFO">VALUE: [6.417000000001616e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.4029999999985765e-06, 6.416999999998146e-06, 6.4029999999985765e-06, 6.458000000000852e-06, 6.401999999999103e-06, 6.388000000003002e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.443999999997813e-06, 6.4029999999985765e-06, 6.402000000002572e-06, 6.458000000000852e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.403000000002046e-06, 6.387999999999533e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.416000000002142e-06, 6.403000000002046e-06, 6.402000000002572e-06, 6.388999999999007e-06, 6.415999999998673e-06, 6.388999999999007e-06, 6.387999999999533e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.401999999999103e-06, 6.374999999999437e-06]</msg>
<status status="PASS" starttime="20201115 21:59:55.703" endtime="20201115 21:59:55.705"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.698" endtime="20201115 21:59:55.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.708" endtime="20201115 21:59:55.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:55.711" endtime="20201115 21:59:55.730"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.710" endtime="20201115 21:59:55.731"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.706" endtime="20201115 21:59:55.732"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.343" endtime="20201115 21:59:55.732"></status>
</kw>
<msg timestamp="20201115 21:59:55.732" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.741" endtime="20201115 21:59:55.756"></status>
</kw>
<msg timestamp="20201115 21:59:55.756" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.739" endtime="20201115 21:59:55.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:55.759" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:55.757" endtime="20201115 21:59:55.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.760" endtime="20201115 21:59:55.761"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.737" endtime="20201115 21:59:55.762"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.735" endtime="20201115 21:59:55.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:55.769" endtime="20201115 21:59:56.058"></status>
</kw>
<msg timestamp="20201115 21:59:56.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:55.768" endtime="20201115 21:59:56.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.062" endtime="20201115 21:59:56.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.071" endtime="20201115 21:59:56.072"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.765" endtime="20201115 21:59:56.073"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.763" endtime="20201115 21:59:56.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.077" level="INFO">${RESULT} = [{'time': 0.022051375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.022153403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.074" endtime="20201115 21:59:56.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.091" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.078" endtime="20201115 21:59:56.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.095" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.094" endtime="20201115 21:59:56.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.097" level="INFO">VALUE: [6.389000000002476e-06, 6.430999999997716e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.430000000001712e-06, 6.374999999999437e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.431000000001186e-06, 6.458000000000852e-06, 6.417000000001616e-06, 6.333000000000727e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.430999999997716e-06, 6.388999999999007e-06, 6.416999999998146e-06, 6.431000000001186e-06, 6.388999999999007e-06, 6.4029999999985765e-06, 6.402000000002572e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 6.4029999999985765e-06, 6.459000000000326e-06, 6.374999999999437e-06, 6.401999999999103e-06, 6.346999999996827e-06, 6.401999999999103e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.4029999999985765e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.416999999998146e-06, 6.401999999999103e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.096" endtime="20201115 21:59:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.091" endtime="20201115 21:59:56.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.101" endtime="20201115 21:59:56.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.104" endtime="20201115 21:59:56.123"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.103" endtime="20201115 21:59:56.124"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.099" endtime="20201115 21:59:56.125"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:55.733" endtime="20201115 21:59:56.125"></status>
</kw>
<msg timestamp="20201115 21:59:56.125" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.134" endtime="20201115 21:59:56.150"></status>
</kw>
<msg timestamp="20201115 21:59:56.150" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.132" endtime="20201115 21:59:56.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 2', 'msg': ['overhead_timer_list set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.151" endtime="20201115 21:59:56.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.154" endtime="20201115 21:59:56.155"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.130" endtime="20201115 21:59:56.156"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.128" endtime="20201115 21:59:56.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.162" endtime="20201115 21:59:56.448"></status>
</kw>
<msg timestamp="20201115 21:59:56.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.161" endtime="20201115 21:59:56.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.453" endtime="20201115 21:59:56.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.462" endtime="20201115 21:59:56.463"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.158" endtime="20201115 21:59:56.464"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.157" endtime="20201115 21:59:56.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.468" level="INFO">${RESULT} = [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.022276903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.465" endtime="20201115 21:59:56.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.481" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.469" endtime="20201115 21:59:56.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.486" level="INFO">NAME: 00-overhead-2-set</msg>
<status status="PASS" starttime="20201115 21:59:56.485" endtime="20201115 21:59:56.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.488" level="INFO">VALUE: [6.444000000001282e-06, 6.403000000002046e-06, 6.36199999999934e-06, 6.445000000000756e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.401999999999103e-06, 6.4029999999985765e-06, 6.416999999998146e-06, 6.387999999999533e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.388000000003002e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.417000000001616e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.333000000000727e-06, 6.402000000002572e-06, 6.401999999999103e-06, 6.374999999999437e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.403000000002046e-06, 6.374999999999437e-06, 6.415999999998673e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.388999999999007e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.458000000000852e-06, 6.402000000002572e-06, 6.403000000002046e-06, 6.360999999999867e-06, 6.403000000002046e-06, 6.4029999999985765e-06, 6.319000000001157e-06, 6.320000000000631e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.487" endtime="20201115 21:59:56.489"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.482" endtime="20201115 21:59:56.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.491" endtime="20201115 21:59:56.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.495" endtime="20201115 21:59:56.514"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.493" endtime="20201115 21:59:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.490" endtime="20201115 21:59:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.126" endtime="20201115 21:59:56.515"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.560" endtime="20201115 21:59:56.516"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:54.559" endtime="20201115 21:59:56.516"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.518" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.527" endtime="20201115 21:59:56.542"></status>
</kw>
<msg timestamp="20201115 21:59:56.542" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.525" endtime="20201115 21:59:56.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.543" endtime="20201115 21:59:56.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.546" endtime="20201115 21:59:56.547"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.523" endtime="20201115 21:59:56.548"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.521" endtime="20201115 21:59:56.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.555" endtime="20201115 21:59:56.842"></status>
</kw>
<msg timestamp="20201115 21:59:56.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0242245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:56.554" endtime="20201115 21:59:56.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0242245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024231194, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 21:59:56.846" endtime="20201115 21:59:56.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.854" endtime="20201115 21:59:56.856"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.551" endtime="20201115 21:59:56.856"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.549" endtime="20201115 21:59:56.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:56.861" level="INFO">${RESULT} = [{'time': 0.024231194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.024338528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:56.857" endtime="20201115 21:59:56.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:56.874" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:56.862" endtime="20201115 21:59:56.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.878" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:56.877" endtime="20201115 21:59:56.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.881" level="INFO">VALUE: [6.694000000001532e-06, 6.750000000003281e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.681000000001436e-06, 6.7079999999976325e-06, 6.693999999998063e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.681000000001436e-06, 6.681000000001436e-06, 6.695000000001006e-06, 6.694999999997536e-06, 6.680000000001962e-06, 6.708000000001102e-06, 6.638999999999257e-06, 6.680000000001962e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.681000000001436e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.680000000001962e-06, 6.681000000001436e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.736000000000242e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.7219999999972024e-06, 6.736000000000242e-06, 6.7219999999972024e-06, 6.7219999999972024e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.790999999999048e-06, 6.722000000000672e-06, 6.695000000001006e-06, 6.694999999997536e-06, 6.763999999999382e-06]</msg>
<status status="PASS" starttime="20201115 21:59:56.879" endtime="20201115 21:59:56.881"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.875" endtime="20201115 21:59:56.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.884" endtime="20201115 21:59:56.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:56.887" endtime="20201115 21:59:56.906"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.886" endtime="20201115 21:59:56.907"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.882" endtime="20201115 21:59:56.908"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.518" endtime="20201115 21:59:56.908"></status>
</kw>
<msg timestamp="20201115 21:59:56.908" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.917" endtime="20201115 21:59:56.933"></status>
</kw>
<msg timestamp="20201115 21:59:56.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.915" endtime="20201115 21:59:56.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:56.936" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:56.934" endtime="20201115 21:59:56.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.937" endtime="20201115 21:59:56.939"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.913" endtime="20201115 21:59:56.939"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.911" endtime="20201115 21:59:56.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:56.946" endtime="20201115 21:59:57.233"></status>
</kw>
<msg timestamp="20201115 21:59:57.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:56.945" endtime="20201115 21:59:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.237" endtime="20201115 21:59:57.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.245" endtime="20201115 21:59:57.247"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.942" endtime="20201115 21:59:57.247"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.940" endtime="20201115 21:59:57.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.252" level="INFO">${RESULT} = [{'time': 0.021970292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.022084931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.248" endtime="20201115 21:59:57.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.265" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.253" endtime="20201115 21:59:57.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.270" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.269" endtime="20201115 21:59:57.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.272" level="INFO">VALUE: [6.709000000000576e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.694999999997536e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.681000000001436e-06, 6.708999999997106e-06, 6.776999999999478e-06, 6.7079999999976325e-06, 6.709000000000576e-06, 6.7219999999972024e-06, 6.709000000000576e-06, 6.694999999997536e-06, 6.708000000001102e-06, 6.778000000002421e-06, 6.694000000001532e-06, 6.638999999999257e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.708999999997106e-06, 6.680000000001962e-06, 6.7369999999997154e-06, 6.7079999999976325e-06, 6.681000000001436e-06, 6.665999999998923e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.709000000000576e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.271" endtime="20201115 21:59:57.273"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.266" endtime="20201115 21:59:57.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.275" endtime="20201115 21:59:57.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.279" endtime="20201115 21:59:57.298"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.277" endtime="20201115 21:59:57.299"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.274" endtime="20201115 21:59:57.299"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.909" endtime="20201115 21:59:57.299"></status>
</kw>
<msg timestamp="20201115 21:59:57.300" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.313" endtime="20201115 21:59:57.328"></status>
</kw>
<msg timestamp="20201115 21:59:57.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.307" endtime="20201115 21:59:57.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.331" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.329" endtime="20201115 21:59:57.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.332" endtime="20201115 21:59:57.333"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.304" endtime="20201115 21:59:57.334"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.302" endtime="20201115 21:59:57.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.341" endtime="20201115 21:59:57.628"></status>
</kw>
<msg timestamp="20201115 21:59:57.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026427611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.339" endtime="20201115 21:59:57.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026420903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026427611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.632" endtime="20201115 21:59:57.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.640" endtime="20201115 21:59:57.642"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.336" endtime="20201115 21:59:57.643"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.335" endtime="20201115 21:59:57.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:57.647" level="INFO">${RESULT} = [{'time': 0.026427611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.026544403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:57.644" endtime="20201115 21:59:57.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:57.660" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:57.648" endtime="20201115 21:59:57.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.665" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:57.664" endtime="20201115 21:59:57.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.667" level="INFO">VALUE: [6.708000000001102e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.749999999999812e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.708000000001102e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.7919999999985214e-06, 6.708000000001102e-06, 6.680999999997966e-06, 6.708999999997106e-06, 6.708000000001102e-06, 6.637999999999783e-06, 6.695000000001006e-06, 6.694999999997536e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.6669999999983964e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.680999999997966e-06, 6.6529999999988265e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.680999999997966e-06, 6.708000000001102e-06, 6.694999999994067e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201115 21:59:57.666" endtime="20201115 21:59:57.668"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.661" endtime="20201115 21:59:57.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.670" endtime="20201115 21:59:57.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:57.674" endtime="20201115 21:59:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.672" endtime="20201115 21:59:57.694"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.669" endtime="20201115 21:59:57.694"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.300" endtime="20201115 21:59:57.694"></status>
</kw>
<msg timestamp="20201115 21:59:57.695" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.704" endtime="20201115 21:59:57.720"></status>
</kw>
<msg timestamp="20201115 21:59:57.721" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.702" endtime="20201115 21:59:57.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:57.723" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:57.722" endtime="20201115 21:59:57.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.724" endtime="20201115 21:59:57.726"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.700" endtime="20201115 21:59:57.726"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.697" endtime="20201115 21:59:57.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:57.733" endtime="20201115 21:59:58.019"></status>
</kw>
<msg timestamp="20201115 21:59:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:57.732" endtime="20201115 21:59:58.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.023" endtime="20201115 21:59:58.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.031" endtime="20201115 21:59:58.033"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.729" endtime="20201115 21:59:58.033"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.727" endtime="20201115 21:59:58.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.038" level="INFO">${RESULT} = [{'time': 0.022940806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.023047583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.034" endtime="20201115 21:59:58.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.051" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.039" endtime="20201115 21:59:58.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.055" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.054" endtime="20201115 21:59:58.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.058" level="INFO">VALUE: [6.709000000000576e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.637999999999783e-06, 6.653000000002296e-06, 6.722000000000672e-06, 6.722999999996676e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.694999999997536e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.709000000000576e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.709000000000576e-06, 6.695000000001006e-06, 6.708999999997106e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.708000000001102e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.722000000000672e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.709000000000576e-06, 6.708999999997106e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.680999999997966e-06, 6.709000000000576e-06, 6.7219999999972024e-06, 6.7079999999976325e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.693999999998063e-06, 6.709000000000576e-06, 6.7079999999976325e-06, 6.708999999997106e-06, 6.693999999998063e-06, 6.708000000001102e-06, 6.693999999998063e-06, 6.695000000001006e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.056" endtime="20201115 21:59:58.058"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.052" endtime="20201115 21:59:58.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.061" endtime="20201115 21:59:58.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.065" endtime="20201115 21:59:58.084"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.063" endtime="20201115 21:59:58.085"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.059" endtime="20201115 21:59:58.085"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:57.695" endtime="20201115 21:59:58.085"></status>
</kw>
<msg timestamp="20201115 21:59:58.086" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.094" endtime="20201115 21:59:58.110"></status>
</kw>
<msg timestamp="20201115 21:59:58.110" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.093" endtime="20201115 21:59:58.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.112" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 3', 'msg': ['overhead_timer_list set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.111" endtime="20201115 21:59:58.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.113" endtime="20201115 21:59:58.115"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.090" endtime="20201115 21:59:58.116"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.088" endtime="20201115 21:59:58.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.122" endtime="20201115 21:59:58.410"></status>
</kw>
<msg timestamp="20201115 21:59:58.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.121" endtime="20201115 21:59:58.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.414" endtime="20201115 21:59:58.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.422" endtime="20201115 21:59:58.424"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.118" endtime="20201115 21:59:58.424"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.117" endtime="20201115 21:59:58.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.429" level="INFO">${RESULT} = [{'time': 0.022070139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.022180417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 21:59:58.426" endtime="20201115 21:59:58.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.442" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.430" endtime="20201115 21:59:58.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.447" level="INFO">NAME: 00-overhead-3-set</msg>
<status status="PASS" starttime="20201115 21:59:58.446" endtime="20201115 21:59:58.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.449" level="INFO">VALUE: [6.7079999999976325e-06, 6.709000000000576e-06, 6.7230000000001455e-06, 6.7230000000001455e-06, 6.667000000001866e-06, 6.695000000001006e-06, 6.709000000000576e-06, 6.694000000001532e-06, 6.709000000000576e-06, 6.7219999999972024e-06, 6.693999999998063e-06, 6.708000000001102e-06, 6.694000000001532e-06, 6.694999999997536e-06, 6.679999999998493e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.791000000002517e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.709000000000576e-06, 6.638999999999257e-06, 6.7230000000001455e-06, 6.7079999999976325e-06, 6.653000000002296e-06, 6.722000000000672e-06, 6.7079999999976325e-06, 6.7079999999976325e-06, 6.749999999999812e-06, 6.708999999997106e-06, 6.708000000001102e-06, 6.722000000000672e-06, 6.639000000002726e-06, 6.7369999999997154e-06, 6.763999999999382e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.7079999999976325e-06, 6.735999999996772e-06, 6.750000000003281e-06, 6.709000000000576e-06, 6.722000000000672e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.680999999997966e-06, 6.7079999999976325e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.448" endtime="20201115 21:59:58.450"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.443" endtime="20201115 21:59:58.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.453" endtime="20201115 21:59:58.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.456" endtime="20201115 21:59:58.475"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.454" endtime="20201115 21:59:58.476"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.451" endtime="20201115 21:59:58.477"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.086" endtime="20201115 21:59:58.477"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.517" endtime="20201115 21:59:58.477"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:56.516" endtime="20201115 21:59:58.477"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.480" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.488" endtime="20201115 21:59:58.504"></status>
</kw>
<msg timestamp="20201115 21:59:58.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.487" endtime="20201115 21:59:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.507" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.506" endtime="20201115 21:59:58.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.508" endtime="20201115 21:59:58.510"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.484" endtime="20201115 21:59:58.510"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.482" endtime="20201115 21:59:58.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.517" endtime="20201115 21:59:58.804"></status>
</kw>
<msg timestamp="20201115 21:59:58.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.516" endtime="20201115 21:59:58.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024276139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.808" endtime="20201115 21:59:58.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.817" endtime="20201115 21:59:58.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.513" endtime="20201115 21:59:58.819"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.511" endtime="20201115 21:59:58.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:58.824" level="INFO">${RESULT} = [{'time': 0.024276139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.024406361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:58.821" endtime="20201115 21:59:58.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:58.838" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:58.825" endtime="20201115 21:59:58.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.842" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:58.841" endtime="20201115 21:59:58.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.845" level="INFO">VALUE: [7.000000000000062e-06, 6.986000000000492e-06, 7.068999999998438e-06, 7.0279999999992016e-06, 7.069000000001907e-06, 7.0279999999992016e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.014000000003101e-06, 7.014000000003101e-06, 7.014000000003101e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.028000000002671e-06, 7.028000000002671e-06, 7.054999999998868e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.027000000003197e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.014000000003101e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.040999999999298e-06, 6.972000000000922e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.9869999999999655e-06, 6.986000000000492e-06, 6.958000000001352e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201115 21:59:58.843" endtime="20201115 21:59:58.846"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.839" endtime="20201115 21:59:58.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.849" endtime="20201115 21:59:58.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:58.852" endtime="20201115 21:59:58.872"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.851" endtime="20201115 21:59:58.872"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.847" endtime="20201115 21:59:58.873"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.480" endtime="20201115 21:59:58.873"></status>
</kw>
<msg timestamp="20201115 21:59:58.873" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.883" endtime="20201115 21:59:58.899"></status>
</kw>
<msg timestamp="20201115 21:59:58.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.881" endtime="20201115 21:59:58.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:58.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:58.901" endtime="20201115 21:59:58.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.904" endtime="20201115 21:59:58.905"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.878" endtime="20201115 21:59:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.876" endtime="20201115 21:59:58.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:58.913" endtime="20201115 21:59:59.202"></status>
</kw>
<msg timestamp="20201115 21:59:59.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:58.911" endtime="20201115 21:59:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.206" endtime="20201115 21:59:59.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.215" endtime="20201115 21:59:59.216"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.909" endtime="20201115 21:59:59.217"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.907" endtime="20201115 21:59:59.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.221" level="INFO">${RESULT} = [{'time': 0.022725431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.0228475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.218" endtime="20201115 21:59:59.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.234" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.222" endtime="20201115 21:59:59.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.239" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.238" endtime="20201115 21:59:59.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.242" level="INFO">VALUE: [7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 6.972000000000922e-06, 7.041000000002767e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.028000000002671e-06, 6.9579999999978825e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 6.944000000001782e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0980000000005206e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.240" endtime="20201115 21:59:59.242"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.236" endtime="20201115 21:59:59.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.245" endtime="20201115 21:59:59.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.248" endtime="20201115 21:59:59.267"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.247" endtime="20201115 21:59:59.268"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.243" endtime="20201115 21:59:59.269"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.874" endtime="20201115 21:59:59.269"></status>
</kw>
<msg timestamp="20201115 21:59:59.269" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.278" endtime="20201115 21:59:59.294"></status>
</kw>
<msg timestamp="20201115 21:59:59.295" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.276" endtime="20201115 21:59:59.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.296" endtime="20201115 21:59:59.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.298" endtime="20201115 21:59:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.274" endtime="20201115 21:59:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.272" endtime="20201115 21:59:59.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.307" endtime="20201115 21:59:59.609"></status>
</kw>
<msg timestamp="20201115 21:59:59.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.306" endtime="20201115 21:59:59.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.613" endtime="20201115 21:59:59.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.621" endtime="20201115 21:59:59.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.303" endtime="20201115 21:59:59.623"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.301" endtime="20201115 21:59:59.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 21:59:59.628" level="INFO">${RESULT} = [{'time': 0.021971875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022094431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 21:59:59.624" endtime="20201115 21:59:59.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 21:59:59.641" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 21:59:59.629" endtime="20201115 21:59:59.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.646" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 21:59:59.645" endtime="20201115 21:59:59.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.648" level="INFO">VALUE: [7.013999999999632e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 6.986000000000492e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.014000000003101e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 6.986000000000492e-06, 7.083000000001477e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0129999999966885e-06, 7.026999999999728e-06, 7.013000000000158e-06, 7.028000000002671e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.083999999997481e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.026999999999728e-06, 7.055999999998341e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.0419999999987715e-06, 7.069000000001907e-06, 7.026999999999728e-06, 7.000000000000062e-06, 7.026999999999728e-06, 7.013000000000158e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.013000000000158e-06, 7.028000000002671e-06]</msg>
<status status="PASS" starttime="20201115 21:59:59.647" endtime="20201115 21:59:59.649"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.642" endtime="20201115 21:59:59.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.651" endtime="20201115 21:59:59.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 21:59:59.655" endtime="20201115 21:59:59.674"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.653" endtime="20201115 21:59:59.675"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.650" endtime="20201115 21:59:59.675"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.270" endtime="20201115 21:59:59.675"></status>
</kw>
<msg timestamp="20201115 21:59:59.676" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.684" endtime="20201115 21:59:59.700"></status>
</kw>
<msg timestamp="20201115 21:59:59.701" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.683" endtime="20201115 21:59:59.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 21:59:59.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 21:59:59.702" endtime="20201115 21:59:59.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.704" endtime="20201115 21:59:59.706"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.680" endtime="20201115 21:59:59.706"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.678" endtime="20201115 21:59:59.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 21:59:59.713" endtime="20201115 22:00:00.000"></status>
</kw>
<msg timestamp="20201115 22:00:00.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 21:59:59.712" endtime="20201115 22:00:00.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.004" endtime="20201115 22:00:00.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.013" endtime="20201115 22:00:00.015"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.709" endtime="20201115 22:00:00.015"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.707" endtime="20201115 22:00:00.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.020" level="INFO">${RESULT} = [{'time': 0.022223972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.014000000003101e-06, 'source_diff': 7.014000000003101e-06}, {'time': 0.022348708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.016" endtime="20201115 22:00:00.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.034" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.021" endtime="20201115 22:00:00.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.038" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.037" endtime="20201115 22:00:00.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.041" level="INFO">VALUE: [7.014000000003101e-06, 7.013999999999632e-06, 7.040999999999298e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.013000000000158e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 7.014000000003101e-06, 7.028000000002671e-06, 7.0279999999992016e-06, 6.972000000000922e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.028000000002671e-06, 7.014000000003101e-06, 6.972000000000922e-06, 7.013999999999632e-06, 7.000000000000062e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.014000000003101e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 7.014000000003101e-06, 7.084000000000951e-06, 7.070000000001381e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.039" endtime="20201115 22:00:00.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.034" endtime="20201115 22:00:00.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.044" endtime="20201115 22:00:00.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.047" endtime="20201115 22:00:00.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.045" endtime="20201115 22:00:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.042" endtime="20201115 22:00:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:59.676" endtime="20201115 22:00:00.068"></status>
</kw>
<msg timestamp="20201115 22:00:00.068" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.077" endtime="20201115 22:00:00.094"></status>
</kw>
<msg timestamp="20201115 22:00:00.094" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.075" endtime="20201115 22:00:00.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.097" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 4', 'msg': ['overhead_timer_list set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.095" endtime="20201115 22:00:00.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.098" endtime="20201115 22:00:00.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.073" endtime="20201115 22:00:00.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.070" endtime="20201115 22:00:00.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.107" endtime="20201115 22:00:00.393"></status>
</kw>
<msg timestamp="20201115 22:00:00.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.105" endtime="20201115 22:00:00.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.397" endtime="20201115 22:00:00.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.405" endtime="20201115 22:00:00.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.103" endtime="20201115 22:00:00.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.101" endtime="20201115 22:00:00.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.412" level="INFO">${RESULT} = [{'time': 0.022545597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.022668667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:00.409" endtime="20201115 22:00:00.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.425" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.413" endtime="20201115 22:00:00.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.430" level="INFO">NAME: 00-overhead-4-set</msg>
<status status="PASS" starttime="20201115 22:00:00.429" endtime="20201115 22:00:00.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.432" level="INFO">VALUE: [7.013999999999632e-06, 7.013999999999632e-06, 6.972000000000922e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.069000000001907e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.013999999999632e-06, 6.959000000000826e-06, 7.028000000002671e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.040999999999298e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.042000000002241e-06, 7.013999999999632e-06, 7.042000000002241e-06, 7.013999999999632e-06, 7.028000000002671e-06, 7.055999999998341e-06, 7.028000000002671e-06, 7.026999999999728e-06, 7.0279999999992016e-06, 7.028000000002671e-06, 7.028000000002671e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.026999999999728e-06, 7.013000000000158e-06, 7.014000000003101e-06, 7.000000000000062e-06, 7.013000000000158e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 7.026999999999728e-06, 7.0419999999987715e-06, 7.0419999999987715e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.026999999999728e-06, 6.999999999996592e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.431" endtime="20201115 22:00:00.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.426" endtime="20201115 22:00:00.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.435" endtime="20201115 22:00:00.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.439" endtime="20201115 22:00:00.458"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.437" endtime="20201115 22:00:00.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.434" endtime="20201115 22:00:00.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.068" endtime="20201115 22:00:00.460"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.478" endtime="20201115 22:00:00.460"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:58.478" endtime="20201115 22:00:00.460"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.462" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.471" endtime="20201115 22:00:00.488"></status>
</kw>
<msg timestamp="20201115 22:00:00.489" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.470" endtime="20201115 22:00:00.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.491" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.490" endtime="20201115 22:00:00.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.492" endtime="20201115 22:00:00.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.467" endtime="20201115 22:00:00.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.465" endtime="20201115 22:00:00.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.502" endtime="20201115 22:00:00.789"></status>
</kw>
<msg timestamp="20201115 22:00:00.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.500" endtime="20201115 22:00:00.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024606764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.793" endtime="20201115 22:00:00.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.801" endtime="20201115 22:00:00.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.498" endtime="20201115 22:00:00.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.496" endtime="20201115 22:00:00.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:00.808" level="INFO">${RESULT} = [{'time': 0.024614056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.024754889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:00.804" endtime="20201115 22:00:00.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:00.821" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:00.809" endtime="20201115 22:00:00.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.825" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:00.824" endtime="20201115 22:00:00.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.828" level="INFO">VALUE: [7.2919999999990215e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.319999999998161e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.403000000003046e-06, 7.320000000001631e-06, 7.334000000001201e-06, 7.3469999999978275e-06, 7.3469999999978275e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.348000000000771e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.334000000001201e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.3469999999978275e-06, 7.348000000000771e-06, 7.318999999998688e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.334000000001201e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.4169999999991465e-06, 7.319999999998161e-06, 7.389000000000007e-06, 7.320000000001631e-06, 7.347000000001297e-06, 7.3469999999978275e-06, 7.333000000001727e-06, 7.375000000000437e-06, 7.347000000001297e-06, 7.389000000000007e-06, 7.3469999999978275e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.3190000000056266e-06]</msg>
<status status="PASS" starttime="20201115 22:00:00.826" endtime="20201115 22:00:00.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.822" endtime="20201115 22:00:00.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.831" endtime="20201115 22:00:00.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:00.834" endtime="20201115 22:00:00.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.833" endtime="20201115 22:00:00.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.829" endtime="20201115 22:00:00.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.463" endtime="20201115 22:00:00.855"></status>
</kw>
<msg timestamp="20201115 22:00:00.855" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.864" endtime="20201115 22:00:00.881"></status>
</kw>
<msg timestamp="20201115 22:00:00.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.863" endtime="20201115 22:00:00.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:00.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:00.883" endtime="20201115 22:00:00.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.886" endtime="20201115 22:00:00.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.860" endtime="20201115 22:00:00.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.858" endtime="20201115 22:00:00.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:00.895" endtime="20201115 22:00:01.181"></status>
</kw>
<msg timestamp="20201115 22:00:01.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:00.893" endtime="20201115 22:00:01.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.186" endtime="20201115 22:00:01.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.194" endtime="20201115 22:00:01.195"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.891" endtime="20201115 22:00:01.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.889" endtime="20201115 22:00:01.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.200" level="INFO">${RESULT} = [{'time': 0.022074264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.022219069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.197" endtime="20201115 22:00:01.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.213" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.201" endtime="20201115 22:00:01.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.218" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.217" endtime="20201115 22:00:01.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.221" level="INFO">VALUE: [7.332999999998258e-06, 7.319000000002157e-06, 7.304999999999118e-06, 7.3469999999978275e-06, 7.333999999997731e-06, 7.348000000000771e-06, 7.333000000001727e-06, 7.305000000002587e-06, 7.333000000001727e-06, 7.347999999997301e-06, 7.347000000001297e-06, 7.332999999998258e-06, 7.348000000000771e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.334000000001201e-06, 7.3469999999978275e-06, 7.318999999998688e-06, 7.360999999997397e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.305000000002587e-06, 7.318999999998688e-06, 7.319000000002157e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.3469999999978275e-06, 7.305999999998591e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.333999999997731e-06, 7.4169999999991465e-06, 7.332999999998258e-06, 7.334000000001201e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.375000000000437e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.361000000000867e-06, 7.3469999999978275e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.347000000001297e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.219" endtime="20201115 22:00:01.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.214" endtime="20201115 22:00:01.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.224" endtime="20201115 22:00:01.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.227" endtime="20201115 22:00:01.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.226" endtime="20201115 22:00:01.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.222" endtime="20201115 22:00:01.247"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.856" endtime="20201115 22:00:01.248"></status>
</kw>
<msg timestamp="20201115 22:00:01.248" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.257" endtime="20201115 22:00:01.274"></status>
</kw>
<msg timestamp="20201115 22:00:01.275" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.255" endtime="20201115 22:00:01.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.276" endtime="20201115 22:00:01.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.278" endtime="20201115 22:00:01.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.253" endtime="20201115 22:00:01.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.251" endtime="20201115 22:00:01.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.287" endtime="20201115 22:00:01.575"></status>
</kw>
<msg timestamp="20201115 22:00:01.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.286" endtime="20201115 22:00:01.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.579" endtime="20201115 22:00:01.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.587" endtime="20201115 22:00:01.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.283" endtime="20201115 22:00:01.589"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.281" endtime="20201115 22:00:01.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.593" level="INFO">${RESULT} = [{'time': 0.022837278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.022976056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.590" endtime="20201115 22:00:01.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:01.607" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.594" endtime="20201115 22:00:01.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.611" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:01.610" endtime="20201115 22:00:01.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.614" level="INFO">VALUE: [7.375000000000437e-06, 7.348000000000771e-06, 7.332999999998258e-06, 7.334000000001201e-06, 7.334000000001201e-06, 7.306000000002061e-06, 7.306000000002061e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.319999999998161e-06, 7.332999999998258e-06, 7.333999999997731e-06, 7.334000000001201e-06, 7.318999999998688e-06, 7.306000000002061e-06, 7.319000000002157e-06, 7.332999999998258e-06, 7.305999999998591e-06, 7.333000000001727e-06, 7.375000000000437e-06, 7.333000000001727e-06, 7.333999999997731e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.320000000001631e-06, 7.2779999999994516e-06, 7.389000000000007e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.304999999999118e-06, 7.334000000001201e-06, 7.319000000002157e-06, 7.348000000000771e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.319000000002157e-06, 7.334000000001201e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.347000000001297e-06, 7.333000000001727e-06, 7.333999999997731e-06, 7.320000000001631e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.348000000000771e-06]</msg>
<status status="PASS" starttime="20201115 22:00:01.612" endtime="20201115 22:00:01.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.607" endtime="20201115 22:00:01.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.617" endtime="20201115 22:00:01.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:01.620" endtime="20201115 22:00:01.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.619" endtime="20201115 22:00:01.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.615" endtime="20201115 22:00:01.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.248" endtime="20201115 22:00:01.641"></status>
</kw>
<msg timestamp="20201115 22:00:01.642" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.650" endtime="20201115 22:00:01.668"></status>
</kw>
<msg timestamp="20201115 22:00:01.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.649" endtime="20201115 22:00:01.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:01.669" endtime="20201115 22:00:01.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.672" endtime="20201115 22:00:01.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.646" endtime="20201115 22:00:01.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.644" endtime="20201115 22:00:01.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.681" endtime="20201115 22:00:01.968"></status>
</kw>
<msg timestamp="20201115 22:00:01.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.679" endtime="20201115 22:00:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:01.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:01.972" endtime="20201115 22:00:01.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:01.980" endtime="20201115 22:00:01.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.677" endtime="20201115 22:00:01.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.675" endtime="20201115 22:00:01.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:01.987" level="INFO">${RESULT} = [{'time': 0.022533931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.334000000001201e-06, 'source_diff': 7.334000000001201e-06}, {'time': 0.022671236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:01.983" endtime="20201115 22:00:01.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.000" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:01.988" endtime="20201115 22:00:02.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.004" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.003" endtime="20201115 22:00:02.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.007" level="INFO">VALUE: [7.334000000001201e-06, 7.333000000001727e-06, 7.319000000002157e-06, 7.250000000000312e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.318999999998688e-06, 7.319999999998161e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.347000000001297e-06, 7.334000000001201e-06, 7.276999999999978e-06, 7.333000000001727e-06, 7.306000000002061e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.402999999999577e-06, 7.334000000001201e-06, 7.375000000000437e-06, 7.332999999998258e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.319999999998161e-06, 7.361000000000867e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.320000000001631e-06, 7.347999999997301e-06, 7.347999999997301e-06, 7.3620000000003405e-06, 7.332999999998258e-06, 7.361000000000867e-06, 7.3469999999978275e-06, 7.334000000001201e-06, 7.347000000001297e-06, 7.332999999998258e-06, 7.319000000002157e-06, 7.318999999998688e-06, 7.333000000001727e-06, 7.318999999998688e-06, 7.319000000002157e-06, 7.389000000000007e-06, 7.333999999997731e-06, 7.333000000001727e-06, 7.402999999999577e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.005" endtime="20201115 22:00:02.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.001" endtime="20201115 22:00:02.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.010" endtime="20201115 22:00:02.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.014" endtime="20201115 22:00:02.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.012" endtime="20201115 22:00:02.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.008" endtime="20201115 22:00:02.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:01.642" endtime="20201115 22:00:02.035"></status>
</kw>
<msg timestamp="20201115 22:00:02.035" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.044" endtime="20201115 22:00:02.061"></status>
</kw>
<msg timestamp="20201115 22:00:02.061" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.042" endtime="20201115 22:00:02.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 5', 'msg': ['overhead_timer_list set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.062" endtime="20201115 22:00:02.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.065" endtime="20201115 22:00:02.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.039" endtime="20201115 22:00:02.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.037" endtime="20201115 22:00:02.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.074" endtime="20201115 22:00:02.361"></status>
</kw>
<msg timestamp="20201115 22:00:02.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.072" endtime="20201115 22:00:02.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.365" endtime="20201115 22:00:02.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.373" endtime="20201115 22:00:02.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.070" endtime="20201115 22:00:02.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.068" endtime="20201115 22:00:02.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.380" level="INFO">${RESULT} = [{'time': 0.022442222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.022587264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.376" endtime="20201115 22:00:02.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.393" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.381" endtime="20201115 22:00:02.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.397" level="INFO">NAME: 00-overhead-5-set</msg>
<status status="PASS" starttime="20201115 22:00:02.396" endtime="20201115 22:00:02.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.400" level="INFO">VALUE: [7.347000000001297e-06, 7.402999999999577e-06, 7.332999999998258e-06, 7.304999999999118e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.334000000001201e-06, 7.319000000002157e-06, 7.347000000001297e-06, 7.332999999998258e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.334000000001201e-06, 7.320000000001631e-06, 7.402999999999577e-06, 7.306000000002061e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.319000000002157e-06, 7.3620000000003405e-06, 7.333999999997731e-06, 7.319000000002157e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.347000000001297e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.320000000001631e-06, 7.332999999998258e-06, 7.3469999999978275e-06, 7.319000000002157e-06, 7.319999999998161e-06, 7.319000000002157e-06, 7.333000000001727e-06, 7.290999999999548e-06, 7.3469999999978275e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.347999999997301e-06, 7.333000000001727e-06, 7.333000000001727e-06, 7.332999999998258e-06, 7.319999999998161e-06, 7.348000000000771e-06, 7.334000000001201e-06, 7.332999999998258e-06, 7.347000000001297e-06, 7.332999999998258e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.398" endtime="20201115 22:00:02.407"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.394" endtime="20201115 22:00:02.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.410" endtime="20201115 22:00:02.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.413" endtime="20201115 22:00:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.412" endtime="20201115 22:00:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.408" endtime="20201115 22:00:02.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.035" endtime="20201115 22:00:02.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.461" endtime="20201115 22:00:02.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:00.460" endtime="20201115 22:00:02.434"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.437" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.445" endtime="20201115 22:00:02.464"></status>
</kw>
<msg timestamp="20201115 22:00:02.464" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.444" endtime="20201115 22:00:02.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.465" endtime="20201115 22:00:02.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.468" endtime="20201115 22:00:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.441" endtime="20201115 22:00:02.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.439" endtime="20201115 22:00:02.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.477" endtime="20201115 22:00:02.764"></status>
</kw>
<msg timestamp="20201115 22:00:02.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:02.475" endtime="20201115 22:00:02.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024897, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024904625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:02.769" endtime="20201115 22:00:02.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.777" endtime="20201115 22:00:02.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.473" endtime="20201115 22:00:02.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.471" endtime="20201115 22:00:02.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:02.783" level="INFO">${RESULT} = [{'time': 0.024904625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.025061833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:02.780" endtime="20201115 22:00:02.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:02.796" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:02.784" endtime="20201115 22:00:02.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.801" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:02.800" endtime="20201115 22:00:02.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.804" level="INFO">VALUE: [7.625000000000687e-06, 7.652000000000353e-06, 7.665999999999923e-06, 7.652000000000353e-06, 7.693999999999063e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.679999999999493e-06, 7.651999999996884e-06, 7.625000000000687e-06, 7.569999999998411e-06, 7.639000000000257e-06, 7.667000000002866e-06, 7.665999999999923e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.665999999999923e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.652000000000353e-06, 7.639000000000257e-06, 7.6109999999976474e-06, 7.679999999999493e-06, 7.693999999999063e-06, 7.639000000000257e-06, 7.652000000000353e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.6109999999976474e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.582999999998508e-06, 7.665999999999923e-06, 7.652999999999827e-06, 7.639000000003726e-06, 7.653000000003296e-06, 7.639000000003726e-06, 7.666999999995927e-06, 7.638999999996787e-06, 7.653000000003296e-06, 7.638999999996787e-06, 7.6109999999976474e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201115 22:00:02.802" endtime="20201115 22:00:02.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.797" endtime="20201115 22:00:02.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.807" endtime="20201115 22:00:02.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:02.811" endtime="20201115 22:00:02.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.809" endtime="20201115 22:00:02.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.805" endtime="20201115 22:00:02.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.437" endtime="20201115 22:00:02.831"></status>
</kw>
<msg timestamp="20201115 22:00:02.831" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.840" endtime="20201115 22:00:02.859"></status>
</kw>
<msg timestamp="20201115 22:00:02.859" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.838" endtime="20201115 22:00:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:02.861" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:02.860" endtime="20201115 22:00:02.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.862" endtime="20201115 22:00:02.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.836" endtime="20201115 22:00:02.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.834" endtime="20201115 22:00:02.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:02.872" endtime="20201115 22:00:03.158"></status>
</kw>
<msg timestamp="20201115 22:00:03.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:02.870" endtime="20201115 22:00:03.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.163" endtime="20201115 22:00:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.171" endtime="20201115 22:00:03.172"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.867" endtime="20201115 22:00:03.173"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.866" endtime="20201115 22:00:03.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.178" level="INFO">${RESULT} = [{'time': 0.021933611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.022088153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.174" endtime="20201115 22:00:03.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.191" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.179" endtime="20201115 22:00:03.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.195" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.194" endtime="20201115 22:00:03.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.198" level="INFO">VALUE: [7.639000000000257e-06, 7.639000000000257e-06, 7.721999999998203e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.694999999998536e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.735999999997772e-06, 7.582999999998508e-06, 7.639000000000257e-06, 7.694999999998536e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.652000000000353e-06, 7.652000000000353e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.681000000002436e-06, 7.666999999999397e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.597000000001547e-06, 7.666999999999397e-06, 7.598000000001021e-06, 7.666999999999397e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.638999999996787e-06, 7.735999999997772e-06, 7.736000000001242e-06, 7.624999999997217e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.584000000001451e-06, 7.693999999999063e-06, 7.652999999999827e-06, 7.597000000001547e-06, 7.652999999999827e-06, 7.679999999999493e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.639000000000257e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.197" endtime="20201115 22:00:03.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.192" endtime="20201115 22:00:03.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.201" endtime="20201115 22:00:03.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.204" endtime="20201115 22:00:03.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.203" endtime="20201115 22:00:03.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.199" endtime="20201115 22:00:03.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.832" endtime="20201115 22:00:03.225"></status>
</kw>
<msg timestamp="20201115 22:00:03.225" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.234" endtime="20201115 22:00:03.252"></status>
</kw>
<msg timestamp="20201115 22:00:03.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.233" endtime="20201115 22:00:03.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.255" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.253" endtime="20201115 22:00:03.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.256" endtime="20201115 22:00:03.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.230" endtime="20201115 22:00:03.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.228" endtime="20201115 22:00:03.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.265" endtime="20201115 22:00:03.551"></status>
</kw>
<msg timestamp="20201115 22:00:03.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.263" endtime="20201115 22:00:03.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.556" endtime="20201115 22:00:03.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.564" endtime="20201115 22:00:03.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.261" endtime="20201115 22:00:03.566"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.259" endtime="20201115 22:00:03.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.570" level="INFO">${RESULT} = [{'time': 0.022166861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.022323903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.567" endtime="20201115 22:00:03.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.584" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.572" endtime="20201115 22:00:03.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.588" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.587" endtime="20201115 22:00:03.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.591" level="INFO">VALUE: [7.639000000000257e-06, 7.639000000000257e-06, 7.681000000002436e-06, 7.639000000000257e-06, 7.679999999999493e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.5969999999980775e-06, 7.638999999996787e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.667000000002866e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.652000000000353e-06, 7.637999999997314e-06, 7.667000000002866e-06, 7.639000000000257e-06, 7.681000000002436e-06, 7.639000000000257e-06, 7.693999999999063e-06, 7.652999999999827e-06, 7.665999999999923e-06, 7.652999999999827e-06, 7.624999999997217e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.6109999999976474e-06, 7.666999999999397e-06, 7.666999999999397e-06, 7.679999999999493e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.666999999999397e-06, 7.653000000003296e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.722000000001672e-06, 7.652999999999827e-06, 7.611000000001117e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.590" endtime="20201115 22:00:03.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.585" endtime="20201115 22:00:03.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.594" endtime="20201115 22:00:03.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.597" endtime="20201115 22:00:03.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.596" endtime="20201115 22:00:03.617"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.592" endtime="20201115 22:00:03.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.226" endtime="20201115 22:00:03.618"></status>
</kw>
<msg timestamp="20201115 22:00:03.618" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.627" endtime="20201115 22:00:03.644"></status>
</kw>
<msg timestamp="20201115 22:00:03.645" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.625" endtime="20201115 22:00:03.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.647" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:03.646" endtime="20201115 22:00:03.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.648" endtime="20201115 22:00:03.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.623" endtime="20201115 22:00:03.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.621" endtime="20201115 22:00:03.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.657" endtime="20201115 22:00:03.945"></status>
</kw>
<msg timestamp="20201115 22:00:03.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.656" endtime="20201115 22:00:03.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:03.949" endtime="20201115 22:00:03.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.958" endtime="20201115 22:00:03.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.653" endtime="20201115 22:00:03.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.652" endtime="20201115 22:00:03.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:03.964" level="INFO">${RESULT} = [{'time': 0.022038597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.022196292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:03.961" endtime="20201115 22:00:03.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:03.978" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:03.965" endtime="20201115 22:00:03.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.982" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:03.981" endtime="20201115 22:00:03.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:03.985" level="INFO">VALUE: [7.652999999999827e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.651999999996884e-06, 7.568999999998938e-06, 7.638000000000783e-06, 7.638999999996787e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.637999999997314e-06, 7.624999999997217e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.638000000000783e-06, 7.694999999998536e-06, 7.625000000000687e-06, 7.624999999997217e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.652000000000353e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.695000000002006e-06, 7.652000000000353e-06, 7.679999999999493e-06, 7.637999999997314e-06, 7.666999999999397e-06, 7.693999999999063e-06, 7.639000000000257e-06, 7.666999999999397e-06, 7.639000000000257e-06, 7.666999999999397e-06, 7.582999999998508e-06, 7.625000000000687e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.666999999999397e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.625000000000687e-06, 7.652999999999827e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201115 22:00:03.983" endtime="20201115 22:00:03.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.978" endtime="20201115 22:00:03.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:03.988" endtime="20201115 22:00:03.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:03.991" endtime="20201115 22:00:04.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.990" endtime="20201115 22:00:04.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.986" endtime="20201115 22:00:04.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:03.619" endtime="20201115 22:00:04.012"></status>
</kw>
<msg timestamp="20201115 22:00:04.012" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.021" endtime="20201115 22:00:04.039"></status>
</kw>
<msg timestamp="20201115 22:00:04.039" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.019" endtime="20201115 22:00:04.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.042" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 6', 'msg': ['overhead_timer_list set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.040" endtime="20201115 22:00:04.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.043" endtime="20201115 22:00:04.044"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.017" endtime="20201115 22:00:04.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.015" endtime="20201115 22:00:04.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.052" endtime="20201115 22:00:04.338"></status>
</kw>
<msg timestamp="20201115 22:00:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:04.050" endtime="20201115 22:00:04.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:04.342" endtime="20201115 22:00:04.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.351" endtime="20201115 22:00:04.352"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.048" endtime="20201115 22:00:04.353"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.046" endtime="20201115 22:00:04.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.357" level="INFO">${RESULT} = [{'time': 0.022268639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.022427681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.354" endtime="20201115 22:00:04.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.358" endtime="20201115 22:00:04.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.375" level="INFO">NAME: 00-overhead-6-set</msg>
<status status="PASS" starttime="20201115 22:00:04.374" endtime="20201115 22:00:04.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.377" level="INFO">VALUE: [7.639000000000257e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.624999999997217e-06, 7.665999999999923e-06, 7.568999999998938e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.638000000000783e-06, 7.652999999999827e-06, 7.667000000002866e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.693999999999063e-06, 7.639000000000257e-06, 7.653000000003296e-06, 7.639000000000257e-06, 7.5969999999980775e-06, 7.652999999999827e-06, 7.652999999999827e-06, 7.666999999999397e-06, 7.6109999999976474e-06, 7.665999999999923e-06, 7.582999999998508e-06, 7.639000000000257e-06, 7.707999999998633e-06, 7.652000000000353e-06, 7.652000000000353e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.639000000000257e-06, 7.722000000001672e-06, 7.666999999999397e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.625000000000687e-06, 7.721999999998203e-06, 7.653000000003296e-06, 7.639000000000257e-06, 7.611000000001117e-06, 7.639000000000257e-06, 7.665999999999923e-06, 7.666999999999397e-06, 7.652999999999827e-06, 7.666999999999397e-06, 7.652000000000353e-06, 7.639000000000257e-06, 7.652999999999827e-06, 7.666999999999397e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.376" endtime="20201115 22:00:04.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.371" endtime="20201115 22:00:04.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.381" endtime="20201115 22:00:04.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.384" endtime="20201115 22:00:04.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.382" endtime="20201115 22:00:04.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.379" endtime="20201115 22:00:04.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.013" endtime="20201115 22:00:04.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.436" endtime="20201115 22:00:04.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:02.435" endtime="20201115 22:00:04.405"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.407" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.416" endtime="20201115 22:00:04.435"></status>
</kw>
<msg timestamp="20201115 22:00:04.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.414" endtime="20201115 22:00:04.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.438" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.437" endtime="20201115 22:00:04.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.439" endtime="20201115 22:00:04.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.412" endtime="20201115 22:00:04.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.410" endtime="20201115 22:00:04.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.448" endtime="20201115 22:00:04.735"></status>
</kw>
<msg timestamp="20201115 22:00:04.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024510819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.447" endtime="20201115 22:00:04.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024510819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.739" endtime="20201115 22:00:04.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.747" endtime="20201115 22:00:04.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.444" endtime="20201115 22:00:04.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.443" endtime="20201115 22:00:04.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:04.754" level="INFO">${RESULT} = [{'time': 0.024510819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.013000000001158e-06, 'source_diff': 8.013000000001158e-06}, {'time': 0.024688681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:04.751" endtime="20201115 22:00:04.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:04.767" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:04.755" endtime="20201115 22:00:04.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.772" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:04.771" endtime="20201115 22:00:04.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.774" level="INFO">VALUE: [8.013000000001158e-06, 7.944999999998786e-06, 7.999999999997592e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.957999999998883e-06, 7.972000000001922e-06, 7.916000000000173e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.957999999998883e-06, 7.973000000001396e-06, 7.957999999998883e-06, 7.945000000002256e-06, 7.972000000001922e-06, 7.958000000002352e-06, 7.944000000002782e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.959000000001826e-06, 7.972000000001922e-06, 7.944999999998786e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.971999999998453e-06, 7.973000000001396e-06, 7.986999999997496e-06, 7.929999999999743e-06, 7.972000000001922e-06, 7.986000000001492e-06, 7.986000000001492e-06, 7.957999999998883e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.957999999998883e-06, 8.014000000000632e-06, 8.014000000000632e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.930000000003212e-06, 7.958000000002352e-06, 7.943999999995843e-06, 7.958000000002352e-06, 7.874999999997467e-06, 8.028000000000202e-06, 7.972999999994457e-06, 7.945000000002256e-06]</msg>
<status status="PASS" starttime="20201115 22:00:04.773" endtime="20201115 22:00:04.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.768" endtime="20201115 22:00:04.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.777" endtime="20201115 22:00:04.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:04.781" endtime="20201115 22:00:04.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.779" endtime="20201115 22:00:04.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.776" endtime="20201115 22:00:04.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.408" endtime="20201115 22:00:04.801"></status>
</kw>
<msg timestamp="20201115 22:00:04.802" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.810" endtime="20201115 22:00:04.829"></status>
</kw>
<msg timestamp="20201115 22:00:04.830" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.809" endtime="20201115 22:00:04.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:04.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:04.831" endtime="20201115 22:00:04.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.834" endtime="20201115 22:00:04.835"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.806" endtime="20201115 22:00:04.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.804" endtime="20201115 22:00:04.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:04.843" endtime="20201115 22:00:05.130"></status>
</kw>
<msg timestamp="20201115 22:00:05.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:04.841" endtime="20201115 22:00:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.134" endtime="20201115 22:00:05.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.143" endtime="20201115 22:00:05.144"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.839" endtime="20201115 22:00:05.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.837" endtime="20201115 22:00:05.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.149" level="INFO">${RESULT} = [{'time': 0.022309583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.022487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.146" endtime="20201115 22:00:05.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.163" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.150" endtime="20201115 22:00:05.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.167" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.166" endtime="20201115 22:00:05.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.170" level="INFO">VALUE: [7.958000000002352e-06, 7.902000000000603e-06, 7.959000000001826e-06, 7.944000000002782e-06, 7.930999999999216e-06, 7.971999999998453e-06, 7.958999999998356e-06, 7.972999999997926e-06, 7.944999999998786e-06, 8.028000000000202e-06, 7.943999999999313e-06, 7.943999999999313e-06, 7.958999999998356e-06, 7.889000000000507e-06, 7.972000000001922e-06, 7.958000000002352e-06, 7.985999999998022e-06, 8.000000000001062e-06, 7.973000000001396e-06, 7.903000000000077e-06, 7.944999999998786e-06, 7.958999999998356e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.888999999997037e-06, 7.985999999998022e-06, 7.959000000001826e-06, 7.972000000001922e-06, 7.971999999998453e-06, 7.986000000001492e-06, 7.958000000002352e-06, 7.958999999998356e-06, 7.958000000002352e-06, 7.944999999998786e-06, 7.971999999998453e-06, 7.958999999998356e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.916999999999647e-06, 8.028000000000202e-06, 8.000000000001062e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.971999999998453e-06, 7.959000000001826e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.168" endtime="20201115 22:00:05.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.164" endtime="20201115 22:00:05.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.173" endtime="20201115 22:00:05.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.176" endtime="20201115 22:00:05.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.175" endtime="20201115 22:00:05.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.171" endtime="20201115 22:00:05.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.802" endtime="20201115 22:00:05.197"></status>
</kw>
<msg timestamp="20201115 22:00:05.197" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.206" endtime="20201115 22:00:05.225"></status>
</kw>
<msg timestamp="20201115 22:00:05.226" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.204" endtime="20201115 22:00:05.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.228" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.227" endtime="20201115 22:00:05.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.229" endtime="20201115 22:00:05.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.202" endtime="20201115 22:00:05.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.200" endtime="20201115 22:00:05.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.238" endtime="20201115 22:00:05.526"></status>
</kw>
<msg timestamp="20201115 22:00:05.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.237" endtime="20201115 22:00:05.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.530" endtime="20201115 22:00:05.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.538" endtime="20201115 22:00:05.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.234" endtime="20201115 22:00:05.540"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.232" endtime="20201115 22:00:05.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.545" level="INFO">${RESULT} = [{'time': 0.022333486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.022503403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.541" endtime="20201115 22:00:05.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.558" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.546" endtime="20201115 22:00:05.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.562" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.561" endtime="20201115 22:00:05.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.565" level="INFO">VALUE: [7.971999999998453e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.943999999999313e-06, 7.958999999998356e-06, 7.943999999999313e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.903000000000077e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.958999999998356e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.972000000001922e-06, 7.929999999999743e-06, 7.957999999998883e-06, 7.972999999997926e-06, 7.985999999998022e-06, 7.959000000001826e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.944000000002782e-06, 7.957999999998883e-06, 7.903000000000077e-06, 8.014000000000632e-06, 7.957999999998883e-06, 7.972999999997926e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.972999999997926e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.929999999999743e-06, 7.889000000000507e-06, 7.944000000002782e-06, 7.930999999999216e-06, 7.957999999998883e-06, 7.985999999998022e-06, 7.958000000002352e-06, 7.929999999999743e-06, 7.972000000001922e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.958999999998356e-06, 7.916999999999647e-06, 7.972000000001922e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.563" endtime="20201115 22:00:05.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.559" endtime="20201115 22:00:05.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.568" endtime="20201115 22:00:05.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.571" endtime="20201115 22:00:05.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.570" endtime="20201115 22:00:05.591"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.566" endtime="20201115 22:00:05.592"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.198" endtime="20201115 22:00:05.592"></status>
</kw>
<msg timestamp="20201115 22:00:05.592" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.601" endtime="20201115 22:00:05.621"></status>
</kw>
<msg timestamp="20201115 22:00:05.621" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.600" endtime="20201115 22:00:05.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.624" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.622" endtime="20201115 22:00:05.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.625" endtime="20201115 22:00:05.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.597" endtime="20201115 22:00:05.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.595" endtime="20201115 22:00:05.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.634" endtime="20201115 22:00:05.920"></status>
</kw>
<msg timestamp="20201115 22:00:05.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.632" endtime="20201115 22:00:05.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:05.924" endtime="20201115 22:00:05.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.932" endtime="20201115 22:00:05.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.630" endtime="20201115 22:00:05.934"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.628" endtime="20201115 22:00:05.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:05.939" level="INFO">${RESULT} = [{'time': 0.022760458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.022931986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:05.935" endtime="20201115 22:00:05.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:05.952" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:05.940" endtime="20201115 22:00:05.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.956" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:05.955" endtime="20201115 22:00:05.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:05.959" level="INFO">VALUE: [8.014000000000632e-06, 7.944000000002782e-06, 7.959000000001826e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.958999999998356e-06, 7.958000000002352e-06, 7.903000000000077e-06, 7.944999999998786e-06, 7.959000000001826e-06, 7.958000000002352e-06, 7.958999999998356e-06, 7.972000000001922e-06, 7.958999999998356e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.944999999998786e-06, 7.959000000001826e-06, 7.958999999998356e-06, 7.958000000002352e-06, 7.972000000001922e-06, 7.874999999997467e-06, 7.903000000000077e-06, 7.957999999998883e-06, 7.901999999997134e-06, 7.945000000002256e-06, 8.012999999997689e-06, 7.957999999998883e-06, 7.985999999998022e-06, 7.972000000001922e-06, 7.958000000002352e-06, 7.929999999999743e-06, 7.944999999998786e-06, 7.930999999999216e-06, 7.957999999998883e-06, 7.958999999998356e-06, 7.971999999998453e-06, 7.958000000002352e-06, 7.943999999999313e-06, 7.972999999997926e-06, 7.943999999999313e-06, 7.971999999998453e-06, 8.000000000001062e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.959000000001826e-06]</msg>
<status status="PASS" starttime="20201115 22:00:05.957" endtime="20201115 22:00:05.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.953" endtime="20201115 22:00:05.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.962" endtime="20201115 22:00:05.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:05.966" endtime="20201115 22:00:05.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.964" endtime="20201115 22:00:05.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.960" endtime="20201115 22:00:05.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.593" endtime="20201115 22:00:05.986"></status>
</kw>
<msg timestamp="20201115 22:00:05.986" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:05.995" endtime="20201115 22:00:06.015"></status>
</kw>
<msg timestamp="20201115 22:00:06.015" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:05.994" endtime="20201115 22:00:06.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 7', 'msg': ['overhead_timer_list set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.016" endtime="20201115 22:00:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.019" endtime="20201115 22:00:06.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.991" endtime="20201115 22:00:06.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.989" endtime="20201115 22:00:06.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.028" endtime="20201115 22:00:06.314"></status>
</kw>
<msg timestamp="20201115 22:00:06.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02252425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:06.026" endtime="20201115 22:00:06.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02252425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:06.318" endtime="20201115 22:00:06.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.327" endtime="20201115 22:00:06.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.024" endtime="20201115 22:00:06.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.022" endtime="20201115 22:00:06.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.333" level="INFO">${RESULT} = [{'time': 0.02252425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943999999999313e-06, 'source_diff': 7.943999999999313e-06}, {'time': 0.022694847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:06.330" endtime="20201115 22:00:06.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.347" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.334" endtime="20201115 22:00:06.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.351" level="INFO">NAME: 00-overhead-7-set</msg>
<status status="PASS" starttime="20201115 22:00:06.350" endtime="20201115 22:00:06.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.354" level="INFO">VALUE: [7.943999999999313e-06, 7.958000000002352e-06, 7.957999999998883e-06, 7.973000000001396e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.957999999998883e-06, 7.958000000002352e-06, 7.903000000000077e-06, 7.958000000002352e-06, 7.957999999998883e-06, 7.959000000001826e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.930999999999216e-06, 7.972000000001922e-06, 7.958999999998356e-06, 7.943999999999313e-06, 7.943999999999313e-06, 7.987000000000966e-06, 7.999999999997592e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.959000000001826e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.973000000001396e-06, 7.943999999999313e-06, 7.958000000002352e-06, 7.971999999998453e-06, 8.014000000000632e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.957999999998883e-06, 7.929999999999743e-06, 7.972000000001922e-06, 7.958999999998356e-06, 7.943999999999313e-06, 7.957999999998883e-06, 7.944999999998786e-06, 7.957999999998883e-06, 7.958999999998356e-06, 7.930999999999216e-06, 7.959000000001826e-06, 7.945000000002256e-06, 7.957999999998883e-06, 7.958999999998356e-06, 7.958999999998356e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.353" endtime="20201115 22:00:06.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.348" endtime="20201115 22:00:06.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.358" endtime="20201115 22:00:06.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.361" endtime="20201115 22:00:06.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.360" endtime="20201115 22:00:06.381"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.356" endtime="20201115 22:00:06.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:05.987" endtime="20201115 22:00:06.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.406" endtime="20201115 22:00:06.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:04.405" endtime="20201115 22:00:06.383"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.385" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.394" endtime="20201115 22:00:06.413"></status>
</kw>
<msg timestamp="20201115 22:00:06.413" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.392" endtime="20201115 22:00:06.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.415" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.414" endtime="20201115 22:00:06.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.416" endtime="20201115 22:00:06.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.389" endtime="20201115 22:00:06.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.387" endtime="20201115 22:00:06.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.426" endtime="20201115 22:00:06.713"></status>
</kw>
<msg timestamp="20201115 22:00:06.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024841083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024849347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.424" endtime="20201115 22:00:06.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024841083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024849347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:06.717" endtime="20201115 22:00:06.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.725" endtime="20201115 22:00:06.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.422" endtime="20201115 22:00:06.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.420" endtime="20201115 22:00:06.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:06.732" level="INFO">${RESULT} = [{'time': 0.024849347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.025037778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:06.728" endtime="20201115 22:00:06.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:06.745" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:06.733" endtime="20201115 22:00:06.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.750" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:06.748" endtime="20201115 22:00:06.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.752" level="INFO">VALUE: [8.264000000000882e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.292000000000022e-06, 8.277999999996982e-06, 8.249999999997842e-06, 8.249999999997842e-06, 8.276999999997509e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.277999999996982e-06, 8.264000000000882e-06, 8.276999999997509e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.278000000000452e-06, 8.221999999998703e-06, 8.276999999997509e-06, 8.264000000000882e-06, 8.277999999996982e-06, 8.319999999999161e-06, 8.221999999998703e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.277000000000978e-06, 8.236000000001742e-06, 8.276999999997509e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.276999999994039e-06, 8.292000000000022e-06, 8.221999999995233e-06, 8.26299999999447e-06, 8.34800000000524e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.277000000000978e-06, 8.263999999993943e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201115 22:00:06.751" endtime="20201115 22:00:06.753"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.746" endtime="20201115 22:00:06.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.756" endtime="20201115 22:00:06.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:06.759" endtime="20201115 22:00:06.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.757" endtime="20201115 22:00:06.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.754" endtime="20201115 22:00:06.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.385" endtime="20201115 22:00:06.780"></status>
</kw>
<msg timestamp="20201115 22:00:06.780" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.789" endtime="20201115 22:00:06.809"></status>
</kw>
<msg timestamp="20201115 22:00:06.809" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.787" endtime="20201115 22:00:06.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:06.812" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:06.810" endtime="20201115 22:00:06.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.813" endtime="20201115 22:00:06.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.784" endtime="20201115 22:00:06.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.782" endtime="20201115 22:00:06.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:06.822" endtime="20201115 22:00:07.109"></status>
</kw>
<msg timestamp="20201115 22:00:07.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:06.820" endtime="20201115 22:00:07.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:07.113" endtime="20201115 22:00:07.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.121" endtime="20201115 22:00:07.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.817" endtime="20201115 22:00:07.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.816" endtime="20201115 22:00:07.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.129" level="INFO">${RESULT} = [{'time': 0.022010764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263999999997412e-06, 'source_diff': 8.263999999997412e-06}, {'time': 0.022201375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.125" endtime="20201115 22:00:07.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.142" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.130" endtime="20201115 22:00:07.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.147" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.146" endtime="20201115 22:00:07.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.149" level="INFO">VALUE: [8.263999999997412e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.237000000001216e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.249999999997842e-06, 8.277999999996982e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.360999999998397e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.292000000000022e-06, 8.235999999998272e-06, 8.264000000000882e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.276999999997509e-06, 8.277999999996982e-06, 8.278000000000452e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.263000000001408e-06, 8.264000000000882e-06, 8.263999999997412e-06, 8.180999999999466e-06, 8.263999999997412e-06, 8.361000000001867e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.277000000000978e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.148" endtime="20201115 22:00:07.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.143" endtime="20201115 22:00:07.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.153" endtime="20201115 22:00:07.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.156" endtime="20201115 22:00:07.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.154" endtime="20201115 22:00:07.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.151" endtime="20201115 22:00:07.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.780" endtime="20201115 22:00:07.177"></status>
</kw>
<msg timestamp="20201115 22:00:07.177" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.186" endtime="20201115 22:00:07.205"></status>
</kw>
<msg timestamp="20201115 22:00:07.205" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.184" endtime="20201115 22:00:07.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.207" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.206" endtime="20201115 22:00:07.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.208" endtime="20201115 22:00:07.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.182" endtime="20201115 22:00:07.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.180" endtime="20201115 22:00:07.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.217" endtime="20201115 22:00:07.503"></status>
</kw>
<msg timestamp="20201115 22:00:07.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.216" endtime="20201115 22:00:07.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.507" endtime="20201115 22:00:07.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.515" endtime="20201115 22:00:07.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.213" endtime="20201115 22:00:07.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.212" endtime="20201115 22:00:07.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.522" level="INFO">${RESULT} = [{'time': 0.022257736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.022451514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.519" endtime="20201115 22:00:07.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.538" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.524" endtime="20201115 22:00:07.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.543" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.542" endtime="20201115 22:00:07.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.545" level="INFO">VALUE: [8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.291000000000548e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.249999999997842e-06, 8.292000000000022e-06, 8.235999999998272e-06, 8.249999999997842e-06, 8.305999999999591e-06, 8.207999999999133e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.277999999996982e-06, 8.249999999997842e-06, 8.278000000000452e-06, 8.249999999997842e-06, 8.237000000001216e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.276999999997509e-06, 8.207999999999133e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.292000000000022e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.207999999999133e-06, 8.276999999997509e-06, 8.332999999999258e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.544" endtime="20201115 22:00:07.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.539" endtime="20201115 22:00:07.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.549" endtime="20201115 22:00:07.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.552" endtime="20201115 22:00:07.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.550" endtime="20201115 22:00:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.547" endtime="20201115 22:00:07.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.177" endtime="20201115 22:00:07.573"></status>
</kw>
<msg timestamp="20201115 22:00:07.573" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.583" endtime="20201115 22:00:07.604"></status>
</kw>
<msg timestamp="20201115 22:00:07.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.581" endtime="20201115 22:00:07.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.607" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.606" endtime="20201115 22:00:07.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.608" endtime="20201115 22:00:07.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.578" endtime="20201115 22:00:07.610"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.575" endtime="20201115 22:00:07.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.617" endtime="20201115 22:00:07.903"></status>
</kw>
<msg timestamp="20201115 22:00:07.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.616" endtime="20201115 22:00:07.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024734611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:07.907" endtime="20201115 22:00:07.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.916" endtime="20201115 22:00:07.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.613" endtime="20201115 22:00:07.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.611" endtime="20201115 22:00:07.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:07.922" level="INFO">${RESULT} = [{'time': 0.024734611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.236000000001742e-06, 'source_diff': 8.236000000001742e-06}, {'time': 0.024926556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:07.919" endtime="20201115 22:00:07.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:07.935" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:07.923" endtime="20201115 22:00:07.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.940" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:07.939" endtime="20201115 22:00:07.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:07.942" level="INFO">VALUE: [8.236000000001742e-06, 8.222999999998176e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.276999999997509e-06, 8.278000000000452e-06, 8.249999999997842e-06, 8.263999999997412e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.332999999999258e-06, 8.262999999997939e-06, 8.305999999999591e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.263000000001408e-06, 8.235999999998272e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.249999999994373e-06, 8.264000000000882e-06, 8.318999999999688e-06, 8.278000000000452e-06, 8.209000000002076e-06, 8.291000000000548e-06, 8.278000000000452e-06, 8.263999999993943e-06, 8.278000000000452e-06, 8.263999999993943e-06, 8.291000000000548e-06, 8.263999999993943e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201115 22:00:07.941" endtime="20201115 22:00:07.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.936" endtime="20201115 22:00:07.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.945" endtime="20201115 22:00:07.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:07.949" endtime="20201115 22:00:07.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.947" endtime="20201115 22:00:07.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.944" endtime="20201115 22:00:07.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.573" endtime="20201115 22:00:07.972"></status>
</kw>
<msg timestamp="20201115 22:00:07.973" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:07.991" endtime="20201115 22:00:08.013"></status>
</kw>
<msg timestamp="20201115 22:00:08.014" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:07.988" endtime="20201115 22:00:08.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 8', 'msg': ['overhead_timer_list set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.016" endtime="20201115 22:00:08.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.021" endtime="20201115 22:00:08.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.982" endtime="20201115 22:00:08.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.978" endtime="20201115 22:00:08.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.039" endtime="20201115 22:00:08.331"></status>
</kw>
<msg timestamp="20201115 22:00:08.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035605458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.036" endtime="20201115 22:00:08.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035605458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.335" endtime="20201115 22:00:08.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.344" endtime="20201115 22:00:08.345"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.031" endtime="20201115 22:00:08.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.027" endtime="20201115 22:00:08.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.351" level="INFO">${RESULT} = [{'time': 0.035605458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.035800208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.347" endtime="20201115 22:00:08.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.364" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.352" endtime="20201115 22:00:08.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.369" level="INFO">NAME: 00-overhead-8-set</msg>
<status status="PASS" starttime="20201115 22:00:08.368" endtime="20201115 22:00:08.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.371" level="INFO">VALUE: [8.291000000000548e-06, 8.264000000000882e-06, 8.305000000000118e-06, 8.360999999998397e-06, 8.263999999993943e-06, 8.278000000000452e-06, 8.222000000002172e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.221999999995233e-06, 8.278000000000452e-06, 8.318999999999688e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.250000000001312e-06, 8.277000000000978e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.292000000000022e-06, 8.263000000001408e-06, 8.278000000000452e-06, 8.305000000000118e-06, 8.332999999999258e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.305999999999591e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.277000000000978e-06, 8.278000000000452e-06, 8.276999999994039e-06, 8.346999999998828e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.222000000002172e-06, 8.278000000000452e-06, 8.263999999993943e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.370" endtime="20201115 22:00:08.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.365" endtime="20201115 22:00:08.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.375" endtime="20201115 22:00:08.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.378" endtime="20201115 22:00:08.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.377" endtime="20201115 22:00:08.398"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.373" endtime="20201115 22:00:08.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:07.974" endtime="20201115 22:00:08.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.384" endtime="20201115 22:00:08.399"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:06.383" endtime="20201115 22:00:08.399"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.402" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.411" endtime="20201115 22:00:08.431"></status>
</kw>
<msg timestamp="20201115 22:00:08.431" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.409" endtime="20201115 22:00:08.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.433" endtime="20201115 22:00:08.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.435" endtime="20201115 22:00:08.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.406" endtime="20201115 22:00:08.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.404" endtime="20201115 22:00:08.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.445" endtime="20201115 22:00:08.734"></status>
</kw>
<msg timestamp="20201115 22:00:08.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025084486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.444" endtime="20201115 22:00:08.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025084486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.738" endtime="20201115 22:00:08.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.746" endtime="20201115 22:00:08.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.441" endtime="20201115 22:00:08.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.439" endtime="20201115 22:00:08.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:08.753" level="INFO">${RESULT} = [{'time': 0.025093083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.025304847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:08.750" endtime="20201115 22:00:08.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:08.767" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:08.754" endtime="20201115 22:00:08.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.771" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:08.770" endtime="20201115 22:00:08.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.774" level="INFO">VALUE: [8.596999999999078e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.597000000002547e-06, 8.597000000002547e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583000000002977e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.638999999997787e-06, 8.58400000000245e-06, 8.583000000002977e-06, 8.596999999999078e-06, 8.59800000000202e-06, 8.582999999999508e-06, 8.666000000000923e-06, 8.513999999997662e-06, 8.610999999998648e-06, 8.583999999998981e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.597000000006016e-06, 8.582999999999508e-06, 8.57000000000635e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.596999999999078e-06, 8.542000000000272e-06, 8.582999999999508e-06, 8.610999999998648e-06]</msg>
<status status="PASS" starttime="20201115 22:00:08.772" endtime="20201115 22:00:08.774"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.767" endtime="20201115 22:00:08.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.777" endtime="20201115 22:00:08.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:08.781" endtime="20201115 22:00:08.800"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.779" endtime="20201115 22:00:08.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.775" endtime="20201115 22:00:08.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.402" endtime="20201115 22:00:08.802"></status>
</kw>
<msg timestamp="20201115 22:00:08.802" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.811" endtime="20201115 22:00:08.833"></status>
</kw>
<msg timestamp="20201115 22:00:08.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.809" endtime="20201115 22:00:08.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:08.836" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:08.834" endtime="20201115 22:00:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.837" endtime="20201115 22:00:08.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.807" endtime="20201115 22:00:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.804" endtime="20201115 22:00:08.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:08.847" endtime="20201115 22:00:09.134"></status>
</kw>
<msg timestamp="20201115 22:00:09.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:08.845" endtime="20201115 22:00:09.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.138" endtime="20201115 22:00:09.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.146" endtime="20201115 22:00:09.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.843" endtime="20201115 22:00:09.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.841" endtime="20201115 22:00:09.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.154" level="INFO">${RESULT} = [{'time': 0.022603458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.022815556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.150" endtime="20201115 22:00:09.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.168" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.155" endtime="20201115 22:00:09.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.173" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.172" endtime="20201115 22:00:09.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.175" level="INFO">VALUE: [8.596999999999078e-06, 8.528000000000702e-06, 8.582999999999508e-06, 8.514000000001132e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.610999999998648e-06, 8.58400000000245e-06, 8.570000000002881e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.58400000000245e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.540999999997329e-06, 8.542000000000272e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.625000000001687e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.541999999996802e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.58400000000245e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.58400000000245e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.583000000002977e-06, 8.582999999999508e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.611000000002117e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.528000000000702e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.486000000001992e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.174" endtime="20201115 22:00:09.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.169" endtime="20201115 22:00:09.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.179" endtime="20201115 22:00:09.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.182" endtime="20201115 22:00:09.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.181" endtime="20201115 22:00:09.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.177" endtime="20201115 22:00:09.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.802" endtime="20201115 22:00:09.203"></status>
</kw>
<msg timestamp="20201115 22:00:09.203" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.213" endtime="20201115 22:00:09.234"></status>
</kw>
<msg timestamp="20201115 22:00:09.234" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.211" endtime="20201115 22:00:09.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.237" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.235" endtime="20201115 22:00:09.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.238" endtime="20201115 22:00:09.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.208" endtime="20201115 22:00:09.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.206" endtime="20201115 22:00:09.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.247" endtime="20201115 22:00:09.534"></status>
</kw>
<msg timestamp="20201115 22:00:09.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.246" endtime="20201115 22:00:09.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023198819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023207417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.539" endtime="20201115 22:00:09.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.547" endtime="20201115 22:00:09.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.243" endtime="20201115 22:00:09.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.241" endtime="20201115 22:00:09.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.554" level="INFO">${RESULT} = [{'time': 0.023207417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.59800000000202e-06, 'source_diff': 8.59800000000202e-06}, {'time': 0.023410694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:00:09.551" endtime="20201115 22:00:09.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.568" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.555" endtime="20201115 22:00:09.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.572" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.571" endtime="20201115 22:00:09.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.575" level="INFO">VALUE: [8.59800000000202e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.514000000001132e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.597999999998551e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.639000000001257e-06, 8.582999999999508e-06, 8.59800000000202e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.569999999999411e-06, 8.59800000000202e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.541000000000798e-06, 8.597999999998551e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.58400000000245e-06, 8.582999999996038e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.597000000006016e-06, 8.596999999999078e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.574" endtime="20201115 22:00:09.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.569" endtime="20201115 22:00:09.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.578" endtime="20201115 22:00:09.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.582" endtime="20201115 22:00:09.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.580" endtime="20201115 22:00:09.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.576" endtime="20201115 22:00:09.602"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.204" endtime="20201115 22:00:09.603"></status>
</kw>
<msg timestamp="20201115 22:00:09.603" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.613" endtime="20201115 22:00:09.633"></status>
</kw>
<msg timestamp="20201115 22:00:09.634" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.611" endtime="20201115 22:00:09.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:09.635" endtime="20201115 22:00:09.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.637" endtime="20201115 22:00:09.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.608" endtime="20201115 22:00:09.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.606" endtime="20201115 22:00:09.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.647" endtime="20201115 22:00:09.934"></status>
</kw>
<msg timestamp="20201115 22:00:09.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.645" endtime="20201115 22:00:09.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023138819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:09.938" endtime="20201115 22:00:09.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.946" endtime="20201115 22:00:09.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.643" endtime="20201115 22:00:09.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.641" endtime="20201115 22:00:09.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:09.953" level="INFO">${RESULT} = [{'time': 0.023138819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.023347458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:09.950" endtime="20201115 22:00:09.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:09.967" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:09.954" endtime="20201115 22:00:09.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.972" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:09.971" endtime="20201115 22:00:09.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:09.974" level="INFO">VALUE: [8.583000000002977e-06, 8.625000000001687e-06, 8.583999999998981e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.666999999996927e-06, 8.597000000002547e-06, 8.583999999998981e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.528000000000702e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.542000000000272e-06, 8.597000000002547e-06, 8.569999999999411e-06, 8.583999999998981e-06, 8.58400000000245e-06, 8.59800000000202e-06, 8.597999999998551e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.58400000000245e-06, 8.582999999999508e-06, 8.597000000002547e-06, 8.58400000000245e-06, 8.597000000002547e-06, 8.583000000006447e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.569999999999411e-06, 8.569999999999411e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.611999999998121e-06, 8.583999999998981e-06, 8.582999999999508e-06]</msg>
<status status="PASS" starttime="20201115 22:00:09.973" endtime="20201115 22:00:09.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.968" endtime="20201115 22:00:09.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:09.977" endtime="20201115 22:00:09.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:09.982" endtime="20201115 22:00:10.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.980" endtime="20201115 22:00:10.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.976" endtime="20201115 22:00:10.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:09.604" endtime="20201115 22:00:10.002"></status>
</kw>
<msg timestamp="20201115 22:00:10.003" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.012" endtime="20201115 22:00:10.032"></status>
</kw>
<msg timestamp="20201115 22:00:10.032" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.010" endtime="20201115 22:00:10.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.035" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 9', 'msg': ['overhead_timer_list set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.033" endtime="20201115 22:00:10.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.036" endtime="20201115 22:00:10.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.007" endtime="20201115 22:00:10.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.005" endtime="20201115 22:00:10.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.046" endtime="20201115 22:00:10.334"></status>
</kw>
<msg timestamp="20201115 22:00:10.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.044" endtime="20201115 22:00:10.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.338" endtime="20201115 22:00:10.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.347" endtime="20201115 22:00:10.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.041" endtime="20201115 22:00:10.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.039" endtime="20201115 22:00:10.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.354" level="INFO">${RESULT} = [{'time': 0.022816597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.023026042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.350" endtime="20201115 22:00:10.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.367" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.355" endtime="20201115 22:00:10.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.372" level="INFO">NAME: 00-overhead-9-set</msg>
<status status="PASS" starttime="20201115 22:00:10.371" endtime="20201115 22:00:10.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.375" level="INFO">VALUE: [8.568999999999938e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.597000000002547e-06, 8.583999999998981e-06, 8.541000000000798e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.528000000000702e-06, 8.582999999999508e-06, 8.583999999998981e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.59800000000202e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.625000000001687e-06, 8.596999999999078e-06, 8.596999999999078e-06, 8.527999999997232e-06, 8.583999999998981e-06, 8.597000000002547e-06, 8.555000000000368e-06, 8.597000000002547e-06, 8.583999999998981e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.58400000000245e-06, 8.583999999998981e-06, 8.667000000000397e-06, 8.582999999999508e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.583999999998981e-06, 8.611999999998121e-06, 8.568999999999938e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.597999999998551e-06, 8.583000000006447e-06, 8.596999999999078e-06, 8.583000000006447e-06, 8.528000000000702e-06, 8.610999999998648e-06, 8.568999999999938e-06, 8.569999999999411e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.373" endtime="20201115 22:00:10.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.368" endtime="20201115 22:00:10.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.378" endtime="20201115 22:00:10.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.382" endtime="20201115 22:00:10.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.380" endtime="20201115 22:00:10.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.377" endtime="20201115 22:00:10.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.003" endtime="20201115 22:00:10.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.401" endtime="20201115 22:00:10.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:08.400" endtime="20201115 22:00:10.403"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.405" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.415" endtime="20201115 22:00:10.437"></status>
</kw>
<msg timestamp="20201115 22:00:10.437" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.413" endtime="20201115 22:00:10.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.440" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.438" endtime="20201115 22:00:10.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.441" endtime="20201115 22:00:10.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.410" endtime="20201115 22:00:10.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.408" endtime="20201115 22:00:10.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.450" endtime="20201115 22:00:10.737"></status>
</kw>
<msg timestamp="20201115 22:00:10.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025632625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.449" endtime="20201115 22:00:10.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025632625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.741" endtime="20201115 22:00:10.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.750" endtime="20201115 22:00:10.751"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.446" endtime="20201115 22:00:10.752"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.444" endtime="20201115 22:00:10.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:10.757" level="INFO">${RESULT} = [{'time': 0.025641542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.025866444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:10.753" endtime="20201115 22:00:10.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:10.770" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:10.757" endtime="20201115 22:00:10.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.775" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:10.774" endtime="20201115 22:00:10.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.778" level="INFO">VALUE: [8.917000000000647e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.833000000003227e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.902000000001603e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.944999999999786e-06, 8.819000000000188e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.903000000004546e-06, 8.832999999999758e-06, 8.917000000004116e-06, 8.887999999998564e-06, 8.915999999997704e-06, 8.917000000004116e-06, 8.888999999998037e-06, 8.916000000004642e-06, 8.902999999997607e-06, 8.889000000004976e-06, 8.888999999998037e-06, 8.901999999998134e-06, 8.832999999999758e-06, 8.957999999996413e-06, 8.902999999997607e-06, 8.929999999997273e-06, 8.860999999998898e-06, 8.889000000004976e-06, 8.903000000004546e-06, 8.832999999999758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:10.776" endtime="20201115 22:00:10.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.771" endtime="20201115 22:00:10.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.781" endtime="20201115 22:00:10.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:10.785" endtime="20201115 22:00:10.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.783" endtime="20201115 22:00:10.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.780" endtime="20201115 22:00:10.805"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.406" endtime="20201115 22:00:10.806"></status>
</kw>
<msg timestamp="20201115 22:00:10.806" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.815" endtime="20201115 22:00:10.838"></status>
</kw>
<msg timestamp="20201115 22:00:10.838" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.813" endtime="20201115 22:00:10.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:10.841" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:10.839" endtime="20201115 22:00:10.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.842" endtime="20201115 22:00:10.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.811" endtime="20201115 22:00:10.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.808" endtime="20201115 22:00:10.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:10.851" endtime="20201115 22:00:11.139"></status>
</kw>
<msg timestamp="20201115 22:00:11.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:10.850" endtime="20201115 22:00:11.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.144" endtime="20201115 22:00:11.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.152" endtime="20201115 22:00:11.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.847" endtime="20201115 22:00:11.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.845" endtime="20201115 22:00:11.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.159" level="INFO">${RESULT} = [{'time': 0.022748236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.022977472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.155" endtime="20201115 22:00:11.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.173" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.160" endtime="20201115 22:00:11.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.178" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.177" endtime="20201115 22:00:11.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.181" level="INFO">VALUE: [8.917000000000647e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.930000000000743e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.819000000000188e-06, 8.874999999998467e-06, 8.902000000001603e-06, 8.986999999998496e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.888000000002033e-06, 8.915999999997704e-06, 8.902999999997607e-06, 8.916999999997177e-06, 8.931000000000217e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.916999999997177e-06, 8.916999999997177e-06, 8.916000000001173e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.819999999999661e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.889000000004976e-06, 8.860999999998898e-06, 8.915999999997704e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.903000000004546e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.179" endtime="20201115 22:00:11.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.174" endtime="20201115 22:00:11.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.184" endtime="20201115 22:00:11.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.188" endtime="20201115 22:00:11.208"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.187" endtime="20201115 22:00:11.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.183" endtime="20201115 22:00:11.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.806" endtime="20201115 22:00:11.209"></status>
</kw>
<msg timestamp="20201115 22:00:11.210" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.219" endtime="20201115 22:00:11.240"></status>
</kw>
<msg timestamp="20201115 22:00:11.241" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.217" endtime="20201115 22:00:11.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.242" endtime="20201115 22:00:11.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.244" endtime="20201115 22:00:11.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.215" endtime="20201115 22:00:11.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.212" endtime="20201115 22:00:11.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.254" endtime="20201115 22:00:11.540"></status>
</kw>
<msg timestamp="20201115 22:00:11.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.252" endtime="20201115 22:00:11.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.544" endtime="20201115 22:00:11.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.553" endtime="20201115 22:00:11.554"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.249" endtime="20201115 22:00:11.555"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.248" endtime="20201115 22:00:11.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.560" level="INFO">${RESULT} = [{'time': 0.022906694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.901999999998134e-06, 'source_diff': 8.901999999998134e-06}, {'time': 0.023133625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.556" endtime="20201115 22:00:11.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.574" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.561" endtime="20201115 22:00:11.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.578" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.577" endtime="20201115 22:00:11.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.581" level="INFO">VALUE: [8.901999999998134e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.902000000001603e-06, 8.874999999998467e-06, 8.915999999997704e-06, 8.957999999999883e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.861999999998371e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.832999999999758e-06, 8.917000000000647e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.805000000000618e-06, 8.917000000000647e-06, 8.931000000000217e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.889000000004976e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.901999999998134e-06, 8.903000000004546e-06, 8.874999999998467e-06, 8.887999999998564e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.580" endtime="20201115 22:00:11.581"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.575" endtime="20201115 22:00:11.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.584" endtime="20201115 22:00:11.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.588" endtime="20201115 22:00:11.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.586" endtime="20201115 22:00:11.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.583" endtime="20201115 22:00:11.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.210" endtime="20201115 22:00:11.609"></status>
</kw>
<msg timestamp="20201115 22:00:11.609" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.618" endtime="20201115 22:00:11.640"></status>
</kw>
<msg timestamp="20201115 22:00:11.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.617" endtime="20201115 22:00:11.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.643" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:11.642" endtime="20201115 22:00:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.644" endtime="20201115 22:00:11.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.614" endtime="20201115 22:00:11.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.612" endtime="20201115 22:00:11.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.654" endtime="20201115 22:00:11.941"></status>
</kw>
<msg timestamp="20201115 22:00:11.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.652" endtime="20201115 22:00:11.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:11.945" endtime="20201115 22:00:11.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.954" endtime="20201115 22:00:11.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.649" endtime="20201115 22:00:11.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.648" endtime="20201115 22:00:11.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:11.961" level="INFO">${RESULT} = [{'time': 0.022953028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.023175264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:11.957" endtime="20201115 22:00:11.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:11.975" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:11.962" endtime="20201115 22:00:11.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.979" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:11.978" endtime="20201115 22:00:11.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:11.982" level="INFO">VALUE: [8.917000000000647e-06, 8.889000000001507e-06, 8.888000000002033e-06, 8.888999999998037e-06, 8.888000000002033e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.84800000000227e-06, 8.916000000001173e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.903000000001077e-06, 8.888000000002033e-06, 8.889000000001507e-06, 8.887999999998564e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.959000000002826e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.902000000001603e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.887999999998564e-06, 8.916000000001173e-06, 8.903000000001077e-06, 8.861000000002367e-06, 8.86200000000531e-06, 8.889000000004976e-06, 8.888000000005503e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.916999999997177e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.916999999997177e-06, 8.887999999998564e-06]</msg>
<status status="PASS" starttime="20201115 22:00:11.980" endtime="20201115 22:00:11.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.975" endtime="20201115 22:00:11.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:11.985" endtime="20201115 22:00:11.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:11.989" endtime="20201115 22:00:12.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.987" endtime="20201115 22:00:12.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.983" endtime="20201115 22:00:12.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:11.609" endtime="20201115 22:00:12.009"></status>
</kw>
<msg timestamp="20201115 22:00:12.010" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.019" endtime="20201115 22:00:12.040"></status>
</kw>
<msg timestamp="20201115 22:00:12.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.017" endtime="20201115 22:00:12.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 10', 'msg': ['overhead_timer_list set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.042" endtime="20201115 22:00:12.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.044" endtime="20201115 22:00:12.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.015" endtime="20201115 22:00:12.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.012" endtime="20201115 22:00:12.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.054" endtime="20201115 22:00:12.341"></status>
</kw>
<msg timestamp="20201115 22:00:12.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.052" endtime="20201115 22:00:12.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023181111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.346" endtime="20201115 22:00:12.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.354" endtime="20201115 22:00:12.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.050" endtime="20201115 22:00:12.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.048" endtime="20201115 22:00:12.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.361" level="INFO">${RESULT} = [{'time': 0.023190028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.917000000000647e-06, 'source_diff': 8.917000000000647e-06}, {'time': 0.023411111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.357" endtime="20201115 22:00:12.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.375" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.362" endtime="20201115 22:00:12.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.379" level="INFO">NAME: 00-overhead-10-set</msg>
<status status="PASS" starttime="20201115 22:00:12.378" endtime="20201115 22:00:12.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.382" level="INFO">VALUE: [8.917000000000647e-06, 8.902999999997607e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.833999999999231e-06, 8.889000000001507e-06, 8.916000000001173e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.972999999998926e-06, 8.888000000002033e-06, 8.888000000002033e-06, 8.903000000001077e-06, 8.833999999999231e-06, 8.875000000001937e-06, 8.915999999997704e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.902999999997607e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.958000000003352e-06, 8.916999999997177e-06, 8.903000000004546e-06, 8.819000000000188e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.875000000005406e-06, 8.903000000004546e-06, 8.888999999998037e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.380" endtime="20201115 22:00:12.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.375" endtime="20201115 22:00:12.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.385" endtime="20201115 22:00:12.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.389" endtime="20201115 22:00:12.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.387" endtime="20201115 22:00:12.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.383" endtime="20201115 22:00:12.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.010" endtime="20201115 22:00:12.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.404" endtime="20201115 22:00:12.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:10.404" endtime="20201115 22:00:12.410"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.412" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.421" endtime="20201115 22:00:12.444"></status>
</kw>
<msg timestamp="20201115 22:00:12.444" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.420" endtime="20201115 22:00:12.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.445" endtime="20201115 22:00:12.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.448" endtime="20201115 22:00:12.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.417" endtime="20201115 22:00:12.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.415" endtime="20201115 22:00:12.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.458" endtime="20201115 22:00:12.745"></status>
</kw>
<msg timestamp="20201115 22:00:12.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025294972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.456" endtime="20201115 22:00:12.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025294972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025304167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.750" endtime="20201115 22:00:12.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.758" endtime="20201115 22:00:12.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.454" endtime="20201115 22:00:12.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.452" endtime="20201115 22:00:12.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:12.765" level="INFO">${RESULT} = [{'time': 0.025304167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.025541542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:12.762" endtime="20201115 22:00:12.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:12.779" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:12.766" endtime="20201115 22:00:12.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.783" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:12.782" endtime="20201115 22:00:12.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.786" level="INFO">VALUE: [9.195000000000036e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.222000000003172e-06, 9.221999999999703e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.208999999999606e-06, 9.124999999998717e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.181000000000467e-06, 9.153000000001327e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.209000000003076e-06, 9.208000000000133e-06, 9.207999999996663e-06, 9.209000000003076e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.207999999996663e-06, 9.193999999997093e-06, 9.207999999996663e-06, 9.207999999996663e-06, 9.221999999996233e-06, 9.208000000003602e-06, 9.124999999998717e-06, 9.208999999996137e-06, 9.236000000002742e-06, 9.208000000003602e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.194999999996567e-06, 9.209000000003076e-06, 9.222999999995707e-06, 9.221999999996233e-06, 9.195000000003506e-06, 9.194000000004032e-06, 9.208999999996137e-06, 9.236000000002742e-06, 9.222999999995707e-06]</msg>
<status status="PASS" starttime="20201115 22:00:12.784" endtime="20201115 22:00:12.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.780" endtime="20201115 22:00:12.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.789" endtime="20201115 22:00:12.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:12.793" endtime="20201115 22:00:12.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.791" endtime="20201115 22:00:12.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.787" endtime="20201115 22:00:12.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.413" endtime="20201115 22:00:12.814"></status>
</kw>
<msg timestamp="20201115 22:00:12.814" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.823" endtime="20201115 22:00:12.847"></status>
</kw>
<msg timestamp="20201115 22:00:12.847" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.821" endtime="20201115 22:00:12.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:12.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:12.848" endtime="20201115 22:00:12.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.855" endtime="20201115 22:00:12.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.819" endtime="20201115 22:00:12.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.816" endtime="20201115 22:00:12.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:12.865" endtime="20201115 22:00:13.152"></status>
</kw>
<msg timestamp="20201115 22:00:13.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:12.863" endtime="20201115 22:00:13.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022742875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.156" endtime="20201115 22:00:13.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.164" endtime="20201115 22:00:13.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.861" endtime="20201115 22:00:13.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.859" endtime="20201115 22:00:13.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.171" level="INFO">${RESULT} = [{'time': 0.022742875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.022980569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.168" endtime="20201115 22:00:13.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.185" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.172" endtime="20201115 22:00:13.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.190" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.189" endtime="20201115 22:00:13.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.192" level="INFO">VALUE: [9.208000000000133e-06, 9.208000000000133e-06, 9.166000000001423e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.180000000000993e-06, 9.193999999997093e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.222999999999176e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.235999999999273e-06, 9.180999999996997e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.194000000000563e-06, 9.263999999998412e-06, 9.139000000001757e-06, 9.235999999999273e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.208000000003602e-06, 9.208000000003602e-06, 9.208000000003602e-06, 9.193999999997093e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.194999999996567e-06, 9.207999999996663e-06, 9.221999999996233e-06, 9.235999999995803e-06, 9.194000000004032e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.191" endtime="20201115 22:00:13.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.186" endtime="20201115 22:00:13.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.195" endtime="20201115 22:00:13.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.199" endtime="20201115 22:00:13.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.197" endtime="20201115 22:00:13.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.194" endtime="20201115 22:00:13.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.814" endtime="20201115 22:00:13.220"></status>
</kw>
<msg timestamp="20201115 22:00:13.220" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.230" endtime="20201115 22:00:13.253"></status>
</kw>
<msg timestamp="20201115 22:00:13.253" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.228" endtime="20201115 22:00:13.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.256" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.254" endtime="20201115 22:00:13.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.257" endtime="20201115 22:00:13.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.225" endtime="20201115 22:00:13.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.223" endtime="20201115 22:00:13.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.266" endtime="20201115 22:00:13.554"></status>
</kw>
<msg timestamp="20201115 22:00:13.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023875806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.265" endtime="20201115 22:00:13.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023875806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.558" endtime="20201115 22:00:13.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.567" endtime="20201115 22:00:13.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.262" endtime="20201115 22:00:13.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.260" endtime="20201115 22:00:13.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.574" level="INFO">${RESULT} = [{'time': 0.023875806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.024112694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.570" endtime="20201115 22:00:13.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.587" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.575" endtime="20201115 22:00:13.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.592" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.591" endtime="20201115 22:00:13.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.595" level="INFO">VALUE: [9.208999999999606e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.222999999999176e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.263999999998412e-06, 9.208999999999606e-06, 9.167000000000897e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.167000000000897e-06, 9.195000000000036e-06, 9.222999999999176e-06, 9.249999999998842e-06, 9.179999999997523e-06, 9.208000000000133e-06, 9.153000000001327e-06, 9.193999999997093e-06, 9.208000000003602e-06, 9.208999999996137e-06, 9.221999999996233e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.193999999997093e-06, 9.194999999996567e-06, 9.195000000003506e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.250000000002312e-06, 9.208000000003602e-06, 9.207999999996663e-06, 9.222999999995707e-06, 9.193999999997093e-06, 9.222000000003172e-06, 9.194000000004032e-06, 9.208000000003602e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.593" endtime="20201115 22:00:13.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.588" endtime="20201115 22:00:13.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.598" endtime="20201115 22:00:13.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:13.601" endtime="20201115 22:00:13.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.600" endtime="20201115 22:00:13.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.596" endtime="20201115 22:00:13.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.221" endtime="20201115 22:00:13.622"></status>
</kw>
<msg timestamp="20201115 22:00:13.623" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.632" endtime="20201115 22:00:13.655"></status>
</kw>
<msg timestamp="20201115 22:00:13.656" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.630" endtime="20201115 22:00:13.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:13.657" endtime="20201115 22:00:13.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.659" endtime="20201115 22:00:13.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.628" endtime="20201115 22:00:13.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.625" endtime="20201115 22:00:13.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.669" endtime="20201115 22:00:13.956"></status>
</kw>
<msg timestamp="20201115 22:00:13.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.667" endtime="20201115 22:00:13.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:13.961" endtime="20201115 22:00:13.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:13.969" endtime="20201115 22:00:13.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.665" endtime="20201115 22:00:13.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.663" endtime="20201115 22:00:13.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:13.976" level="INFO">${RESULT} = [{'time': 0.023330694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.023568778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:13.972" endtime="20201115 22:00:13.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:13.989" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:13.977" endtime="20201115 22:00:13.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.994" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:13.993" endtime="20201115 22:00:13.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:13.997" level="INFO">VALUE: [9.179999999997523e-06, 9.249999999998842e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.236000000002742e-06, 9.221999999999703e-06, 9.193999999997093e-06, 9.235999999999273e-06, 9.221999999999703e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.194000000000563e-06, 9.264000000001882e-06, 9.263999999998412e-06, 9.208999999999606e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.262999999998939e-06, 9.208000000000133e-06, 9.139000000001757e-06, 9.181000000000467e-06, 9.195000000000036e-06, 9.208999999999606e-06, 9.195000000000036e-06, 9.181000000000467e-06, 9.222999999999176e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.221999999996233e-06, 9.207999999996663e-06, 9.166999999997427e-06, 9.250000000002312e-06, 9.207999999996663e-06, 9.222000000003172e-06, 9.181000000003936e-06, 9.209000000003076e-06, 9.236000000002742e-06, 9.181000000003936e-06, 9.208999999996137e-06, 9.208999999996137e-06, 9.207999999996663e-06, 9.124999999998717e-06, 9.208000000003602e-06, 9.208000000003602e-06, 9.195000000003506e-06]</msg>
<status status="PASS" starttime="20201115 22:00:13.995" endtime="20201115 22:00:13.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.990" endtime="20201115 22:00:13.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.000" endtime="20201115 22:00:14.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.004" endtime="20201115 22:00:14.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.002" endtime="20201115 22:00:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.998" endtime="20201115 22:00:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:13.623" endtime="20201115 22:00:14.025"></status>
</kw>
<msg timestamp="20201115 22:00:14.025" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.034" endtime="20201115 22:00:14.056"></status>
</kw>
<msg timestamp="20201115 22:00:14.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.032" endtime="20201115 22:00:14.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.059" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 11', 'msg': ['overhead_timer_list set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.057" endtime="20201115 22:00:14.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.060" endtime="20201115 22:00:14.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.030" endtime="20201115 22:00:14.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.028" endtime="20201115 22:00:14.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.069" endtime="20201115 22:00:14.356"></status>
</kw>
<msg timestamp="20201115 22:00:14.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.067" endtime="20201115 22:00:14.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.360" endtime="20201115 22:00:14.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.369" endtime="20201115 22:00:14.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.065" endtime="20201115 22:00:14.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.063" endtime="20201115 22:00:14.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.376" level="INFO">${RESULT} = [{'time': 0.022686889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.207999999996663e-06, 'source_diff': 9.207999999996663e-06}, {'time': 0.022928778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.372" endtime="20201115 22:00:14.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.389" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.377" endtime="20201115 22:00:14.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.394" level="INFO">NAME: 00-overhead-11-set</msg>
<status status="PASS" starttime="20201115 22:00:14.393" endtime="20201115 22:00:14.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.396" level="INFO">VALUE: [9.207999999996663e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.221999999999703e-06, 9.208999999999606e-06, 9.193999999997093e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.222999999999176e-06, 9.249999999998842e-06, 9.221999999999703e-06, 9.208000000000133e-06, 9.180000000000993e-06, 9.166999999997427e-06, 9.208000000000133e-06, 9.209000000003076e-06, 9.221999999999703e-06, 9.193999999997093e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.138999999998287e-06, 9.236000000002742e-06, 9.208000000000133e-06, 9.222999999999176e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.195000000000036e-06, 9.222999999999176e-06, 9.250000000002312e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.209000000003076e-06, 9.208000000003602e-06, 9.209000000003076e-06, 9.193999999997093e-06, 9.209000000003076e-06, 9.193999999997093e-06, 9.208999999996137e-06, 9.179999999997523e-06, 9.208000000003602e-06, 9.165999999997954e-06, 9.209000000003076e-06, 9.208999999996137e-06, 9.222000000003172e-06, 9.194999999996567e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.395" endtime="20201115 22:00:14.397"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.390" endtime="20201115 22:00:14.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.400" endtime="20201115 22:00:14.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.404" endtime="20201115 22:00:14.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.402" endtime="20201115 22:00:14.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.399" endtime="20201115 22:00:14.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.025" endtime="20201115 22:00:14.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.411" endtime="20201115 22:00:14.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:12.410" endtime="20201115 22:00:14.425"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.427" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.436" endtime="20201115 22:00:14.460"></status>
</kw>
<msg timestamp="20201115 22:00:14.460" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.435" endtime="20201115 22:00:14.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.463" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.461" endtime="20201115 22:00:14.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.464" endtime="20201115 22:00:14.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.432" endtime="20201115 22:00:14.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.430" endtime="20201115 22:00:14.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.473" endtime="20201115 22:00:14.761"></status>
</kw>
<msg timestamp="20201115 22:00:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025096903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.472" endtime="20201115 22:00:14.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025096903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025106389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.766" endtime="20201115 22:00:14.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.774" endtime="20201115 22:00:14.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.469" endtime="20201115 22:00:14.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.467" endtime="20201115 22:00:14.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:14.781" level="INFO">${RESULT} = [{'time': 0.025106389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.025362208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:14.777" endtime="20201115 22:00:14.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:14.794" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:14.782" endtime="20201115 22:00:14.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.799" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:14.798" endtime="20201115 22:00:14.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.802" level="INFO">VALUE: [9.485999999999523e-06, 9.527000000002228e-06, 9.513999999998662e-06, 9.500000000002562e-06, 9.430000000001243e-06, 9.526999999998759e-06, 9.542000000001272e-06, 9.526999999998759e-06, 9.514000000002132e-06, 9.512999999999189e-06, 9.541000000001798e-06, 9.485999999999523e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.570000000000412e-06, 9.526999999998759e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.485999999996053e-06, 9.527999999994763e-06, 9.514000000002132e-06, 9.513999999995193e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.499999999995623e-06, 9.514000000002132e-06, 9.570000000000412e-06, 9.528000000001702e-06, 9.52699999999529e-06, 9.527999999994763e-06, 9.513999999995193e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.527999999994763e-06, 9.542000000001272e-06, 9.499999999995623e-06, 9.569000000000938e-06, 9.499999999995623e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:00:14.800" endtime="20201115 22:00:14.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.795" endtime="20201115 22:00:14.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.806" endtime="20201115 22:00:14.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:14.809" endtime="20201115 22:00:14.828"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.808" endtime="20201115 22:00:14.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.804" endtime="20201115 22:00:14.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.428" endtime="20201115 22:00:14.830"></status>
</kw>
<msg timestamp="20201115 22:00:14.830" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.839" endtime="20201115 22:00:14.863"></status>
</kw>
<msg timestamp="20201115 22:00:14.864" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.838" endtime="20201115 22:00:14.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:14.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:14.865" endtime="20201115 22:00:14.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.867" endtime="20201115 22:00:14.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.835" endtime="20201115 22:00:14.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.833" endtime="20201115 22:00:14.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:14.877" endtime="20201115 22:00:15.164"></status>
</kw>
<msg timestamp="20201115 22:00:15.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:14.875" endtime="20201115 22:00:15.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.168" endtime="20201115 22:00:15.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.177" endtime="20201115 22:00:15.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.873" endtime="20201115 22:00:15.179"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.871" endtime="20201115 22:00:15.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.184" level="INFO">${RESULT} = [{'time': 0.022803972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.023067639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.180" endtime="20201115 22:00:15.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.197" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.185" endtime="20201115 22:00:15.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.203" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.201" endtime="20201115 22:00:15.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.205" level="INFO">VALUE: [9.499999999999093e-06, 9.514000000002132e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.500000000002562e-06, 9.568999999997468e-06, 9.513000000002658e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.471999999999953e-06, 9.556000000000842e-06, 9.528000000001702e-06, 9.512999999999189e-06, 9.514000000002132e-06, 9.485999999999523e-06, 9.444999999996817e-06, 9.513999999998662e-06, 9.513000000002658e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.583000000000508e-06, 9.485999999999523e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.513000000002658e-06, 9.555000000001368e-06, 9.527999999994763e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.499999999995623e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.485999999996053e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.204" endtime="20201115 22:00:15.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.199" endtime="20201115 22:00:15.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.208" endtime="20201115 22:00:15.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.212" endtime="20201115 22:00:15.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.210" endtime="20201115 22:00:15.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.207" endtime="20201115 22:00:15.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.831" endtime="20201115 22:00:15.233"></status>
</kw>
<msg timestamp="20201115 22:00:15.233" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.243" endtime="20201115 22:00:15.266"></status>
</kw>
<msg timestamp="20201115 22:00:15.266" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.241" endtime="20201115 22:00:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.269" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.267" endtime="20201115 22:00:15.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.270" endtime="20201115 22:00:15.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.238" endtime="20201115 22:00:15.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.236" endtime="20201115 22:00:15.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.279" endtime="20201115 22:00:15.566"></status>
</kw>
<msg timestamp="20201115 22:00:15.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023571653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023581181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.278" endtime="20201115 22:00:15.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023571653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023581181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.570" endtime="20201115 22:00:15.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.578" endtime="20201115 22:00:15.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.275" endtime="20201115 22:00:15.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.273" endtime="20201115 22:00:15.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.585" level="INFO">${RESULT} = [{'time': 0.023581181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.023844208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.582" endtime="20201115 22:00:15.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:15.599" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.587" endtime="20201115 22:00:15.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.604" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:15.603" endtime="20201115 22:00:15.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.607" level="INFO">VALUE: [9.527999999998232e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.485999999999523e-06, 9.458000000000383e-06, 9.471999999999953e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.583000000000508e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.526999999998759e-06, 9.556000000000842e-06, 9.513999999998662e-06, 9.513000000002658e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.526999999998759e-06, 9.486000000002992e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.471999999999953e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.51299999999572e-06, 9.487000000002466e-06, 9.513999999995193e-06, 9.540999999994859e-06, 9.500000000002562e-06, 9.542000000001272e-06, 9.569000000000938e-06, 9.554999999994429e-06, 9.514000000002132e-06, 9.527999999994763e-06, 9.542000000001272e-06, 9.513999999995193e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.527000000002228e-06, 9.528000000001702e-06, 9.499999999995623e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201115 22:00:15.605" endtime="20201115 22:00:15.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.600" endtime="20201115 22:00:15.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.610" endtime="20201115 22:00:15.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:15.613" endtime="20201115 22:00:15.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.612" endtime="20201115 22:00:15.633"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.608" endtime="20201115 22:00:15.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.233" endtime="20201115 22:00:15.634"></status>
</kw>
<msg timestamp="20201115 22:00:15.634" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.644" endtime="20201115 22:00:15.667"></status>
</kw>
<msg timestamp="20201115 22:00:15.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.642" endtime="20201115 22:00:15.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.670" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:15.669" endtime="20201115 22:00:15.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.671" endtime="20201115 22:00:15.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.639" endtime="20201115 22:00:15.673"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.637" endtime="20201115 22:00:15.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.681" endtime="20201115 22:00:15.969"></status>
</kw>
<msg timestamp="20201115 22:00:15.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.679" endtime="20201115 22:00:15.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:15.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:15.973" endtime="20201115 22:00:15.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:15.982" endtime="20201115 22:00:15.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.676" endtime="20201115 22:00:15.984"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.674" endtime="20201115 22:00:15.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:15.989" level="INFO">${RESULT} = [{'time': 0.022877306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.023138306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:15.986" endtime="20201115 22:00:15.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.003" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:15.990" endtime="20201115 22:00:16.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.007" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.006" endtime="20201115 22:00:16.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.010" level="INFO">VALUE: [9.513999999998662e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.486999999998996e-06, 9.597000000000078e-06, 9.512999999999189e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.583000000000508e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.471999999999953e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.528000000001702e-06, 9.541000000001798e-06, 9.542000000001272e-06, 9.527999999998232e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.52699999999529e-06, 9.486000000002992e-06, 9.541000000001798e-06, 9.583000000000508e-06, 9.513999999995193e-06, 9.443999999997343e-06, 9.514000000002132e-06, 9.500000000002562e-06, 9.513999999995193e-06, 9.527999999994763e-06, 9.514000000002132e-06, 9.513999999995193e-06, 9.472000000003422e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.009" endtime="20201115 22:00:16.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.004" endtime="20201115 22:00:16.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.013" endtime="20201115 22:00:16.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.017" endtime="20201115 22:00:16.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.015" endtime="20201115 22:00:16.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.012" endtime="20201115 22:00:16.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:15.635" endtime="20201115 22:00:16.038"></status>
</kw>
<msg timestamp="20201115 22:00:16.038" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.047" endtime="20201115 22:00:16.070"></status>
</kw>
<msg timestamp="20201115 22:00:16.070" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.045" endtime="20201115 22:00:16.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.073" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 12', 'msg': ['overhead_timer_list set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.072" endtime="20201115 22:00:16.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.074" endtime="20201115 22:00:16.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.043" endtime="20201115 22:00:16.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.041" endtime="20201115 22:00:16.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.083" endtime="20201115 22:00:16.371"></status>
</kw>
<msg timestamp="20201115 22:00:16.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.082" endtime="20201115 22:00:16.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.376" endtime="20201115 22:00:16.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.384" endtime="20201115 22:00:16.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.079" endtime="20201115 22:00:16.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.077" endtime="20201115 22:00:16.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.391" level="INFO">${RESULT} = [{'time': 0.022744792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.499999999999093e-06, 'source_diff': 9.499999999999093e-06}, {'time': 0.023003792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.388" endtime="20201115 22:00:16.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.405" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.392" endtime="20201115 22:00:16.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.410" level="INFO">NAME: 00-overhead-12-set</msg>
<status status="PASS" starttime="20201115 22:00:16.408" endtime="20201115 22:00:16.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.412" level="INFO">VALUE: [9.499999999999093e-06, 9.527999999998232e-06, 9.540999999998329e-06, 9.542000000001272e-06, 9.514000000002132e-06, 9.512999999999189e-06, 9.500000000002562e-06, 9.583999999999981e-06, 9.554999999997899e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.514000000002132e-06, 9.458000000000383e-06, 9.513999999998662e-06, 9.458000000000383e-06, 9.499999999999093e-06, 9.526999999998759e-06, 9.528000000001702e-06, 9.555999999997372e-06, 9.445000000000286e-06, 9.513999999998662e-06, 9.527999999998232e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.485999999996053e-06, 9.513000000002658e-06, 9.527999999994763e-06, 9.541000000001798e-06, 9.513999999995193e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.513999999995193e-06, 9.528000000001702e-06, 9.555999999993903e-06, 9.513999999995193e-06, 9.500000000002562e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.513999999995193e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.411" endtime="20201115 22:00:16.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.406" endtime="20201115 22:00:16.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.416" endtime="20201115 22:00:16.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.419" endtime="20201115 22:00:16.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.418" endtime="20201115 22:00:16.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.414" endtime="20201115 22:00:16.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.038" endtime="20201115 22:00:16.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.426" endtime="20201115 22:00:16.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:14.425" endtime="20201115 22:00:16.441"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.443" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.452" endtime="20201115 22:00:16.477"></status>
</kw>
<msg timestamp="20201115 22:00:16.477" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.451" endtime="20201115 22:00:16.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.480" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.478" endtime="20201115 22:00:16.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.481" endtime="20201115 22:00:16.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.448" endtime="20201115 22:00:16.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.446" endtime="20201115 22:00:16.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.491" endtime="20201115 22:00:16.780"></status>
</kw>
<msg timestamp="20201115 22:00:16.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025659194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.489" endtime="20201115 22:00:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025659194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.784" endtime="20201115 22:00:16.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.792" endtime="20201115 22:00:16.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.487" endtime="20201115 22:00:16.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.485" endtime="20201115 22:00:16.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:16.799" level="INFO">${RESULT} = [{'time': 0.025659194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.025934431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:16.796" endtime="20201115 22:00:16.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:16.813" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:16.800" endtime="20201115 22:00:16.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.817" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:16.816" endtime="20201115 22:00:16.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.820" level="INFO">VALUE: [9.833000000000758e-06, 9.834000000000231e-06, 9.792000000001522e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.778000000001952e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.749999999999343e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.902999999998607e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.888999999999037e-06, 9.833000000000758e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.847999999999801e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.778000000001952e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833999999993293e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.778000000001952e-06, 9.902999999998607e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.818999999994249e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:16.819" endtime="20201115 22:00:16.820"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.814" endtime="20201115 22:00:16.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.823" endtime="20201115 22:00:16.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:16.827" endtime="20201115 22:00:16.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.825" endtime="20201115 22:00:16.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.822" endtime="20201115 22:00:16.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.444" endtime="20201115 22:00:16.847"></status>
</kw>
<msg timestamp="20201115 22:00:16.848" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.857" endtime="20201115 22:00:16.882"></status>
</kw>
<msg timestamp="20201115 22:00:16.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.855" endtime="20201115 22:00:16.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:16.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:16.883" endtime="20201115 22:00:16.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.886" endtime="20201115 22:00:16.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.853" endtime="20201115 22:00:16.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.850" endtime="20201115 22:00:16.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:16.896" endtime="20201115 22:00:17.183"></status>
</kw>
<msg timestamp="20201115 22:00:17.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:16.894" endtime="20201115 22:00:17.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.187" endtime="20201115 22:00:17.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.196" endtime="20201115 22:00:17.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.891" endtime="20201115 22:00:17.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.889" endtime="20201115 22:00:17.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.203" level="INFO">${RESULT} = [{'time': 0.022690694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.022970931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.199" endtime="20201115 22:00:17.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.216" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.204" endtime="20201115 22:00:17.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.221" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:17.220" endtime="20201115 22:00:17.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.224" level="INFO">VALUE: [9.874999999999468e-06, 9.874999999999468e-06, 9.805999999997622e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.820000000000662e-06, 9.902999999998607e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.847999999999801e-06, 9.834000000000231e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.805000000001618e-06, 9.902999999998607e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.818999999997718e-06, 9.832999999997288e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.79099999999511e-06, 9.888999999999037e-06, 9.819000000001188e-06, 9.792000000001522e-06, 9.791999999994583e-06, 9.834000000000231e-06, 9.832999999993819e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.888999999999037e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.222" endtime="20201115 22:00:17.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.217" endtime="20201115 22:00:17.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.227" endtime="20201115 22:00:17.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.230" endtime="20201115 22:00:17.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.229" endtime="20201115 22:00:17.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.225" endtime="20201115 22:00:17.251"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.848" endtime="20201115 22:00:17.251"></status>
</kw>
<msg timestamp="20201115 22:00:17.251" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.261" endtime="20201115 22:00:17.286"></status>
</kw>
<msg timestamp="20201115 22:00:17.286" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.259" endtime="20201115 22:00:17.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.289" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.288" endtime="20201115 22:00:17.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.290" endtime="20201115 22:00:17.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.256" endtime="20201115 22:00:17.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.254" endtime="20201115 22:00:17.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.300" endtime="20201115 22:00:17.591"></status>
</kw>
<msg timestamp="20201115 22:00:17.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023499069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.298" endtime="20201115 22:00:17.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023499069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.595" endtime="20201115 22:00:17.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.604" endtime="20201115 22:00:17.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.295" endtime="20201115 22:00:17.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.293" endtime="20201115 22:00:17.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:17.611" level="INFO">${RESULT} = [{'time': 0.023508903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.023783972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:17.607" endtime="20201115 22:00:17.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:17.625" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:17.612" endtime="20201115 22:00:17.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.629" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:17.628" endtime="20201115 22:00:17.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.632" level="INFO">VALUE: [9.834000000000231e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.778000000001952e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.903000000002077e-06, 9.832999999997288e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.903000000002077e-06, 9.889000000002507e-06, 9.776999999999009e-06, 9.778000000001952e-06, 9.820000000000662e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.874999999999468e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.833000000000758e-06, 9.806000000001092e-06, 9.860999999999898e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.820000000000662e-06, 9.832999999993819e-06, 9.916999999998177e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.820000000000662e-06, 9.791000000002048e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.889000000005976e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.861000000006837e-06]</msg>
<status status="PASS" starttime="20201115 22:00:17.630" endtime="20201115 22:00:17.632"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.626" endtime="20201115 22:00:17.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.635" endtime="20201115 22:00:17.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:17.639" endtime="20201115 22:00:17.658"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.637" endtime="20201115 22:00:17.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.633" endtime="20201115 22:00:17.659"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.252" endtime="20201115 22:00:17.659"></status>
</kw>
<msg timestamp="20201115 22:00:17.660" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.669" endtime="20201115 22:00:17.693"></status>
</kw>
<msg timestamp="20201115 22:00:17.693" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.668" endtime="20201115 22:00:17.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:17.696" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:17.695" endtime="20201115 22:00:17.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.698" endtime="20201115 22:00:17.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.665" endtime="20201115 22:00:17.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.663" endtime="20201115 22:00:17.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:17.711" endtime="20201115 22:00:17.998"></status>
</kw>
<msg timestamp="20201115 22:00:18.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:17.709" endtime="20201115 22:00:18.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.003" endtime="20201115 22:00:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.012" endtime="20201115 22:00:18.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.705" endtime="20201115 22:00:18.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.703" endtime="20201115 22:00:18.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.019" level="INFO">${RESULT} = [{'time': 0.023176139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819999999997192e-06, 'source_diff': 9.819999999997192e-06}, {'time': 0.023458208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.015" endtime="20201115 22:00:18.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.032" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.020" endtime="20201115 22:00:18.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.037" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.036" endtime="20201115 22:00:18.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.039" level="INFO">VALUE: [9.819999999997192e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.790999999998579e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.901999999999134e-06, 9.805999999997622e-06, 9.777999999998482e-06, 9.860999999999898e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.846999999996858e-06, 9.790999999998579e-06, 9.902999999998607e-06, 9.847000000000328e-06, 9.847000000000328e-06, 9.818999999997718e-06, 9.834000000000231e-06, 9.819999999997192e-06, 9.804999999998149e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.832999999993819e-06, 9.819000000001188e-06, 9.847000000000328e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.777000000002478e-06, 9.820000000000662e-06, 9.764000000002382e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.834000000000231e-06, 9.888999999999037e-06, 9.833000000000758e-06, 9.847000000000328e-06, 9.916999999998177e-06, 9.847000000000328e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.038" endtime="20201115 22:00:18.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.033" endtime="20201115 22:00:18.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.043" endtime="20201115 22:00:18.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.116" endtime="20201115 22:00:18.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.114" endtime="20201115 22:00:18.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.041" endtime="20201115 22:00:18.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:17.661" endtime="20201115 22:00:18.136"></status>
</kw>
<msg timestamp="20201115 22:00:18.136" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.145" endtime="20201115 22:00:18.169"></status>
</kw>
<msg timestamp="20201115 22:00:18.169" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.144" endtime="20201115 22:00:18.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.172" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 13', 'msg': ['overhead_timer_list set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.170" endtime="20201115 22:00:18.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.173" endtime="20201115 22:00:18.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.141" endtime="20201115 22:00:18.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.139" endtime="20201115 22:00:18.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.182" endtime="20201115 22:00:18.471"></status>
</kw>
<msg timestamp="20201115 22:00:18.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.180" endtime="20201115 22:00:18.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.475" endtime="20201115 22:00:18.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.483" endtime="20201115 22:00:18.484"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.178" endtime="20201115 22:00:18.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.176" endtime="20201115 22:00:18.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.490" level="INFO">${RESULT} = [{'time': 0.022120417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.022394986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:18.486" endtime="20201115 22:00:18.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.503" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.491" endtime="20201115 22:00:18.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.507" level="INFO">NAME: 00-overhead-13-set</msg>
<status status="PASS" starttime="20201115 22:00:18.506" endtime="20201115 22:00:18.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.510" level="INFO">VALUE: [9.820000000000662e-06, 9.832999999997288e-06, 9.834000000000231e-06, 9.818999999997718e-06, 9.847999999999801e-06, 9.847000000000328e-06, 9.833000000000758e-06, 9.805000000001618e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.820000000000662e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.833000000000758e-06, 9.819999999997192e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.806000000001092e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.874999999999468e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.832999999997288e-06, 9.777999999998482e-06, 9.833000000000758e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.902999999998607e-06, 9.833000000000758e-06, 9.819000000001188e-06, 9.819000000001188e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.834000000000231e-06, 9.818999999994249e-06, 9.834000000000231e-06, 9.832999999993819e-06, 9.833000000000758e-06, 9.820000000000662e-06, 9.832999999993819e-06, 9.805000000001618e-06, 9.833000000000758e-06]</msg>
<status status="PASS" starttime="20201115 22:00:18.508" endtime="20201115 22:00:18.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.504" endtime="20201115 22:00:18.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.513" endtime="20201115 22:00:18.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.517" endtime="20201115 22:00:18.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.515" endtime="20201115 22:00:18.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.512" endtime="20201115 22:00:18.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.137" endtime="20201115 22:00:18.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.442" endtime="20201115 22:00:18.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:16.441" endtime="20201115 22:00:18.538"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.540" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.549" endtime="20201115 22:00:18.573"></status>
</kw>
<msg timestamp="20201115 22:00:18.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.547" endtime="20201115 22:00:18.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.576" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.575" endtime="20201115 22:00:18.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.577" endtime="20201115 22:00:18.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.545" endtime="20201115 22:00:18.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.542" endtime="20201115 22:00:18.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.586" endtime="20201115 22:00:18.890"></status>
</kw>
<msg timestamp="20201115 22:00:18.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.585" endtime="20201115 22:00:18.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024755625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:18.894" endtime="20201115 22:00:18.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.902" endtime="20201115 22:00:18.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.582" endtime="20201115 22:00:18.904"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.580" endtime="20201115 22:00:18.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:18.909" level="INFO">${RESULT} = [{'time': 0.024755625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.025048236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:18.905" endtime="20201115 22:00:18.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:18.922" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:18.910" endtime="20201115 22:00:18.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.927" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:18.926" endtime="20201115 22:00:18.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.930" level="INFO">VALUE: [1.0152999999998857e-05, 1.0139000000002757e-05, 1.0111000000000148e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0070000000000912e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0153000000002327e-05, 1.0139000000002757e-05, 1.0207999999997663e-05, 1.0166999999998427e-05, 1.0152999999998857e-05, 1.0125000000003187e-05, 1.0152000000002853e-05, 1.0083000000001008e-05, 1.0137999999999814e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0137999999999814e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0139000000006226e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0166999999998427e-05, 1.0165999999998954e-05, 1.0097000000000578e-05, 1.0152999999998857e-05, 1.0207999999997663e-05, 1.0193999999998093e-05, 1.0151999999999384e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0165999999998954e-05, 1.0193999999998093e-05, 1.0153000000005796e-05, 1.0151999999999384e-05, 1.0152999999998857e-05]</msg>
<status status="PASS" starttime="20201115 22:00:18.928" endtime="20201115 22:00:18.931"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.923" endtime="20201115 22:00:18.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.933" endtime="20201115 22:00:18.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:18.937" endtime="20201115 22:00:18.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.935" endtime="20201115 22:00:18.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.932" endtime="20201115 22:00:18.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.540" endtime="20201115 22:00:18.957"></status>
</kw>
<msg timestamp="20201115 22:00:18.958" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.966" endtime="20201115 22:00:18.992"></status>
</kw>
<msg timestamp="20201115 22:00:18.992" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.965" endtime="20201115 22:00:18.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:18.994" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:18.993" endtime="20201115 22:00:18.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:18.996" endtime="20201115 22:00:18.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.962" endtime="20201115 22:00:18.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.960" endtime="20201115 22:00:18.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.005" endtime="20201115 22:00:19.292"></status>
</kw>
<msg timestamp="20201115 22:00:19.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.003" endtime="20201115 22:00:19.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.296" endtime="20201115 22:00:19.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.305" endtime="20201115 22:00:19.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.001" endtime="20201115 22:00:19.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.999" endtime="20201115 22:00:19.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.312" level="INFO">${RESULT} = [{'time': 0.022326889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.022621861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.308" endtime="20201115 22:00:19.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.325" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.313" endtime="20201115 22:00:19.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.330" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:19.329" endtime="20201115 22:00:19.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.333" level="INFO">VALUE: [1.0152999999998857e-05, 1.0152999999998857e-05, 1.0139000000002757e-05, 1.0139000000002757e-05, 1.0111000000000148e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0110999999996678e-05, 1.0153000000002327e-05, 1.0152999999998857e-05, 1.0111000000000148e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0125000000003187e-05, 1.0069000000001438e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0098000000000051e-05, 1.0152999999998857e-05, 1.0153000000002327e-05, 1.0153000000002327e-05, 1.0152999999998857e-05, 1.0153000000002327e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0137999999999814e-05, 1.0152999999998857e-05, 1.0167000000001897e-05, 1.0208000000001133e-05, 1.0151999999999384e-05, 1.0165999999998954e-05, 1.0152999999998857e-05, 1.0083000000001008e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0137999999999814e-05, 1.0124999999999718e-05, 1.0137999999999814e-05, 1.0139000000006226e-05, 1.0138999999999287e-05, 1.0137999999999814e-05, 1.0138999999999287e-05, 1.0151999999999384e-05, 1.0166000000005893e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0166999999998427e-05, 1.0179999999998524e-05, 1.0138999999999287e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.331" endtime="20201115 22:00:19.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.327" endtime="20201115 22:00:19.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.336" endtime="20201115 22:00:19.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.340" endtime="20201115 22:00:19.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.338" endtime="20201115 22:00:19.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.334" endtime="20201115 22:00:19.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.958" endtime="20201115 22:00:19.361"></status>
</kw>
<msg timestamp="20201115 22:00:19.361" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.370" endtime="20201115 22:00:19.395"></status>
</kw>
<msg timestamp="20201115 22:00:19.396" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.368" endtime="20201115 22:00:19.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.398" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.397" endtime="20201115 22:00:19.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.399" endtime="20201115 22:00:19.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.366" endtime="20201115 22:00:19.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.364" endtime="20201115 22:00:19.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.408" endtime="20201115 22:00:19.696"></status>
</kw>
<msg timestamp="20201115 22:00:19.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.407" endtime="20201115 22:00:19.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.700" endtime="20201115 22:00:19.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.708" endtime="20201115 22:00:19.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.404" endtime="20201115 22:00:19.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.403" endtime="20201115 22:00:19.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:19.715" level="INFO">${RESULT} = [{'time': 0.022294417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.022591389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:19.712" endtime="20201115 22:00:19.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:19.729" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:19.716" endtime="20201115 22:00:19.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.733" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:19.732" endtime="20201115 22:00:19.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.736" level="INFO">VALUE: [1.0152999999998857e-05, 1.0083000000001008e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0111000000000148e-05, 1.0125000000003187e-05, 1.0179999999998524e-05, 1.0180000000001993e-05, 1.0111000000000148e-05, 1.0153000000002327e-05, 1.0098000000000051e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0151999999999384e-05, 1.0153000000002327e-05, 1.0166999999998427e-05, 1.0138999999999287e-05, 1.0151999999999384e-05, 1.0153000000002327e-05, 1.0139000000002757e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0166000000002423e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0165999999998954e-05, 1.0125000000003187e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0180999999997997e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0222000000004172e-05, 1.0151999999999384e-05, 1.0165999999998954e-05, 1.0137999999999814e-05, 1.0167000000005366e-05, 1.0153000000005796e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0151999999999384e-05, 1.0193999999998093e-05, 1.0124999999999718e-05]</msg>
<status status="PASS" starttime="20201115 22:00:19.734" endtime="20201115 22:00:19.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.730" endtime="20201115 22:00:19.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.739" endtime="20201115 22:00:19.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:19.742" endtime="20201115 22:00:19.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.741" endtime="20201115 22:00:19.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.737" endtime="20201115 22:00:19.762"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.362" endtime="20201115 22:00:19.763"></status>
</kw>
<msg timestamp="20201115 22:00:19.763" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.772" endtime="20201115 22:00:19.796"></status>
</kw>
<msg timestamp="20201115 22:00:19.797" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.770" endtime="20201115 22:00:19.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:19.799" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:19.798" endtime="20201115 22:00:19.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.800" endtime="20201115 22:00:19.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.768" endtime="20201115 22:00:19.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.766" endtime="20201115 22:00:19.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:19.809" endtime="20201115 22:00:20.097"></status>
</kw>
<msg timestamp="20201115 22:00:20.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:19.808" endtime="20201115 22:00:20.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.101" endtime="20201115 22:00:20.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.110" endtime="20201115 22:00:20.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.805" endtime="20201115 22:00:20.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.804" endtime="20201115 22:00:20.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.117" level="INFO">${RESULT} = [{'time': 0.022220167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.022513139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.113" endtime="20201115 22:00:20.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.130" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.118" endtime="20201115 22:00:20.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.134" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.133" endtime="20201115 22:00:20.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.137" level="INFO">VALUE: [1.0138999999999287e-05, 1.0125000000003187e-05, 1.0124999999999718e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0180999999997997e-05, 1.0152999999998857e-05, 1.0153000000002327e-05, 1.0151999999999384e-05, 1.0152999999998857e-05, 1.0151999999999384e-05, 1.0193999999998093e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0069000000001438e-05, 1.0167000000001897e-05, 1.0152000000002853e-05, 1.0180000000001993e-05, 1.0138999999999287e-05, 1.0069000000001438e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0166999999998427e-05, 1.0125000000003187e-05, 1.0124999999999718e-05, 1.0153000000002327e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0153000000002327e-05, 1.0222000000000703e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0181000000004936e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0153000000005796e-05, 1.0151999999999384e-05, 1.0137999999999814e-05, 1.0138999999999287e-05, 1.0179999999998524e-05, 1.0137999999999814e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0179999999998524e-05, 1.0097000000000578e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.135" endtime="20201115 22:00:20.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.131" endtime="20201115 22:00:20.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.140" endtime="20201115 22:00:20.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.143" endtime="20201115 22:00:20.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.142" endtime="20201115 22:00:20.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.138" endtime="20201115 22:00:20.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:19.764" endtime="20201115 22:00:20.164"></status>
</kw>
<msg timestamp="20201115 22:00:20.164" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.173" endtime="20201115 22:00:20.198"></status>
</kw>
<msg timestamp="20201115 22:00:20.198" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.171" endtime="20201115 22:00:20.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.201" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 14', 'msg': ['overhead_timer_list set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.200" endtime="20201115 22:00:20.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.202" endtime="20201115 22:00:20.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.169" endtime="20201115 22:00:20.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.167" endtime="20201115 22:00:20.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.211" endtime="20201115 22:00:20.497"></status>
</kw>
<msg timestamp="20201115 22:00:20.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.210" endtime="20201115 22:00:20.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.502" endtime="20201115 22:00:20.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.510" endtime="20201115 22:00:20.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.207" endtime="20201115 22:00:20.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.205" endtime="20201115 22:00:20.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.517" level="INFO">${RESULT} = [{'time': 0.022499431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.02279675, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:20.513" endtime="20201115 22:00:20.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.530" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.518" endtime="20201115 22:00:20.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.534" level="INFO">NAME: 00-overhead-14-set</msg>
<status status="PASS" starttime="20201115 22:00:20.533" endtime="20201115 22:00:20.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.537" level="INFO">VALUE: [1.0138999999999287e-05, 1.0153000000002327e-05, 1.0166999999998427e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0151999999999384e-05, 1.0152999999998857e-05, 1.0138999999999287e-05, 1.0165999999998954e-05, 1.0138999999999287e-05, 1.0083000000001008e-05, 1.0138999999999287e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0208999999997137e-05, 1.0111000000000148e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0152000000002853e-05, 1.0151999999999384e-05, 1.0153000000002327e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0166999999998427e-05, 1.0236000000000273e-05, 1.0139000000002757e-05, 1.0153000000002327e-05, 1.0097000000000578e-05, 1.0152999999998857e-05, 1.0152999999998857e-05, 1.0179999999998524e-05, 1.0124999999999718e-05, 1.0180999999997997e-05, 1.0151999999999384e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0138999999999287e-05, 1.0180999999997997e-05, 1.0152999999998857e-05, 1.0124999999999718e-05, 1.0137999999999814e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0097000000000578e-05, 1.0124999999999718e-05, 1.0124999999999718e-05, 1.0152999999998857e-05, 1.0194999999997567e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.536" endtime="20201115 22:00:20.537"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.531" endtime="20201115 22:00:20.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.540" endtime="20201115 22:00:20.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.543" endtime="20201115 22:00:20.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.542" endtime="20201115 22:00:20.563"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.538" endtime="20201115 22:00:20.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.165" endtime="20201115 22:00:20.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.539" endtime="20201115 22:00:20.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:18.538" endtime="20201115 22:00:20.564"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.567" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.575" endtime="20201115 22:00:20.601"></status>
</kw>
<msg timestamp="20201115 22:00:20.602" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.574" endtime="20201115 22:00:20.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.604" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.603" endtime="20201115 22:00:20.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.605" endtime="20201115 22:00:20.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.571" endtime="20201115 22:00:20.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.569" endtime="20201115 22:00:20.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.615" endtime="20201115 22:00:20.901"></status>
</kw>
<msg timestamp="20201115 22:00:20.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.613" endtime="20201115 22:00:20.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024920861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024931319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:20.905" endtime="20201115 22:00:20.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.914" endtime="20201115 22:00:20.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.611" endtime="20201115 22:00:20.916"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.609" endtime="20201115 22:00:20.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:20.920" level="INFO">${RESULT} = [{'time': 0.024931319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.025244847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:20.917" endtime="20201115 22:00:20.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:20.933" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:20.921" endtime="20201115 22:00:20.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.938" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:20.937" endtime="20201115 22:00:20.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:20.940" level="INFO">VALUE: [1.0458000000001383e-05, 1.0458000000001383e-05, 1.0458000000001383e-05, 1.0445000000001287e-05, 1.0513999999999663e-05, 1.0471999999997483e-05, 1.0458000000001383e-05, 1.0458000000001383e-05, 1.0472000000000953e-05, 1.0500000000000093e-05, 1.0459000000000857e-05, 1.0458999999997387e-05, 1.0458000000001383e-05, 1.0472000000000953e-05, 1.0473000000000426e-05, 1.0443999999998343e-05, 1.0443999999998343e-05, 1.0443999999998343e-05, 1.0445000000001287e-05, 1.0457999999997913e-05, 1.0458000000001383e-05, 1.0444999999997817e-05, 1.0471999999997483e-05, 1.0458999999997387e-05, 1.0513999999996193e-05, 1.0473000000003896e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0402999999999107e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0430999999998247e-05, 1.0444000000005282e-05, 1.0513999999996193e-05, 1.0457999999997913e-05, 1.0458999999997387e-05, 1.0402999999999107e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0415999999999204e-05, 1.0457999999997913e-05, 1.0458000000004852e-05, 1.0485999999997053e-05, 1.0458000000004852e-05, 1.0458999999997387e-05, 1.0431000000005186e-05, 1.0471999999997483e-05, 1.0443999999998343e-05]</msg>
<status status="PASS" starttime="20201115 22:00:20.939" endtime="20201115 22:00:20.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.934" endtime="20201115 22:00:20.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.943" endtime="20201115 22:00:20.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:20.947" endtime="20201115 22:00:20.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.945" endtime="20201115 22:00:20.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.942" endtime="20201115 22:00:20.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.567" endtime="20201115 22:00:20.967"></status>
</kw>
<msg timestamp="20201115 22:00:20.968" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:20.976" endtime="20201115 22:00:21.002"></status>
</kw>
<msg timestamp="20201115 22:00:21.003" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:20.975" endtime="20201115 22:00:21.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.004" endtime="20201115 22:00:21.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.007" endtime="20201115 22:00:21.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.972" endtime="20201115 22:00:21.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.970" endtime="20201115 22:00:21.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.016" endtime="20201115 22:00:21.303"></status>
</kw>
<msg timestamp="20201115 22:00:21.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.014" endtime="20201115 22:00:21.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.308" endtime="20201115 22:00:21.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.316" endtime="20201115 22:00:21.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.012" endtime="20201115 22:00:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.010" endtime="20201115 22:00:21.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.322" level="INFO">${RESULT} = [{'time': 0.022078264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0458000000001383e-05, 'source_diff': 1.0458000000001383e-05}, {'time': 0.022394778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.319" endtime="20201115 22:00:21.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.336" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.323" endtime="20201115 22:00:21.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.341" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:21.340" endtime="20201115 22:00:21.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.343" level="INFO">VALUE: [1.0458000000001383e-05, 1.0417000000002147e-05, 1.0458000000001383e-05, 1.0472000000000953e-05, 1.0401999999999634e-05, 1.0444999999997817e-05, 1.0457999999997913e-05, 1.0459000000000857e-05, 1.0430000000002243e-05, 1.0459000000000857e-05, 1.0458999999997387e-05, 1.0458999999997387e-05, 1.0486000000000523e-05, 1.0459000000000857e-05, 1.0471999999997483e-05, 1.0458000000001383e-05, 1.0402999999999107e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0458000000001383e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0472000000000953e-05, 1.0458000000001383e-05, 1.0457999999997913e-05, 1.0459000000000857e-05, 1.0471999999997483e-05, 1.0500000000000093e-05, 1.0416000000006143e-05, 1.0429999999998774e-05, 1.0444000000005282e-05, 1.0472999999996957e-05, 1.0457999999997913e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0500000000003562e-05, 1.0485999999997053e-05, 1.0457999999997913e-05, 1.0514000000003132e-05, 1.0458000000004852e-05, 1.051299999999672e-05, 1.0486000000003992e-05, 1.0443999999998343e-05, 1.0458000000004852e-05, 1.0457999999997913e-05, 1.0444999999997817e-05, 1.0443999999998343e-05, 1.0471999999997483e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.342" endtime="20201115 22:00:21.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.337" endtime="20201115 22:00:21.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.347" endtime="20201115 22:00:21.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.350" endtime="20201115 22:00:21.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.348" endtime="20201115 22:00:21.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.345" endtime="20201115 22:00:21.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.968" endtime="20201115 22:00:21.371"></status>
</kw>
<msg timestamp="20201115 22:00:21.371" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.380" endtime="20201115 22:00:21.406"></status>
</kw>
<msg timestamp="20201115 22:00:21.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.379" endtime="20201115 22:00:21.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.409" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.408" endtime="20201115 22:00:21.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.410" endtime="20201115 22:00:21.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.376" endtime="20201115 22:00:21.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.373" endtime="20201115 22:00:21.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.419" endtime="20201115 22:00:21.707"></status>
</kw>
<msg timestamp="20201115 22:00:21.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023120611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.418" endtime="20201115 22:00:21.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023120611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.711" endtime="20201115 22:00:21.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.719" endtime="20201115 22:00:21.721"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.415" endtime="20201115 22:00:21.722"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.413" endtime="20201115 22:00:21.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:21.726" level="INFO">${RESULT} = [{'time': 0.023120611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.023434736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:21.723" endtime="20201115 22:00:21.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:21.739" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:21.727" endtime="20201115 22:00:21.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.744" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:21.743" endtime="20201115 22:00:21.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.746" level="INFO">VALUE: [1.0527999999999232e-05, 1.0472000000000953e-05, 1.0417000000002147e-05, 1.0500000000000093e-05, 1.0417000000002147e-05, 1.0443999999998343e-05, 1.0486000000000523e-05, 1.0472000000000953e-05, 1.0458999999997387e-05, 1.0458000000001383e-05, 1.0500000000000093e-05, 1.0473000000000426e-05, 1.0459000000000857e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0458000000001383e-05, 1.0459000000000857e-05, 1.0459000000000857e-05, 1.0457999999997913e-05, 1.0416999999998677e-05, 1.0401999999999634e-05, 1.0486000000000523e-05, 1.0444000000001813e-05, 1.0458000000001383e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0458000000004852e-05, 1.0444000000005282e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0443999999998343e-05, 1.0444999999997817e-05, 1.0457999999997913e-05, 1.0459000000004326e-05, 1.0457999999997913e-05, 1.0459000000004326e-05, 1.0458000000004852e-05, 1.0444999999997817e-05, 1.0444000000005282e-05, 1.0471999999997483e-05, 1.0459000000004326e-05, 1.0443999999998343e-05, 1.0457999999997913e-05, 1.0458999999997387e-05, 1.0471999999997483e-05, 1.0458000000004852e-05, 1.0458999999997387e-05, 1.0459000000004326e-05]</msg>
<status status="PASS" starttime="20201115 22:00:21.745" endtime="20201115 22:00:21.747"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.740" endtime="20201115 22:00:21.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.749" endtime="20201115 22:00:21.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:21.753" endtime="20201115 22:00:21.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.751" endtime="20201115 22:00:21.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.748" endtime="20201115 22:00:21.773"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.371" endtime="20201115 22:00:21.774"></status>
</kw>
<msg timestamp="20201115 22:00:21.774" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.783" endtime="20201115 22:00:21.809"></status>
</kw>
<msg timestamp="20201115 22:00:21.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.781" endtime="20201115 22:00:21.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:21.812" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:21.811" endtime="20201115 22:00:21.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.813" endtime="20201115 22:00:21.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.779" endtime="20201115 22:00:21.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.777" endtime="20201115 22:00:21.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:21.822" endtime="20201115 22:00:22.108"></status>
</kw>
<msg timestamp="20201115 22:00:22.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:21.821" endtime="20201115 22:00:22.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.113" endtime="20201115 22:00:22.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.121" endtime="20201115 22:00:22.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.818" endtime="20201115 22:00:22.123"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.817" endtime="20201115 22:00:22.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.127" level="INFO">${RESULT} = [{'time': 0.022453319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.022771333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.124" endtime="20201115 22:00:22.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.141" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.128" endtime="20201115 22:00:22.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.145" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.144" endtime="20201115 22:00:22.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.147" level="INFO">VALUE: [1.0443999999998343e-05, 1.0444000000001813e-05, 1.0457999999997913e-05, 1.0415999999999204e-05, 1.0473000000000426e-05, 1.0443999999998343e-05, 1.0528000000002702e-05, 1.0443999999998343e-05, 1.0445000000001287e-05, 1.0471999999997483e-05, 1.0472000000000953e-05, 1.0417000000002147e-05, 1.0500000000000093e-05, 1.0443999999998343e-05, 1.0458000000001383e-05, 1.0429999999998774e-05, 1.0541999999998802e-05, 1.0471999999997483e-05, 1.0416999999998677e-05, 1.0458000000001383e-05, 1.0402999999999107e-05, 1.0458000000001383e-05, 1.0458000000001383e-05, 1.0458000000001383e-05, 1.0445000000001287e-05, 1.0402999999999107e-05, 1.0471999999997483e-05, 1.0472000000000953e-05, 1.0443999999998343e-05, 1.0471999999997483e-05, 1.0457999999997913e-05, 1.0472000000004422e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0471999999997483e-05, 1.0458999999997387e-05, 1.0444000000005282e-05, 1.0430999999998247e-05, 1.0472999999996957e-05, 1.0444999999997817e-05, 1.0444000000005282e-05, 1.0415999999999204e-05, 1.0472999999996957e-05, 1.0430999999998247e-05, 1.0444999999997817e-05, 1.0444000000005282e-05, 1.0429999999998774e-05, 1.0457999999997913e-05, 1.0444999999997817e-05, 1.0458999999997387e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.146" endtime="20201115 22:00:22.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.141" endtime="20201115 22:00:22.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.151" endtime="20201115 22:00:22.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.154" endtime="20201115 22:00:22.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.153" endtime="20201115 22:00:22.174"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.149" endtime="20201115 22:00:22.175"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:21.775" endtime="20201115 22:00:22.175"></status>
</kw>
<msg timestamp="20201115 22:00:22.175" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.184" endtime="20201115 22:00:22.210"></status>
</kw>
<msg timestamp="20201115 22:00:22.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.182" endtime="20201115 22:00:22.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 15', 'msg': ['overhead_timer_list set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.212" endtime="20201115 22:00:22.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.214" endtime="20201115 22:00:22.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.180" endtime="20201115 22:00:22.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.178" endtime="20201115 22:00:22.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.223" endtime="20201115 22:00:22.510"></status>
</kw>
<msg timestamp="20201115 22:00:22.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.222" endtime="20201115 22:00:22.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:22.514" endtime="20201115 22:00:22.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.522" endtime="20201115 22:00:22.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.219" endtime="20201115 22:00:22.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.217" endtime="20201115 22:00:22.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.529" level="INFO">${RESULT} = [{'time': 0.022267431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0459000000000857e-05, 'source_diff': 1.0459000000000857e-05}, {'time': 0.022584944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.525" endtime="20201115 22:00:22.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.542" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.530" endtime="20201115 22:00:22.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.547" level="INFO">NAME: 00-overhead-15-set</msg>
<status status="PASS" starttime="20201115 22:00:22.546" endtime="20201115 22:00:22.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.549" level="INFO">VALUE: [1.0459000000000857e-05, 1.0429999999998774e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0458000000001383e-05, 1.0429999999998774e-05, 1.0459000000000857e-05, 1.0472000000000953e-05, 1.0444999999997817e-05, 1.0458000000001383e-05, 1.0459000000000857e-05, 1.0473000000000426e-05, 1.0472000000000953e-05, 1.0513999999999663e-05, 1.0485999999997053e-05, 1.0472000000000953e-05, 1.0457999999997913e-05, 1.0458000000001383e-05, 1.0431000000001717e-05, 1.0500000000000093e-05, 1.0458000000001383e-05, 1.0457999999997913e-05, 1.0459000000000857e-05, 1.0457999999997913e-05, 1.0459000000000857e-05, 1.0445000000001287e-05, 1.0458000000001383e-05, 1.0374999999999968e-05, 1.0486000000000523e-05, 1.0458999999997387e-05, 1.0472000000004422e-05, 1.0473000000003896e-05, 1.0459000000004326e-05, 1.0416999999998677e-05, 1.0458999999997387e-05, 1.0457999999997913e-05, 1.0471999999997483e-05, 1.0485999999997053e-05, 1.0444000000005282e-05, 1.0443999999998343e-05, 1.0472999999996957e-05, 1.0444999999997817e-05, 1.0485999999997053e-05, 1.0486000000003992e-05, 1.0485999999997053e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.052699999999629e-05, 1.0457999999997913e-05, 1.0443999999998343e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.548" endtime="20201115 22:00:22.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.543" endtime="20201115 22:00:22.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.553" endtime="20201115 22:00:22.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.556" endtime="20201115 22:00:22.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.555" endtime="20201115 22:00:22.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.551" endtime="20201115 22:00:22.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.176" endtime="20201115 22:00:22.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.566" endtime="20201115 22:00:22.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:20.565" endtime="20201115 22:00:22.577"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.579" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.588" endtime="20201115 22:00:22.615"></status>
</kw>
<msg timestamp="20201115 22:00:22.616" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.586" endtime="20201115 22:00:22.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.618" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.617" endtime="20201115 22:00:22.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.619" endtime="20201115 22:00:22.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.584" endtime="20201115 22:00:22.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.582" endtime="20201115 22:00:22.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.628" endtime="20201115 22:00:22.915"></status>
</kw>
<msg timestamp="20201115 22:00:22.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02477975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024790542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:22.627" endtime="20201115 22:00:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02477975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024790542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:22.919" endtime="20201115 22:00:22.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.927" endtime="20201115 22:00:22.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.624" endtime="20201115 22:00:22.929"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.623" endtime="20201115 22:00:22.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:22.934" level="INFO">${RESULT} = [{'time': 0.024790542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0791999999999052e-05, 'source_diff': 1.0791999999999052e-05}, {'time': 0.025124236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:22.930" endtime="20201115 22:00:22.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:22.947" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:22.935" endtime="20201115 22:00:22.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.952" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:22.951" endtime="20201115 22:00:22.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:22.955" level="INFO">VALUE: [1.0791999999999052e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0778000000002952e-05, 1.0777000000000009e-05, 1.0777999999999482e-05, 1.0778000000002952e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0778000000002952e-05, 1.0736000000000773e-05, 1.0777000000000009e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0805999999995153e-05, 1.0846999999994389e-05, 1.0778000000002952e-05, 1.0749999999996873e-05, 1.0763999999996443e-05, 1.0750000000003812e-05, 1.0777999999996013e-05, 1.0777000000003478e-05, 1.0805999999995153e-05, 1.0777999999996013e-05, 1.0763000000003908e-05, 1.0764000000003382e-05, 1.0750000000003812e-05, 1.0750000000003812e-05, 1.0763999999996443e-05, 1.0778000000002952e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0805000000002618e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0763999999996443e-05, 1.079099999999611e-05, 1.0777999999996013e-05, 1.0778000000002952e-05, 1.0722999999997207e-05, 1.0778000000002952e-05, 1.0778000000002952e-05, 1.0777999999996013e-05, 1.0777000000003478e-05]</msg>
<status status="PASS" starttime="20201115 22:00:22.953" endtime="20201115 22:00:22.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.948" endtime="20201115 22:00:22.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.958" endtime="20201115 22:00:22.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:22.961" endtime="20201115 22:00:22.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.960" endtime="20201115 22:00:22.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.956" endtime="20201115 22:00:22.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.580" endtime="20201115 22:00:22.982"></status>
</kw>
<msg timestamp="20201115 22:00:22.982" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:22.991" endtime="20201115 22:00:23.018"></status>
</kw>
<msg timestamp="20201115 22:00:23.018" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:22.989" endtime="20201115 22:00:23.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.021" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.020" endtime="20201115 22:00:23.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.022" endtime="20201115 22:00:23.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.987" endtime="20201115 22:00:23.024"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.985" endtime="20201115 22:00:23.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.031" endtime="20201115 22:00:23.318"></status>
</kw>
<msg timestamp="20201115 22:00:23.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.029" endtime="20201115 22:00:23.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.322" endtime="20201115 22:00:23.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.330" endtime="20201115 22:00:23.332"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.027" endtime="20201115 22:00:23.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.025" endtime="20201115 22:00:23.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.337" level="INFO">${RESULT} = [{'time': 0.022326542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0736000000000773e-05, 'source_diff': 1.0736000000000773e-05}, {'time': 0.02265625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:23.334" endtime="20201115 22:00:23.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.350" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.338" endtime="20201115 22:00:23.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.355" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:23.354" endtime="20201115 22:00:23.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.358" level="INFO">VALUE: [1.0736000000000773e-05, 1.0763999999999913e-05, 1.0777000000000009e-05, 1.0778000000002952e-05, 1.0750000000000343e-05, 1.0679999999999024e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777000000000009e-05, 1.0791000000003048e-05, 1.0792000000002522e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0778000000002952e-05, 1.0749999999996873e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0777000000000009e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0736000000004242e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0763999999996443e-05, 1.0764000000003382e-05, 1.080499999999568e-05, 1.0778000000002952e-05, 1.0778000000002952e-05, 1.0763999999996443e-05, 1.0764000000003382e-05, 1.0778000000002952e-05, 1.0834000000001232e-05, 1.0763999999996443e-05, 1.0763999999996443e-05, 1.0778000000002952e-05, 1.0777000000003478e-05, 1.0777999999996013e-05, 1.0763999999996443e-05, 1.0763000000003908e-05, 1.0778000000002952e-05, 1.0764000000003382e-05, 1.0749999999996873e-05, 1.0777999999996013e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.356" endtime="20201115 22:00:23.358"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.352" endtime="20201115 22:00:23.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.361" endtime="20201115 22:00:23.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.365" endtime="20201115 22:00:23.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.364" endtime="20201115 22:00:23.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.360" endtime="20201115 22:00:23.386"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.983" endtime="20201115 22:00:23.386"></status>
</kw>
<msg timestamp="20201115 22:00:23.386" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.395" endtime="20201115 22:00:23.424"></status>
</kw>
<msg timestamp="20201115 22:00:23.425" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.393" endtime="20201115 22:00:23.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.427" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.426" endtime="20201115 22:00:23.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.428" endtime="20201115 22:00:23.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.391" endtime="20201115 22:00:23.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.389" endtime="20201115 22:00:23.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.437" endtime="20201115 22:00:23.724"></status>
</kw>
<msg timestamp="20201115 22:00:23.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.436" endtime="20201115 22:00:23.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.729" endtime="20201115 22:00:23.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.737" endtime="20201115 22:00:23.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.433" endtime="20201115 22:00:23.739"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.432" endtime="20201115 22:00:23.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:23.744" level="INFO">${RESULT} = [{'time': 0.022310986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.022639194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:23.740" endtime="20201115 22:00:23.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:23.757" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:23.745" endtime="20201115 22:00:23.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.762" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:23.761" endtime="20201115 22:00:23.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.764" level="INFO">VALUE: [1.0750000000000343e-05, 1.0708000000001633e-05, 1.0791999999999052e-05, 1.0735999999997303e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0750000000000343e-05, 1.0777000000000009e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0804999999999149e-05, 1.0777999999999482e-05, 1.0777000000000009e-05, 1.0777000000000009e-05, 1.0749999999996873e-05, 1.0763999999999913e-05, 1.0791999999999052e-05, 1.0791999999999052e-05, 1.0750000000000343e-05, 1.0790999999999579e-05, 1.0860999999997428e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.076299999999697e-05, 1.0792000000002522e-05, 1.0792000000002522e-05, 1.0763999999996443e-05, 1.077699999999654e-05, 1.0778000000002952e-05, 1.0763000000003908e-05, 1.0749999999996873e-05, 1.0750000000003812e-05, 1.0777000000003478e-05, 1.0791999999995583e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0792000000002522e-05, 1.079099999999611e-05, 1.0764000000003382e-05, 1.0778000000002952e-05, 1.0792000000002522e-05, 1.077699999999654e-05, 1.0763999999996443e-05, 1.0750000000003812e-05, 1.0861000000000898e-05, 1.080499999999568e-05]</msg>
<status status="PASS" starttime="20201115 22:00:23.763" endtime="20201115 22:00:23.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.758" endtime="20201115 22:00:23.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.767" endtime="20201115 22:00:23.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:23.771" endtime="20201115 22:00:23.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.769" endtime="20201115 22:00:23.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.766" endtime="20201115 22:00:23.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.387" endtime="20201115 22:00:23.791"></status>
</kw>
<msg timestamp="20201115 22:00:23.791" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.800" endtime="20201115 22:00:23.826"></status>
</kw>
<msg timestamp="20201115 22:00:23.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.799" endtime="20201115 22:00:23.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:23.829" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:23.828" endtime="20201115 22:00:23.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.831" endtime="20201115 22:00:23.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.796" endtime="20201115 22:00:23.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.794" endtime="20201115 22:00:23.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:23.839" endtime="20201115 22:00:24.126"></status>
</kw>
<msg timestamp="20201115 22:00:24.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:23.838" endtime="20201115 22:00:24.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.130" endtime="20201115 22:00:24.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.139" endtime="20201115 22:00:24.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.835" endtime="20201115 22:00:24.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.834" endtime="20201115 22:00:24.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.146" level="INFO">${RESULT} = [{'time': 0.022533236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.022864528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.142" endtime="20201115 22:00:24.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.159" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.147" endtime="20201115 22:00:24.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.163" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.162" endtime="20201115 22:00:24.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.166" level="INFO">VALUE: [1.0750000000000343e-05, 1.0846999999997858e-05, 1.0750000000000343e-05, 1.0790999999999579e-05, 1.0819999999998192e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0791999999999052e-05, 1.0723000000000676e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0792000000002522e-05, 1.0721999999997733e-05, 1.0750000000000343e-05, 1.0693999999998594e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0833000000001758e-05, 1.0777999999996013e-05, 1.0818999999995249e-05, 1.0777999999996013e-05, 1.0764000000003382e-05, 1.0792000000002522e-05, 1.0778000000002952e-05, 1.0778000000002952e-05, 1.0749999999996873e-05, 1.0763999999996443e-05, 1.076299999999697e-05, 1.0763999999996443e-05, 1.0749999999996873e-05, 1.0763999999996443e-05, 1.0777999999996013e-05, 1.0778000000002952e-05, 1.0792000000002522e-05, 1.0764000000003382e-05, 1.0777999999996013e-05, 1.0792000000002522e-05, 1.0763999999996443e-05, 1.0846999999994389e-05, 1.0763000000003908e-05, 1.0764000000003382e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.165" endtime="20201115 22:00:24.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.160" endtime="20201115 22:00:24.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.169" endtime="20201115 22:00:24.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.172" endtime="20201115 22:00:24.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.171" endtime="20201115 22:00:24.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.167" endtime="20201115 22:00:24.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:23.792" endtime="20201115 22:00:24.193"></status>
</kw>
<msg timestamp="20201115 22:00:24.193" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.202" endtime="20201115 22:00:24.229"></status>
</kw>
<msg timestamp="20201115 22:00:24.230" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.200" endtime="20201115 22:00:24.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.232" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 16', 'msg': ['overhead_timer_list set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.231" endtime="20201115 22:00:24.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.233" endtime="20201115 22:00:24.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.198" endtime="20201115 22:00:24.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.196" endtime="20201115 22:00:24.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.242" endtime="20201115 22:00:24.530"></status>
</kw>
<msg timestamp="20201115 22:00:24.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.241" endtime="20201115 22:00:24.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.535" endtime="20201115 22:00:24.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.543" endtime="20201115 22:00:24.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.238" endtime="20201115 22:00:24.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.236" endtime="20201115 22:00:24.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.550" level="INFO">${RESULT} = [{'time': 0.022104681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.022437056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.546" endtime="20201115 22:00:24.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.563" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.551" endtime="20201115 22:00:24.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.567" level="INFO">NAME: 00-overhead-16-set</msg>
<status status="PASS" starttime="20201115 22:00:24.566" endtime="20201115 22:00:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.570" level="INFO">VALUE: [1.0750000000000343e-05, 1.0763999999999913e-05, 1.0860999999997428e-05, 1.0818999999998719e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0790999999999579e-05, 1.0791999999999052e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0791999999999052e-05, 1.0778000000002952e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0778000000002952e-05, 1.0694999999998067e-05, 1.0832999999998288e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.0777999999996013e-05, 1.0749999999996873e-05, 1.0777999999996013e-05, 1.0764000000003382e-05, 1.0832999999994819e-05, 1.0763999999996443e-05, 1.077699999999654e-05, 1.0763999999996443e-05, 1.0764000000003382e-05, 1.077699999999654e-05, 1.0764000000003382e-05, 1.0764000000003382e-05, 1.0791999999995583e-05, 1.0764000000003382e-05, 1.0750000000003812e-05, 1.0833000000001758e-05, 1.0806000000002092e-05, 1.0777999999996013e-05, 1.0749999999996873e-05, 1.0764000000003382e-05, 1.0862000000000371e-05, 1.0764000000003382e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.568" endtime="20201115 22:00:24.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.564" endtime="20201115 22:00:24.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.573" endtime="20201115 22:00:24.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.576" endtime="20201115 22:00:24.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.575" endtime="20201115 22:00:24.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.571" endtime="20201115 22:00:24.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.194" endtime="20201115 22:00:24.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.578" endtime="20201115 22:00:24.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:22.578" endtime="20201115 22:00:24.597"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.600" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.608" endtime="20201115 22:00:24.637"></status>
</kw>
<msg timestamp="20201115 22:00:24.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.607" endtime="20201115 22:00:24.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.640" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:24.638" endtime="20201115 22:00:24.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.641" endtime="20201115 22:00:24.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.604" endtime="20201115 22:00:24.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.602" endtime="20201115 22:00:24.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.650" endtime="20201115 22:00:24.938"></status>
</kw>
<msg timestamp="20201115 22:00:24.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024682861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.648" endtime="20201115 22:00:24.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024682861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024693944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:24.942" endtime="20201115 22:00:24.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.951" endtime="20201115 22:00:24.952"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.646" endtime="20201115 22:00:24.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.644" endtime="20201115 22:00:24.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:24.957" level="INFO">${RESULT} = [{'time': 0.024693944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1082999999998538e-05, 'source_diff': 1.1082999999998538e-05}, {'time': 0.025044819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:24.954" endtime="20201115 22:00:24.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:24.970" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:24.958" endtime="20201115 22:00:24.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.975" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:24.974" endtime="20201115 22:00:24.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:24.977" level="INFO">VALUE: [1.1082999999998538e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1152999999999857e-05, 1.1070000000001912e-05, 1.1082999999998538e-05, 1.1070000000001912e-05, 1.1069999999998442e-05, 1.1070000000001912e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1069999999998442e-05, 1.1069999999998442e-05, 1.1056000000002342e-05, 1.1083999999998012e-05, 1.1096999999998108e-05, 1.1027999999999732e-05, 1.1096999999998108e-05, 1.1041999999999302e-05, 1.1084000000001482e-05, 1.1028000000003202e-05, 1.1096999999994639e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1084000000001482e-05, 1.1055000000002868e-05, 1.1125000000000718e-05, 1.1124999999993779e-05, 1.1098000000001051e-05, 1.1097999999994113e-05, 1.1111000000001148e-05, 1.1082999999995069e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1098000000001051e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1068999999995499e-05, 1.1083000000002008e-05, 1.1069000000002438e-05, 1.1082999999995069e-05, 1.1110999999994209e-05, 1.1083000000002008e-05, 1.1084000000001482e-05, 1.1083000000002008e-05, 1.1084000000001482e-05, 1.1125000000000718e-05, 1.1070000000001912e-05, 1.1069000000002438e-05]</msg>
<status status="PASS" starttime="20201115 22:00:24.976" endtime="20201115 22:00:24.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.971" endtime="20201115 22:00:24.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:24.980" endtime="20201115 22:00:24.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:24.984" endtime="20201115 22:00:25.003"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.982" endtime="20201115 22:00:25.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.979" endtime="20201115 22:00:25.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.600" endtime="20201115 22:00:25.004"></status>
</kw>
<msg timestamp="20201115 22:00:25.005" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.014" endtime="20201115 22:00:25.042"></status>
</kw>
<msg timestamp="20201115 22:00:25.043" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.012" endtime="20201115 22:00:25.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.045" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.044" endtime="20201115 22:00:25.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.046" endtime="20201115 22:00:25.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.009" endtime="20201115 22:00:25.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.007" endtime="20201115 22:00:25.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.056" endtime="20201115 22:00:25.342"></status>
</kw>
<msg timestamp="20201115 22:00:25.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:25.054" endtime="20201115 22:00:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:25.346" endtime="20201115 22:00:25.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.354" endtime="20201115 22:00:25.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.051" endtime="20201115 22:00:25.357"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.050" endtime="20201115 22:00:25.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.361" level="INFO">${RESULT} = [{'time': 0.02245975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1125000000000718e-05, 'source_diff': 1.1125000000000718e-05}, {'time': 0.022812417, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:25.358" endtime="20201115 22:00:25.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.374" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.362" endtime="20201115 22:00:25.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.379" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:25.378" endtime="20201115 22:00:25.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.381" level="INFO">VALUE: [1.1125000000000718e-05, 1.1084000000001482e-05, 1.1083999999998012e-05, 1.1068999999998969e-05, 1.1068999999998969e-05, 1.1069999999998442e-05, 1.1139000000000288e-05, 1.1097000000001578e-05, 1.1084000000001482e-05, 1.1083000000002008e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1084000000001482e-05, 1.1070000000001912e-05, 1.1068999999998969e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1027999999999732e-05, 1.1068999999998969e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1068999999998969e-05, 1.1096999999998108e-05, 1.1083000000002008e-05, 1.1083999999994543e-05, 1.1111000000001148e-05, 1.1096999999994639e-05, 1.1069999999994973e-05, 1.1084000000001482e-05, 1.1069000000002438e-05, 1.1098000000001051e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1083000000002008e-05, 1.1083999999994543e-05, 1.1070000000001912e-05, 1.1068999999995499e-05, 1.1084000000001482e-05, 1.1083000000002008e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1083000000002008e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1069999999994973e-05, 1.1070000000001912e-05, 1.1083000000002008e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.380" endtime="20201115 22:00:25.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.375" endtime="20201115 22:00:25.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.385" endtime="20201115 22:00:25.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.388" endtime="20201115 22:00:25.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.386" endtime="20201115 22:00:25.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.383" endtime="20201115 22:00:25.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.005" endtime="20201115 22:00:25.409"></status>
</kw>
<msg timestamp="20201115 22:00:25.409" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.419" endtime="20201115 22:00:25.447"></status>
</kw>
<msg timestamp="20201115 22:00:25.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.417" endtime="20201115 22:00:25.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.450" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.448" endtime="20201115 22:00:25.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.451" endtime="20201115 22:00:25.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.415" endtime="20201115 22:00:25.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.412" endtime="20201115 22:00:25.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.460" endtime="20201115 22:00:25.746"></status>
</kw>
<msg timestamp="20201115 22:00:25.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.458" endtime="20201115 22:00:25.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.750" endtime="20201115 22:00:25.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.758" endtime="20201115 22:00:25.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.456" endtime="20201115 22:00:25.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.454" endtime="20201115 22:00:25.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:25.765" level="INFO">${RESULT} = [{'time': 0.023107931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.023463472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:25.762" endtime="20201115 22:00:25.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:25.778" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:25.766" endtime="20201115 22:00:25.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.783" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:25.782" endtime="20201115 22:00:25.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.785" level="INFO">VALUE: [1.1042000000002772e-05, 1.1082999999998538e-05, 1.1084000000001482e-05, 1.1152999999999857e-05, 1.1082999999998538e-05, 1.1097000000001578e-05, 1.1069999999998442e-05, 1.1069999999998442e-05, 1.1138000000000814e-05, 1.1069000000002438e-05, 1.1082999999998538e-05, 1.1084000000001482e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1068999999998969e-05, 1.1041999999999302e-05, 1.1040999999999829e-05, 1.1069000000002438e-05, 1.1082999999995069e-05, 1.1084000000001482e-05, 1.1152999999999857e-05, 1.1084000000001482e-05, 1.1069000000002438e-05, 1.1083000000002008e-05, 1.0999999999997123e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1055000000002868e-05, 1.1082999999995069e-05, 1.1098000000001051e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1082999999995069e-05, 1.1097000000001578e-05, 1.1082999999995069e-05, 1.1139000000000288e-05, 1.1083000000002008e-05, 1.1082999999995069e-05, 1.0999999999997123e-05, 1.1084000000001482e-05, 1.1139000000000288e-05, 1.1096999999994639e-05, 1.1096999999994639e-05]</msg>
<status status="PASS" starttime="20201115 22:00:25.784" endtime="20201115 22:00:25.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.779" endtime="20201115 22:00:25.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.788" endtime="20201115 22:00:25.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:25.792" endtime="20201115 22:00:25.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.790" endtime="20201115 22:00:25.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.787" endtime="20201115 22:00:25.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.410" endtime="20201115 22:00:25.813"></status>
</kw>
<msg timestamp="20201115 22:00:25.813" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.822" endtime="20201115 22:00:25.850"></status>
</kw>
<msg timestamp="20201115 22:00:25.851" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.821" endtime="20201115 22:00:25.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:25.853" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:25.852" endtime="20201115 22:00:25.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.854" endtime="20201115 22:00:25.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.818" endtime="20201115 22:00:25.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.816" endtime="20201115 22:00:25.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:25.863" endtime="20201115 22:00:26.151"></status>
</kw>
<msg timestamp="20201115 22:00:26.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:25.862" endtime="20201115 22:00:26.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:26.155" endtime="20201115 22:00:26.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.163" endtime="20201115 22:00:26.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.859" endtime="20201115 22:00:26.165"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.857" endtime="20201115 22:00:26.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.170" level="INFO">${RESULT} = [{'time': 0.022455319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1040999999999829e-05, 'source_diff': 1.1040999999999829e-05}, {'time': 0.022806069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:26.166" endtime="20201115 22:00:26.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.183" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.171" endtime="20201115 22:00:26.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.187" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.186" endtime="20201115 22:00:26.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.190" level="INFO">VALUE: [1.1040999999999829e-05, 1.1138000000000814e-05, 1.1069999999998442e-05, 1.1041999999999302e-05, 1.1083000000002008e-05, 1.1110999999997678e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1082999999998538e-05, 1.1069999999998442e-05, 1.1069000000002438e-05, 1.1098000000001051e-05, 1.1082999999998538e-05, 1.1069999999998442e-05, 1.1068999999998969e-05, 1.1097000000001578e-05, 1.1027000000000259e-05, 1.1084000000001482e-05, 1.1152000000000384e-05, 1.1069000000002438e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1068999999998969e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1098000000001051e-05, 1.1028000000003202e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1082999999995069e-05, 1.1097000000001578e-05, 1.1068999999995499e-05, 1.1082999999995069e-05, 1.1069000000002438e-05, 1.1084000000001482e-05, 1.1082999999995069e-05, 1.1096999999994639e-05, 1.1125000000000718e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1027999999996263e-05, 1.1096999999994639e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.1083000000002008e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1082999999995069e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.188" endtime="20201115 22:00:26.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.184" endtime="20201115 22:00:26.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.193" endtime="20201115 22:00:26.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.197" endtime="20201115 22:00:26.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.195" endtime="20201115 22:00:26.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.192" endtime="20201115 22:00:26.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:25.814" endtime="20201115 22:00:26.217"></status>
</kw>
<msg timestamp="20201115 22:00:26.218" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.226" endtime="20201115 22:00:26.254"></status>
</kw>
<msg timestamp="20201115 22:00:26.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.225" endtime="20201115 22:00:26.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.257" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 17', 'msg': ['overhead_timer_list set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.256" endtime="20201115 22:00:26.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.258" endtime="20201115 22:00:26.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.222" endtime="20201115 22:00:26.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.220" endtime="20201115 22:00:26.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.267" endtime="20201115 22:00:26.562"></status>
</kw>
<msg timestamp="20201115 22:00:26.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02222525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:26.266" endtime="20201115 22:00:26.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02222525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:26.572" endtime="20201115 22:00:26.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.590" endtime="20201115 22:00:26.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.263" endtime="20201115 22:00:26.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.261" endtime="20201115 22:00:26.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:26.604" level="INFO">${RESULT} = [{'time': 0.02222525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1082999999998538e-05, 'source_diff': 1.1082999999998538e-05}, {'time': 0.022579306, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:26.597" endtime="20201115 22:00:26.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:26.673" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:26.606" endtime="20201115 22:00:26.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.678" level="INFO">NAME: 00-overhead-17-set</msg>
<status status="PASS" starttime="20201115 22:00:26.677" endtime="20201115 22:00:26.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.680" level="INFO">VALUE: [1.1082999999998538e-05, 1.1098000000001051e-05, 1.1084000000001482e-05, 1.1069999999998442e-05, 1.1124999999997248e-05, 1.1096999999998108e-05, 1.1069999999998442e-05, 1.1098000000001051e-05, 1.1041999999999302e-05, 1.1070000000001912e-05, 1.1083000000002008e-05, 1.1096999999998108e-05, 1.1110999999997678e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1068999999998969e-05, 1.1096999999998108e-05, 1.1068999999998969e-05, 1.1084000000001482e-05, 1.1068999999998969e-05, 1.1096999999998108e-05, 1.1082999999998538e-05, 1.1083000000002008e-05, 1.1096999999998108e-05, 1.1068999999998969e-05, 1.1082999999998538e-05, 1.1069000000002438e-05, 1.1069000000002438e-05, 1.1083999999994543e-05, 1.1069000000002438e-05, 1.1097000000001578e-05, 1.1098000000001051e-05, 1.1139000000000288e-05, 1.1083000000002008e-05, 1.1069000000002438e-05, 1.1096999999994639e-05, 1.1084000000001482e-05, 1.1068999999995499e-05, 1.1084000000001482e-05, 1.1056000000002342e-05, 1.1084000000001482e-05, 1.1084000000001482e-05, 1.1097000000001578e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1097000000001578e-05, 1.1082999999995069e-05, 1.1097000000001578e-05, 1.1083999999994543e-05, 1.1084000000001482e-05]</msg>
<status status="PASS" starttime="20201115 22:00:26.679" endtime="20201115 22:00:26.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.674" endtime="20201115 22:00:26.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.684" endtime="20201115 22:00:26.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:26.687" endtime="20201115 22:00:26.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.686" endtime="20201115 22:00:26.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.682" endtime="20201115 22:00:26.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.218" endtime="20201115 22:00:26.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.599" endtime="20201115 22:00:26.708"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:24.598" endtime="20201115 22:00:26.708"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.710" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.720" endtime="20201115 22:00:26.749"></status>
</kw>
<msg timestamp="20201115 22:00:26.749" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.718" endtime="20201115 22:00:26.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:26.752" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:26.750" endtime="20201115 22:00:26.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.753" endtime="20201115 22:00:26.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.715" endtime="20201115 22:00:26.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.713" endtime="20201115 22:00:26.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:26.762" endtime="20201115 22:00:27.048"></status>
</kw>
<msg timestamp="20201115 22:00:27.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:26.760" endtime="20201115 22:00:27.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:27.052" endtime="20201115 22:00:27.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.060" endtime="20201115 22:00:27.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.758" endtime="20201115 22:00:27.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.756" endtime="20201115 22:00:27.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.067" level="INFO">${RESULT} = [{'time': 0.025381, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.025746986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:27.063" endtime="20201115 22:00:27.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.080" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.068" endtime="20201115 22:00:27.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.085" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:27.084" endtime="20201115 22:00:27.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.088" level="INFO">VALUE: [1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1459000000001857e-05, 1.1388999999997068e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1360999999997928e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1361000000001398e-05, 1.1429999999999774e-05, 1.1389000000000538e-05, 1.1362000000000871e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1319999999995223e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1348000000001301e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1387999999994125e-05, 1.1403000000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.086" endtime="20201115 22:00:27.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.081" endtime="20201115 22:00:27.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.091" endtime="20201115 22:00:27.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.094" endtime="20201115 22:00:27.113"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.093" endtime="20201115 22:00:27.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.089" endtime="20201115 22:00:27.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.711" endtime="20201115 22:00:27.115"></status>
</kw>
<msg timestamp="20201115 22:00:27.115" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.125" endtime="20201115 22:00:27.154"></status>
</kw>
<msg timestamp="20201115 22:00:27.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.123" endtime="20201115 22:00:27.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.157" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.156" endtime="20201115 22:00:27.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.158" endtime="20201115 22:00:27.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.120" endtime="20201115 22:00:27.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.118" endtime="20201115 22:00:27.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.167" endtime="20201115 22:00:27.453"></status>
</kw>
<msg timestamp="20201115 22:00:27.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.166" endtime="20201115 22:00:27.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023295903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.457" endtime="20201115 22:00:27.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.465" endtime="20201115 22:00:27.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.163" endtime="20201115 22:00:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.161" endtime="20201115 22:00:27.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.472" level="INFO">${RESULT} = [{'time': 0.023307278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.023681361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.469" endtime="20201115 22:00:27.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.486" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.473" endtime="20201115 22:00:27.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.490" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:27.489" endtime="20201115 22:00:27.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.493" level="INFO">VALUE: [1.1375000000000968e-05, 1.1444000000002813e-05, 1.1416999999999677e-05, 1.1348000000001301e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1416000000000204e-05, 1.1361000000001398e-05, 1.1402000000000634e-05, 1.1429999999999774e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1443999999999344e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1429999999999774e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1485999999998053e-05, 1.1361000000001398e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1375000000000968e-05, 1.1402999999993169e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1388000000001064e-05, 1.1334000000001732e-05, 1.1333999999994793e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.492" endtime="20201115 22:00:27.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.487" endtime="20201115 22:00:27.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.496" endtime="20201115 22:00:27.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.499" endtime="20201115 22:00:27.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.498" endtime="20201115 22:00:27.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.494" endtime="20201115 22:00:27.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.115" endtime="20201115 22:00:27.520"></status>
</kw>
<msg timestamp="20201115 22:00:27.520" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.529" endtime="20201115 22:00:27.559"></status>
</kw>
<msg timestamp="20201115 22:00:27.559" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.528" endtime="20201115 22:00:27.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.562" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.561" endtime="20201115 22:00:27.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.563" endtime="20201115 22:00:27.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.525" endtime="20201115 22:00:27.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.523" endtime="20201115 22:00:27.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.572" endtime="20201115 22:00:27.857"></status>
</kw>
<msg timestamp="20201115 22:00:27.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.571" endtime="20201115 22:00:27.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.862" endtime="20201115 22:00:27.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.870" endtime="20201115 22:00:27.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.568" endtime="20201115 22:00:27.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.566" endtime="20201115 22:00:27.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:27.877" level="INFO">${RESULT} = [{'time': 0.023437903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.023813083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:27.873" endtime="20201115 22:00:27.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:27.890" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:27.878" endtime="20201115 22:00:27.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.895" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:27.894" endtime="20201115 22:00:27.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.897" level="INFO">VALUE: [1.1389000000000538e-05, 1.1388999999997068e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1431000000002717e-05, 1.1403000000000107e-05, 1.1346999999998358e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1333999999998262e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1416999999999677e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1334000000001732e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1333000000002258e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1389000000000538e-05]</msg>
<status status="PASS" starttime="20201115 22:00:27.896" endtime="20201115 22:00:27.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.891" endtime="20201115 22:00:27.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.900" endtime="20201115 22:00:27.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:27.904" endtime="20201115 22:00:27.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.902" endtime="20201115 22:00:27.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.899" endtime="20201115 22:00:27.924"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.521" endtime="20201115 22:00:27.924"></status>
</kw>
<msg timestamp="20201115 22:00:27.925" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.934" endtime="20201115 22:00:27.962"></status>
</kw>
<msg timestamp="20201115 22:00:27.963" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.932" endtime="20201115 22:00:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:27.965" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:27.964" endtime="20201115 22:00:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.966" endtime="20201115 22:00:27.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.929" endtime="20201115 22:00:27.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.927" endtime="20201115 22:00:27.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:27.975" endtime="20201115 22:00:28.261"></status>
</kw>
<msg timestamp="20201115 22:00:28.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:27.974" endtime="20201115 22:00:28.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.265" endtime="20201115 22:00:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.273" endtime="20201115 22:00:28.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.971" endtime="20201115 22:00:28.276"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.970" endtime="20201115 22:00:28.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.280" level="INFO">${RESULT} = [{'time': 0.023040986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.023415167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.277" endtime="20201115 22:00:28.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.294" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.281" endtime="20201115 22:00:28.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.299" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.298" endtime="20201115 22:00:28.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.301" level="INFO">VALUE: [1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1389000000000538e-05, 1.1431000000002717e-05, 1.1416000000000204e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1401999999997164e-05, 1.1429999999999774e-05, 1.1346999999998358e-05, 1.1389000000000538e-05, 1.1457999999998913e-05, 1.1416000000000204e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1360999999997928e-05, 1.1416999999999677e-05, 1.1388999999997068e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1388999999993599e-05, 1.1403000000000107e-05, 1.1401999999993695e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1416000000000204e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1403000000000107e-05, 1.1458999999998387e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1346999999994889e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1387999999994125e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.1403000000000107e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.300" endtime="20201115 22:00:28.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.295" endtime="20201115 22:00:28.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.304" endtime="20201115 22:00:28.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.308" endtime="20201115 22:00:28.327"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.306" endtime="20201115 22:00:28.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.303" endtime="20201115 22:00:28.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:27.925" endtime="20201115 22:00:28.328"></status>
</kw>
<msg timestamp="20201115 22:00:28.329" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.337" endtime="20201115 22:00:28.367"></status>
</kw>
<msg timestamp="20201115 22:00:28.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.336" endtime="20201115 22:00:28.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.370" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 18', 'msg': ['overhead_timer_list set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.368" endtime="20201115 22:00:28.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.371" endtime="20201115 22:00:28.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.333" endtime="20201115 22:00:28.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.331" endtime="20201115 22:00:28.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.381" endtime="20201115 22:00:28.666"></status>
</kw>
<msg timestamp="20201115 22:00:28.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.379" endtime="20201115 22:00:28.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.671" endtime="20201115 22:00:28.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.679" endtime="20201115 22:00:28.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.377" endtime="20201115 22:00:28.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.375" endtime="20201115 22:00:28.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:28.686" level="INFO">${RESULT} = [{'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1416999999999677e-05, 'source_diff': 1.1416999999999677e-05}, {'time': 0.023019944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:28.683" endtime="20201115 22:00:28.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:28.700" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:28.687" endtime="20201115 22:00:28.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.704" level="INFO">NAME: 00-overhead-18-set</msg>
<status status="PASS" starttime="20201115 22:00:28.703" endtime="20201115 22:00:28.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.706" level="INFO">VALUE: [1.1416999999999677e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1332999999998788e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1374999999997498e-05, 1.1389000000000538e-05, 1.1402999999996638e-05, 1.1389000000000538e-05, 1.1332999999998788e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1361000000001398e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1374999999997498e-05, 1.1389000000000538e-05, 1.1444999999998817e-05, 1.1375000000000968e-05, 1.1416000000000204e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1333000000002258e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1444999999998817e-05, 1.1333000000002258e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416000000000204e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1416999999999677e-05]</msg>
<status status="PASS" starttime="20201115 22:00:28.705" endtime="20201115 22:00:28.707"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.700" endtime="20201115 22:00:28.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.710" endtime="20201115 22:00:28.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:28.713" endtime="20201115 22:00:28.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.712" endtime="20201115 22:00:28.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.708" endtime="20201115 22:00:28.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.329" endtime="20201115 22:00:28.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.709" endtime="20201115 22:00:28.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:26.708" endtime="20201115 22:00:28.734"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.736" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.745" endtime="20201115 22:00:28.775"></status>
</kw>
<msg timestamp="20201115 22:00:28.776" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.744" endtime="20201115 22:00:28.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:28.778" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:28.777" endtime="20201115 22:00:28.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.779" endtime="20201115 22:00:28.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.741" endtime="20201115 22:00:28.782"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.739" endtime="20201115 22:00:28.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:28.789" endtime="20201115 22:00:29.074"></status>
</kw>
<msg timestamp="20201115 22:00:29.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:28.787" endtime="20201115 22:00:29.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:29.078" endtime="20201115 22:00:29.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.087" endtime="20201115 22:00:29.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.785" endtime="20201115 22:00:29.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.783" endtime="20201115 22:00:29.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.093" level="INFO">${RESULT} = [{'time': 0.024911958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1722000000002203e-05, 'source_diff': 1.1722000000002203e-05}, {'time': 0.025304139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:29.090" endtime="20201115 22:00:29.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.107" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.094" endtime="20201115 22:00:29.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.111" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:29.110" endtime="20201115 22:00:29.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.114" level="INFO">VALUE: [1.1722000000002203e-05, 1.1735999999998303e-05, 1.1709000000002107e-05, 1.1749999999997873e-05, 1.1708000000002633e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1722000000002203e-05, 1.1639000000000788e-05, 1.1722999999998207e-05, 1.1723000000001677e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1666999999999927e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1722000000005672e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1722999999998207e-05, 1.1680000000000024e-05, 1.1763999999997443e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1709000000005576e-05, 1.1694999999999067e-05, 1.1709000000005576e-05, 1.1707999999999164e-05, 1.1666000000000454e-05, 1.1707999999999164e-05, 1.1750000000004812e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1708000000006102e-05, 1.1680999999999497e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708000000006102e-05, 1.1722999999998207e-05, 1.1721999999998733e-05, 1.1763999999997443e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1778000000003952e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.112" endtime="20201115 22:00:29.114"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.108" endtime="20201115 22:00:29.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.117" endtime="20201115 22:00:29.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.120" endtime="20201115 22:00:29.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.119" endtime="20201115 22:00:29.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.115" endtime="20201115 22:00:29.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.737" endtime="20201115 22:00:29.141"></status>
</kw>
<msg timestamp="20201115 22:00:29.141" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.150" endtime="20201115 22:00:29.180"></status>
</kw>
<msg timestamp="20201115 22:00:29.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.148" endtime="20201115 22:00:29.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.182" endtime="20201115 22:00:29.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.185" endtime="20201115 22:00:29.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.146" endtime="20201115 22:00:29.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.144" endtime="20201115 22:00:29.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.194" endtime="20201115 22:00:29.485"></status>
</kw>
<msg timestamp="20201115 22:00:29.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241075, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:29.193" endtime="20201115 22:00:29.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241075, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:00:29.495" endtime="20201115 22:00:29.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.513" endtime="20201115 22:00:29.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.190" endtime="20201115 22:00:29.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.189" endtime="20201115 22:00:29.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.528" level="INFO">${RESULT} = [{'time': 0.02241075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1750000000001343e-05, 'source_diff': 1.1750000000001343e-05}, {'time': 0.022802028, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:29.520" endtime="20201115 22:00:29.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.557" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.530" endtime="20201115 22:00:29.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.564" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:29.563" endtime="20201115 22:00:29.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.567" level="INFO">VALUE: [1.1750000000001343e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1708000000002633e-05, 1.1708000000002633e-05, 1.1694999999999067e-05, 1.1721999999998733e-05, 1.1680999999999497e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1749999999997873e-05, 1.1638999999997318e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1708000000006102e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1763999999997443e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1666999999999927e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1639000000000788e-05, 1.1722999999998207e-05, 1.1694999999999067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.565" endtime="20201115 22:00:29.567"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.559" endtime="20201115 22:00:29.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.570" endtime="20201115 22:00:29.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.573" endtime="20201115 22:00:29.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.572" endtime="20201115 22:00:29.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.568" endtime="20201115 22:00:29.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.142" endtime="20201115 22:00:29.594"></status>
</kw>
<msg timestamp="20201115 22:00:29.594" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.604" endtime="20201115 22:00:29.634"></status>
</kw>
<msg timestamp="20201115 22:00:29.635" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.602" endtime="20201115 22:00:29.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.637" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:29.636" endtime="20201115 22:00:29.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.638" endtime="20201115 22:00:29.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.600" endtime="20201115 22:00:29.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.597" endtime="20201115 22:00:29.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.648" endtime="20201115 22:00:29.934"></status>
</kw>
<msg timestamp="20201115 22:00:29.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:29.646" endtime="20201115 22:00:29.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:29.938" endtime="20201115 22:00:29.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.947" endtime="20201115 22:00:29.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.644" endtime="20201115 22:00:29.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.642" endtime="20201115 22:00:29.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:29.953" level="INFO">${RESULT} = [{'time': 0.022807, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1722000000002203e-05, 'source_diff': 1.1722000000002203e-05}, {'time': 0.023196486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:29.950" endtime="20201115 22:00:29.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:29.968" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:29.954" endtime="20201115 22:00:29.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.972" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:29.971" endtime="20201115 22:00:29.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:29.975" level="INFO">VALUE: [1.1722000000002203e-05, 1.1680000000000024e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1680000000000024e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1708000000002633e-05, 1.1694999999999067e-05, 1.1722000000002203e-05, 1.1709000000002107e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1750000000001343e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1708000000006102e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1707999999999164e-05, 1.1693999999999594e-05, 1.1721999999998733e-05, 1.1737000000004716e-05, 1.1625000000001218e-05, 1.1721999999998733e-05, 1.1723000000005146e-05, 1.1750000000004812e-05, 1.1721999999998733e-05, 1.1653000000000358e-05, 1.1707999999999164e-05, 1.1749999999997873e-05, 1.1680999999999497e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1666000000000454e-05, 1.1707999999999164e-05, 1.1694999999999067e-05]</msg>
<status status="PASS" starttime="20201115 22:00:29.973" endtime="20201115 22:00:29.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.968" endtime="20201115 22:00:29.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:29.978" endtime="20201115 22:00:29.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:29.982" endtime="20201115 22:00:30.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.980" endtime="20201115 22:00:30.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.976" endtime="20201115 22:00:30.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:29.595" endtime="20201115 22:00:30.002"></status>
</kw>
<msg timestamp="20201115 22:00:30.003" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.011" endtime="20201115 22:00:30.041"></status>
</kw>
<msg timestamp="20201115 22:00:30.041" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.010" endtime="20201115 22:00:30.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.044" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.042" endtime="20201115 22:00:30.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.045" endtime="20201115 22:00:30.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.007" endtime="20201115 22:00:30.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.005" endtime="20201115 22:00:30.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.055" endtime="20201115 22:00:30.339"></status>
</kw>
<msg timestamp="20201115 22:00:30.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.053" endtime="20201115 22:00:30.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.344" endtime="20201115 22:00:30.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.352" endtime="20201115 22:00:30.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.051" endtime="20201115 22:00:30.354"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.049" endtime="20201115 22:00:30.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.359" level="INFO">${RESULT} = [{'time': 0.022167542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.022555375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.355" endtime="20201115 22:00:30.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.372" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.360" endtime="20201115 22:00:30.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.376" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.375" endtime="20201115 22:00:30.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.379" level="INFO">VALUE: [1.1694999999999067e-05, 1.1721999999998733e-05, 1.1666999999999927e-05, 1.1736000000001773e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1665999999996984e-05, 1.1695000000002537e-05, 1.1722000000002203e-05, 1.1625000000001218e-05, 1.1721999999998733e-05, 1.1721999999998733e-05, 1.1708999999998637e-05, 1.1750000000001343e-05, 1.1695000000002537e-05, 1.1709000000002107e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1709000000002107e-05, 1.1709000000002107e-05, 1.1708000000002633e-05, 1.1694999999999067e-05, 1.1666999999999927e-05, 1.1722000000002203e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1694999999999067e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1666999999999927e-05, 1.1708999999998637e-05, 1.1708000000006102e-05, 1.1652000000000884e-05, 1.1708999999998637e-05, 1.1750000000004812e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1791000000004048e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1722999999998207e-05, 1.1721999999998733e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1693999999999594e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.377" endtime="20201115 22:00:30.380"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.373" endtime="20201115 22:00:30.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.383" endtime="20201115 22:00:30.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.386" endtime="20201115 22:00:30.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.384" endtime="20201115 22:00:30.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.381" endtime="20201115 22:00:30.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.003" endtime="20201115 22:00:30.406"></status>
</kw>
<msg timestamp="20201115 22:00:30.407" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.415" endtime="20201115 22:00:30.444"></status>
</kw>
<msg timestamp="20201115 22:00:30.445" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.414" endtime="20201115 22:00:30.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.447" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 19', 'msg': ['overhead_timer_list set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.446" endtime="20201115 22:00:30.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.448" endtime="20201115 22:00:30.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.411" endtime="20201115 22:00:30.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.409" endtime="20201115 22:00:30.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.458" endtime="20201115 22:00:30.744"></status>
</kw>
<msg timestamp="20201115 22:00:30.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.457" endtime="20201115 22:00:30.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.748" endtime="20201115 22:00:30.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.756" endtime="20201115 22:00:30.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.454" endtime="20201115 22:00:30.759"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.453" endtime="20201115 22:00:30.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:30.763" level="INFO">${RESULT} = [{'time': 0.022244403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.022632375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:30.760" endtime="20201115 22:00:30.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:30.776" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:30.764" endtime="20201115 22:00:30.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.781" level="INFO">NAME: 00-overhead-19-set</msg>
<status status="PASS" starttime="20201115 22:00:30.780" endtime="20201115 22:00:30.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.784" level="INFO">VALUE: [1.1639000000000788e-05, 1.1707999999999164e-05, 1.1721999999998733e-05, 1.1708000000002633e-05, 1.1652000000000884e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.1708999999998637e-05, 1.1749999999997873e-05, 1.1764000000000913e-05, 1.1693999999999594e-05, 1.1707999999999164e-05, 1.1722000000002203e-05, 1.1680999999999497e-05, 1.1722999999998207e-05, 1.1707999999999164e-05, 1.1735999999998303e-05, 1.1735999999998303e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1764000000000913e-05, 1.1708999999998637e-05, 1.1791000000000579e-05, 1.1707999999999164e-05, 1.1722000000005672e-05, 1.1763999999997443e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1723000000005146e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1708999999998637e-05, 1.1694999999999067e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1694999999999067e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.1722999999998207e-05, 1.1708999999998637e-05, 1.1693999999999594e-05, 1.1723000000005146e-05, 1.1680000000000024e-05, 1.1708999999998637e-05, 1.1709000000005576e-05, 1.1721999999998733e-05]</msg>
<status status="PASS" starttime="20201115 22:00:30.782" endtime="20201115 22:00:30.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.777" endtime="20201115 22:00:30.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.787" endtime="20201115 22:00:30.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:30.791" endtime="20201115 22:00:30.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.789" endtime="20201115 22:00:30.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.786" endtime="20201115 22:00:30.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.407" endtime="20201115 22:00:30.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.735" endtime="20201115 22:00:30.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:28.734" endtime="20201115 22:00:30.812"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.814" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.823" endtime="20201115 22:00:30.854"></status>
</kw>
<msg timestamp="20201115 22:00:30.854" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.821" endtime="20201115 22:00:30.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:30.857" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:30.855" endtime="20201115 22:00:30.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.858" endtime="20201115 22:00:30.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.818" endtime="20201115 22:00:30.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.816" endtime="20201115 22:00:30.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:30.867" endtime="20201115 22:00:31.153"></status>
</kw>
<msg timestamp="20201115 22:00:31.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:30.865" endtime="20201115 22:00:31.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024799319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.157" endtime="20201115 22:00:31.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.165" endtime="20201115 22:00:31.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.863" endtime="20201115 22:00:31.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.861" endtime="20201115 22:00:31.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.172" level="INFO">${RESULT} = [{'time': 0.024811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2097999999998582e-05, 'source_diff': 1.2097999999998582e-05}, {'time': 0.025220444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.168" endtime="20201115 22:00:31.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.185" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.173" endtime="20201115 22:00:31.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.190" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:31.189" endtime="20201115 22:00:31.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.192" level="INFO">VALUE: [1.2097999999998582e-05, 1.2027000000001259e-05, 1.2042000000000302e-05, 1.202699999999779e-05, 1.201299999999822e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.2014000000004632e-05, 1.2042000000003772e-05, 1.2056000000003342e-05, 1.204099999999736e-05, 1.2000000000005062e-05, 1.2013999999997693e-05, 1.2013999999997693e-05, 1.1986999999998027e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.202699999999779e-05, 1.1930999999999747e-05, 1.2028000000004202e-05, 1.204099999999736e-05, 1.1999999999998123e-05, 1.2027000000004728e-05, 1.1999999999998123e-05, 1.2028000000004202e-05, 1.2028000000004202e-05, 1.2014000000004632e-05, 1.2013000000005158e-05, 1.2042000000003772e-05, 1.2027999999997263e-05, 1.2027999999997263e-05, 1.1987000000004966e-05, 1.1971999999998983e-05, 1.2041000000004298e-05, 1.2069999999995973e-05, 1.1958999999998887e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2014000000004632e-05, 1.1985999999998553e-05, 1.204099999999736e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.191" endtime="20201115 22:00:31.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.186" endtime="20201115 22:00:31.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.196" endtime="20201115 22:00:31.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.199" endtime="20201115 22:00:31.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.197" endtime="20201115 22:00:31.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.194" endtime="20201115 22:00:31.219"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.814" endtime="20201115 22:00:31.220"></status>
</kw>
<msg timestamp="20201115 22:00:31.220" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.229" endtime="20201115 22:00:31.260"></status>
</kw>
<msg timestamp="20201115 22:00:31.260" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.227" endtime="20201115 22:00:31.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.263" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.261" endtime="20201115 22:00:31.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.264" endtime="20201115 22:00:31.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.225" endtime="20201115 22:00:31.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.222" endtime="20201115 22:00:31.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.273" endtime="20201115 22:00:31.560"></status>
</kw>
<msg timestamp="20201115 22:00:31.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.272" endtime="20201115 22:00:31.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.564" endtime="20201115 22:00:31.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.572" endtime="20201115 22:00:31.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.269" endtime="20201115 22:00:31.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.268" endtime="20201115 22:00:31.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.579" level="INFO">${RESULT} = [{'time': 0.022380611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.022793181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.575" endtime="20201115 22:00:31.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:31.593" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.580" endtime="20201115 22:00:31.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.598" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:31.597" endtime="20201115 22:00:31.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.601" level="INFO">VALUE: [1.2028000000000733e-05, 1.2013999999997693e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.2027000000001259e-05, 1.2042000000000302e-05, 1.2000000000001593e-05, 1.2041000000000829e-05, 1.2028000000000733e-05, 1.202699999999779e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2000000000001593e-05, 1.2028000000000733e-05, 1.1973000000001927e-05, 1.1999999999998123e-05, 1.2027999999997263e-05, 1.2041999999996833e-05, 1.2014000000004632e-05, 1.1999999999998123e-05, 1.2014000000004632e-05, 1.1971999999998983e-05, 1.2028000000004202e-05, 1.1943999999999844e-05, 1.2013999999997693e-05, 1.2013999999997693e-05, 1.1985999999998553e-05, 1.1999999999998123e-05, 1.20689999999965e-05, 1.1985999999998553e-05, 1.2041999999996833e-05, 1.2013999999997693e-05, 1.201299999999822e-05, 1.2028000000004202e-05, 1.2027999999997263e-05, 1.2028000000004202e-05, 1.1999999999998123e-05, 1.2028000000004202e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.201299999999822e-05, 1.2027999999997263e-05, 1.202699999999779e-05, 1.2014000000004632e-05]</msg>
<status status="PASS" starttime="20201115 22:00:31.599" endtime="20201115 22:00:31.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.595" endtime="20201115 22:00:31.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.604" endtime="20201115 22:00:31.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:31.607" endtime="20201115 22:00:31.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.606" endtime="20201115 22:00:31.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.602" endtime="20201115 22:00:31.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.220" endtime="20201115 22:00:31.628"></status>
</kw>
<msg timestamp="20201115 22:00:31.628" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.637" endtime="20201115 22:00:31.668"></status>
</kw>
<msg timestamp="20201115 22:00:31.668" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.635" endtime="20201115 22:00:31.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.671" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:31.669" endtime="20201115 22:00:31.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.672" endtime="20201115 22:00:31.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.633" endtime="20201115 22:00:31.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.631" endtime="20201115 22:00:31.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.682" endtime="20201115 22:00:31.968"></status>
</kw>
<msg timestamp="20201115 22:00:31.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.680" endtime="20201115 22:00:31.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:31.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:31.972" endtime="20201115 22:00:31.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:31.980" endtime="20201115 22:00:31.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.678" endtime="20201115 22:00:31.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.676" endtime="20201115 22:00:31.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:31.988" level="INFO">${RESULT} = [{'time': 0.022244222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.022657819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:31.984" endtime="20201115 22:00:31.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.001" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:31.989" endtime="20201115 22:00:32.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.005" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.004" endtime="20201115 22:00:32.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.008" level="INFO">VALUE: [1.2028000000000733e-05, 1.201299999999822e-05, 1.2068999999999969e-05, 1.2028000000000733e-05, 1.2096999999999108e-05, 1.2028000000000733e-05, 1.1999999999998123e-05, 1.2042000000000302e-05, 1.2013999999997693e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2000000000001593e-05, 1.2041999999996833e-05, 1.1999999999998123e-05, 1.2055999999999872e-05, 1.1999999999998123e-05, 1.2014000000001163e-05, 1.2014000000001163e-05, 1.1971999999998983e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.202699999999779e-05, 1.2013999999997693e-05, 1.1986000000005492e-05, 1.2027000000004728e-05, 1.2013999999997693e-05, 1.2041999999996833e-05, 1.2028000000004202e-05, 1.2013999999997693e-05, 1.2027000000004728e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2069999999995973e-05, 1.2014000000004632e-05, 1.2028000000004202e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.201299999999822e-05, 1.2027999999997263e-05, 1.2027999999997263e-05, 1.2028000000004202e-05, 1.2041999999996833e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2028000000004202e-05, 1.2042000000003772e-05, 1.1958999999998887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.006" endtime="20201115 22:00:32.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.002" endtime="20201115 22:00:32.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.011" endtime="20201115 22:00:32.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.014" endtime="20201115 22:00:32.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.013" endtime="20201115 22:00:32.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.009" endtime="20201115 22:00:32.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:31.628" endtime="20201115 22:00:32.035"></status>
</kw>
<msg timestamp="20201115 22:00:32.035" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.044" endtime="20201115 22:00:32.075"></status>
</kw>
<msg timestamp="20201115 22:00:32.075" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.042" endtime="20201115 22:00:32.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.078" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.076" endtime="20201115 22:00:32.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.079" endtime="20201115 22:00:32.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.040" endtime="20201115 22:00:32.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.038" endtime="20201115 22:00:32.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.089" endtime="20201115 22:00:32.374"></status>
</kw>
<msg timestamp="20201115 22:00:32.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.087" endtime="20201115 22:00:32.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.378" endtime="20201115 22:00:32.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.387" endtime="20201115 22:00:32.388"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.085" endtime="20201115 22:00:32.389"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.083" endtime="20201115 22:00:32.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.394" level="INFO">${RESULT} = [{'time': 0.022232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.022639056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.390" endtime="20201115 22:00:32.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.407" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.395" endtime="20201115 22:00:32.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.412" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.410" endtime="20201115 22:00:32.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.414" level="INFO">VALUE: [1.1943999999999844e-05, 1.2028000000000733e-05, 1.2041000000000829e-05, 1.2027999999997263e-05, 1.1985999999998553e-05, 1.2028000000000733e-05, 1.2014000000001163e-05, 1.2000000000001593e-05, 1.2096999999999108e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.202699999999779e-05, 1.204099999999736e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2028000000000733e-05, 1.2027000000001259e-05, 1.1985999999998553e-05, 1.2027999999997263e-05, 1.2027000000001259e-05, 1.2014000000001163e-05, 1.2027999999997263e-05, 1.2027999999997263e-05, 1.1999999999998123e-05, 1.2027999999997263e-05, 1.202699999999779e-05, 1.2069000000003438e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2042000000003772e-05, 1.2014000000004632e-05, 1.202699999999779e-05, 1.2028000000004202e-05, 1.202699999999779e-05, 1.2027000000004728e-05, 1.1999999999998123e-05, 1.204099999999736e-05, 1.2028000000004202e-05, 1.2028000000004202e-05, 1.205499999999693e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2041999999996833e-05, 1.2028000000004202e-05, 1.2055999999996403e-05, 1.2027999999997263e-05, 1.2041000000004298e-05, 1.2027999999997263e-05, 1.2013999999997693e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.413" endtime="20201115 22:00:32.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.408" endtime="20201115 22:00:32.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.417" endtime="20201115 22:00:32.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.421" endtime="20201115 22:00:32.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.419" endtime="20201115 22:00:32.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.415" endtime="20201115 22:00:32.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.036" endtime="20201115 22:00:32.441"></status>
</kw>
<msg timestamp="20201115 22:00:32.442" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.450" endtime="20201115 22:00:32.481"></status>
</kw>
<msg timestamp="20201115 22:00:32.482" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.449" endtime="20201115 22:00:32.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.484" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 20', 'msg': ['overhead_timer_list set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.483" endtime="20201115 22:00:32.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.485" endtime="20201115 22:00:32.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.446" endtime="20201115 22:00:32.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.444" endtime="20201115 22:00:32.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.495" endtime="20201115 22:00:32.781"></status>
</kw>
<msg timestamp="20201115 22:00:32.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.494" endtime="20201115 22:00:32.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.786" endtime="20201115 22:00:32.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.794" endtime="20201115 22:00:32.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.491" endtime="20201115 22:00:32.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.489" endtime="20201115 22:00:32.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:32.801" level="INFO">${RESULT} = [{'time': 0.022736347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2041000000000829e-05, 'source_diff': 1.2041000000000829e-05}, {'time': 0.023148083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:32.798" endtime="20201115 22:00:32.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:32.814" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:32.802" endtime="20201115 22:00:32.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.819" level="INFO">NAME: 00-overhead-20-set</msg>
<status status="PASS" starttime="20201115 22:00:32.818" endtime="20201115 22:00:32.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.821" level="INFO">VALUE: [1.2041000000000829e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2027000000001259e-05, 1.2028000000000733e-05, 1.1999999999998123e-05, 1.1972999999998457e-05, 1.2027999999997263e-05, 1.2014000000001163e-05, 1.2013999999997693e-05, 1.2055999999999872e-05, 1.2028000000000733e-05, 1.2013000000001689e-05, 1.2055999999999872e-05, 1.2014000000001163e-05, 1.202699999999779e-05, 1.2000000000001593e-05, 1.2041000000000829e-05, 1.2014000000001163e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2000000000005062e-05, 1.2027999999997263e-05, 1.1999999999998123e-05, 1.2014000000004632e-05, 1.1943999999999844e-05, 1.2041999999996833e-05, 1.2027999999997263e-05, 1.1972999999998457e-05, 1.2027999999997263e-05, 1.2042000000003772e-05, 1.2027999999997263e-05, 1.20689999999965e-05, 1.202699999999779e-05, 1.2014000000004632e-05, 1.202699999999779e-05, 1.2042000000003772e-05, 1.2027999999997263e-05, 1.1971999999998983e-05, 1.2056000000003342e-05, 1.2056000000003342e-05, 1.2013000000005158e-05, 1.2027999999997263e-05, 1.2097000000002578e-05, 1.2028000000004202e-05, 1.2027999999997263e-05, 1.2013999999997693e-05, 1.2027999999997263e-05, 1.2027999999997263e-05]</msg>
<status status="PASS" starttime="20201115 22:00:32.820" endtime="20201115 22:00:32.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.815" endtime="20201115 22:00:32.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.824" endtime="20201115 22:00:32.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:32.828" endtime="20201115 22:00:32.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.826" endtime="20201115 22:00:32.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.823" endtime="20201115 22:00:32.848"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.442" endtime="20201115 22:00:32.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.813" endtime="20201115 22:00:32.849"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:30.812" endtime="20201115 22:00:32.849"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.851" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.860" endtime="20201115 22:00:32.891"></status>
</kw>
<msg timestamp="20201115 22:00:32.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.859" endtime="20201115 22:00:32.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:32.894" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:32.893" endtime="20201115 22:00:32.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.895" endtime="20201115 22:00:32.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.856" endtime="20201115 22:00:32.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.854" endtime="20201115 22:00:32.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:32.905" endtime="20201115 22:00:33.191"></status>
</kw>
<msg timestamp="20201115 22:00:33.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024633958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:32.903" endtime="20201115 22:00:33.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024633958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.195" endtime="20201115 22:00:33.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.203" endtime="20201115 22:00:33.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.901" endtime="20201115 22:00:33.205"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.899" endtime="20201115 22:00:33.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.210" level="INFO">${RESULT} = [{'time': 0.024646292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2333999999999262e-05, 'source_diff': 1.2333999999999262e-05}, {'time': 0.025073986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:33.206" endtime="20201115 22:00:33.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.224" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.211" endtime="20201115 22:00:33.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.229" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:33.227" endtime="20201115 22:00:33.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.231" level="INFO">VALUE: [1.2333999999999262e-05, 1.2305000000000649e-05, 1.2333999999999262e-05, 1.2346999999999358e-05, 1.2334000000002732e-05, 1.2332999999999789e-05, 1.2319000000000219e-05, 1.2360999999998928e-05, 1.2374999999998498e-05, 1.2305000000000649e-05, 1.2306000000000122e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2319999999999692e-05, 1.2346999999999358e-05, 1.2332999999999789e-05, 1.2332999999996319e-05, 1.2347000000002828e-05, 1.2319000000003688e-05, 1.2375000000001968e-05, 1.2332999999996319e-05, 1.2333999999995793e-05, 1.2348000000002302e-05, 1.2333000000003258e-05, 1.229099999999761e-05, 1.2360999999995459e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2333999999995793e-05, 1.2320000000003162e-05, 1.2332999999996319e-05, 1.2305999999996653e-05, 1.2361000000002398e-05, 1.2346999999995889e-05, 1.2346999999995889e-05, 1.2346999999995889e-05, 1.2333999999995793e-05, 1.2291999999997083e-05, 1.2334000000002732e-05, 1.2320000000003162e-05, 1.2333999999995793e-05, 1.2333000000003258e-05, 1.2333999999995793e-05, 1.2334000000002732e-05, 1.2361000000002398e-05, 1.2333999999995793e-05, 1.2332999999996319e-05, 1.2333999999995793e-05, 1.230499999999718e-05, 1.2333000000003258e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.230" endtime="20201115 22:00:33.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.225" endtime="20201115 22:00:33.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.234" endtime="20201115 22:00:33.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.238" endtime="20201115 22:00:33.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.236" endtime="20201115 22:00:33.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.233" endtime="20201115 22:00:33.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.852" endtime="20201115 22:00:33.258"></status>
</kw>
<msg timestamp="20201115 22:00:33.258" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.267" endtime="20201115 22:00:33.299"></status>
</kw>
<msg timestamp="20201115 22:00:33.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.266" endtime="20201115 22:00:33.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.301" endtime="20201115 22:00:33.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.304" endtime="20201115 22:00:33.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.263" endtime="20201115 22:00:33.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.261" endtime="20201115 22:00:33.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.314" endtime="20201115 22:00:33.599"></status>
</kw>
<msg timestamp="20201115 22:00:33.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.312" endtime="20201115 22:00:33.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.603" endtime="20201115 22:00:33.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.611" endtime="20201115 22:00:33.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.309" endtime="20201115 22:00:33.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.308" endtime="20201115 22:00:33.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:33.618" level="INFO">${RESULT} = [{'time': 0.022095708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.022528028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:33.615" endtime="20201115 22:00:33.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:33.632" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:33.619" endtime="20201115 22:00:33.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.636" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:33.635" endtime="20201115 22:00:33.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.638" level="INFO">VALUE: [1.229099999999761e-05, 1.2333999999999262e-05, 1.2346999999999358e-05, 1.2332999999999789e-05, 1.2389000000001538e-05, 1.2332999999999789e-05, 1.2333999999999262e-05, 1.2334000000002732e-05, 1.2417000000000677e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2333999999999262e-05, 1.2333999999999262e-05, 1.2319000000000219e-05, 1.2319000000000219e-05, 1.2346999999999358e-05, 1.2388999999998068e-05, 1.2334000000002732e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2374999999998498e-05, 1.2332999999999789e-05, 1.2332999999996319e-05, 1.2361000000002398e-05, 1.2333000000003258e-05, 1.2291999999997083e-05, 1.2346999999995889e-05, 1.231899999999675e-05, 1.2361000000002398e-05, 1.2264000000004882e-05, 1.2333000000003258e-05, 1.2334000000002732e-05, 1.2417000000000677e-05, 1.2401999999994695e-05, 1.2332999999996319e-05, 1.2388000000002064e-05, 1.2306000000003592e-05, 1.2346999999995889e-05, 1.2347000000002828e-05, 1.2305999999996653e-05, 1.2333000000003258e-05, 1.2333000000003258e-05, 1.2346999999995889e-05, 1.2320000000003162e-05, 1.2332999999996319e-05, 1.2347000000002828e-05, 1.2333000000003258e-05, 1.226299999999847e-05, 1.2333000000003258e-05, 1.2347000000002828e-05]</msg>
<status status="PASS" starttime="20201115 22:00:33.637" endtime="20201115 22:00:33.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.632" endtime="20201115 22:00:33.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.642" endtime="20201115 22:00:33.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:33.645" endtime="20201115 22:00:33.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.643" endtime="20201115 22:00:33.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.640" endtime="20201115 22:00:33.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.259" endtime="20201115 22:00:33.666"></status>
</kw>
<msg timestamp="20201115 22:00:33.666" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.680" endtime="20201115 22:00:33.712"></status>
</kw>
<msg timestamp="20201115 22:00:33.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.678" endtime="20201115 22:00:33.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:33.715" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:33.713" endtime="20201115 22:00:33.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.716" endtime="20201115 22:00:33.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.675" endtime="20201115 22:00:33.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.668" endtime="20201115 22:00:33.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:33.726" endtime="20201115 22:00:34.012"></status>
</kw>
<msg timestamp="20201115 22:00:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027619972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:33.724" endtime="20201115 22:00:34.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027619972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.016" endtime="20201115 22:00:34.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.024" endtime="20201115 22:00:34.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.722" endtime="20201115 22:00:34.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.720" endtime="20201115 22:00:34.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.031" level="INFO">${RESULT} = [{'time': 0.027619972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.028056819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.028" endtime="20201115 22:00:34.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.045" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.032" endtime="20201115 22:00:34.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.049" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.048" endtime="20201115 22:00:34.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.052" level="INFO">VALUE: [1.2346999999999358e-05, 1.2332999999999789e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2278000000000983e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2333999999999262e-05, 1.229099999999761e-05, 1.2346999999995889e-05, 1.2332999999996319e-05, 1.2347000000002828e-05, 1.2333000000003258e-05, 1.2346999999995889e-05, 1.2347000000002828e-05, 1.2360999999995459e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2333000000003258e-05, 1.2346999999995889e-05, 1.2277999999997513e-05, 1.2417000000000677e-05, 1.2360999999995459e-05, 1.2402000000001634e-05, 1.2348000000002302e-05, 1.2334000000002732e-05, 1.2348000000002302e-05, 1.2375000000001968e-05, 1.2334000000002732e-05, 1.2334000000002732e-05, 1.2334000000002732e-05, 1.2347000000002828e-05, 1.2347999999995363e-05, 1.2305000000004118e-05, 1.2333999999995793e-05, 1.2320000000003162e-05, 1.2332999999996319e-05, 1.2360999999995459e-05, 1.2333000000003258e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2319000000003688e-05, 1.2402999999994169e-05, 1.2320000000003162e-05, 1.2305999999996653e-05, 1.2346999999995889e-05, 1.2347999999995363e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.050" endtime="20201115 22:00:34.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.045" endtime="20201115 22:00:34.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.055" endtime="20201115 22:00:34.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.058" endtime="20201115 22:00:34.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.056" endtime="20201115 22:00:34.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.053" endtime="20201115 22:00:34.079"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:33.666" endtime="20201115 22:00:34.079"></status>
</kw>
<msg timestamp="20201115 22:00:34.079" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.088" endtime="20201115 22:00:34.121"></status>
</kw>
<msg timestamp="20201115 22:00:34.121" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.087" endtime="20201115 22:00:34.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.124" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.122" endtime="20201115 22:00:34.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.125" endtime="20201115 22:00:34.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.084" endtime="20201115 22:00:34.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.082" endtime="20201115 22:00:34.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.135" endtime="20201115 22:00:34.420"></status>
</kw>
<msg timestamp="20201115 22:00:34.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.133" endtime="20201115 22:00:34.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.424" endtime="20201115 22:00:34.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.433" endtime="20201115 22:00:34.434"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.131" endtime="20201115 22:00:34.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.129" endtime="20201115 22:00:34.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.439" level="INFO">${RESULT} = [{'time': 0.022861847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.023293875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.436" endtime="20201115 22:00:34.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.453" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.440" endtime="20201115 22:00:34.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.457" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.456" endtime="20201115 22:00:34.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.460" level="INFO">VALUE: [1.2278000000000983e-05, 1.2346999999999358e-05, 1.2332999999999789e-05, 1.2347999999998832e-05, 1.2264000000001413e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2348000000002302e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2332999999999789e-05, 1.2319000000000219e-05, 1.2346999999999358e-05, 1.2347999999998832e-05, 1.2346999999999358e-05, 1.2319999999999692e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2333999999999262e-05, 1.2332999999999789e-05, 1.2319000000003688e-05, 1.2348000000002302e-05, 1.2333000000003258e-05, 1.2320000000003162e-05, 1.2277000000004978e-05, 1.2277999999997513e-05, 1.2347999999995363e-05, 1.2319000000003688e-05, 1.2346999999995889e-05, 1.2332999999996319e-05, 1.2346999999995889e-05, 1.2347999999995363e-05, 1.2361999999994933e-05, 1.2333999999995793e-05, 1.2347000000002828e-05, 1.2319000000003688e-05, 1.2333000000003258e-05, 1.2320000000003162e-05, 1.2333000000003258e-05, 1.2362000000001871e-05, 1.2332999999996319e-05, 1.2332999999996319e-05, 1.2348000000002302e-05, 1.2332999999996319e-05, 1.2332999999996319e-05, 1.2361999999994933e-05, 1.2319999999996223e-05, 1.2347000000002828e-05, 1.2333000000003258e-05, 1.2333000000003258e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.458" endtime="20201115 22:00:34.460"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.454" endtime="20201115 22:00:34.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.463" endtime="20201115 22:00:34.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.467" endtime="20201115 22:00:34.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.465" endtime="20201115 22:00:34.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.462" endtime="20201115 22:00:34.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.080" endtime="20201115 22:00:34.487"></status>
</kw>
<msg timestamp="20201115 22:00:34.488" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.496" endtime="20201115 22:00:34.528"></status>
</kw>
<msg timestamp="20201115 22:00:34.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.495" endtime="20201115 22:00:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 21', 'msg': ['overhead_timer_list set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.530" endtime="20201115 22:00:34.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.532" endtime="20201115 22:00:34.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.492" endtime="20201115 22:00:34.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.490" endtime="20201115 22:00:34.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.543" endtime="20201115 22:00:34.829"></status>
</kw>
<msg timestamp="20201115 22:00:34.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.542" endtime="20201115 22:00:34.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.834" endtime="20201115 22:00:34.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.842" endtime="20201115 22:00:34.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.539" endtime="20201115 22:00:34.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.537" endtime="20201115 22:00:34.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:34.849" level="INFO">${RESULT} = [{'time': 0.022217153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.022644486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:34.845" endtime="20201115 22:00:34.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:34.863" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:34.850" endtime="20201115 22:00:34.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.867" level="INFO">NAME: 00-overhead-21-set</msg>
<status status="PASS" starttime="20201115 22:00:34.866" endtime="20201115 22:00:34.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.870" level="INFO">VALUE: [1.2346999999999358e-05, 1.2332999999999789e-05, 1.2347000000002828e-05, 1.2333999999999262e-05, 1.2346999999999358e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2319000000000219e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2332999999999789e-05, 1.2319000000000219e-05, 1.2346999999999358e-05, 1.2332999999999789e-05, 1.2319000000000219e-05, 1.2264000000001413e-05, 1.2346999999999358e-05, 1.2319000000000219e-05, 1.2333999999999262e-05, 1.2319000000003688e-05, 1.2332999999996319e-05, 1.2346999999995889e-05, 1.2332999999996319e-05, 1.2333000000003258e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2334000000002732e-05, 1.2332999999996319e-05, 1.2403000000001108e-05, 1.2333000000003258e-05, 1.2348000000002302e-05, 1.2347000000002828e-05, 1.2346999999995889e-05, 1.2361000000002398e-05, 1.2277000000004978e-05, 1.2319000000003688e-05, 1.231899999999675e-05, 1.2320000000003162e-05, 1.2333999999995793e-05, 1.2305000000004118e-05, 1.2333000000003258e-05, 1.2332999999996319e-05, 1.2334000000002732e-05, 1.2333999999995793e-05, 1.2264000000004882e-05, 1.2332999999996319e-05, 1.2332999999996319e-05, 1.2332999999996319e-05]</msg>
<status status="PASS" starttime="20201115 22:00:34.868" endtime="20201115 22:00:34.871"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.864" endtime="20201115 22:00:34.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.873" endtime="20201115 22:00:34.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:34.877" endtime="20201115 22:00:34.896"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.875" endtime="20201115 22:00:34.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.872" endtime="20201115 22:00:34.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.488" endtime="20201115 22:00:34.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.850" endtime="20201115 22:00:34.898"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:32.850" endtime="20201115 22:00:34.898"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.900" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.909" endtime="20201115 22:00:34.942"></status>
</kw>
<msg timestamp="20201115 22:00:34.943" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.907" endtime="20201115 22:00:34.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:34.945" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:34.944" endtime="20201115 22:00:34.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.946" endtime="20201115 22:00:34.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.905" endtime="20201115 22:00:34.948"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.903" endtime="20201115 22:00:34.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:34.955" endtime="20201115 22:00:35.250"></status>
</kw>
<msg timestamp="20201115 22:00:35.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024575111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:34.954" endtime="20201115 22:00:35.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024575111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.259" endtime="20201115 22:00:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.277" endtime="20201115 22:00:35.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.951" endtime="20201115 22:00:35.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.949" endtime="20201115 22:00:35.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.292" level="INFO">${RESULT} = [{'time': 0.024575111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.025030625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.284" endtime="20201115 22:00:35.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.321" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.294" endtime="20201115 22:00:35.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.326" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:35.325" endtime="20201115 22:00:35.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.329" level="INFO">VALUE: [1.2708000000000164e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.2637999999998845e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2638999999998318e-05, 1.2667000000000928e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2651999999994945e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2721999999999734e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2638999999994849e-05, 1.2667000000000928e-05, 1.2653000000001358e-05, 1.2652999999994419e-05, 1.2584000000002982e-05, 1.2639000000001788e-05, 1.2665999999994515e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2695000000000067e-05, 1.2624999999995279e-05, 1.2653000000001358e-05, 1.2652999999994419e-05, 1.2666000000001454e-05, 1.2639000000001788e-05, 1.2610999999995709e-05, 1.2721999999999734e-05, 1.2666999999993989e-05, 1.2611000000002648e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2625000000002218e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.327" endtime="20201115 22:00:35.329"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.322" endtime="20201115 22:00:35.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.332" endtime="20201115 22:00:35.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.336" endtime="20201115 22:00:35.355"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.334" endtime="20201115 22:00:35.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.331" endtime="20201115 22:00:35.356"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.901" endtime="20201115 22:00:35.356"></status>
</kw>
<msg timestamp="20201115 22:00:35.356" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.365" endtime="20201115 22:00:35.399"></status>
</kw>
<msg timestamp="20201115 22:00:35.399" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.364" endtime="20201115 22:00:35.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.402" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.400" endtime="20201115 22:00:35.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.403" endtime="20201115 22:00:35.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.361" endtime="20201115 22:00:35.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.359" endtime="20201115 22:00:35.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.413" endtime="20201115 22:00:35.699"></status>
</kw>
<msg timestamp="20201115 22:00:35.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.411" endtime="20201115 22:00:35.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:35.703" endtime="20201115 22:00:35.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.712" endtime="20201115 22:00:35.713"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.408" endtime="20201115 22:00:35.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.407" endtime="20201115 22:00:35.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:35.718" level="INFO">${RESULT} = [{'time': 0.022365125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.022817069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:35.715" endtime="20201115 22:00:35.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:35.732" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:35.719" endtime="20201115 22:00:35.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.737" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:35.736" endtime="20201115 22:00:35.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.739" level="INFO">VALUE: [1.2638999999998318e-05, 1.2679999999997554e-05, 1.2653000000001358e-05, 1.2611000000002648e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2665999999997984e-05, 1.2652000000001884e-05, 1.2638999999998318e-05, 1.2652999999997888e-05, 1.2652999999997888e-05, 1.2695000000000067e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2708999999999637e-05, 1.2637999999998845e-05, 1.2721999999999734e-05, 1.2651999999998415e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2624999999995279e-05, 1.2667000000000928e-05, 1.2651999999994945e-05, 1.2639000000001788e-05, 1.2611000000002648e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2652999999994419e-05, 1.2625000000002218e-05, 1.2652000000001884e-05, 1.2666000000001454e-05, 1.2610999999995709e-05, 1.2638999999994849e-05, 1.2639000000001788e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2597000000003078e-05, 1.2708000000000164e-05, 1.2638999999994849e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2681000000000497e-05, 1.2653000000001358e-05, 1.2708000000000164e-05, 1.2665999999994515e-05, 1.2610999999995709e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2652999999994419e-05]</msg>
<status status="PASS" starttime="20201115 22:00:35.738" endtime="20201115 22:00:35.740"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.733" endtime="20201115 22:00:35.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.742" endtime="20201115 22:00:35.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:35.746" endtime="20201115 22:00:35.765"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.744" endtime="20201115 22:00:35.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.741" endtime="20201115 22:00:35.766"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.357" endtime="20201115 22:00:35.766"></status>
</kw>
<msg timestamp="20201115 22:00:35.767" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.775" endtime="20201115 22:00:35.807"></status>
</kw>
<msg timestamp="20201115 22:00:35.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.774" endtime="20201115 22:00:35.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:35.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:35.809" endtime="20201115 22:00:35.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.811" endtime="20201115 22:00:35.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.771" endtime="20201115 22:00:35.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.769" endtime="20201115 22:00:35.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:35.821" endtime="20201115 22:00:36.123"></status>
</kw>
<msg timestamp="20201115 22:00:36.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:35.820" endtime="20201115 22:00:36.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:36.131" endtime="20201115 22:00:36.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.139" endtime="20201115 22:00:36.141"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.817" endtime="20201115 22:00:36.142"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.816" endtime="20201115 22:00:36.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.147" level="INFO">${RESULT} = [{'time': 0.022394639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639000000001788e-05, 'source_diff': 1.2639000000001788e-05}, {'time': 0.022846389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.143" endtime="20201115 22:00:36.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.160" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.147" endtime="20201115 22:00:36.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.164" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.163" endtime="20201115 22:00:36.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.167" level="INFO">VALUE: [1.2639000000001788e-05, 1.2653000000001358e-05, 1.2667000000000928e-05, 1.2653000000001358e-05, 1.2652999999997888e-05, 1.2667000000000928e-05, 1.2611000000002648e-05, 1.2652000000001884e-05, 1.2638999999998318e-05, 1.2667000000000928e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2680000000001024e-05, 1.2638999999998318e-05, 1.2652999999997888e-05, 1.2681000000000497e-05, 1.2667000000000928e-05, 1.2637999999998845e-05, 1.2721999999999734e-05, 1.2694000000000594e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2652000000001884e-05, 1.2638999999994849e-05, 1.2597000000003078e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2624999999995279e-05, 1.2638000000002314e-05, 1.2638999999994849e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2665999999994515e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2624999999995279e-05, 1.2638999999994849e-05, 1.2639000000001788e-05, 1.2639000000001788e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.165" endtime="20201115 22:00:36.167"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.161" endtime="20201115 22:00:36.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.170" endtime="20201115 22:00:36.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.173" endtime="20201115 22:00:36.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.172" endtime="20201115 22:00:36.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.168" endtime="20201115 22:00:36.194"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:35.767" endtime="20201115 22:00:36.194"></status>
</kw>
<msg timestamp="20201115 22:00:36.194" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.203" endtime="20201115 22:00:36.236"></status>
</kw>
<msg timestamp="20201115 22:00:36.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.201" endtime="20201115 22:00:36.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.239" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.237" endtime="20201115 22:00:36.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.240" endtime="20201115 22:00:36.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.199" endtime="20201115 22:00:36.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.197" endtime="20201115 22:00:36.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.250" endtime="20201115 22:00:36.538"></status>
</kw>
<msg timestamp="20201115 22:00:36.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.248" endtime="20201115 22:00:36.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.542" endtime="20201115 22:00:36.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.551" endtime="20201115 22:00:36.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.246" endtime="20201115 22:00:36.553"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.244" endtime="20201115 22:00:36.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.558" level="INFO">${RESULT} = [{'time': 0.022312403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639000000001788e-05, 'source_diff': 1.2639000000001788e-05}, {'time': 0.022769139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.554" endtime="20201115 22:00:36.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.572" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.559" endtime="20201115 22:00:36.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.577" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.576" endtime="20201115 22:00:36.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.580" level="INFO">VALUE: [1.2639000000001788e-05, 1.2569999999999942e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2665999999997984e-05, 1.2638999999998318e-05, 1.2681000000000497e-05, 1.2652999999997888e-05, 1.2638999999998318e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2611000000002648e-05, 1.2653000000001358e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2653000000001358e-05, 1.2708000000000164e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2638000000002314e-05, 1.2639000000001788e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2638999999994849e-05, 1.2666000000001454e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2637999999995375e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2582999999996569e-05, 1.2666000000001454e-05, 1.2681000000000497e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2652999999994419e-05, 1.2652000000001884e-05, 1.2653000000001358e-05, 1.2637999999995375e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.578" endtime="20201115 22:00:36.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.573" endtime="20201115 22:00:36.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.583" endtime="20201115 22:00:36.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.587" endtime="20201115 22:00:36.606"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.585" endtime="20201115 22:00:36.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.582" endtime="20201115 22:00:36.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.195" endtime="20201115 22:00:36.608"></status>
</kw>
<msg timestamp="20201115 22:00:36.608" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.617" endtime="20201115 22:00:36.650"></status>
</kw>
<msg timestamp="20201115 22:00:36.650" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.615" endtime="20201115 22:00:36.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.653" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 22', 'msg': ['overhead_timer_list set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:36.651" endtime="20201115 22:00:36.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.654" endtime="20201115 22:00:36.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.613" endtime="20201115 22:00:36.657"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.610" endtime="20201115 22:00:36.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.664" endtime="20201115 22:00:36.950"></status>
</kw>
<msg timestamp="20201115 22:00:36.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.662" endtime="20201115 22:00:36.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:36.955" endtime="20201115 22:00:36.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.963" endtime="20201115 22:00:36.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.659" endtime="20201115 22:00:36.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.658" endtime="20201115 22:00:36.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:36.970" level="INFO">${RESULT} = [{'time': 0.022332569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2651999999998415e-05, 'source_diff': 1.2651999999998415e-05}, {'time': 0.022780139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:36.966" endtime="20201115 22:00:36.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:36.983" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:36.971" endtime="20201115 22:00:36.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.988" level="INFO">NAME: 00-overhead-22-set</msg>
<status status="PASS" starttime="20201115 22:00:36.987" endtime="20201115 22:00:36.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:36.990" level="INFO">VALUE: [1.2651999999998415e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2652000000001884e-05, 1.2652999999997888e-05, 1.2653000000001358e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2653000000001358e-05, 1.2666000000001454e-05, 1.2653000000001358e-05, 1.2596999999999609e-05, 1.2653000000001358e-05, 1.2611999999998652e-05, 1.2652999999997888e-05, 1.2638999999998318e-05, 1.2695000000000067e-05, 1.2708999999999637e-05, 1.2652999999997888e-05, 1.2625000000002218e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2667000000000928e-05, 1.2639000000001788e-05, 1.2583000000003508e-05, 1.2653000000001358e-05, 1.2695000000000067e-05, 1.2681000000000497e-05, 1.2638999999994849e-05, 1.2638999999994849e-05, 1.2680000000001024e-05, 1.2694000000000594e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2597999999995613e-05, 1.2638999999994849e-05, 1.2638999999994849e-05, 1.2610999999995709e-05, 1.2625000000002218e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2639000000001788e-05, 1.2611000000002648e-05, 1.2653000000001358e-05, 1.2666000000001454e-05, 1.2653000000001358e-05, 1.2735999999999303e-05, 1.2652000000001884e-05, 1.2612000000002122e-05]</msg>
<status status="PASS" starttime="20201115 22:00:36.989" endtime="20201115 22:00:36.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.984" endtime="20201115 22:00:36.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:36.993" endtime="20201115 22:00:36.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:36.997" endtime="20201115 22:00:37.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.995" endtime="20201115 22:00:37.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.992" endtime="20201115 22:00:37.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:36.608" endtime="20201115 22:00:37.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.899" endtime="20201115 22:00:37.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:34.898" endtime="20201115 22:00:37.018"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.020" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.029" endtime="20201115 22:00:37.063"></status>
</kw>
<msg timestamp="20201115 22:00:37.064" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.027" endtime="20201115 22:00:37.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.065" endtime="20201115 22:00:37.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.067" endtime="20201115 22:00:37.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.025" endtime="20201115 22:00:37.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.023" endtime="20201115 22:00:37.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.077" endtime="20201115 22:00:37.362"></status>
</kw>
<msg timestamp="20201115 22:00:37.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.075" endtime="20201115 22:00:37.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024833833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.366" endtime="20201115 22:00:37.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.374" endtime="20201115 22:00:37.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.073" endtime="20201115 22:00:37.377"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.071" endtime="20201115 22:00:37.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.381" level="INFO">${RESULT} = [{'time': 0.024833833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.025309583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.378" endtime="20201115 22:00:37.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.395" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.382" endtime="20201115 22:00:37.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.399" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:37.398" endtime="20201115 22:00:37.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.402" level="INFO">VALUE: [1.2999999999999123e-05, 1.3013999999998693e-05, 1.2957999999996944e-05, 1.2971999999999984e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2930000000001274e-05, 1.2972999999999457e-05, 1.2943999999997374e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2972999999999457e-05, 1.2959000000003357e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2917000000001178e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2958999999999887e-05, 1.2957999999993475e-05, 1.2958000000000414e-05, 1.2916000000001704e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.3027999999998263e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2943999999993905e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2943999999993905e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2945000000000317e-05, 1.2958000000000414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.400" endtime="20201115 22:00:37.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.396" endtime="20201115 22:00:37.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.405" endtime="20201115 22:00:37.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.408" endtime="20201115 22:00:37.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.407" endtime="20201115 22:00:37.428"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.403" endtime="20201115 22:00:37.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.021" endtime="20201115 22:00:37.429"></status>
</kw>
<msg timestamp="20201115 22:00:37.429" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.438" endtime="20201115 22:00:37.472"></status>
</kw>
<msg timestamp="20201115 22:00:37.473" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.436" endtime="20201115 22:00:37.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.475" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.474" endtime="20201115 22:00:37.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.476" endtime="20201115 22:00:37.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.434" endtime="20201115 22:00:37.479"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.432" endtime="20201115 22:00:37.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.486" endtime="20201115 22:00:37.772"></status>
</kw>
<msg timestamp="20201115 22:00:37.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.485" endtime="20201115 22:00:37.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:37.776" endtime="20201115 22:00:37.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.784" endtime="20201115 22:00:37.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.482" endtime="20201115 22:00:37.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.481" endtime="20201115 22:00:37.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:37.791" level="INFO">${RESULT} = [{'time': 0.022547972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.023019236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:37.788" endtime="20201115 22:00:37.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:37.804" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:37.792" endtime="20201115 22:00:37.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.809" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:37.808" endtime="20201115 22:00:37.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.812" level="INFO">VALUE: [1.2958000000000414e-05, 1.2943999999997374e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3027000000002259e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2957999999996944e-05, 1.2972999999999457e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2959000000003357e-05, 1.2971999999999984e-05, 1.3042000000001303e-05, 1.2943999999997374e-05, 1.2972999999999457e-05, 1.2943999999997374e-05, 1.2971999999999984e-05, 1.2917000000001178e-05, 1.2944000000000844e-05, 1.2930000000001274e-05, 1.2999999999999123e-05, 1.2958999999999887e-05, 1.2875000000002468e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2943999999993905e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2903000000001608e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2972999999999457e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2972999999999457e-05, 1.2972999999999457e-05]</msg>
<status status="PASS" starttime="20201115 22:00:37.810" endtime="20201115 22:00:37.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.805" endtime="20201115 22:00:37.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.815" endtime="20201115 22:00:37.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:37.818" endtime="20201115 22:00:37.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.817" endtime="20201115 22:00:37.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.813" endtime="20201115 22:00:37.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.430" endtime="20201115 22:00:37.839"></status>
</kw>
<msg timestamp="20201115 22:00:37.839" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.848" endtime="20201115 22:00:37.882"></status>
</kw>
<msg timestamp="20201115 22:00:37.883" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.847" endtime="20201115 22:00:37.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:37.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:37.884" endtime="20201115 22:00:37.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.886" endtime="20201115 22:00:37.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.844" endtime="20201115 22:00:37.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.842" endtime="20201115 22:00:37.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:37.896" endtime="20201115 22:00:38.181"></status>
</kw>
<msg timestamp="20201115 22:00:38.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:37.895" endtime="20201115 22:00:38.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02272725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:38.186" endtime="20201115 22:00:38.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.194" endtime="20201115 22:00:38.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.892" endtime="20201115 22:00:38.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.890" endtime="20201115 22:00:38.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.201" level="INFO">${RESULT} = [{'time': 0.02272725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.023196681, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:38.197" endtime="20201115 22:00:38.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.215" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.202" endtime="20201115 22:00:38.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.219" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:38.218" endtime="20201115 22:00:38.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.222" level="INFO">VALUE: [1.2958000000000414e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2915999999998234e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3028000000001733e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2916000000001704e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2959000000003357e-05, 1.2958999999999887e-05, 1.3028000000005202e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2973000000006396e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2971999999999984e-05, 1.2903000000001608e-05, 1.2944000000000844e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2931000000000747e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2999999999999123e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.221" endtime="20201115 22:00:38.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.216" endtime="20201115 22:00:38.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.225" endtime="20201115 22:00:38.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.229" endtime="20201115 22:00:38.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.227" endtime="20201115 22:00:38.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.223" endtime="20201115 22:00:38.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.840" endtime="20201115 22:00:38.250"></status>
</kw>
<msg timestamp="20201115 22:00:38.250" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.259" endtime="20201115 22:00:38.293"></status>
</kw>
<msg timestamp="20201115 22:00:38.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.257" endtime="20201115 22:00:38.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.296" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.295" endtime="20201115 22:00:38.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.297" endtime="20201115 22:00:38.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.254" endtime="20201115 22:00:38.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.252" endtime="20201115 22:00:38.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.307" endtime="20201115 22:00:38.593"></status>
</kw>
<msg timestamp="20201115 22:00:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.305" endtime="20201115 22:00:38.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.598" endtime="20201115 22:00:38.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.606" endtime="20201115 22:00:38.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.303" endtime="20201115 22:00:38.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.301" endtime="20201115 22:00:38.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:38.613" level="INFO">${RESULT} = [{'time': 0.022404375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2931000000000747e-05, 'source_diff': 1.2931000000000747e-05}, {'time': 0.022873833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:38.610" endtime="20201115 22:00:38.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:38.626" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:38.614" endtime="20201115 22:00:38.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.631" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:38.630" endtime="20201115 22:00:38.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.634" level="INFO">VALUE: [1.2931000000000747e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2973000000002927e-05, 1.2943999999997374e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2958000000000414e-05, 1.2930000000001274e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2944999999996848e-05, 1.2985999999999553e-05, 1.2943999999993905e-05, 1.2903000000001608e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2889000000002038e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2945000000000317e-05, 1.2915999999994765e-05, 1.2944000000000844e-05, 1.2930000000001274e-05, 1.2916000000001704e-05, 1.2931000000000747e-05, 1.2999999999999123e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.3013999999998693e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.3013999999998693e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2958999999999887e-05, 1.2917000000001178e-05, 1.2889000000002038e-05]</msg>
<status status="PASS" starttime="20201115 22:00:38.632" endtime="20201115 22:00:38.634"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.627" endtime="20201115 22:00:38.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.637" endtime="20201115 22:00:38.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:38.641" endtime="20201115 22:00:38.660"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.639" endtime="20201115 22:00:38.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.635" endtime="20201115 22:00:38.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.250" endtime="20201115 22:00:38.661"></status>
</kw>
<msg timestamp="20201115 22:00:38.662" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.670" endtime="20201115 22:00:38.705"></status>
</kw>
<msg timestamp="20201115 22:00:38.705" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.669" endtime="20201115 22:00:38.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:38.708" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 23', 'msg': ['overhead_timer_list set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:38.706" endtime="20201115 22:00:38.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.709" endtime="20201115 22:00:38.711"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.666" endtime="20201115 22:00:38.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.664" endtime="20201115 22:00:38.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:38.718" endtime="20201115 22:00:39.004"></status>
</kw>
<msg timestamp="20201115 22:00:39.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:38.717" endtime="20201115 22:00:39.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.008" endtime="20201115 22:00:39.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.016" endtime="20201115 22:00:39.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.714" endtime="20201115 22:00:39.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.713" endtime="20201115 22:00:39.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.023" level="INFO">${RESULT} = [{'time': 0.022559611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.023038208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.020" endtime="20201115 22:00:39.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.037" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.024" endtime="20201115 22:00:39.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.041" level="INFO">NAME: 00-overhead-23-set</msg>
<status status="PASS" starttime="20201115 22:00:39.040" endtime="20201115 22:00:39.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.044" level="INFO">VALUE: [1.2971999999999984e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2999999999999123e-05, 1.2958999999999887e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2959000000003357e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3013999999998693e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2915999999994765e-05, 1.2971999999999984e-05, 1.2888999999995099e-05, 1.2958999999999887e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2944000000000844e-05, 1.2999999999999123e-05, 1.2944000000000844e-05, 1.2985999999999553e-05, 1.2945000000000317e-05, 1.2958000000000414e-05, 1.3027999999998263e-05, 1.2903000000001608e-05, 1.2945000000000317e-05, 1.3013999999998693e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2958000000000414e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.042" endtime="20201115 22:00:39.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.037" endtime="20201115 22:00:39.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.052" endtime="20201115 22:00:39.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.055" endtime="20201115 22:00:39.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.053" endtime="20201115 22:00:39.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.050" endtime="20201115 22:00:39.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:38.662" endtime="20201115 22:00:39.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.019" endtime="20201115 22:00:39.076"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:37.018" endtime="20201115 22:00:39.076"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.078" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.087" endtime="20201115 22:00:39.122"></status>
</kw>
<msg timestamp="20201115 22:00:39.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.085" endtime="20201115 22:00:39.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.125" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.124" endtime="20201115 22:00:39.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.126" endtime="20201115 22:00:39.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.083" endtime="20201115 22:00:39.128"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.081" endtime="20201115 22:00:39.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.135" endtime="20201115 22:00:39.421"></status>
</kw>
<msg timestamp="20201115 22:00:39.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.134" endtime="20201115 22:00:39.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.425" endtime="20201115 22:00:39.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.433" endtime="20201115 22:00:39.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.131" endtime="20201115 22:00:39.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.129" endtime="20201115 22:00:39.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.440" level="INFO">${RESULT} = [{'time': 0.024515236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3277999999998513e-05, 'source_diff': 1.3277999999998513e-05}, {'time': 0.025014542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.436" endtime="20201115 22:00:39.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.453" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.441" endtime="20201115 22:00:39.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.458" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:39.457" endtime="20201115 22:00:39.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.461" level="INFO">VALUE: [1.3277999999998513e-05, 1.3264000000002413e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3291000000002079e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.329099999999861e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3264000000005882e-05, 1.327699999999904e-05, 1.3277999999998513e-05, 1.3235999999999803e-05, 1.3278000000005452e-05, 1.3277999999998513e-05, 1.3263000000006409e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3292000000005022e-05, 1.3291999999998083e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.327699999999904e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3264000000005882e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.3291999999998083e-05, 1.3277999999998513e-05, 1.3292000000005022e-05, 1.3291999999998083e-05, 1.3278000000005452e-05, 1.3263999999998943e-05, 1.3250000000006312e-05, 1.3264000000005882e-05, 1.3263999999998943e-05, 1.327699999999904e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.459" endtime="20201115 22:00:39.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.454" endtime="20201115 22:00:39.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.464" endtime="20201115 22:00:39.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.467" endtime="20201115 22:00:39.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.466" endtime="20201115 22:00:39.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.462" endtime="20201115 22:00:39.488"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.079" endtime="20201115 22:00:39.488"></status>
</kw>
<msg timestamp="20201115 22:00:39.488" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.497" endtime="20201115 22:00:39.532"></status>
</kw>
<msg timestamp="20201115 22:00:39.532" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.496" endtime="20201115 22:00:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.535" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.533" endtime="20201115 22:00:39.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.536" endtime="20201115 22:00:39.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.493" endtime="20201115 22:00:39.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.491" endtime="20201115 22:00:39.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.546" endtime="20201115 22:00:39.832"></status>
</kw>
<msg timestamp="20201115 22:00:39.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.544" endtime="20201115 22:00:39.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.836" endtime="20201115 22:00:39.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.844" endtime="20201115 22:00:39.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.542" endtime="20201115 22:00:39.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.540" endtime="20201115 22:00:39.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:39.851" level="INFO">${RESULT} = [{'time': 0.022504347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3291000000002079e-05, 'source_diff': 1.3291000000002079e-05}, {'time': 0.023000972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:39.848" endtime="20201115 22:00:39.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:39.866" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:39.852" endtime="20201115 22:00:39.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.870" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:39.869" endtime="20201115 22:00:39.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.873" level="INFO">VALUE: [1.3291000000002079e-05, 1.3278000000001983e-05, 1.330499999999818e-05, 1.327699999999904e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3305999999997653e-05, 1.3264000000002413e-05, 1.3278000000001983e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3278000000001983e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3306000000001122e-05, 1.327699999999904e-05, 1.3194000000001094e-05, 1.3278000000005452e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.329099999999861e-05, 1.3320000000004162e-05, 1.3263999999998943e-05, 1.3305999999997653e-05, 1.3263999999998943e-05, 1.3181000000000997e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.331899999999775e-05, 1.3291999999998083e-05, 1.3277999999998513e-05, 1.3278000000005452e-05]</msg>
<status status="PASS" starttime="20201115 22:00:39.872" endtime="20201115 22:00:39.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.867" endtime="20201115 22:00:39.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.876" endtime="20201115 22:00:39.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:39.879" endtime="20201115 22:00:39.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.878" endtime="20201115 22:00:39.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.874" endtime="20201115 22:00:39.900"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.489" endtime="20201115 22:00:39.900"></status>
</kw>
<msg timestamp="20201115 22:00:39.900" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.909" endtime="20201115 22:00:39.943"></status>
</kw>
<msg timestamp="20201115 22:00:39.944" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.907" endtime="20201115 22:00:39.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:39.946" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:39.945" endtime="20201115 22:00:39.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.947" endtime="20201115 22:00:39.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.905" endtime="20201115 22:00:39.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.903" endtime="20201115 22:00:39.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:39.957" endtime="20201115 22:00:40.243"></status>
</kw>
<msg timestamp="20201115 22:00:40.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:39.956" endtime="20201115 22:00:40.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.247" endtime="20201115 22:00:40.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.255" endtime="20201115 22:00:40.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.953" endtime="20201115 22:00:40.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.951" endtime="20201115 22:00:40.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.263" level="INFO">${RESULT} = [{'time': 0.022208556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3264000000002413e-05, 'source_diff': 1.3264000000002413e-05}, {'time': 0.022704028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.259" endtime="20201115 22:00:40.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.276" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.264" endtime="20201115 22:00:40.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.281" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:40.279" endtime="20201115 22:00:40.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.283" level="INFO">VALUE: [1.3264000000002413e-05, 1.3264000000002413e-05, 1.327699999999904e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.329099999999861e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3278000000001983e-05, 1.3263999999998943e-05, 1.3306000000001122e-05, 1.3236999999999277e-05, 1.327699999999904e-05, 1.3292000000001553e-05, 1.326299999999947e-05, 1.3306000000001122e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3305000000001649e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3277999999998513e-05, 1.3207999999993725e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3291999999998083e-05, 1.327699999999904e-05, 1.3319999999997223e-05, 1.3263999999998943e-05, 1.3250000000006312e-05, 1.3291999999998083e-05, 1.3277999999998513e-05, 1.327699999999904e-05, 1.3305000000005118e-05, 1.327699999999904e-05, 1.3277999999998513e-05, 1.3264000000005882e-05, 1.326299999999947e-05, 1.3263999999998943e-05, 1.3264000000005882e-05, 1.3222999999999707e-05, 1.3277999999998513e-05, 1.327699999999904e-05, 1.329099999999861e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3264000000005882e-05, 1.3222000000000234e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.282" endtime="20201115 22:00:40.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.277" endtime="20201115 22:00:40.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.286" endtime="20201115 22:00:40.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.289" endtime="20201115 22:00:40.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.288" endtime="20201115 22:00:40.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.284" endtime="20201115 22:00:40.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.901" endtime="20201115 22:00:40.310"></status>
</kw>
<msg timestamp="20201115 22:00:40.310" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.319" endtime="20201115 22:00:40.354"></status>
</kw>
<msg timestamp="20201115 22:00:40.354" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.317" endtime="20201115 22:00:40.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.357" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.355" endtime="20201115 22:00:40.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.358" endtime="20201115 22:00:40.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.315" endtime="20201115 22:00:40.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.313" endtime="20201115 22:00:40.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.367" endtime="20201115 22:00:40.653"></status>
</kw>
<msg timestamp="20201115 22:00:40.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.366" endtime="20201115 22:00:40.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.657" endtime="20201115 22:00:40.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.666" endtime="20201115 22:00:40.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.363" endtime="20201115 22:00:40.668"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.362" endtime="20201115 22:00:40.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:40.673" level="INFO">${RESULT} = [{'time': 0.022206625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.022697944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:40.669" endtime="20201115 22:00:40.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:40.686" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:40.674" endtime="20201115 22:00:40.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.691" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:40.690" endtime="20201115 22:00:40.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.693" level="INFO">VALUE: [1.3208000000000664e-05, 1.3277000000002509e-05, 1.3263999999998943e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.329099999999861e-05, 1.3249999999999373e-05, 1.327699999999904e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3291999999998083e-05, 1.3292000000001553e-05, 1.327699999999904e-05, 1.3277999999998513e-05, 1.326299999999947e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3179999999998054e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.326299999999947e-05, 1.3208000000000664e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.329099999999861e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.326299999999947e-05, 1.3264000000005882e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3291000000005548e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.330499999999818e-05, 1.3291999999998083e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277000000005978e-05, 1.3291999999998083e-05, 1.3320000000004162e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.327699999999904e-05, 1.3278000000005452e-05, 1.3235999999999803e-05]</msg>
<status status="PASS" starttime="20201115 22:00:40.692" endtime="20201115 22:00:40.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.687" endtime="20201115 22:00:40.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.696" endtime="20201115 22:00:40.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:40.700" endtime="20201115 22:00:40.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.698" endtime="20201115 22:00:40.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.695" endtime="20201115 22:00:40.720"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.311" endtime="20201115 22:00:40.721"></status>
</kw>
<msg timestamp="20201115 22:00:40.721" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.730" endtime="20201115 22:00:40.765"></status>
</kw>
<msg timestamp="20201115 22:00:40.765" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.728" endtime="20201115 22:00:40.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:40.768" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 24', 'msg': ['overhead_timer_list set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:40.766" endtime="20201115 22:00:40.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.769" endtime="20201115 22:00:40.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.725" endtime="20201115 22:00:40.772"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.723" endtime="20201115 22:00:40.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:40.779" endtime="20201115 22:00:41.065"></status>
</kw>
<msg timestamp="20201115 22:00:41.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:40.777" endtime="20201115 22:00:41.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.070" endtime="20201115 22:00:41.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.078" endtime="20201115 22:00:41.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.775" endtime="20201115 22:00:41.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.773" endtime="20201115 22:00:41.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.085" level="INFO">${RESULT} = [{'time': 0.022360569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3305000000001649e-05, 'source_diff': 1.3305000000001649e-05}, {'time': 0.022857514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.081" endtime="20201115 22:00:41.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.098" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.086" endtime="20201115 22:00:41.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.103" level="INFO">NAME: 00-overhead-24-set</msg>
<status status="PASS" starttime="20201115 22:00:41.102" endtime="20201115 22:00:41.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.105" level="INFO">VALUE: [1.3305000000001649e-05, 1.3277999999998513e-05, 1.3264000000002413e-05, 1.3334000000000262e-05, 1.327699999999904e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.327699999999904e-05, 1.3278000000001983e-05, 1.326299999999947e-05, 1.3278000000001983e-05, 1.3277999999998513e-05, 1.326299999999947e-05, 1.3278000000001983e-05, 1.3235999999999803e-05, 1.3278000000001983e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3277999999998513e-05, 1.3278000000005452e-05, 1.3306000000004592e-05, 1.3264000000005882e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3360999999996459e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3277999999998513e-05, 1.3222000000000234e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3264000000005882e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3277999999998513e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3249999999999373e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.104" endtime="20201115 22:00:41.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.099" endtime="20201115 22:00:41.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.108" endtime="20201115 22:00:41.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.112" endtime="20201115 22:00:41.131"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.110" endtime="20201115 22:00:41.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.107" endtime="20201115 22:00:41.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:40.721" endtime="20201115 22:00:41.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.077" endtime="20201115 22:00:41.133"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:39.076" endtime="20201115 22:00:41.133"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.135" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.144" endtime="20201115 22:00:41.180"></status>
</kw>
<msg timestamp="20201115 22:00:41.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.142" endtime="20201115 22:00:41.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.183" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.181" endtime="20201115 22:00:41.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.184" endtime="20201115 22:00:41.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.139" endtime="20201115 22:00:41.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.137" endtime="20201115 22:00:41.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.193" endtime="20201115 22:00:41.479"></status>
</kw>
<msg timestamp="20201115 22:00:41.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025093556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.192" endtime="20201115 22:00:41.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025093556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.483" endtime="20201115 22:00:41.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.491" endtime="20201115 22:00:41.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.189" endtime="20201115 22:00:41.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.188" endtime="20201115 22:00:41.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.498" level="INFO">${RESULT} = [{'time': 0.025107153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3597000000000609e-05, 'source_diff': 1.3597000000000609e-05}, {'time': 0.025625306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.494" endtime="20201115 22:00:41.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.512" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.499" endtime="20201115 22:00:41.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.517" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:41.516" endtime="20201115 22:00:41.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.519" level="INFO">VALUE: [1.3597000000000609e-05, 1.3598000000000082e-05, 1.3596999999997139e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3570000000000942e-05, 1.3666999999998458e-05, 1.3638999999999318e-05, 1.3584000000000512e-05, 1.3568999999998e-05, 1.3583000000001039e-05, 1.3568999999998e-05, 1.3610999999996709e-05, 1.3597999999996613e-05, 1.3583000000004508e-05, 1.354099999999886e-05, 1.3598000000003552e-05, 1.3596999999997139e-05, 1.3568999999998e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3568999999998e-05, 1.3584000000003982e-05, 1.3583999999997043e-05, 1.3583000000004508e-05, 1.3583999999997043e-05, 1.358299999999757e-05, 1.3583000000004508e-05, 1.3556000000004842e-05, 1.3583999999997043e-05, 1.3568999999998e-05, 1.3583999999997043e-05, 1.352699999999929e-05, 1.3569000000004938e-05, 1.3568999999998e-05, 1.3611000000003648e-05, 1.3569000000004938e-05, 1.3596999999997139e-05, 1.3583999999997043e-05, 1.3596999999997139e-05, 1.3625000000003218e-05, 1.358299999999757e-05, 1.3597000000004078e-05, 1.358299999999757e-05, 1.3583999999997043e-05, 1.3596999999997139e-05, 1.3651999999995945e-05, 1.3610999999996709e-05, 1.3611000000003648e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.518" endtime="20201115 22:00:41.519"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.513" endtime="20201115 22:00:41.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.522" endtime="20201115 22:00:41.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.526" endtime="20201115 22:00:41.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.524" endtime="20201115 22:00:41.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.521" endtime="20201115 22:00:41.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.135" endtime="20201115 22:00:41.546"></status>
</kw>
<msg timestamp="20201115 22:00:41.546" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.555" endtime="20201115 22:00:41.592"></status>
</kw>
<msg timestamp="20201115 22:00:41.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.554" endtime="20201115 22:00:41.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.596" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.594" endtime="20201115 22:00:41.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.597" endtime="20201115 22:00:41.599"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.551" endtime="20201115 22:00:41.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.549" endtime="20201115 22:00:41.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.607" endtime="20201115 22:00:41.893"></status>
</kw>
<msg timestamp="20201115 22:00:41.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.605" endtime="20201115 22:00:41.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:41.897" endtime="20201115 22:00:41.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.905" endtime="20201115 22:00:41.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.603" endtime="20201115 22:00:41.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.601" endtime="20201115 22:00:41.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:41.912" level="INFO">${RESULT} = [{'time': 0.022501181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3583999999997043e-05, 'source_diff': 1.3583999999997043e-05}, {'time': 0.023015819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:41.908" endtime="20201115 22:00:41.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:41.925" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:41.913" endtime="20201115 22:00:41.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.930" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:41.929" endtime="20201115 22:00:41.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:41.932" level="INFO">VALUE: [1.3583999999997043e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3528000000002233e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3569000000001469e-05, 1.3597000000000609e-05, 1.358299999999757e-05, 1.3527999999998763e-05, 1.3528000000002233e-05, 1.3584000000000512e-05, 1.3527999999998763e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3597000000004078e-05, 1.3610999999996709e-05, 1.358299999999757e-05, 1.3610999999996709e-05, 1.3569000000004938e-05, 1.3597999999996613e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.3583000000004508e-05, 1.3597999999996613e-05, 1.3569999999997473e-05, 1.3610999999996709e-05, 1.3596999999997139e-05, 1.3584000000003982e-05, 1.3541999999998333e-05, 1.3583999999997043e-05, 1.3596999999997139e-05, 1.3597999999996613e-05, 1.3597000000004078e-05, 1.3625000000003218e-05, 1.358299999999757e-05, 1.3583999999997043e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3568999999998e-05, 1.358299999999757e-05, 1.3570000000004412e-05, 1.358299999999757e-05, 1.3583000000004508e-05, 1.3569000000004938e-05, 1.358299999999757e-05, 1.3513999999999193e-05, 1.3596999999997139e-05]</msg>
<status status="PASS" starttime="20201115 22:00:41.931" endtime="20201115 22:00:41.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.926" endtime="20201115 22:00:41.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.935" endtime="20201115 22:00:41.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:41.939" endtime="20201115 22:00:41.958"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.937" endtime="20201115 22:00:41.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.934" endtime="20201115 22:00:41.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.547" endtime="20201115 22:00:41.959"></status>
</kw>
<msg timestamp="20201115 22:00:41.960" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:41.969" endtime="20201115 22:00:42.005"></status>
</kw>
<msg timestamp="20201115 22:00:42.006" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:41.967" endtime="20201115 22:00:42.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.008" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.007" endtime="20201115 22:00:42.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.009" endtime="20201115 22:00:42.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.965" endtime="20201115 22:00:42.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.962" endtime="20201115 22:00:42.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.019" endtime="20201115 22:00:42.305"></status>
</kw>
<msg timestamp="20201115 22:00:42.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.017" endtime="20201115 22:00:42.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.309" endtime="20201115 22:00:42.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.317" endtime="20201115 22:00:42.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.015" endtime="20201115 22:00:42.319"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.013" endtime="20201115 22:00:42.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.324" level="INFO">${RESULT} = [{'time': 0.022819653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3583999999997043e-05, 'source_diff': 1.3583999999997043e-05}, {'time': 0.023330958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.320" endtime="20201115 22:00:42.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.337" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.325" endtime="20201115 22:00:42.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.342" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:42.341" endtime="20201115 22:00:42.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.344" level="INFO">VALUE: [1.3583999999997043e-05, 1.3568999999998e-05, 1.3583000000001039e-05, 1.3570000000000942e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3611000000000179e-05, 1.3597999999996613e-05, 1.3598000000000082e-05, 1.3583000000001039e-05, 1.3584000000000512e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3569999999997473e-05, 1.3569000000004938e-05, 1.3583000000004508e-05, 1.3598000000003552e-05, 1.358299999999757e-05, 1.3583000000004508e-05, 1.3570000000004412e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.358299999999757e-05, 1.3555999999997903e-05, 1.3584000000003982e-05, 1.3568999999998e-05, 1.3610999999996709e-05, 1.3569999999997473e-05, 1.358299999999757e-05, 1.3583999999997043e-05, 1.358299999999757e-05, 1.3583000000004508e-05, 1.3527999999998763e-05, 1.3556000000004842e-05, 1.3596999999997139e-05, 1.3583000000004508e-05, 1.3583999999997043e-05, 1.3569000000004938e-05, 1.3568999999998e-05, 1.3569000000004938e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3583999999997043e-05, 1.3568999999998e-05, 1.3610999999996709e-05, 1.3583999999997043e-05, 1.3583000000004508e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.343" endtime="20201115 22:00:42.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.338" endtime="20201115 22:00:42.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.347" endtime="20201115 22:00:42.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.351" endtime="20201115 22:00:42.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.349" endtime="20201115 22:00:42.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.346" endtime="20201115 22:00:42.371"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.960" endtime="20201115 22:00:42.372"></status>
</kw>
<msg timestamp="20201115 22:00:42.372" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.381" endtime="20201115 22:00:42.417"></status>
</kw>
<msg timestamp="20201115 22:00:42.418" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.379" endtime="20201115 22:00:42.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.419" endtime="20201115 22:00:42.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.421" endtime="20201115 22:00:42.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.377" endtime="20201115 22:00:42.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.375" endtime="20201115 22:00:42.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.431" endtime="20201115 22:00:42.718"></status>
</kw>
<msg timestamp="20201115 22:00:42.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.429" endtime="20201115 22:00:42.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.722" endtime="20201115 22:00:42.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.730" endtime="20201115 22:00:42.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.427" endtime="20201115 22:00:42.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.425" endtime="20201115 22:00:42.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:42.737" level="INFO">${RESULT} = [{'time': 0.022184986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3569000000001469e-05, 'source_diff': 1.3569000000001469e-05}, {'time': 0.022698639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:42.733" endtime="20201115 22:00:42.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:42.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:42.738" endtime="20201115 22:00:42.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.755" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:42.754" endtime="20201115 22:00:42.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.757" level="INFO">VALUE: [1.3569000000001469e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3596999999997139e-05, 1.3528000000002233e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3568999999998e-05, 1.3584000000000512e-05, 1.3583999999997043e-05, 1.3528000000002233e-05, 1.3568999999998e-05, 1.3638999999999318e-05, 1.3568999999998e-05, 1.358299999999757e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3597000000004078e-05, 1.3570000000004412e-05, 1.3597999999996613e-05, 1.3596999999997139e-05, 1.3568999999998e-05, 1.358299999999757e-05, 1.358299999999757e-05, 1.3569999999997473e-05, 1.358299999999757e-05, 1.3499999999999623e-05, 1.3569999999997473e-05, 1.3542000000005272e-05, 1.3569999999997473e-05, 1.3624999999996279e-05, 1.3527999999998763e-05, 1.3569999999997473e-05, 1.3584000000003982e-05, 1.358299999999757e-05, 1.3583000000004508e-05, 1.3583999999997043e-05, 1.3527999999998763e-05, 1.3583999999997043e-05, 1.355499999999843e-05, 1.3610999999996709e-05, 1.3513999999999193e-05, 1.3583000000004508e-05, 1.358299999999757e-05, 1.3569999999997473e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3584000000003982e-05, 1.3597000000004078e-05]</msg>
<status status="PASS" starttime="20201115 22:00:42.756" endtime="20201115 22:00:42.758"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.751" endtime="20201115 22:00:42.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.761" endtime="20201115 22:00:42.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:42.764" endtime="20201115 22:00:42.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.763" endtime="20201115 22:00:42.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.759" endtime="20201115 22:00:42.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.373" endtime="20201115 22:00:42.785"></status>
</kw>
<msg timestamp="20201115 22:00:42.785" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>set</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.794" endtime="20201115 22:00:42.830"></status>
</kw>
<msg timestamp="20201115 22:00:42.831" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.792" endtime="20201115 22:00:42.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:42.833" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list set 25', 'msg': ['overhead_timer_list set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:42.832" endtime="20201115 22:00:42.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.834" endtime="20201115 22:00:42.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.790" endtime="20201115 22:00:42.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.788" endtime="20201115 22:00:42.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:42.844" endtime="20201115 22:00:43.129"></status>
</kw>
<msg timestamp="20201115 22:00:43.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:42.842" endtime="20201115 22:00:43.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.133" endtime="20201115 22:00:43.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.141" endtime="20201115 22:00:43.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.840" endtime="20201115 22:00:43.143"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.838" endtime="20201115 22:00:43.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.148" level="INFO">${RESULT} = [{'time': 0.022371125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.358299999999757e-05, 'source_diff': 1.358299999999757e-05}, {'time': 0.022883944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.145" endtime="20201115 22:00:43.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.162" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.149" endtime="20201115 22:00:43.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.167" level="INFO">NAME: 00-overhead-25-set</msg>
<status status="PASS" starttime="20201115 22:00:43.166" endtime="20201115 22:00:43.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.170" level="INFO">VALUE: [1.358299999999757e-05, 1.3597000000000609e-05, 1.3556000000001373e-05, 1.3638999999999318e-05, 1.3570000000000942e-05, 1.3611000000000179e-05, 1.3596999999997139e-05, 1.3583999999997043e-05, 1.3583000000001039e-05, 1.3583000000001039e-05, 1.3611000000000179e-05, 1.3541000000002329e-05, 1.3569000000001469e-05, 1.3598000000000082e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3541999999998333e-05, 1.3583999999997043e-05, 1.358299999999757e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.3598000000003552e-05, 1.358299999999757e-05, 1.3527999999998763e-05, 1.3596999999997139e-05, 1.352699999999929e-05, 1.3597000000004078e-05, 1.3610999999996709e-05, 1.3584000000003982e-05, 1.3570000000004412e-05, 1.3527999999998763e-05, 1.3555000000005368e-05, 1.358299999999757e-05, 1.3583999999997043e-05, 1.3584000000003982e-05, 1.3598000000003552e-05, 1.3596999999997139e-05, 1.3583999999997043e-05, 1.3583000000004508e-05, 1.3596999999997139e-05, 1.3596999999997139e-05, 1.3598000000003552e-05, 1.3610999999996709e-05, 1.3625000000003218e-05, 1.358299999999757e-05, 1.3596999999997139e-05, 1.3569999999997473e-05, 1.358299999999757e-05, 1.3583999999997043e-05]</msg>
<status status="PASS" starttime="20201115 22:00:43.168" endtime="20201115 22:00:43.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.163" endtime="20201115 22:00:43.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.173" endtime="20201115 22:00:43.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.176" endtime="20201115 22:00:43.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.175" endtime="20201115 22:00:43.196"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.171" endtime="20201115 22:00:43.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:42.785" endtime="20201115 22:00:43.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.134" endtime="20201115 22:00:43.197"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:41.133" endtime="20201115 22:00:43.197"></status>
</kw>
<status status="PASS" starttime="20201115 21:59:52.603" endtime="20201115 22:00:43.198"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.202" endtime="20201115 22:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.200" endtime="20201115 22:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.199" endtime="20201115 22:00:43.223"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 21:59:52.532" endtime="20201115 22:00:43.223" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Remove List">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.231" endtime="20201115 22:00:43.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.229" endtime="20201115 22:00:43.251"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.265" endtime="20201115 22:00:43.279"></status>
</kw>
<msg timestamp="20201115 22:00:43.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.263" endtime="20201115 22:00:43.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.280" endtime="20201115 22:00:43.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.285" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:00:43.283" endtime="20201115 22:00:43.285"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:43.261" endtime="20201115 22:00:43.286"></status>
</kw>
<status status="FAIL" starttime="20201115 22:00:43.258" endtime="20201115 22:00:43.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.256" endtime="20201115 22:00:43.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:00:43.290" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:00:43.289" endtime="20201115 22:00:43.290"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.287" endtime="20201115 22:00:43.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.255" endtime="20201115 22:00:43.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.254" endtime="20201115 22:00:43.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.292" endtime="20201115 22:00:43.293"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.253" endtime="20201115 22:00:43.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.252" endtime="20201115 22:00:43.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.228" endtime="20201115 22:00:43.294"></status>
</kw>
<kw name="${n} IN RANGE [ 25 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.298" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.307" endtime="20201115 22:00:43.322"></status>
</kw>
<msg timestamp="20201115 22:00:43.323" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.306" endtime="20201115 22:00:43.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.325" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.324" endtime="20201115 22:00:43.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.326" endtime="20201115 22:00:43.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.303" endtime="20201115 22:00:43.328"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.301" endtime="20201115 22:00:43.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.336" endtime="20201115 22:00:43.621"></status>
</kw>
<msg timestamp="20201115 22:00:43.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069070167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.335" endtime="20201115 22:00:43.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069070167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069079847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.625" endtime="20201115 22:00:43.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.634" endtime="20201115 22:00:43.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.331" endtime="20201115 22:00:43.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.329" endtime="20201115 22:00:43.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:43.641" level="INFO">${RESULT} = [{'time': 0.069079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.069167556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:43.637" endtime="20201115 22:00:43.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:43.654" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:43.642" endtime="20201115 22:00:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.658" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:43.657" endtime="20201115 22:00:43.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.661" level="INFO">VALUE: [9.679999999998024e-06, 9.695000000004006e-06, 9.694000000004532e-06, 9.667000000004866e-06, 9.681000000011375e-06, 9.693999999990655e-06, 9.695000000004006e-06, 9.652999999998357e-06, 9.679999999998024e-06, 9.680000000011901e-06, 9.694000000004532e-06, 9.707999999997163e-06, 9.694000000004532e-06, 9.666999999990988e-06, 9.666999999990988e-06, 9.707999999997163e-06, 9.667000000004866e-06, 9.693999999990655e-06, 9.708000000011041e-06, 9.695000000004006e-06, 9.679999999998024e-06, 9.708999999996637e-06, 9.694999999990128e-06, 9.639000000005726e-06, 9.694000000004532e-06, 9.680000000011901e-06, 9.694999999990128e-06, 9.693999999990655e-06, 9.679999999998024e-06, 9.693999999990655e-06, 9.695000000004006e-06, 9.721999999989794e-06, 9.667000000004866e-06, 9.681000000011375e-06, 9.667000000004866e-06, 9.695000000004006e-06, 9.681000000011375e-06, 9.679999999998024e-06, 9.708000000011041e-06, 9.708999999996637e-06, 9.666000000005393e-06, 9.680999999997497e-06, 9.680000000011901e-06, 9.681000000011375e-06, 9.666000000005393e-06, 9.651999999998884e-06, 9.679999999998024e-06, 9.695000000004006e-06, 9.694999999990128e-06, 9.694000000004532e-06]</msg>
<status status="PASS" starttime="20201115 22:00:43.660" endtime="20201115 22:00:43.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.655" endtime="20201115 22:00:43.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.664" endtime="20201115 22:00:43.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:43.667" endtime="20201115 22:00:43.687"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.666" endtime="20201115 22:00:43.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.662" endtime="20201115 22:00:43.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.298" endtime="20201115 22:00:43.689"></status>
</kw>
<msg timestamp="20201115 22:00:43.689" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.698" endtime="20201115 22:00:43.713"></status>
</kw>
<msg timestamp="20201115 22:00:43.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.696" endtime="20201115 22:00:43.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:43.716" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:43.715" endtime="20201115 22:00:43.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.717" endtime="20201115 22:00:43.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.694" endtime="20201115 22:00:43.719"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.692" endtime="20201115 22:00:43.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:43.726" endtime="20201115 22:00:44.012"></status>
</kw>
<msg timestamp="20201115 22:00:44.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:43.724" endtime="20201115 22:00:44.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.016" endtime="20201115 22:00:44.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.024" endtime="20201115 22:00:44.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.722" endtime="20201115 22:00:44.026"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.720" endtime="20201115 22:00:44.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.031" level="INFO">${RESULT} = [{'time': 0.022588875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.022669917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.028" endtime="20201115 22:00:44.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.044" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.032" endtime="20201115 22:00:44.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.049" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:44.048" endtime="20201115 22:00:44.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.051" level="INFO">VALUE: [9.694000000001063e-06, 9.681000000000967e-06, 9.651999999998884e-06, 9.679999999998024e-06, 9.694000000001063e-06, 9.695000000000537e-06, 9.667000000001397e-06, 9.695000000000537e-06, 9.708000000000633e-06, 9.652000000002353e-06, 9.693999999997593e-06, 9.709000000000106e-06, 9.735999999999773e-06, 9.681000000000967e-06, 9.722000000000203e-06, 9.681000000000967e-06, 9.681000000000967e-06, 9.679999999998024e-06, 9.695000000000537e-06, 9.681000000000967e-06, 9.681000000000967e-06, 9.749999999999343e-06, 9.639000000002257e-06, 9.693999999997593e-06, 9.708000000000633e-06, 9.667000000001397e-06, 9.679999999998024e-06, 9.665999999998454e-06, 9.667000000001397e-06, 9.680999999997497e-06, 9.695000000000537e-06, 9.665999999998454e-06, 9.694000000001063e-06, 9.695000000000537e-06, 9.681000000000967e-06, 9.695000000000537e-06, 9.681000000000967e-06, 9.651999999998884e-06, 9.680000000001493e-06, 9.679999999998024e-06, 9.695000000000537e-06, 9.681000000000967e-06, 9.708000000000633e-06, 9.652999999998357e-06, 9.665999999998454e-06, 9.681000000000967e-06, 9.694000000001063e-06, 9.638999999998787e-06, 9.679999999998024e-06, 9.709000000000106e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.050" endtime="20201115 22:00:44.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.045" endtime="20201115 22:00:44.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.059" endtime="20201115 22:00:44.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.062" endtime="20201115 22:00:44.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.061" endtime="20201115 22:00:44.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.057" endtime="20201115 22:00:44.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.689" endtime="20201115 22:00:44.083"></status>
</kw>
<msg timestamp="20201115 22:00:44.083" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.092" endtime="20201115 22:00:44.105"></status>
</kw>
<msg timestamp="20201115 22:00:44.106" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.090" endtime="20201115 22:00:44.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.108" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.107" endtime="20201115 22:00:44.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.109" endtime="20201115 22:00:44.111"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.087" endtime="20201115 22:00:44.112"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.085" endtime="20201115 22:00:44.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.118" endtime="20201115 22:00:44.406"></status>
</kw>
<msg timestamp="20201115 22:00:44.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.117" endtime="20201115 22:00:44.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.410" endtime="20201115 22:00:44.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.418" endtime="20201115 22:00:44.420"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.114" endtime="20201115 22:00:44.421"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.113" endtime="20201115 22:00:44.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.425" level="INFO">${RESULT} = [{'time': 0.022168611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.022247, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:00:44.422" endtime="20201115 22:00:44.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.438" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.426" endtime="20201115 22:00:44.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.443" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:44.442" endtime="20201115 22:00:44.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.445" level="INFO">VALUE: [9.694000000001063e-06, 9.681000000000967e-06, 9.694000000001063e-06, 9.693999999997593e-06, 9.652999999998357e-06, 9.680000000001493e-06, 9.694000000001063e-06, 9.680999999997497e-06, 9.749999999999343e-06, 9.694000000001063e-06, 9.695000000000537e-06, 9.638999999998787e-06, 9.694000000001063e-06, 9.709000000000106e-06, 9.708000000000633e-06, 9.681000000000967e-06, 9.735999999999773e-06, 9.651999999998884e-06, 9.693999999997593e-06, 9.679999999998024e-06, 9.681000000000967e-06, 9.681000000000967e-06, 9.722000000000203e-06, 9.694000000001063e-06, 9.695000000000537e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.597000000000078e-06, 9.681000000000967e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.736999999999246e-06, 9.680999999997497e-06, 9.695000000000537e-06, 9.695000000000537e-06, 9.667000000001397e-06, 9.679999999998024e-06, 9.680000000001493e-06, 9.680999999997497e-06, 9.666000000001923e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.680999999997497e-06, 9.693999999997593e-06, 9.694000000001063e-06, 9.735999999999773e-06, 9.680000000001493e-06, 9.693999999997593e-06, 9.681000000000967e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.444" endtime="20201115 22:00:44.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.439" endtime="20201115 22:00:44.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.449" endtime="20201115 22:00:44.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.452" endtime="20201115 22:00:44.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.451" endtime="20201115 22:00:44.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.447" endtime="20201115 22:00:44.473"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.083" endtime="20201115 22:00:44.473"></status>
</kw>
<msg timestamp="20201115 22:00:44.473" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.482" endtime="20201115 22:00:44.497"></status>
</kw>
<msg timestamp="20201115 22:00:44.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.480" endtime="20201115 22:00:44.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.498" endtime="20201115 22:00:44.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.501" endtime="20201115 22:00:44.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.478" endtime="20201115 22:00:44.503"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.476" endtime="20201115 22:00:44.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.510" endtime="20201115 22:00:44.798"></status>
</kw>
<msg timestamp="20201115 22:00:44.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.508" endtime="20201115 22:00:44.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.802" endtime="20201115 22:00:44.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.811" endtime="20201115 22:00:44.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.506" endtime="20201115 22:00:44.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.504" endtime="20201115 22:00:44.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:44.817" level="INFO">${RESULT} = [{'time': 0.022754028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.022841403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:44.814" endtime="20201115 22:00:44.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:44.830" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:44.818" endtime="20201115 22:00:44.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.835" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:44.834" endtime="20201115 22:00:44.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.837" level="INFO">VALUE: [9.695000000000537e-06, 9.624999999999218e-06, 9.679999999998024e-06, 9.695000000000537e-06, 9.680999999997497e-06, 9.638999999998787e-06, 9.681000000000967e-06, 9.638999999998787e-06, 9.694000000001063e-06, 9.679999999998024e-06, 9.693999999997593e-06, 9.681000000000967e-06, 9.667000000001397e-06, 9.680000000001493e-06, 9.722000000000203e-06, 9.666999999997927e-06, 9.694000000001063e-06, 9.679999999998024e-06, 9.681000000000967e-06, 9.681000000000967e-06, 9.709000000000106e-06, 9.694000000001063e-06, 9.708000000000633e-06, 9.722000000000203e-06, 9.735999999999773e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.693999999997593e-06, 9.679999999998024e-06, 9.735999999999773e-06, 9.624999999999218e-06, 9.695000000000537e-06, 9.667000000001397e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.681000000000967e-06, 9.694000000001063e-06, 9.680000000001493e-06, 9.679999999998024e-06, 9.694000000001063e-06, 9.625000000002687e-06, 9.651999999998884e-06, 9.665999999998454e-06, 9.708000000000633e-06, 9.679999999998024e-06, 9.681000000000967e-06, 9.694000000001063e-06, 9.652999999998357e-06, 9.707999999997163e-06]</msg>
<status status="PASS" starttime="20201115 22:00:44.836" endtime="20201115 22:00:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.831" endtime="20201115 22:00:44.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.841" endtime="20201115 22:00:44.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:44.844" endtime="20201115 22:00:44.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.843" endtime="20201115 22:00:44.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.839" endtime="20201115 22:00:44.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.474" endtime="20201115 22:00:44.865"></status>
</kw>
<msg timestamp="20201115 22:00:44.865" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.874" endtime="20201115 22:00:44.889"></status>
</kw>
<msg timestamp="20201115 22:00:44.889" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.872" endtime="20201115 22:00:44.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:44.892" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 1', 'msg': ['overhead_timer_list remove 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:44.890" endtime="20201115 22:00:44.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.893" endtime="20201115 22:00:44.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.870" endtime="20201115 22:00:44.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.868" endtime="20201115 22:00:44.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:44.902" endtime="20201115 22:00:45.189"></status>
</kw>
<msg timestamp="20201115 22:00:45.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:44.900" endtime="20201115 22:00:45.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.193" endtime="20201115 22:00:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.201" endtime="20201115 22:00:45.203"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.897" endtime="20201115 22:00:45.204"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.896" endtime="20201115 22:00:45.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.208" level="INFO">${RESULT} = [{'time': 0.022224833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.022312736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:45.205" endtime="20201115 22:00:45.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.221" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.209" endtime="20201115 22:00:45.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.226" level="INFO">NAME: 00-overhead-1-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.225" endtime="20201115 22:00:45.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.228" level="INFO">VALUE: [9.665999999998454e-06, 9.694000000001063e-06, 9.694000000001063e-06, 9.680000000001493e-06, 9.681000000000967e-06, 9.695000000000537e-06, 9.667000000001397e-06, 9.638999999998787e-06, 9.722000000000203e-06, 9.680000000001493e-06, 9.708000000000633e-06, 9.708000000000633e-06, 9.722999999999676e-06, 9.680000000001493e-06, 9.680000000001493e-06, 9.667000000001397e-06, 9.695000000000537e-06, 9.708000000000633e-06, 9.681000000000967e-06, 9.681000000000967e-06, 9.624999999999218e-06, 9.708000000000633e-06, 9.695000000000537e-06, 9.638999999998787e-06, 9.694000000001063e-06, 9.638999999998787e-06, 9.694000000001063e-06, 9.693999999997593e-06, 9.694000000001063e-06, 9.693999999997593e-06, 9.708000000000633e-06, 9.707999999997163e-06, 9.665999999998454e-06, 9.693999999997593e-06, 9.693999999997593e-06, 9.681000000000967e-06, 9.680999999997497e-06, 9.749999999999343e-06, 9.624999999999218e-06, 9.680999999997497e-06, 9.709000000000106e-06, 9.695000000000537e-06, 9.709000000000106e-06, 9.695000000000537e-06, 9.666999999997927e-06, 9.625000000002687e-06, 9.679999999998024e-06, 9.708000000000633e-06, 9.651999999998884e-06, 9.695000000000537e-06]</msg>
<status status="PASS" starttime="20201115 22:00:45.227" endtime="20201115 22:00:45.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.222" endtime="20201115 22:00:45.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.232" endtime="20201115 22:00:45.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.235" endtime="20201115 22:00:45.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.234" endtime="20201115 22:00:45.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.230" endtime="20201115 22:00:45.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:44.866" endtime="20201115 22:00:45.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.297" endtime="20201115 22:00:45.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.296" endtime="20201115 22:00:45.256"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.258" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.267" endtime="20201115 22:00:45.282"></status>
</kw>
<msg timestamp="20201115 22:00:45.283" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.266" endtime="20201115 22:00:45.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.285" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.284" endtime="20201115 22:00:45.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.286" endtime="20201115 22:00:45.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.263" endtime="20201115 22:00:45.288"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.261" endtime="20201115 22:00:45.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.295" endtime="20201115 22:00:45.581"></status>
</kw>
<msg timestamp="20201115 22:00:45.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.294" endtime="20201115 22:00:45.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024599681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024609708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.585" endtime="20201115 22:00:45.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.593" endtime="20201115 22:00:45.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.291" endtime="20201115 22:00:45.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.290" endtime="20201115 22:00:45.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.600" level="INFO">${RESULT} = [{'time': 0.024609708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.024712264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.597" endtime="20201115 22:00:45.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:45.613" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.601" endtime="20201115 22:00:45.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.618" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:45.617" endtime="20201115 22:00:45.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.621" level="INFO">VALUE: [1.0026999999999259e-05, 1.0028000000002202e-05, 1.0042000000001772e-05, 9.986999999999496e-06, 9.999999999999593e-06, 1.0000000000003062e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 1.0013999999999162e-05, 1.0068999999997968e-05, 1.0028000000002202e-05, 9.999999999999593e-06, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0014000000002632e-05, 9.986000000000023e-06, 1.0027999999998732e-05, 1.0012999999999689e-05, 1.0040999999998829e-05, 1.0027999999998732e-05, 1.0041000000002298e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0054999999998399e-05, 1.0028000000002202e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0014000000002632e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0026999999999259e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0026999999999259e-05, 1.0028000000002202e-05, 9.986000000000023e-06, 9.999999999999593e-06, 1.0014000000002632e-05, 9.999999999999593e-06, 1.0014000000002632e-05, 1.0014000000002632e-05]</msg>
<status status="PASS" starttime="20201115 22:00:45.619" endtime="20201115 22:00:45.621"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.614" endtime="20201115 22:00:45.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.624" endtime="20201115 22:00:45.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:45.627" endtime="20201115 22:00:45.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.626" endtime="20201115 22:00:45.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.623" endtime="20201115 22:00:45.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.259" endtime="20201115 22:00:45.648"></status>
</kw>
<msg timestamp="20201115 22:00:45.648" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.657" endtime="20201115 22:00:45.672"></status>
</kw>
<msg timestamp="20201115 22:00:45.672" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.656" endtime="20201115 22:00:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.675" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:45.674" endtime="20201115 22:00:45.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.676" endtime="20201115 22:00:45.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.653" endtime="20201115 22:00:45.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.651" endtime="20201115 22:00:45.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.685" endtime="20201115 22:00:45.972"></status>
</kw>
<msg timestamp="20201115 22:00:45.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.683" endtime="20201115 22:00:45.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:45.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:45.976" endtime="20201115 22:00:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:45.984" endtime="20201115 22:00:45.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.681" endtime="20201115 22:00:45.986"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.679" endtime="20201115 22:00:45.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:45.991" level="INFO">${RESULT} = [{'time': 0.022423333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.022519236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:45.988" endtime="20201115 22:00:45.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.004" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:45.992" endtime="20201115 22:00:46.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.009" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.008" endtime="20201115 22:00:46.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.012" level="INFO">VALUE: [1.0026999999999259e-05, 1.0014000000002632e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0040999999998829e-05, 1.0026999999999259e-05, 1.0027000000002728e-05, 1.0012999999999689e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0026999999999259e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 1.0000000000003062e-05, 9.999999999999593e-06, 9.972999999999926e-06, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0070000000000912e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 1.0027999999998732e-05, 9.959000000000356e-06, 9.999999999999593e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0027999999998732e-05, 1.0014000000002632e-05, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0028000000002202e-05, 1.0027999999998732e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.010" endtime="20201115 22:00:46.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.006" endtime="20201115 22:00:46.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.015" endtime="20201115 22:00:46.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.018" endtime="20201115 22:00:46.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.017" endtime="20201115 22:00:46.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.013" endtime="20201115 22:00:46.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.649" endtime="20201115 22:00:46.039"></status>
</kw>
<msg timestamp="20201115 22:00:46.039" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.048" endtime="20201115 22:00:46.063"></status>
</kw>
<msg timestamp="20201115 22:00:46.063" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.047" endtime="20201115 22:00:46.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.066" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.065" endtime="20201115 22:00:46.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.067" endtime="20201115 22:00:46.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.044" endtime="20201115 22:00:46.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.042" endtime="20201115 22:00:46.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.076" endtime="20201115 22:00:46.364"></status>
</kw>
<msg timestamp="20201115 22:00:46.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.074" endtime="20201115 22:00:46.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022274111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.368" endtime="20201115 22:00:46.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.376" endtime="20201115 22:00:46.378"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.072" endtime="20201115 22:00:46.379"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.070" endtime="20201115 22:00:46.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.384" level="INFO">${RESULT} = [{'time': 0.022274111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.022367333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.380" endtime="20201115 22:00:46.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.397" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.385" endtime="20201115 22:00:46.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.401" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.400" endtime="20201115 22:00:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.404" level="INFO">VALUE: [1.0013999999999162e-05, 9.944000000001313e-06, 1.0027999999998732e-05, 1.0083000000001008e-05, 1.0042000000001772e-05, 1.0014000000002632e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 9.999999999999593e-06, 1.0026999999999259e-05, 1.0000000000003062e-05, 9.999999999999593e-06, 9.999999999999593e-06, 1.0042000000001772e-05, 1.0056000000001342e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0014000000002632e-05, 1.0042000000001772e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0012999999999689e-05, 1.0028000000002202e-05, 1.0013999999999162e-05, 1.0014000000002632e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0027999999998732e-05, 9.986000000000023e-06, 1.0014000000002632e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0027999999998732e-05, 1.0055999999997872e-05, 1.0027999999998732e-05, 1.0069999999997442e-05, 1.0041000000002298e-05, 1.0012999999999689e-05, 9.999999999999593e-06, 1.0028000000002202e-05, 1.0041000000002298e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0013999999999162e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.402" endtime="20201115 22:00:46.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.398" endtime="20201115 22:00:46.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.407" endtime="20201115 22:00:46.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.410" endtime="20201115 22:00:46.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.409" endtime="20201115 22:00:46.430"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.405" endtime="20201115 22:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.040" endtime="20201115 22:00:46.431"></status>
</kw>
<msg timestamp="20201115 22:00:46.431" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.440" endtime="20201115 22:00:46.455"></status>
</kw>
<msg timestamp="20201115 22:00:46.456" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.438" endtime="20201115 22:00:46.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.457" endtime="20201115 22:00:46.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.459" endtime="20201115 22:00:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.436" endtime="20201115 22:00:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.434" endtime="20201115 22:00:46.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.468" endtime="20201115 22:00:46.755"></status>
</kw>
<msg timestamp="20201115 22:00:46.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.467" endtime="20201115 22:00:46.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.760" endtime="20201115 22:00:46.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.768" endtime="20201115 22:00:46.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.464" endtime="20201115 22:00:46.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.462" endtime="20201115 22:00:46.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:46.775" level="INFO">${RESULT} = [{'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.022343347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:46.772" endtime="20201115 22:00:46.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:46.788" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:46.776" endtime="20201115 22:00:46.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.793" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:46.792" endtime="20201115 22:00:46.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.795" level="INFO">VALUE: [1.0013999999999162e-05, 1.0027999999998732e-05, 1.0027000000002728e-05, 1.0054999999998399e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0055000000001868e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0028000000002202e-05, 9.999999999999593e-06, 9.944999999997317e-06, 1.0013999999999162e-05, 9.986000000000023e-06, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0084000000000481e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0083000000001008e-05, 1.0027000000002728e-05, 9.999999999999593e-06, 1.0014000000002632e-05, 9.972000000000453e-06, 1.0013999999999162e-05, 1.0026999999999259e-05, 1.0027999999998732e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0055000000001868e-05, 1.0070000000000912e-05, 1.0013999999999162e-05, 1.0042000000001772e-05, 1.0013999999999162e-05, 1.0014000000002632e-05, 9.999999999999593e-06, 1.0054999999998399e-05, 1.0056000000001342e-05, 1.0026999999999259e-05, 1.0014000000002632e-05, 9.999999999999593e-06, 9.999999999999593e-06, 1.0027999999998732e-05, 1.0041999999998302e-05, 9.999999999999593e-06, 1.0014000000002632e-05, 1.0013999999999162e-05, 1.0083000000001008e-05, 1.0069999999997442e-05, 1.0027999999998732e-05]</msg>
<status status="PASS" starttime="20201115 22:00:46.794" endtime="20201115 22:00:46.796"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.789" endtime="20201115 22:00:46.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.798" endtime="20201115 22:00:46.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:46.802" endtime="20201115 22:00:46.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.800" endtime="20201115 22:00:46.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.797" endtime="20201115 22:00:46.822"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.432" endtime="20201115 22:00:46.823"></status>
</kw>
<msg timestamp="20201115 22:00:46.823" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.832" endtime="20201115 22:00:46.847"></status>
</kw>
<msg timestamp="20201115 22:00:46.848" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.830" endtime="20201115 22:00:46.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:46.850" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 2', 'msg': ['overhead_timer_list remove 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:46.849" endtime="20201115 22:00:46.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.851" endtime="20201115 22:00:46.853"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.827" endtime="20201115 22:00:46.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.825" endtime="20201115 22:00:46.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:46.861" endtime="20201115 22:00:47.148"></status>
</kw>
<msg timestamp="20201115 22:00:47.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:46.859" endtime="20201115 22:00:47.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.152" endtime="20201115 22:00:47.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.161" endtime="20201115 22:00:47.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.856" endtime="20201115 22:00:47.163"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.855" endtime="20201115 22:00:47.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.168" level="INFO">${RESULT} = [{'time': 0.022325764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.022427319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.164" endtime="20201115 22:00:47.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.181" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.169" endtime="20201115 22:00:47.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.185" level="INFO">NAME: 00-overhead-2-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.184" endtime="20201115 22:00:47.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.188" level="INFO">VALUE: [1.0028000000002202e-05, 1.0027000000002728e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 1.0013999999999162e-05, 1.0014000000002632e-05, 1.0028000000002202e-05, 1.0026999999999259e-05, 9.972999999999926e-06, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0028000000002202e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0056000000001342e-05, 1.0014000000002632e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0042000000001772e-05, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0013999999999162e-05, 9.972000000000453e-06, 1.0028000000002202e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0014000000002632e-05, 1.0013999999999162e-05, 1.0012999999999689e-05, 1.0013999999999162e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0026999999999259e-05, 9.999999999999593e-06, 1.0013999999999162e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0027999999998732e-05, 1.0097000000000578e-05, 1.0028000000002202e-05, 1.0014000000002632e-05, 1.0040999999998829e-05, 1.0027000000002728e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.186" endtime="20201115 22:00:47.188"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.182" endtime="20201115 22:00:47.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.191" endtime="20201115 22:00:47.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.194" endtime="20201115 22:00:47.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.193" endtime="20201115 22:00:47.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.189" endtime="20201115 22:00:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:46.823" endtime="20201115 22:00:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.257" endtime="20201115 22:00:47.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:45.256" endtime="20201115 22:00:47.215"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.218" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.226" endtime="20201115 22:00:47.243"></status>
</kw>
<msg timestamp="20201115 22:00:47.243" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.225" endtime="20201115 22:00:47.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.245" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.244" endtime="20201115 22:00:47.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.246" endtime="20201115 22:00:47.248"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.222" endtime="20201115 22:00:47.249"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.220" endtime="20201115 22:00:47.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.256" endtime="20201115 22:00:47.543"></status>
</kw>
<msg timestamp="20201115 22:00:47.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.254" endtime="20201115 22:00:47.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024651694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.547" endtime="20201115 22:00:47.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.555" endtime="20201115 22:00:47.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.252" endtime="20201115 22:00:47.557"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.250" endtime="20201115 22:00:47.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.562" level="INFO">${RESULT} = [{'time': 0.024662014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.024777097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:47.559" endtime="20201115 22:00:47.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.575" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.563" endtime="20201115 22:00:47.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.580" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.579" endtime="20201115 22:00:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.582" level="INFO">VALUE: [1.0320000000001162e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0305999999998122e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0334000000000731e-05, 1.0318999999998218e-05, 1.0347000000000828e-05, 1.0277999999998982e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0402999999999107e-05, 1.0348000000000301e-05, 1.0318999999998218e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0361000000000398e-05, 1.0333999999997262e-05, 1.0292000000002022e-05, 1.0348000000000301e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0333999999997262e-05, 1.0332999999997788e-05, 1.0305999999998122e-05, 1.0334000000000731e-05, 1.0333999999997262e-05, 1.0389000000003007e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0290999999999079e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0348000000000301e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0374999999999968e-05, 1.0318999999998218e-05, 1.0389000000003007e-05, 1.0334000000000731e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.581" endtime="20201115 22:00:47.583"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.576" endtime="20201115 22:00:47.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.585" endtime="20201115 22:00:47.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.589" endtime="20201115 22:00:47.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.587" endtime="20201115 22:00:47.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.584" endtime="20201115 22:00:47.609"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.218" endtime="20201115 22:00:47.609"></status>
</kw>
<msg timestamp="20201115 22:00:47.610" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.618" endtime="20201115 22:00:47.635"></status>
</kw>
<msg timestamp="20201115 22:00:47.636" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.617" endtime="20201115 22:00:47.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.638" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:47.637" endtime="20201115 22:00:47.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.639" endtime="20201115 22:00:47.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.614" endtime="20201115 22:00:47.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.612" endtime="20201115 22:00:47.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.648" endtime="20201115 22:00:47.936"></status>
</kw>
<msg timestamp="20201115 22:00:47.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.647" endtime="20201115 22:00:47.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:47.940" endtime="20201115 22:00:47.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.948" endtime="20201115 22:00:47.950"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.644" endtime="20201115 22:00:47.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.642" endtime="20201115 22:00:47.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:47.955" level="INFO">${RESULT} = [{'time': 0.022399292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.02251775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:47.952" endtime="20201115 22:00:47.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:47.968" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:47.956" endtime="20201115 22:00:47.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.973" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:47.972" endtime="20201115 22:00:47.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:47.975" level="INFO">VALUE: [1.0320000000001162e-05, 1.0374999999999968e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0306000000001592e-05, 1.0417000000002147e-05, 1.0263999999999412e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0388999999999537e-05, 1.0249999999999843e-05, 1.0319000000001688e-05, 1.0332999999997788e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0291000000002548e-05, 1.0332999999997788e-05, 1.0348000000000301e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0277999999998982e-05, 1.0320000000001162e-05, 1.0319999999997692e-05, 1.0333000000001258e-05, 1.0402999999999107e-05, 1.0346999999997358e-05, 1.0306000000001592e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0334000000000731e-05, 1.0374999999999968e-05, 1.0319999999997692e-05, 1.0333000000001258e-05, 1.0319000000001688e-05, 1.0361999999999871e-05, 1.0276999999999509e-05, 1.0334000000000731e-05, 1.0334000000000731e-05, 1.0318999999998218e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0360999999996928e-05, 1.0305999999998122e-05]</msg>
<status status="PASS" starttime="20201115 22:00:47.974" endtime="20201115 22:00:47.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.969" endtime="20201115 22:00:47.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:47.978" endtime="20201115 22:00:47.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:47.982" endtime="20201115 22:00:48.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.980" endtime="20201115 22:00:48.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.977" endtime="20201115 22:00:48.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.610" endtime="20201115 22:00:48.002"></status>
</kw>
<msg timestamp="20201115 22:00:48.003" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.012" endtime="20201115 22:00:48.028"></status>
</kw>
<msg timestamp="20201115 22:00:48.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.010" endtime="20201115 22:00:48.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.031" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.030" endtime="20201115 22:00:48.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.032" endtime="20201115 22:00:48.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.008" endtime="20201115 22:00:48.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.005" endtime="20201115 22:00:48.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.041" endtime="20201115 22:00:48.327"></status>
</kw>
<msg timestamp="20201115 22:00:48.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.039" endtime="20201115 22:00:48.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022995375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.331" endtime="20201115 22:00:48.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.339" endtime="20201115 22:00:48.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.037" endtime="20201115 22:00:48.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.035" endtime="20201115 22:00:48.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.346" level="INFO">${RESULT} = [{'time': 0.022995375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.023113611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:48.342" endtime="20201115 22:00:48.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.359" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.347" endtime="20201115 22:00:48.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.364" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.363" endtime="20201115 22:00:48.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.366" level="INFO">VALUE: [1.0332999999997788e-05, 1.0318999999998218e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0318999999998218e-05, 1.0333999999997262e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0277000000002978e-05, 1.0319000000001688e-05, 1.0318999999998218e-05, 1.0332999999997788e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0332999999997788e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0332999999997788e-05, 1.0320000000001162e-05, 1.0402999999999107e-05, 1.0320000000001162e-05, 1.0361000000000398e-05, 1.0334000000000731e-05, 1.0334000000000731e-05, 1.0346999999997358e-05, 1.0333000000001258e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0320000000001162e-05, 1.0290999999999079e-05, 1.0333999999997262e-05, 1.0348000000000301e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.365" endtime="20201115 22:00:48.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.360" endtime="20201115 22:00:48.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.369" endtime="20201115 22:00:48.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.373" endtime="20201115 22:00:48.392"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.371" endtime="20201115 22:00:48.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.367" endtime="20201115 22:00:48.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.003" endtime="20201115 22:00:48.394"></status>
</kw>
<msg timestamp="20201115 22:00:48.394" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.403" endtime="20201115 22:00:48.419"></status>
</kw>
<msg timestamp="20201115 22:00:48.419" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.401" endtime="20201115 22:00:48.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.422" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.420" endtime="20201115 22:00:48.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.423" endtime="20201115 22:00:48.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.398" endtime="20201115 22:00:48.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.396" endtime="20201115 22:00:48.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.432" endtime="20201115 22:00:48.719"></status>
</kw>
<msg timestamp="20201115 22:00:48.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:48.430" endtime="20201115 22:00:48.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:00:48.723" endtime="20201115 22:00:48.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.732" endtime="20201115 22:00:48.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.428" endtime="20201115 22:00:48.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.426" endtime="20201115 22:00:48.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:48.738" level="INFO">${RESULT} = [{'time': 0.02240775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0333000000001258e-05, 'source_diff': 1.0333000000001258e-05}, {'time': 0.022522986, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:48.735" endtime="20201115 22:00:48.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:48.752" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:48.739" endtime="20201115 22:00:48.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.757" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:48.755" endtime="20201115 22:00:48.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.759" level="INFO">VALUE: [1.0333000000001258e-05, 1.0332999999997788e-05, 1.0319999999997692e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0306000000001592e-05, 1.0346999999997358e-05, 1.0334000000000731e-05, 1.0348000000000301e-05, 1.0333000000001258e-05, 1.0346999999997358e-05, 1.0318999999998218e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0333999999997262e-05, 1.0318999999998218e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0318999999998218e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0333000000001258e-05, 1.0374999999999968e-05, 1.0333000000001258e-05, 1.0304999999998649e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0347999999996832e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0320000000001162e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0333999999997262e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0333999999997262e-05, 1.0332999999997788e-05, 1.0347000000000828e-05]</msg>
<status status="PASS" starttime="20201115 22:00:48.758" endtime="20201115 22:00:48.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.753" endtime="20201115 22:00:48.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.763" endtime="20201115 22:00:48.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:48.766" endtime="20201115 22:00:48.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.765" endtime="20201115 22:00:48.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.761" endtime="20201115 22:00:48.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.394" endtime="20201115 22:00:48.787"></status>
</kw>
<msg timestamp="20201115 22:00:48.787" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.796" endtime="20201115 22:00:48.813"></status>
</kw>
<msg timestamp="20201115 22:00:48.813" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.794" endtime="20201115 22:00:48.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:48.815" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 3', 'msg': ['overhead_timer_list remove 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:48.814" endtime="20201115 22:00:48.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.816" endtime="20201115 22:00:48.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.792" endtime="20201115 22:00:48.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.790" endtime="20201115 22:00:48.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:48.826" endtime="20201115 22:00:49.111"></status>
</kw>
<msg timestamp="20201115 22:00:49.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:48.824" endtime="20201115 22:00:49.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.115" endtime="20201115 22:00:49.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.123" endtime="20201115 22:00:49.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.822" endtime="20201115 22:00:49.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.820" endtime="20201115 22:00:49.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.130" level="INFO">${RESULT} = [{'time': 0.022315611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.022431847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.127" endtime="20201115 22:00:49.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.143" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.131" endtime="20201115 22:00:49.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.148" level="INFO">NAME: 00-overhead-3-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.147" endtime="20201115 22:00:49.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.150" level="INFO">VALUE: [1.0318999999998218e-05, 1.0333000000001258e-05, 1.0346999999997358e-05, 1.0318999999998218e-05, 1.0320000000001162e-05, 1.0347000000000828e-05, 1.0292000000002022e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0291999999998552e-05, 1.0319999999997692e-05, 1.0347000000000828e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0332999999997788e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0333000000001258e-05, 1.0319999999997692e-05, 1.0334000000000731e-05, 1.0334000000000731e-05, 1.0318999999998218e-05, 1.0318999999998218e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 1.0333000000001258e-05, 1.0334000000000731e-05, 1.0332999999997788e-05, 1.0415999999999204e-05, 1.0346999999997358e-05, 1.0291999999998552e-05, 1.0319000000001688e-05, 1.0319999999997692e-05, 1.0334000000000731e-05, 1.0333000000001258e-05, 1.0347000000000828e-05, 1.0334000000000731e-05, 1.0320000000001162e-05, 1.0334000000000731e-05, 1.0347000000000828e-05, 1.0347000000000828e-05, 1.0306000000001592e-05, 1.0334000000000731e-05, 1.0415999999999204e-05, 1.0333000000001258e-05, 1.0347000000000828e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.149" endtime="20201115 22:00:49.155"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.144" endtime="20201115 22:00:49.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.158" endtime="20201115 22:00:49.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.161" endtime="20201115 22:00:49.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.159" endtime="20201115 22:00:49.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.156" endtime="20201115 22:00:49.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:48.788" endtime="20201115 22:00:49.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.217" endtime="20201115 22:00:49.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:47.216" endtime="20201115 22:00:49.182"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.184" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.193" endtime="20201115 22:00:49.210"></status>
</kw>
<msg timestamp="20201115 22:00:49.211" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.191" endtime="20201115 22:00:49.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.213" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.212" endtime="20201115 22:00:49.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.214" endtime="20201115 22:00:49.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.189" endtime="20201115 22:00:49.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.187" endtime="20201115 22:00:49.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.223" endtime="20201115 22:00:49.510"></status>
</kw>
<msg timestamp="20201115 22:00:49.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.222" endtime="20201115 22:00:49.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024623292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024633958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.514" endtime="20201115 22:00:49.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.522" endtime="20201115 22:00:49.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.219" endtime="20201115 22:00:49.524"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.217" endtime="20201115 22:00:49.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.529" level="INFO">${RESULT} = [{'time': 0.024633958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0665999999999454e-05, 'source_diff': 1.0665999999999454e-05}, {'time': 0.024762014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.525" endtime="20201115 22:00:49.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.542" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.530" endtime="20201115 22:00:49.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.546" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.545" endtime="20201115 22:00:49.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.549" level="INFO">VALUE: [1.0665999999999454e-05, 1.0638999999999788e-05, 1.0667000000002397e-05, 1.0597000000001078e-05, 1.0569999999997942e-05, 1.0667000000002397e-05, 1.0638999999999788e-05, 1.0597000000001078e-05, 1.0651999999999884e-05, 1.0653000000002827e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0598000000000551e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0653000000002827e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0597000000001078e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0679999999999024e-05, 1.0666999999998927e-05, 1.0638000000000314e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0708000000001633e-05, 1.0652999999999357e-05, 1.0610999999997178e-05, 1.0639000000003257e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0653000000002827e-05, 1.0597000000001078e-05, 1.0625000000000218e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0693999999998594e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0693999999998594e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.547" endtime="20201115 22:00:49.550"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.543" endtime="20201115 22:00:49.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.553" endtime="20201115 22:00:49.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.556" endtime="20201115 22:00:49.575"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.554" endtime="20201115 22:00:49.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.551" endtime="20201115 22:00:49.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.185" endtime="20201115 22:00:49.577"></status>
</kw>
<msg timestamp="20201115 22:00:49.577" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.586" endtime="20201115 22:00:49.602"></status>
</kw>
<msg timestamp="20201115 22:00:49.602" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.584" endtime="20201115 22:00:49.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.605" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.603" endtime="20201115 22:00:49.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.606" endtime="20201115 22:00:49.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.581" endtime="20201115 22:00:49.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.579" endtime="20201115 22:00:49.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.615" endtime="20201115 22:00:49.903"></status>
</kw>
<msg timestamp="20201115 22:00:49.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.614" endtime="20201115 22:00:49.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:49.907" endtime="20201115 22:00:49.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.915" endtime="20201115 22:00:49.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.611" endtime="20201115 22:00:49.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.609" endtime="20201115 22:00:49.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:49.922" level="INFO">${RESULT} = [{'time': 0.022363583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0651999999999884e-05, 'source_diff': 1.0651999999999884e-05}, {'time': 0.022493486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:49.919" endtime="20201115 22:00:49.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:49.935" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:49.923" endtime="20201115 22:00:49.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.940" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:49.939" endtime="20201115 22:00:49.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.943" level="INFO">VALUE: [1.0651999999999884e-05, 1.0638999999999788e-05, 1.0651999999999884e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0708000000001633e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0638000000000314e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0651999999999884e-05, 1.0651999999999884e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0693999999998594e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0653000000002827e-05, 1.0625000000000218e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0666999999998927e-05, 1.0653000000002827e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0721999999997733e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0584000000000982e-05, 1.0625000000000218e-05, 1.0653000000002827e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0681000000001967e-05, 1.0625000000000218e-05, 1.0611000000000648e-05, 1.0638999999999788e-05]</msg>
<status status="PASS" starttime="20201115 22:00:49.941" endtime="20201115 22:00:49.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.937" endtime="20201115 22:00:49.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.946" endtime="20201115 22:00:49.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:49.949" endtime="20201115 22:00:49.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.948" endtime="20201115 22:00:49.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.944" endtime="20201115 22:00:49.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.577" endtime="20201115 22:00:49.970"></status>
</kw>
<msg timestamp="20201115 22:00:49.970" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:49.979" endtime="20201115 22:00:49.996"></status>
</kw>
<msg timestamp="20201115 22:00:49.996" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.977" endtime="20201115 22:00:49.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:49.999" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:49.997" endtime="20201115 22:00:49.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.000" endtime="20201115 22:00:50.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.975" endtime="20201115 22:00:50.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.973" endtime="20201115 22:00:50.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.009" endtime="20201115 22:00:50.297"></status>
</kw>
<msg timestamp="20201115 22:00:50.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.007" endtime="20201115 22:00:50.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.301" endtime="20201115 22:00:50.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.309" endtime="20201115 22:00:50.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.005" endtime="20201115 22:00:50.312"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.003" endtime="20201115 22:00:50.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.317" level="INFO">${RESULT} = [{'time': 0.022298236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.022425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:00:50.313" endtime="20201115 22:00:50.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.330" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.318" endtime="20201115 22:00:50.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.334" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.333" endtime="20201115 22:00:50.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.337" level="INFO">VALUE: [1.0625000000000218e-05, 1.0652999999999357e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0666999999998927e-05, 1.0651999999999884e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0694999999998067e-05, 1.0667000000002397e-05, 1.0651999999999884e-05, 1.0652999999999357e-05, 1.0583999999997512e-05, 1.0652999999999357e-05, 1.0707999999998163e-05, 1.0723000000000676e-05, 1.0736000000000773e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638000000000314e-05, 1.0667000000002397e-05, 1.0638999999999788e-05, 1.0651999999999884e-05, 1.0667000000002397e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0625000000000218e-05, 1.0596999999997608e-05, 1.0638000000000314e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0611000000000648e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0625000000000218e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.335" endtime="20201115 22:00:50.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.331" endtime="20201115 22:00:50.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.340" endtime="20201115 22:00:50.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.343" endtime="20201115 22:00:50.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.342" endtime="20201115 22:00:50.363"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.338" endtime="20201115 22:00:50.364"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.971" endtime="20201115 22:00:50.364"></status>
</kw>
<msg timestamp="20201115 22:00:50.364" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.373" endtime="20201115 22:00:50.390"></status>
</kw>
<msg timestamp="20201115 22:00:50.391" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.372" endtime="20201115 22:00:50.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.393" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.392" endtime="20201115 22:00:50.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.394" endtime="20201115 22:00:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.369" endtime="20201115 22:00:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.367" endtime="20201115 22:00:50.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.403" endtime="20201115 22:00:50.689"></status>
</kw>
<msg timestamp="20201115 22:00:50.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.401" endtime="20201115 22:00:50.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:50.693" endtime="20201115 22:00:50.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.702" endtime="20201115 22:00:50.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.399" endtime="20201115 22:00:50.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.397" endtime="20201115 22:00:50.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:50.708" level="INFO">${RESULT} = [{'time': 0.022321458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.022452361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:50.705" endtime="20201115 22:00:50.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:50.722" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:50.709" endtime="20201115 22:00:50.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.726" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:50.725" endtime="20201115 22:00:50.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.728" level="INFO">VALUE: [1.0638999999999788e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0653000000002827e-05, 1.0651999999999884e-05, 1.0653000000002827e-05, 1.0625000000000218e-05, 1.0680999999998497e-05, 1.0638000000000314e-05, 1.0652999999999357e-05, 1.0639000000003257e-05, 1.0625000000000218e-05, 1.0653000000002827e-05, 1.0638999999999788e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0638000000000314e-05, 1.0652999999999357e-05, 1.0638000000000314e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0681000000001967e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0653000000002827e-05, 1.0681000000001967e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0709000000001107e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0667000000002397e-05, 1.0568999999998469e-05, 1.0597000000001078e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0638000000000314e-05, 1.0639000000003257e-05, 1.0638999999999788e-05, 1.0583000000001508e-05, 1.0666999999998927e-05]</msg>
<status status="PASS" starttime="20201115 22:00:50.727" endtime="20201115 22:00:50.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.723" endtime="20201115 22:00:50.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.732" endtime="20201115 22:00:50.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:50.735" endtime="20201115 22:00:50.754"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.733" endtime="20201115 22:00:50.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.730" endtime="20201115 22:00:50.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.365" endtime="20201115 22:00:50.756"></status>
</kw>
<msg timestamp="20201115 22:00:50.756" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.765" endtime="20201115 22:00:50.782"></status>
</kw>
<msg timestamp="20201115 22:00:50.783" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.763" endtime="20201115 22:00:50.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:50.786" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 4', 'msg': ['overhead_timer_list remove 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:50.784" endtime="20201115 22:00:50.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.787" endtime="20201115 22:00:50.788"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.761" endtime="20201115 22:00:50.789"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.759" endtime="20201115 22:00:50.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:50.796" endtime="20201115 22:00:51.085"></status>
</kw>
<msg timestamp="20201115 22:00:51.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:50.794" endtime="20201115 22:00:51.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:00:51.090" endtime="20201115 22:00:51.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.098" endtime="20201115 22:00:51.099"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.792" endtime="20201115 22:00:51.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.790" endtime="20201115 22:00:51.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.105" level="INFO">${RESULT} = [{'time': 0.022632639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.022765875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.101" endtime="20201115 22:00:51.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.118" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.105" endtime="20201115 22:00:51.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.122" level="INFO">NAME: 00-overhead-4-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.121" endtime="20201115 22:00:51.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.125" level="INFO">VALUE: [1.0638999999999788e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 1.0638000000000314e-05, 1.0611000000000648e-05, 1.0638999999999788e-05, 1.0611000000000648e-05, 1.0651999999999884e-05, 1.0651999999999884e-05, 1.0695000000001537e-05, 1.0569999999997942e-05, 1.0611000000000648e-05, 1.0665999999999454e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0653000000002827e-05, 1.0694000000002063e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0624999999996748e-05, 1.0611000000000648e-05, 1.0624999999996748e-05, 1.0638999999999788e-05, 1.0612000000000121e-05, 1.0584000000000982e-05, 1.0694000000002063e-05, 1.0652999999999357e-05, 1.0651999999999884e-05, 1.0611000000000648e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0651999999999884e-05, 1.0555000000002368e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0652999999999357e-05, 1.0666999999998927e-05, 1.0652999999999357e-05, 1.0625000000000218e-05, 1.0637999999996844e-05, 1.0638999999999788e-05, 1.0666000000002923e-05, 1.0665999999999454e-05, 1.0638999999999788e-05, 1.0652999999999357e-05, 1.0638999999999788e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.123" endtime="20201115 22:00:51.125"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.119" endtime="20201115 22:00:51.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.128" endtime="20201115 22:00:51.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.131" endtime="20201115 22:00:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.130" endtime="20201115 22:00:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.126" endtime="20201115 22:00:51.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:50.756" endtime="20201115 22:00:51.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.183" endtime="20201115 22:00:51.152"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:49.182" endtime="20201115 22:00:51.152"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.155" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.163" endtime="20201115 22:00:51.181"></status>
</kw>
<msg timestamp="20201115 22:00:51.181" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.162" endtime="20201115 22:00:51.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.184" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.182" endtime="20201115 22:00:51.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.185" endtime="20201115 22:00:51.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.159" endtime="20201115 22:00:51.187"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.157" endtime="20201115 22:00:51.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.194" endtime="20201115 22:00:51.481"></status>
</kw>
<msg timestamp="20201115 22:00:51.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024832014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.193" endtime="20201115 22:00:51.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024832014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.485" endtime="20201115 22:00:51.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.494" endtime="20201115 22:00:51.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.190" endtime="20201115 22:00:51.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.188" endtime="20201115 22:00:51.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.500" level="INFO">${RESULT} = [{'time': 0.024832014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.024981597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.497" endtime="20201115 22:00:51.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.513" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.501" endtime="20201115 22:00:51.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.518" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.517" endtime="20201115 22:00:51.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.521" level="INFO">VALUE: [1.0957999999998413e-05, 1.0958000000001883e-05, 1.0945000000001787e-05, 1.0903000000003077e-05, 1.0943999999998844e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0971999999997983e-05, 1.1027999999999732e-05, 1.0958999999997887e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0986000000001023e-05, 1.0986000000001023e-05, 1.0972000000001453e-05, 1.0957999999998413e-05, 1.0929999999999274e-05, 1.0957999999998413e-05, 1.0945000000001787e-05, 1.0889000000000038e-05, 1.0930000000002743e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.0943999999998844e-05, 1.0944000000002313e-05, 1.0916999999999177e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0958999999997887e-05, 1.1000000000000593e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0943999999998844e-05, 1.0958000000001883e-05, 1.0930999999998747e-05, 1.0958000000001883e-05, 1.0943999999998844e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0985999999997553e-05, 1.0944999999998317e-05, 1.0973000000000926e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0889000000000038e-05, 1.0972000000004922e-05, 1.0957999999998413e-05, 1.0958999999997887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.519" endtime="20201115 22:00:51.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.514" endtime="20201115 22:00:51.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.524" endtime="20201115 22:00:51.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.527" endtime="20201115 22:00:51.546"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.525" endtime="20201115 22:00:51.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.522" endtime="20201115 22:00:51.547"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.155" endtime="20201115 22:00:51.548"></status>
</kw>
<msg timestamp="20201115 22:00:51.548" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.556" endtime="20201115 22:00:51.573"></status>
</kw>
<msg timestamp="20201115 22:00:51.574" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.555" endtime="20201115 22:00:51.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.577" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.575" endtime="20201115 22:00:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.578" endtime="20201115 22:00:51.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.552" endtime="20201115 22:00:51.580"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.550" endtime="20201115 22:00:51.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.587" endtime="20201115 22:00:51.874"></status>
</kw>
<msg timestamp="20201115 22:00:51.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.585" endtime="20201115 22:00:51.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.878" endtime="20201115 22:00:51.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.887" endtime="20201115 22:00:51.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.583" endtime="20201115 22:00:51.889"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.581" endtime="20201115 22:00:51.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:51.893" level="INFO">${RESULT} = [{'time': 0.022316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.022463167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:51.890" endtime="20201115 22:00:51.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:51.906" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:51.894" endtime="20201115 22:00:51.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.911" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:51.910" endtime="20201115 22:00:51.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.914" level="INFO">VALUE: [1.0971999999997983e-05, 1.0958999999997887e-05, 1.0944000000002313e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.1000000000000593e-05, 1.0930000000002743e-05, 1.0971999999997983e-05, 1.1000000000000593e-05, 1.0958000000001883e-05, 1.0958000000001883e-05, 1.1000000000000593e-05, 1.0957999999998413e-05, 1.0944999999998317e-05, 1.0958000000001883e-05, 1.0959000000001357e-05, 1.0889000000000038e-05, 1.0985999999997553e-05, 1.0902999999999607e-05, 1.0957999999998413e-05, 1.0958000000001883e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0944000000002313e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0958999999997887e-05, 1.0958000000001883e-05, 1.0929999999999274e-05, 1.0959000000001357e-05, 1.0957999999998413e-05, 1.0971999999997983e-05, 1.0943999999998844e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0959000000001357e-05, 1.0959000000001357e-05, 1.0945000000001787e-05, 1.0943999999998844e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0958999999997887e-05, 1.0986000000001023e-05, 1.0971999999997983e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0916999999999177e-05]</msg>
<status status="PASS" starttime="20201115 22:00:51.912" endtime="20201115 22:00:51.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.907" endtime="20201115 22:00:51.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.917" endtime="20201115 22:00:51.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:51.920" endtime="20201115 22:00:51.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.919" endtime="20201115 22:00:51.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.915" endtime="20201115 22:00:51.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.548" endtime="20201115 22:00:51.941"></status>
</kw>
<msg timestamp="20201115 22:00:51.941" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.950" endtime="20201115 22:00:51.968"></status>
</kw>
<msg timestamp="20201115 22:00:51.968" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.949" endtime="20201115 22:00:51.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:51.971" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:51.969" endtime="20201115 22:00:51.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.972" endtime="20201115 22:00:51.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.946" endtime="20201115 22:00:51.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.944" endtime="20201115 22:00:51.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:51.981" endtime="20201115 22:00:52.268"></status>
</kw>
<msg timestamp="20201115 22:00:52.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:51.979" endtime="20201115 22:00:52.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.272" endtime="20201115 22:00:52.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.281" endtime="20201115 22:00:52.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.977" endtime="20201115 22:00:52.283"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.975" endtime="20201115 22:00:52.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.287" level="INFO">${RESULT} = [{'time': 0.022761514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.022901236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.284" endtime="20201115 22:00:52.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.301" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.288" endtime="20201115 22:00:52.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.305" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.304" endtime="20201115 22:00:52.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.307" level="INFO">VALUE: [1.0957999999998413e-05, 1.0943999999998844e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0943999999998844e-05, 1.0944999999998317e-05, 1.0972000000001453e-05, 1.0957999999998413e-05, 1.0958000000001883e-05, 1.0944000000002313e-05, 1.0958000000001883e-05, 1.0945000000001787e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0902999999999607e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0889000000000038e-05, 1.0972000000001453e-05, 1.0986000000001023e-05, 1.0971999999997983e-05, 1.0958000000001883e-05, 1.0957999999998413e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0958000000001883e-05, 1.0929999999999274e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0944999999998317e-05, 1.0959000000001357e-05, 1.0971999999997983e-05, 1.0987000000000496e-05, 1.0958000000001883e-05, 1.0959000000001357e-05, 1.0973000000000926e-05, 1.0929999999999274e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0945000000001787e-05, 1.0972999999997457e-05, 1.0958000000001883e-05, 1.0986000000001023e-05, 1.0945000000001787e-05, 1.0944999999998317e-05, 1.0930999999998747e-05, 1.0958000000001883e-05, 1.0943999999998844e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.306" endtime="20201115 22:00:52.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.301" endtime="20201115 22:00:52.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.311" endtime="20201115 22:00:52.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.314" endtime="20201115 22:00:52.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.313" endtime="20201115 22:00:52.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.309" endtime="20201115 22:00:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.942" endtime="20201115 22:00:52.335"></status>
</kw>
<msg timestamp="20201115 22:00:52.335" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.344" endtime="20201115 22:00:52.361"></status>
</kw>
<msg timestamp="20201115 22:00:52.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.343" endtime="20201115 22:00:52.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.364" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.363" endtime="20201115 22:00:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.365" endtime="20201115 22:00:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.340" endtime="20201115 22:00:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.338" endtime="20201115 22:00:52.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.374" endtime="20201115 22:00:52.661"></status>
</kw>
<msg timestamp="20201115 22:00:52.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.373" endtime="20201115 22:00:52.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.665" endtime="20201115 22:00:52.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.674" endtime="20201115 22:00:52.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.370" endtime="20201115 22:00:52.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.368" endtime="20201115 22:00:52.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:52.680" level="INFO">${RESULT} = [{'time': 0.022216972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0958000000001883e-05, 'source_diff': 1.0958000000001883e-05}, {'time': 0.022359028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:52.677" endtime="20201115 22:00:52.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:52.694" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:52.681" endtime="20201115 22:00:52.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.698" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:52.697" endtime="20201115 22:00:52.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.701" level="INFO">VALUE: [1.0958000000001883e-05, 1.0958999999997887e-05, 1.0958000000001883e-05, 1.0972000000001453e-05, 1.0943999999998844e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0945000000001787e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0971999999997983e-05, 1.0902999999999607e-05, 1.0957999999998413e-05, 1.0931000000002217e-05, 1.0972999999997457e-05, 1.0943999999998844e-05, 1.0959000000001357e-05, 1.0902999999999607e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0972000000001453e-05, 1.0957999999998413e-05, 1.1014000000000163e-05, 1.0959000000001357e-05, 1.0931000000002217e-05, 1.0986000000001023e-05, 1.0985999999997553e-05, 1.0972000000001453e-05, 1.0958000000001883e-05, 1.0944999999998317e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.0958999999997887e-05, 1.0945000000001787e-05, 1.0957999999998413e-05, 1.0958000000001883e-05, 1.0943999999998844e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0957999999998413e-05, 1.0958000000001883e-05, 1.0958000000001883e-05, 1.0958000000001883e-05, 1.0929999999999274e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0958999999997887e-05, 1.0945000000001787e-05, 1.0959000000001357e-05, 1.0958999999997887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:52.699" endtime="20201115 22:00:52.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.695" endtime="20201115 22:00:52.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.704" endtime="20201115 22:00:52.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:52.707" endtime="20201115 22:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.706" endtime="20201115 22:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.702" endtime="20201115 22:00:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.336" endtime="20201115 22:00:52.728"></status>
</kw>
<msg timestamp="20201115 22:00:52.728" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.737" endtime="20201115 22:00:52.755"></status>
</kw>
<msg timestamp="20201115 22:00:52.755" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.736" endtime="20201115 22:00:52.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:52.758" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 5', 'msg': ['overhead_timer_list remove 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:52.756" endtime="20201115 22:00:52.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.759" endtime="20201115 22:00:52.760"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.733" endtime="20201115 22:00:52.761"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.731" endtime="20201115 22:00:52.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:52.768" endtime="20201115 22:00:53.054"></status>
</kw>
<msg timestamp="20201115 22:00:53.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:52.766" endtime="20201115 22:00:53.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.058" endtime="20201115 22:00:53.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.067" endtime="20201115 22:00:53.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.763" endtime="20201115 22:00:53.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.762" endtime="20201115 22:00:53.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.074" level="INFO">${RESULT} = [{'time': 0.022435375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0958000000001883e-05, 'source_diff': 1.0958000000001883e-05}, {'time': 0.022581931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.070" endtime="20201115 22:00:53.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.087" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.075" endtime="20201115 22:00:53.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.091" level="INFO">NAME: 00-overhead-5-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.090" endtime="20201115 22:00:53.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.094" level="INFO">VALUE: [1.0958000000001883e-05, 1.0958999999997887e-05, 1.0944000000002313e-05, 1.0959000000001357e-05, 1.0944999999998317e-05, 1.0931000000002217e-05, 1.0958000000001883e-05, 1.0930000000002743e-05, 1.0958999999997887e-05, 1.0957999999998413e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0986000000001023e-05, 1.0957999999998413e-05, 1.0902999999999607e-05, 1.0959000000001357e-05, 1.0944999999998317e-05, 1.0957999999998413e-05, 1.101299999999722e-05, 1.0958000000001883e-05, 1.0958999999997887e-05, 1.0958000000001883e-05, 1.0945000000001787e-05, 1.0944000000002313e-05, 1.0929999999999274e-05, 1.0957999999998413e-05, 1.0986000000001023e-05, 1.0929999999999274e-05, 1.0931000000002217e-05, 1.0958000000001883e-05, 1.0986000000001023e-05, 1.0958999999997887e-05, 1.0945000000001787e-05, 1.0943999999998844e-05, 1.0929999999999274e-05, 1.0957999999998413e-05, 1.0957999999998413e-05, 1.0986000000001023e-05, 1.0972000000001453e-05, 1.0889000000000038e-05, 1.0915999999999704e-05, 1.0987000000000496e-05, 1.0902999999999607e-05, 1.0959000000001357e-05, 1.0971999999997983e-05, 1.0945000000001787e-05, 1.0944000000002313e-05, 1.0959000000001357e-05, 1.0958999999997887e-05, 1.0958999999997887e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.092" endtime="20201115 22:00:53.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.088" endtime="20201115 22:00:53.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.097" endtime="20201115 22:00:53.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.101" endtime="20201115 22:00:53.120"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.099" endtime="20201115 22:00:53.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.096" endtime="20201115 22:00:53.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:52.729" endtime="20201115 22:00:53.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.153" endtime="20201115 22:00:53.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:51.153" endtime="20201115 22:00:53.122"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.124" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.133" endtime="20201115 22:00:53.152"></status>
</kw>
<msg timestamp="20201115 22:00:53.153" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.131" endtime="20201115 22:00:53.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.155" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.154" endtime="20201115 22:00:53.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.156" endtime="20201115 22:00:53.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.129" endtime="20201115 22:00:53.158"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.127" endtime="20201115 22:00:53.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.165" endtime="20201115 22:00:53.451"></status>
</kw>
<msg timestamp="20201115 22:00:53.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.164" endtime="20201115 22:00:53.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024911375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.456" endtime="20201115 22:00:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.464" endtime="20201115 22:00:53.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.161" endtime="20201115 22:00:53.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.159" endtime="20201115 22:00:53.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.471" level="INFO">${RESULT} = [{'time': 0.024911375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1305999999999122e-05, 'source_diff': 1.1305999999999122e-05}, {'time': 0.025068667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.467" endtime="20201115 22:00:53.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.484" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.472" endtime="20201115 22:00:53.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.488" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.487" endtime="20201115 22:00:53.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.491" level="INFO">VALUE: [1.1305999999999122e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1318999999999219e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1318999999999219e-05, 1.1237000000000746e-05, 1.1277999999999982e-05, 1.1208999999998137e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1236000000001273e-05, 1.1264000000000413e-05, 1.127699999999704e-05, 1.1249999999997373e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1304999999999649e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1249999999997373e-05, 1.1250000000004312e-05, 1.1264000000003882e-05, 1.1263999999996943e-05, 1.1278000000003452e-05, 1.1263999999996943e-05, 1.1249999999997373e-05, 1.1278000000003452e-05, 1.1264000000003882e-05, 1.1277999999996513e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.489" endtime="20201115 22:00:53.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.485" endtime="20201115 22:00:53.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.495" endtime="20201115 22:00:53.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.498" endtime="20201115 22:00:53.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.496" endtime="20201115 22:00:53.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.493" endtime="20201115 22:00:53.518"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.125" endtime="20201115 22:00:53.518"></status>
</kw>
<msg timestamp="20201115 22:00:53.519" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.528" endtime="20201115 22:00:53.546"></status>
</kw>
<msg timestamp="20201115 22:00:53.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.526" endtime="20201115 22:00:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.549" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.547" endtime="20201115 22:00:53.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.550" endtime="20201115 22:00:53.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.523" endtime="20201115 22:00:53.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.521" endtime="20201115 22:00:53.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.558" endtime="20201115 22:00:53.844"></status>
</kw>
<msg timestamp="20201115 22:00:53.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.557" endtime="20201115 22:00:53.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.848" endtime="20201115 22:00:53.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.857" endtime="20201115 22:00:53.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.554" endtime="20201115 22:00:53.859"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.553" endtime="20201115 22:00:53.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:53.863" level="INFO">${RESULT} = [{'time': 0.022401222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.022556736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:53.860" endtime="20201115 22:00:53.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:53.877" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:53.864" endtime="20201115 22:00:53.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.882" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:53.881" endtime="20201115 22:00:53.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.884" level="INFO">VALUE: [1.1263999999996943e-05, 1.1236000000001273e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1208000000002133e-05, 1.1277000000000509e-05, 1.1250000000000843e-05, 1.1277000000000509e-05, 1.1291999999999552e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1249999999997373e-05, 1.1250000000000843e-05, 1.1304999999999649e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1306000000002592e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1332999999998788e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1235999999997803e-05, 1.1304999999999649e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1263000000000939e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1263999999996943e-05, 1.1291999999999552e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1250000000000843e-05]</msg>
<status status="PASS" starttime="20201115 22:00:53.883" endtime="20201115 22:00:53.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.878" endtime="20201115 22:00:53.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.887" endtime="20201115 22:00:53.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:53.891" endtime="20201115 22:00:53.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.889" endtime="20201115 22:00:53.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.886" endtime="20201115 22:00:53.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.519" endtime="20201115 22:00:53.911"></status>
</kw>
<msg timestamp="20201115 22:00:53.911" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.920" endtime="20201115 22:00:53.939"></status>
</kw>
<msg timestamp="20201115 22:00:53.940" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.918" endtime="20201115 22:00:53.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:53.942" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:53.941" endtime="20201115 22:00:53.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.943" endtime="20201115 22:00:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.916" endtime="20201115 22:00:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.914" endtime="20201115 22:00:53.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:53.952" endtime="20201115 22:00:54.240"></status>
</kw>
<msg timestamp="20201115 22:00:54.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:53.951" endtime="20201115 22:00:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.245" endtime="20201115 22:00:54.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.253" endtime="20201115 22:00:54.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.948" endtime="20201115 22:00:54.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.946" endtime="20201115 22:00:54.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.264" level="INFO">${RESULT} = [{'time': 0.022524139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.022680819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.256" endtime="20201115 22:00:54.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.277" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.265" endtime="20201115 22:00:54.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.281" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.280" endtime="20201115 22:00:54.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.284" level="INFO">VALUE: [1.1235999999997803e-05, 1.1263000000000939e-05, 1.1277999999999982e-05, 1.1333000000002258e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1292000000003022e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1277000000000509e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1263000000000939e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1208000000002133e-05, 1.1237000000000746e-05, 1.1318999999999219e-05, 1.1306000000002592e-05, 1.1249999999997373e-05, 1.1305999999999122e-05, 1.1277000000000509e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1304999999999649e-05, 1.1291000000000079e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1235999999997803e-05, 1.1235999999997803e-05, 1.1277999999999982e-05, 1.1320000000002162e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1264000000000413e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.282" endtime="20201115 22:00:54.284"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.278" endtime="20201115 22:00:54.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.287" endtime="20201115 22:00:54.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.290" endtime="20201115 22:00:54.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.289" endtime="20201115 22:00:54.310"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.285" endtime="20201115 22:00:54.311"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.912" endtime="20201115 22:00:54.311"></status>
</kw>
<msg timestamp="20201115 22:00:54.311" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.320" endtime="20201115 22:00:54.338"></status>
</kw>
<msg timestamp="20201115 22:00:54.338" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.318" endtime="20201115 22:00:54.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.341" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.340" endtime="20201115 22:00:54.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.342" endtime="20201115 22:00:54.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.316" endtime="20201115 22:00:54.344"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.314" endtime="20201115 22:00:54.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.351" endtime="20201115 22:00:54.636"></status>
</kw>
<msg timestamp="20201115 22:00:54.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.349" endtime="20201115 22:00:54.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.641" endtime="20201115 22:00:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.649" endtime="20201115 22:00:54.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.347" endtime="20201115 22:00:54.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.345" endtime="20201115 22:00:54.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:54.656" level="INFO">${RESULT} = [{'time': 0.022418403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.022577444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:54.652" endtime="20201115 22:00:54.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:54.669" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:54.657" endtime="20201115 22:00:54.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.674" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:54.673" endtime="20201115 22:00:54.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.676" level="INFO">VALUE: [1.1264000000000413e-05, 1.127699999999704e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1305999999999122e-05, 1.1223000000001176e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1207999999998663e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1264000000000413e-05, 1.126299999999747e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1207999999998663e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1291000000000079e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1207999999998663e-05, 1.1263000000000939e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1318999999999219e-05, 1.1249999999997373e-05, 1.1305999999999122e-05, 1.1264000000000413e-05, 1.1291999999999552e-05]</msg>
<status status="PASS" starttime="20201115 22:00:54.675" endtime="20201115 22:00:54.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.670" endtime="20201115 22:00:54.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.679" endtime="20201115 22:00:54.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:54.683" endtime="20201115 22:00:54.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.681" endtime="20201115 22:00:54.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.678" endtime="20201115 22:00:54.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.312" endtime="20201115 22:00:54.703"></status>
</kw>
<msg timestamp="20201115 22:00:54.703" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.712" endtime="20201115 22:00:54.731"></status>
</kw>
<msg timestamp="20201115 22:00:54.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.711" endtime="20201115 22:00:54.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:54.734" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 6', 'msg': ['overhead_timer_list remove 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:54.733" endtime="20201115 22:00:54.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.735" endtime="20201115 22:00:54.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.708" endtime="20201115 22:00:54.737"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.706" endtime="20201115 22:00:54.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:54.744" endtime="20201115 22:00:55.031"></status>
</kw>
<msg timestamp="20201115 22:00:55.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:54.743" endtime="20201115 22:00:55.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.035" endtime="20201115 22:00:55.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.044" endtime="20201115 22:00:55.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.740" endtime="20201115 22:00:55.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.738" endtime="20201115 22:00:55.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.050" level="INFO">${RESULT} = [{'time': 0.022335931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1319999999998692e-05, 'source_diff': 1.1319999999998692e-05}, {'time': 0.022495569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.047" endtime="20201115 22:00:55.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.064" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.051" endtime="20201115 22:00:55.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.068" level="INFO">NAME: 00-overhead-6-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.067" endtime="20201115 22:00:55.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.071" level="INFO">VALUE: [1.1319999999998692e-05, 1.1277000000000509e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1346999999998358e-05, 1.129099999999661e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1263000000000939e-05, 1.127699999999704e-05, 1.1236000000001273e-05, 1.1236000000001273e-05, 1.1305999999999122e-05, 1.1291999999999552e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1332999999998788e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1180999999998997e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1235999999997803e-05, 1.1277000000000509e-05, 1.126299999999747e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1291999999999552e-05, 1.1264000000000413e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1347999999997832e-05, 1.1277999999999982e-05, 1.1277000000000509e-05, 1.1250000000000843e-05, 1.1264000000000413e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.069" endtime="20201115 22:00:55.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.065" endtime="20201115 22:00:55.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.074" endtime="20201115 22:00:55.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.077" endtime="20201115 22:00:55.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.076" endtime="20201115 22:00:55.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.072" endtime="20201115 22:00:55.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:54.704" endtime="20201115 22:00:55.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.123" endtime="20201115 22:00:55.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:53.122" endtime="20201115 22:00:55.098"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.101" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.109" endtime="20201115 22:00:55.129"></status>
</kw>
<msg timestamp="20201115 22:00:55.130" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.108" endtime="20201115 22:00:55.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.132" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.131" endtime="20201115 22:00:55.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.133" endtime="20201115 22:00:55.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.105" endtime="20201115 22:00:55.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.103" endtime="20201115 22:00:55.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.142" endtime="20201115 22:00:55.429"></status>
</kw>
<msg timestamp="20201115 22:00:55.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0250165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:55.141" endtime="20201115 22:00:55.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0250165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:55.433" endtime="20201115 22:00:55.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.442" endtime="20201115 22:00:55.443"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.138" endtime="20201115 22:00:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.137" endtime="20201115 22:00:55.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.448" level="INFO">${RESULT} = [{'time': 0.0250165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1582999999999039e-05, 'source_diff': 1.1582999999999039e-05}, {'time': 0.025197792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:00:55.445" endtime="20201115 22:00:55.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.461" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.449" endtime="20201115 22:00:55.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.466" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.465" endtime="20201115 22:00:55.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.468" level="INFO">VALUE: [1.1582999999999039e-05, 1.1583999999998512e-05, 1.1582999999999039e-05, 1.1596999999998608e-05, 1.1569999999998942e-05, 1.1583000000002508e-05, 1.1598000000001552e-05, 1.1584000000001982e-05, 1.1583999999998512e-05, 1.1584000000001982e-05, 1.1596999999998608e-05, 1.1583999999998512e-05, 1.1584000000001982e-05, 1.1582999999999039e-05, 1.1597000000002078e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1597000000002078e-05, 1.1568999999999469e-05, 1.1597999999998082e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1583999999998512e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1527000000000759e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1583999999998512e-05, 1.1584000000001982e-05, 1.1568999999999469e-05, 1.1583000000002508e-05, 1.1582999999999039e-05, 1.1541000000000329e-05, 1.1527000000000759e-05, 1.1582999999995569e-05, 1.1583000000002508e-05, 1.1541999999996333e-05, 1.1584000000001982e-05, 1.1527999999996763e-05, 1.1597000000002078e-05, 1.1598000000001552e-05, 1.1653000000000358e-05, 1.1583000000002508e-05, 1.1570000000002412e-05, 1.1584000000001982e-05, 1.1583999999995043e-05, 1.1582999999995569e-05, 1.1582999999995569e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.467" endtime="20201115 22:00:55.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.462" endtime="20201115 22:00:55.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.471" endtime="20201115 22:00:55.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.475" endtime="20201115 22:00:55.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.473" endtime="20201115 22:00:55.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.470" endtime="20201115 22:00:55.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.101" endtime="20201115 22:00:55.496"></status>
</kw>
<msg timestamp="20201115 22:00:55.496" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.505" endtime="20201115 22:00:55.524"></status>
</kw>
<msg timestamp="20201115 22:00:55.524" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.503" endtime="20201115 22:00:55.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.527" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.526" endtime="20201115 22:00:55.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.528" endtime="20201115 22:00:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.501" endtime="20201115 22:00:55.530"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.498" endtime="20201115 22:00:55.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.537" endtime="20201115 22:00:55.825"></status>
</kw>
<msg timestamp="20201115 22:00:55.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.535" endtime="20201115 22:00:55.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.829" endtime="20201115 22:00:55.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.837" endtime="20201115 22:00:55.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.533" endtime="20201115 22:00:55.839"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.531" endtime="20201115 22:00:55.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:55.844" level="INFO">${RESULT} = [{'time': 0.022453542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1583999999998512e-05, 'source_diff': 1.1583999999998512e-05}, {'time': 0.022631833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:55.840" endtime="20201115 22:00:55.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:55.857" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:55.845" endtime="20201115 22:00:55.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.862" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:55.861" endtime="20201115 22:00:55.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.865" level="INFO">VALUE: [1.1583999999998512e-05, 1.1582999999999039e-05, 1.1597000000002078e-05, 1.1528000000000233e-05, 1.1569999999998942e-05, 1.1528000000000233e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1583000000002508e-05, 1.1583999999998512e-05, 1.1568999999999469e-05, 1.1569999999998942e-05, 1.1596999999998608e-05, 1.1569999999998942e-05, 1.1610999999998178e-05, 1.1570000000002412e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1596999999998608e-05, 1.1583999999998512e-05, 1.1597000000002078e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1569999999998942e-05, 1.1527000000000759e-05, 1.1610999999998178e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1528000000000233e-05, 1.1582999999999039e-05, 1.1625000000001218e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1583999999998512e-05, 1.1583999999998512e-05, 1.1582999999999039e-05, 1.1597000000002078e-05, 1.1556000000002842e-05, 1.1639000000000788e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1541000000000329e-05]</msg>
<status status="PASS" starttime="20201115 22:00:55.863" endtime="20201115 22:00:55.865"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.858" endtime="20201115 22:00:55.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.868" endtime="20201115 22:00:55.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:55.871" endtime="20201115 22:00:55.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.870" endtime="20201115 22:00:55.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.866" endtime="20201115 22:00:55.892"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.496" endtime="20201115 22:00:55.892"></status>
</kw>
<msg timestamp="20201115 22:00:55.892" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.902" endtime="20201115 22:00:55.921"></status>
</kw>
<msg timestamp="20201115 22:00:55.922" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.900" endtime="20201115 22:00:55.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:55.924" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:55.923" endtime="20201115 22:00:55.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.925" endtime="20201115 22:00:55.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.897" endtime="20201115 22:00:55.927"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.895" endtime="20201115 22:00:55.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:55.934" endtime="20201115 22:00:56.220"></status>
</kw>
<msg timestamp="20201115 22:00:56.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:55.933" endtime="20201115 22:00:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.224" endtime="20201115 22:00:56.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.233" endtime="20201115 22:00:56.234"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.930" endtime="20201115 22:00:56.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.928" endtime="20201115 22:00:56.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.239" level="INFO">${RESULT} = [{'time': 0.022962333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1554999999999899e-05, 'source_diff': 1.1554999999999899e-05}, {'time': 0.023141486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.236" endtime="20201115 22:00:56.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.253" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.240" endtime="20201115 22:00:56.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.257" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.256" endtime="20201115 22:00:56.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.260" level="INFO">VALUE: [1.1554999999999899e-05, 1.1610999999998178e-05, 1.1584000000001982e-05, 1.1569999999998942e-05, 1.1583000000002508e-05, 1.1597999999998082e-05, 1.1597999999998082e-05, 1.1584000000001982e-05, 1.1582999999999039e-05, 1.1597999999998082e-05, 1.1666000000000454e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1584000000001982e-05, 1.1611000000001648e-05, 1.1597000000002078e-05, 1.1569000000002938e-05, 1.1528000000000233e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.1653000000000358e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1584000000001982e-05, 1.1583000000002508e-05, 1.1583000000002508e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1625000000001218e-05, 1.1597000000002078e-05, 1.1639000000000788e-05, 1.1639000000000788e-05, 1.1569999999998942e-05, 1.1582999999999039e-05, 1.1555999999999372e-05, 1.1597000000002078e-05, 1.1568999999999469e-05, 1.1583000000002508e-05, 1.1570000000002412e-05, 1.1666000000000454e-05, 1.1582999999999039e-05, 1.1569999999998942e-05, 1.1610999999998178e-05, 1.1570000000002412e-05, 1.1584000000001982e-05, 1.1610999999998178e-05, 1.1568999999999469e-05, 1.1584000000001982e-05, 1.1597000000002078e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.258" endtime="20201115 22:00:56.260"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.253" endtime="20201115 22:00:56.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.263" endtime="20201115 22:00:56.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.267" endtime="20201115 22:00:56.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.265" endtime="20201115 22:00:56.286"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.261" endtime="20201115 22:00:56.287"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.893" endtime="20201115 22:00:56.287"></status>
</kw>
<msg timestamp="20201115 22:00:56.287" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.296" endtime="20201115 22:00:56.316"></status>
</kw>
<msg timestamp="20201115 22:00:56.316" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.295" endtime="20201115 22:00:56.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.318" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.317" endtime="20201115 22:00:56.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.320" endtime="20201115 22:00:56.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.292" endtime="20201115 22:00:56.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.290" endtime="20201115 22:00:56.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.329" endtime="20201115 22:00:56.615"></status>
</kw>
<msg timestamp="20201115 22:00:56.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.327" endtime="20201115 22:00:56.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.619" endtime="20201115 22:00:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.628" endtime="20201115 22:00:56.629"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.324" endtime="20201115 22:00:56.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.323" endtime="20201115 22:00:56.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:56.635" level="INFO">${RESULT} = [{'time': 0.022419306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1569999999998942e-05, 'source_diff': 1.1569999999998942e-05}, {'time': 0.022600139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:56.631" endtime="20201115 22:00:56.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:56.648" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:56.635" endtime="20201115 22:00:56.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.652" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:56.651" endtime="20201115 22:00:56.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.655" level="INFO">VALUE: [1.1569999999998942e-05, 1.1625000000001218e-05, 1.1596999999998608e-05, 1.1637999999997845e-05, 1.1598000000001552e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1568999999999469e-05, 1.1583999999998512e-05, 1.1638999999997318e-05, 1.1653000000000358e-05, 1.1584000000001982e-05, 1.1582999999999039e-05, 1.1513000000001189e-05, 1.1584000000001982e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1610999999998178e-05, 1.1570000000002412e-05, 1.1597000000002078e-05, 1.1596999999998608e-05, 1.1570000000002412e-05, 1.1582999999999039e-05, 1.1639000000000788e-05, 1.1596999999998608e-05, 1.1568999999999469e-05, 1.1583999999998512e-05, 1.1611000000001648e-05, 1.1584000000001982e-05, 1.1639000000000788e-05, 1.1583000000002508e-05, 1.1611000000001648e-05, 1.1582999999999039e-05, 1.1570000000002412e-05, 1.1582999999999039e-05, 1.1611000000001648e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1554999999999899e-05, 1.1624999999997748e-05, 1.1584000000001982e-05, 1.1500000000001093e-05, 1.1582999999999039e-05, 1.1584000000001982e-05, 1.1555999999999372e-05, 1.1582999999999039e-05, 1.1583999999998512e-05, 1.1582999999999039e-05]</msg>
<status status="PASS" starttime="20201115 22:00:56.653" endtime="20201115 22:00:56.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.649" endtime="20201115 22:00:56.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.658" endtime="20201115 22:00:56.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:56.662" endtime="20201115 22:00:56.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.660" endtime="20201115 22:00:56.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.657" endtime="20201115 22:00:56.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.288" endtime="20201115 22:00:56.682"></status>
</kw>
<msg timestamp="20201115 22:00:56.683" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.691" endtime="20201115 22:00:56.711"></status>
</kw>
<msg timestamp="20201115 22:00:56.712" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.690" endtime="20201115 22:00:56.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:56.714" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 7', 'msg': ['overhead_timer_list remove 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:56.713" endtime="20201115 22:00:56.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.715" endtime="20201115 22:00:56.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.687" endtime="20201115 22:00:56.717"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.685" endtime="20201115 22:00:56.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:56.724" endtime="20201115 22:00:57.011"></status>
</kw>
<msg timestamp="20201115 22:00:57.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:56.723" endtime="20201115 22:00:57.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.015" endtime="20201115 22:00:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.023" endtime="20201115 22:00:57.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.720" endtime="20201115 22:00:57.025"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.718" endtime="20201115 22:00:57.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.030" level="INFO">${RESULT} = [{'time': 0.022426292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1584000000001982e-05, 'source_diff': 1.1584000000001982e-05}, {'time': 0.022608097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:57.027" endtime="20201115 22:00:57.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.043" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.031" endtime="20201115 22:00:57.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.048" level="INFO">NAME: 00-overhead-7-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.047" endtime="20201115 22:00:57.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.050" level="INFO">VALUE: [1.1584000000001982e-05, 1.1597000000002078e-05, 1.1583000000002508e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1584000000001982e-05, 1.1596999999998608e-05, 1.1568999999999469e-05, 1.1554999999999899e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1582999999999039e-05, 1.1583999999998512e-05, 1.1514000000000663e-05, 1.1541999999999802e-05, 1.1598000000001552e-05, 1.1583999999998512e-05, 1.1597000000002078e-05, 1.1583999999998512e-05, 1.1582999999999039e-05, 1.1583000000002508e-05, 1.1610999999998178e-05, 1.1583000000002508e-05, 1.1541000000000329e-05, 1.1597000000002078e-05, 1.1625000000001218e-05, 1.1569999999998942e-05, 1.1583000000002508e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1610999999998178e-05, 1.1568999999999469e-05, 1.1568999999999469e-05, 1.1570000000002412e-05, 1.1582999999999039e-05, 1.1568999999999469e-05, 1.1583999999998512e-05, 1.1528000000000233e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.1555999999999372e-05, 1.1569999999998942e-05, 1.1554999999999899e-05, 1.1610999999998178e-05, 1.1583999999998512e-05, 1.1583999999998512e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.049" endtime="20201115 22:00:57.051"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.044" endtime="20201115 22:00:57.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.054" endtime="20201115 22:00:57.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.057" endtime="20201115 22:00:57.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.056" endtime="20201115 22:00:57.077"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.052" endtime="20201115 22:00:57.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:56.683" endtime="20201115 22:00:57.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.100" endtime="20201115 22:00:57.078"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:55.099" endtime="20201115 22:00:57.078"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.081" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.089" endtime="20201115 22:00:57.110"></status>
</kw>
<msg timestamp="20201115 22:00:57.111" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.088" endtime="20201115 22:00:57.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.113" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.112" endtime="20201115 22:00:57.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.114" endtime="20201115 22:00:57.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.085" endtime="20201115 22:00:57.116"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.083" endtime="20201115 22:00:57.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.123" endtime="20201115 22:00:57.411"></status>
</kw>
<msg timestamp="20201115 22:00:57.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.121" endtime="20201115 22:00:57.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025210875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.415" endtime="20201115 22:00:57.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.423" endtime="20201115 22:00:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.119" endtime="20201115 22:00:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.117" endtime="20201115 22:00:57.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.430" level="INFO">${RESULT} = [{'time': 0.025210875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.02540275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:57.427" endtime="20201115 22:00:57.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.443" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.431" endtime="20201115 22:00:57.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.448" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.447" endtime="20201115 22:00:57.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.451" level="INFO">VALUE: [1.1903000000000608e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1833000000002758e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1874999999997998e-05, 1.1902999999997138e-05, 1.1860999999998428e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1887999999998095e-05, 1.1957999999999414e-05, 1.1902999999997138e-05, 1.1887999999998095e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1860999999998428e-05, 1.1903000000000608e-05, 1.1957999999999414e-05, 1.1916000000000704e-05, 1.1930000000000274e-05, 1.1971999999998983e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1943999999999844e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1888999999994099e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1888999999994099e-05, 1.1889000000001038e-05, 1.1943999999999844e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1930999999999747e-05, 1.1888000000001564e-05, 1.1903000000000608e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.449" endtime="20201115 22:00:57.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.444" endtime="20201115 22:00:57.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.454" endtime="20201115 22:00:57.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.457" endtime="20201115 22:00:57.476"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.456" endtime="20201115 22:00:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.452" endtime="20201115 22:00:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.081" endtime="20201115 22:00:57.478"></status>
</kw>
<msg timestamp="20201115 22:00:57.478" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.487" endtime="20201115 22:00:57.508"></status>
</kw>
<msg timestamp="20201115 22:00:57.508" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.485" endtime="20201115 22:00:57.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.511" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.509" endtime="20201115 22:00:57.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.512" endtime="20201115 22:00:57.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.483" endtime="20201115 22:00:57.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.481" endtime="20201115 22:00:57.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.520" endtime="20201115 22:00:57.807"></status>
</kw>
<msg timestamp="20201115 22:00:57.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.519" endtime="20201115 22:00:57.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.811" endtime="20201115 22:00:57.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.819" endtime="20201115 22:00:57.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.516" endtime="20201115 22:00:57.821"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.515" endtime="20201115 22:00:57.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:57.826" level="INFO">${RESULT} = [{'time': 0.022806208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.023004639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:57.823" endtime="20201115 22:00:57.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:57.839" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:57.827" endtime="20201115 22:00:57.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.844" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:57.843" endtime="20201115 22:00:57.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.847" level="INFO">VALUE: [1.1889000000001038e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1930999999999747e-05, 1.1902999999997138e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1846999999998858e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1916000000000704e-05, 1.1916000000000704e-05, 1.1902000000001134e-05, 1.1902000000001134e-05, 1.1902000000001134e-05, 1.1889000000001038e-05, 1.1888000000001564e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1888999999997568e-05, 1.1917000000000177e-05, 1.1902999999997138e-05, 1.1903000000000608e-05, 1.1888999999997568e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1861000000001898e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1888000000001564e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1860999999994959e-05, 1.1915999999993765e-05]</msg>
<status status="PASS" starttime="20201115 22:00:57.845" endtime="20201115 22:00:57.847"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.840" endtime="20201115 22:00:57.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.850" endtime="20201115 22:00:57.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:57.853" endtime="20201115 22:00:57.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.852" endtime="20201115 22:00:57.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.848" endtime="20201115 22:00:57.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.479" endtime="20201115 22:00:57.874"></status>
</kw>
<msg timestamp="20201115 22:00:57.874" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.883" endtime="20201115 22:00:57.904"></status>
</kw>
<msg timestamp="20201115 22:00:57.904" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.882" endtime="20201115 22:00:57.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:57.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:57.905" endtime="20201115 22:00:57.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.908" endtime="20201115 22:00:57.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.879" endtime="20201115 22:00:57.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.876" endtime="20201115 22:00:57.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:57.917" endtime="20201115 22:00:58.203"></status>
</kw>
<msg timestamp="20201115 22:00:58.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023364542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:57.915" endtime="20201115 22:00:58.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023364542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.207" endtime="20201115 22:00:58.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.215" endtime="20201115 22:00:58.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.912" endtime="20201115 22:00:58.217"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.911" endtime="20201115 22:00:58.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.222" level="INFO">${RESULT} = [{'time': 0.023364542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1902999999997138e-05, 'source_diff': 1.1902999999997138e-05}, {'time': 0.023557917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.218" endtime="20201115 22:00:58.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.236" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.223" endtime="20201115 22:00:58.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.240" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.239" endtime="20201115 22:00:58.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.243" level="INFO">VALUE: [1.1902999999997138e-05, 1.1903000000000608e-05, 1.1874999999997998e-05, 1.1889000000001038e-05, 1.1874999999997998e-05, 1.1903000000000608e-05, 1.1818999999999719e-05, 1.1903000000000608e-05, 1.1930000000000274e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1916999999996708e-05, 1.1916000000000704e-05, 1.1902000000001134e-05, 1.1888999999997568e-05, 1.1901999999997664e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1915999999997234e-05, 1.1903000000000608e-05, 1.1901999999997664e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1887999999998095e-05, 1.1901999999997664e-05, 1.1860999999998428e-05, 1.1902000000001134e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1902999999997138e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1861000000001898e-05, 1.1917000000000177e-05, 1.1875000000001468e-05, 1.1875000000001468e-05, 1.1930000000000274e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.241" endtime="20201115 22:00:58.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.237" endtime="20201115 22:00:58.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.246" endtime="20201115 22:00:58.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.249" endtime="20201115 22:00:58.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.248" endtime="20201115 22:00:58.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.244" endtime="20201115 22:00:58.270"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.874" endtime="20201115 22:00:58.270"></status>
</kw>
<msg timestamp="20201115 22:00:58.270" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.279" endtime="20201115 22:00:58.300"></status>
</kw>
<msg timestamp="20201115 22:00:58.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.277" endtime="20201115 22:00:58.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.301" endtime="20201115 22:00:58.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.303" endtime="20201115 22:00:58.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.275" endtime="20201115 22:00:58.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.273" endtime="20201115 22:00:58.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.312" endtime="20201115 22:00:58.599"></status>
</kw>
<msg timestamp="20201115 22:00:58.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.311" endtime="20201115 22:00:58.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.604" endtime="20201115 22:00:58.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.612" endtime="20201115 22:00:58.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.308" endtime="20201115 22:00:58.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.307" endtime="20201115 22:00:58.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:58.619" level="INFO">${RESULT} = [{'time': 0.022691833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.022885069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:58.615" endtime="20201115 22:00:58.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:58.632" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:58.620" endtime="20201115 22:00:58.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.637" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:58.636" endtime="20201115 22:00:58.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.639" level="INFO">VALUE: [1.1889000000001038e-05, 1.1916000000000704e-05, 1.1889000000001038e-05, 1.1902999999997138e-05, 1.1944999999999317e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1902000000001134e-05, 1.1916000000000704e-05, 1.1903000000000608e-05, 1.1901999999997664e-05, 1.1889000000001038e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1971999999998983e-05, 1.1875000000001468e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1889000000001038e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.1902999999997138e-05, 1.1915999999997234e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1903000000000608e-05, 1.1861000000001898e-05, 1.1917000000000177e-05, 1.1901999999997664e-05, 1.1902000000001134e-05, 1.1917000000000177e-05, 1.1943999999999844e-05, 1.1889000000001038e-05, 1.1888999999997568e-05, 1.1888000000001564e-05, 1.1903000000000608e-05, 1.1888000000001564e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1888000000001564e-05, 1.1889000000001038e-05, 1.1834000000002232e-05, 1.1902000000001134e-05]</msg>
<status status="PASS" starttime="20201115 22:00:58.638" endtime="20201115 22:00:58.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.633" endtime="20201115 22:00:58.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.642" endtime="20201115 22:00:58.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:58.646" endtime="20201115 22:00:58.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.644" endtime="20201115 22:00:58.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.641" endtime="20201115 22:00:58.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.271" endtime="20201115 22:00:58.666"></status>
</kw>
<msg timestamp="20201115 22:00:58.666" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.675" endtime="20201115 22:00:58.696"></status>
</kw>
<msg timestamp="20201115 22:00:58.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.674" endtime="20201115 22:00:58.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:58.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 8', 'msg': ['overhead_timer_list remove 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:58.698" endtime="20201115 22:00:58.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.700" endtime="20201115 22:00:58.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.671" endtime="20201115 22:00:58.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.669" endtime="20201115 22:00:58.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:58.709" endtime="20201115 22:00:58.996"></status>
</kw>
<msg timestamp="20201115 22:00:59.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:58.707" endtime="20201115 22:00:59.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.001" endtime="20201115 22:00:59.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.009" endtime="20201115 22:00:59.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.705" endtime="20201115 22:00:59.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.703" endtime="20201115 22:00:59.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.016" level="INFO">${RESULT} = [{'time': 0.022793333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1901999999997664e-05, 'source_diff': 1.1901999999997664e-05}, {'time': 0.022982722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.013" endtime="20201115 22:00:59.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.029" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.017" endtime="20201115 22:00:59.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.034" level="INFO">NAME: 00-overhead-8-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.033" endtime="20201115 22:00:59.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.036" level="INFO">VALUE: [1.1901999999997664e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1888999999997568e-05, 1.1889000000001038e-05, 1.1902999999997138e-05, 1.1903000000000608e-05, 1.1917000000000177e-05, 1.1902999999997138e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1958999999998887e-05, 1.1915999999997234e-05, 1.1874999999997998e-05, 1.1902999999997138e-05, 1.1875000000001468e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1874999999997998e-05, 1.1888999999997568e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1930000000000274e-05, 1.1917000000000177e-05, 1.1903000000000608e-05, 1.1846999999998858e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1902999999997138e-05, 1.1915999999997234e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.1888999999997568e-05, 1.1887999999998095e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1930000000000274e-05, 1.1888999999997568e-05, 1.1888000000001564e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1986000000005492e-05, 1.1902000000001134e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.035" endtime="20201115 22:00:59.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.030" endtime="20201115 22:00:59.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.039" endtime="20201115 22:00:59.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.043" endtime="20201115 22:00:59.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.041" endtime="20201115 22:00:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.038" endtime="20201115 22:00:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:58.667" endtime="20201115 22:00:59.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.079" endtime="20201115 22:00:59.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:57.079" endtime="20201115 22:00:59.064"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.066" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.076" endtime="20201115 22:00:59.098"></status>
</kw>
<msg timestamp="20201115 22:00:59.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.075" endtime="20201115 22:00:59.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.099" endtime="20201115 22:00:59.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.102" endtime="20201115 22:00:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.072" endtime="20201115 22:00:59.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.069" endtime="20201115 22:00:59.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.111" endtime="20201115 22:00:59.398"></status>
</kw>
<msg timestamp="20201115 22:00:59.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026664417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.109" endtime="20201115 22:00:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026664417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026676625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.402" endtime="20201115 22:00:59.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.410" endtime="20201115 22:00:59.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.107" endtime="20201115 22:00:59.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.105" endtime="20201115 22:00:59.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.417" level="INFO">${RESULT} = [{'time': 0.026676625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.026884153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:00:59.414" endtime="20201115 22:00:59.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.430" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.418" endtime="20201115 22:00:59.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.435" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.434" endtime="20201115 22:00:59.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.437" level="INFO">VALUE: [1.2207999999999664e-05, 1.2292000000000552e-05, 1.2208999999999137e-05, 1.2208000000003133e-05, 1.2250000000001843e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2166000000000954e-05, 1.2264000000001413e-05, 1.2222000000002703e-05, 1.2278000000000983e-05, 1.2139000000001288e-05, 1.2153000000000858e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2209000000002607e-05, 1.2222999999998707e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2223000000005646e-05, 1.2208999999999137e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2250000000005312e-05, 1.2208999999999137e-05, 1.2139000000001288e-05, 1.2167000000000427e-05, 1.2264000000004882e-05, 1.2195000000006506e-05, 1.2207999999999664e-05, 1.2152000000001384e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2263000000005408e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2209000000006076e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2139000000001288e-05, 1.2236000000005742e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.436" endtime="20201115 22:00:59.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.431" endtime="20201115 22:00:59.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.441" endtime="20201115 22:00:59.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.444" endtime="20201115 22:00:59.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.442" endtime="20201115 22:00:59.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.439" endtime="20201115 22:00:59.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.067" endtime="20201115 22:00:59.465"></status>
</kw>
<msg timestamp="20201115 22:00:59.465" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.474" endtime="20201115 22:00:59.495"></status>
</kw>
<msg timestamp="20201115 22:00:59.503" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.472" endtime="20201115 22:00:59.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.506" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.504" endtime="20201115 22:00:59.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.507" endtime="20201115 22:00:59.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.470" endtime="20201115 22:00:59.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.468" endtime="20201115 22:00:59.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.516" endtime="20201115 22:00:59.803"></status>
</kw>
<msg timestamp="20201115 22:00:59.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.515" endtime="20201115 22:00:59.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:00:59.807" endtime="20201115 22:00:59.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.815" endtime="20201115 22:00:59.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.512" endtime="20201115 22:00:59.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.510" endtime="20201115 22:00:59.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:00:59.822" level="INFO">${RESULT} = [{'time': 0.022463792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.02267425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:00:59.819" endtime="20201115 22:00:59.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:00:59.835" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:00:59.823" endtime="20201115 22:00:59.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.840" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:00:59.839" endtime="20201115 22:00:59.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.842" level="INFO">VALUE: [1.2208999999999137e-05, 1.2207999999999664e-05, 1.2167000000000427e-05, 1.2223000000002177e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2209000000002607e-05, 1.2167000000000427e-05, 1.2139000000001288e-05, 1.2208000000003133e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2152000000001384e-05, 1.2194999999999567e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2222000000002703e-05, 1.2222999999998707e-05, 1.2209000000002607e-05, 1.2166000000000954e-05, 1.2235999999998803e-05, 1.2278000000000983e-05, 1.2194000000000094e-05, 1.2249999999998373e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2222000000002703e-05, 1.2153000000000858e-05, 1.2195000000003037e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2235999999998803e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05]</msg>
<status status="PASS" starttime="20201115 22:00:59.841" endtime="20201115 22:00:59.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.836" endtime="20201115 22:00:59.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.845" endtime="20201115 22:00:59.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:00:59.849" endtime="20201115 22:00:59.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.847" endtime="20201115 22:00:59.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.844" endtime="20201115 22:00:59.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.465" endtime="20201115 22:00:59.870"></status>
</kw>
<msg timestamp="20201115 22:00:59.870" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.879" endtime="20201115 22:00:59.900"></status>
</kw>
<msg timestamp="20201115 22:00:59.901" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.877" endtime="20201115 22:00:59.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:00:59.903" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:00:59.902" endtime="20201115 22:00:59.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.904" endtime="20201115 22:00:59.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.875" endtime="20201115 22:00:59.906"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.872" endtime="20201115 22:00:59.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:00:59.914" endtime="20201115 22:01:00.201"></status>
</kw>
<msg timestamp="20201115 22:01:00.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:00:59.912" endtime="20201115 22:01:00.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:00.205" endtime="20201115 22:01:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.213" endtime="20201115 22:01:00.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.909" endtime="20201115 22:01:00.215"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.907" endtime="20201115 22:01:00.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.220" level="INFO">${RESULT} = [{'time': 0.022956722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2221999999999233e-05, 'source_diff': 1.2221999999999233e-05}, {'time': 0.023163639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:00.216" endtime="20201115 22:01:00.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.233" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.221" endtime="20201115 22:01:00.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.238" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.237" endtime="20201115 22:01:00.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.240" level="INFO">VALUE: [1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2209000000002607e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2222999999998707e-05, 1.2221999999999233e-05, 1.2208000000003133e-05, 1.2180999999999997e-05, 1.2222000000002703e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2139000000001288e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2153000000000858e-05, 1.2153000000000858e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2209000000002607e-05, 1.2278000000000983e-05, 1.2167000000000427e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2152000000001384e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2277999999997513e-05, 1.2221999999999233e-05, 1.2208999999999137e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.239" endtime="20201115 22:01:00.240"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.234" endtime="20201115 22:01:00.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.243" endtime="20201115 22:01:00.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.247" endtime="20201115 22:01:00.266"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.245" endtime="20201115 22:01:00.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.242" endtime="20201115 22:01:00.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.870" endtime="20201115 22:01:00.268"></status>
</kw>
<msg timestamp="20201115 22:01:00.268" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.277" endtime="20201115 22:01:00.299"></status>
</kw>
<msg timestamp="20201115 22:01:00.299" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.275" endtime="20201115 22:01:00.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.302" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.300" endtime="20201115 22:01:00.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.303" endtime="20201115 22:01:00.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.273" endtime="20201115 22:01:00.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.270" endtime="20201115 22:01:00.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.312" endtime="20201115 22:01:00.600"></status>
</kw>
<msg timestamp="20201115 22:01:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.310" endtime="20201115 22:01:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.604" endtime="20201115 22:01:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.612" endtime="20201115 22:01:00.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.308" endtime="20201115 22:01:00.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.306" endtime="20201115 22:01:00.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:00.619" level="INFO">${RESULT} = [{'time': 0.022417028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.022631958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:00.615" endtime="20201115 22:01:00.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:00.632" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:00.620" endtime="20201115 22:01:00.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.637" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:00.636" endtime="20201115 22:01:00.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.639" level="INFO">VALUE: [1.2208999999999137e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.2167000000000427e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2264000000001413e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2222999999998707e-05, 1.2193999999996624e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2222999999998707e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.2209000000002607e-05, 1.2221999999999233e-05, 1.2208999999999137e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.2209000000006076e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05]</msg>
<status status="PASS" starttime="20201115 22:01:00.638" endtime="20201115 22:01:00.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.633" endtime="20201115 22:01:00.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.643" endtime="20201115 22:01:00.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:00.646" endtime="20201115 22:01:00.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.644" endtime="20201115 22:01:00.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.641" endtime="20201115 22:01:00.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.268" endtime="20201115 22:01:00.667"></status>
</kw>
<msg timestamp="20201115 22:01:00.667" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.675" endtime="20201115 22:01:00.696"></status>
</kw>
<msg timestamp="20201115 22:01:00.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.674" endtime="20201115 22:01:00.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:00.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 9', 'msg': ['overhead_timer_list remove 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:00.698" endtime="20201115 22:01:00.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.700" endtime="20201115 22:01:00.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.671" endtime="20201115 22:01:00.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.669" endtime="20201115 22:01:00.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:00.709" endtime="20201115 22:01:00.996"></status>
</kw>
<msg timestamp="20201115 22:01:00.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:00.707" endtime="20201115 22:01:00.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.000" endtime="20201115 22:01:01.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.008" endtime="20201115 22:01:01.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.705" endtime="20201115 22:01:01.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.703" endtime="20201115 22:01:01.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.015" level="INFO">${RESULT} = [{'time': 0.022365097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.022580222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:01.012" endtime="20201115 22:01:01.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.028" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.016" endtime="20201115 22:01:01.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.033" level="INFO">NAME: 00-overhead-9-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.032" endtime="20201115 22:01:01.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.035" level="INFO">VALUE: [1.2207999999999664e-05, 1.2235999999998803e-05, 1.2208999999999137e-05, 1.2166000000000954e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2194000000000094e-05, 1.2222000000002703e-05, 1.2124999999998248e-05, 1.2291000000001079e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2222000000002703e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.2194999999999567e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2195000000003037e-05, 1.2194999999999567e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2207999999999664e-05, 1.2209000000002607e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2236000000002273e-05, 1.2235999999998803e-05, 1.2207999999999664e-05, 1.227699999999804e-05, 1.2222000000006172e-05, 1.2194000000000094e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2263999999997943e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.034" endtime="20201115 22:01:01.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.029" endtime="20201115 22:01:01.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.039" endtime="20201115 22:01:01.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.042" endtime="20201115 22:01:01.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.041" endtime="20201115 22:01:01.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.037" endtime="20201115 22:01:01.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:00.667" endtime="20201115 22:01:01.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.065" endtime="20201115 22:01:01.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:59.064" endtime="20201115 22:01:01.063"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.065" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.074" endtime="20201115 22:01:01.096"></status>
</kw>
<msg timestamp="20201115 22:01:01.096" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.073" endtime="20201115 22:01:01.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.097" endtime="20201115 22:01:01.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.099" endtime="20201115 22:01:01.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.070" endtime="20201115 22:01:01.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.068" endtime="20201115 22:01:01.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.108" endtime="20201115 22:01:01.398"></status>
</kw>
<msg timestamp="20201115 22:01:01.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.107" endtime="20201115 22:01:01.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024749681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.403" endtime="20201115 22:01:01.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.413" endtime="20201115 22:01:01.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.104" endtime="20201115 22:01:01.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.103" endtime="20201115 22:01:01.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.422" level="INFO">${RESULT} = [{'time': 0.024749681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.024975931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:01.417" endtime="20201115 22:01:01.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.436" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.423" endtime="20201115 22:01:01.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.441" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.439" endtime="20201115 22:01:01.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.443" level="INFO">VALUE: [1.2569999999999942e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2500000000002093e-05, 1.2514000000001663e-05, 1.2471999999999483e-05, 1.2513000000002189e-05, 1.2528000000001233e-05, 1.2556000000000372e-05, 1.2528000000001233e-05, 1.2513999999998193e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.2514000000001663e-05, 1.2527000000001759e-05, 1.2542000000000803e-05, 1.2486000000002523e-05, 1.2514000000001663e-05, 1.2527999999997763e-05, 1.2485999999999053e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2514000000001663e-05, 1.2541000000001329e-05, 1.2528000000001233e-05, 1.2569000000000469e-05, 1.2471999999999483e-05, 1.2513999999998193e-05, 1.2528000000004702e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.251299999999872e-05, 1.2499999999998623e-05, 1.2528000000004702e-05, 1.2527000000005228e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2541999999997333e-05, 1.2527999999997763e-05, 1.2528000000004702e-05, 1.2527999999997763e-05, 1.2598000000002552e-05, 1.2541999999997333e-05, 1.2513999999998193e-05, 1.255499999999743e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.442" endtime="20201115 22:01:01.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.437" endtime="20201115 22:01:01.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.447" endtime="20201115 22:01:01.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.450" endtime="20201115 22:01:01.469"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.448" endtime="20201115 22:01:01.470"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.445" endtime="20201115 22:01:01.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.066" endtime="20201115 22:01:01.471"></status>
</kw>
<msg timestamp="20201115 22:01:01.471" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.480" endtime="20201115 22:01:01.502"></status>
</kw>
<msg timestamp="20201115 22:01:01.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.478" endtime="20201115 22:01:01.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.505" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.503" endtime="20201115 22:01:01.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.506" endtime="20201115 22:01:01.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.476" endtime="20201115 22:01:01.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.474" endtime="20201115 22:01:01.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.515" endtime="20201115 22:01:01.801"></status>
</kw>
<msg timestamp="20201115 22:01:01.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.513" endtime="20201115 22:01:01.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.805" endtime="20201115 22:01:01.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.813" endtime="20201115 22:01:01.815"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.511" endtime="20201115 22:01:01.816"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.509" endtime="20201115 22:01:01.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:01.820" level="INFO">${RESULT} = [{'time': 0.022598861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.022827306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:01.817" endtime="20201115 22:01:01.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:01.833" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:01.821" endtime="20201115 22:01:01.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.838" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:01.837" endtime="20201115 22:01:01.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.841" level="INFO">VALUE: [1.2542000000000803e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2514000000001663e-05, 1.2568999999997e-05, 1.2556000000000372e-05, 1.2527000000001759e-05, 1.2583000000000039e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.2541000000001329e-05, 1.2514000000001663e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2486999999998527e-05, 1.2444000000000344e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.2555000000000899e-05, 1.2555000000000899e-05, 1.2542000000000803e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2528000000001233e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.2514000000001663e-05, 1.2513999999998193e-05, 1.2542000000000803e-05, 1.2583000000000039e-05, 1.2458999999999387e-05, 1.2485999999999053e-05, 1.2583000000000039e-05, 1.2527999999997763e-05, 1.2472000000002953e-05, 1.2513999999998193e-05, 1.2542000000004272e-05, 1.2527999999997763e-05, 1.2499999999998623e-05, 1.2528000000004702e-05, 1.2528000000004702e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2527000000005228e-05]</msg>
<status status="PASS" starttime="20201115 22:01:01.840" endtime="20201115 22:01:01.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.835" endtime="20201115 22:01:01.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.844" endtime="20201115 22:01:01.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:01.847" endtime="20201115 22:01:01.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.846" endtime="20201115 22:01:01.867"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.842" endtime="20201115 22:01:01.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.472" endtime="20201115 22:01:01.868"></status>
</kw>
<msg timestamp="20201115 22:01:01.868" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.877" endtime="20201115 22:01:01.899"></status>
</kw>
<msg timestamp="20201115 22:01:01.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.875" endtime="20201115 22:01:01.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:01.902" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:01.901" endtime="20201115 22:01:01.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.903" endtime="20201115 22:01:01.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.873" endtime="20201115 22:01:01.905"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.871" endtime="20201115 22:01:01.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:01.912" endtime="20201115 22:01:02.202"></status>
</kw>
<msg timestamp="20201115 22:01:02.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:01.911" endtime="20201115 22:01:02.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.206" endtime="20201115 22:01:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.214" endtime="20201115 22:01:02.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.908" endtime="20201115 22:01:02.216"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.906" endtime="20201115 22:01:02.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.221" level="INFO">${RESULT} = [{'time': 0.022711847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.022936292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:02.217" endtime="20201115 22:01:02.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.234" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.222" endtime="20201115 22:01:02.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.239" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.238" endtime="20201115 22:01:02.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.242" level="INFO">VALUE: [1.2583000000000039e-05, 1.2528000000001233e-05, 1.2514000000001663e-05, 1.2513999999998193e-05, 1.2487000000001997e-05, 1.2513999999998193e-05, 1.2486000000002523e-05, 1.2541000000001329e-05, 1.2528000000001233e-05, 1.2513999999998193e-05, 1.2499999999998623e-05, 1.2528000000001233e-05, 1.2499999999998623e-05, 1.2528000000001233e-05, 1.2541999999997333e-05, 1.255499999999743e-05, 1.2542000000000803e-05, 1.2528000000001233e-05, 1.2513999999998193e-05, 1.2514000000001663e-05, 1.2528000000001233e-05, 1.2583999999999512e-05, 1.2542000000000803e-05, 1.2528000000001233e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2486000000002523e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2487000000001997e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.251299999999872e-05, 1.2513999999998193e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2541999999997333e-05, 1.2513999999998193e-05, 1.252699999999829e-05, 1.254099999999786e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2568999999997e-05, 1.2541000000004798e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2499999999998623e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.240" endtime="20201115 22:01:02.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.235" endtime="20201115 22:01:02.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.245" endtime="20201115 22:01:02.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.248" endtime="20201115 22:01:02.267"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.247" endtime="20201115 22:01:02.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.243" endtime="20201115 22:01:02.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.869" endtime="20201115 22:01:02.269"></status>
</kw>
<msg timestamp="20201115 22:01:02.269" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.278" endtime="20201115 22:01:02.300"></status>
</kw>
<msg timestamp="20201115 22:01:02.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.276" endtime="20201115 22:01:02.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.303" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.302" endtime="20201115 22:01:02.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.304" endtime="20201115 22:01:02.305"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.274" endtime="20201115 22:01:02.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.272" endtime="20201115 22:01:02.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.313" endtime="20201115 22:01:02.599"></status>
</kw>
<msg timestamp="20201115 22:01:02.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:02.311" endtime="20201115 22:01:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02241175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242425, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:02.604" endtime="20201115 22:01:02.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.612" endtime="20201115 22:01:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.309" endtime="20201115 22:01:02.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.307" endtime="20201115 22:01:02.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:02.619" level="INFO">${RESULT} = [{'time': 0.02242425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.022651236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:02.616" endtime="20201115 22:01:02.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:02.632" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:02.620" endtime="20201115 22:01:02.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.637" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:02.636" endtime="20201115 22:01:02.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.639" level="INFO">VALUE: [1.2499999999998623e-05, 1.2444000000000344e-05, 1.2513999999998193e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2514000000001663e-05, 1.2569999999999942e-05, 1.251299999999872e-05, 1.2514000000001663e-05, 1.2471999999999483e-05, 1.2500000000002093e-05, 1.2500000000002093e-05, 1.2555000000000899e-05, 1.2527999999997763e-05, 1.2527000000001759e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2527000000001759e-05, 1.2527999999997763e-05, 1.2514000000001663e-05, 1.2514000000001663e-05, 1.2457999999999914e-05, 1.2513999999998193e-05, 1.2541000000001329e-05, 1.2528000000001233e-05, 1.2527999999997763e-05, 1.2528000000001233e-05, 1.251299999999872e-05, 1.2514000000001663e-05, 1.2500000000002093e-05, 1.251299999999872e-05, 1.2528000000001233e-05, 1.2542000000000803e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2514000000001663e-05, 1.2514000000005132e-05, 1.2527999999997763e-05, 1.2527999999997763e-05, 1.2514000000005132e-05, 1.2527999999997763e-05, 1.2514000000005132e-05, 1.2457999999999914e-05, 1.2444000000000344e-05, 1.2541999999997333e-05, 1.2527000000005228e-05, 1.2513999999998193e-05]</msg>
<status status="PASS" starttime="20201115 22:01:02.638" endtime="20201115 22:01:02.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.633" endtime="20201115 22:01:02.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.642" endtime="20201115 22:01:02.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:02.646" endtime="20201115 22:01:02.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.644" endtime="20201115 22:01:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.641" endtime="20201115 22:01:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.269" endtime="20201115 22:01:02.666"></status>
</kw>
<msg timestamp="20201115 22:01:02.667" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.675" endtime="20201115 22:01:02.697"></status>
</kw>
<msg timestamp="20201115 22:01:02.698" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.674" endtime="20201115 22:01:02.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:02.700" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 10', 'msg': ['overhead_timer_list remove 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:02.699" endtime="20201115 22:01:02.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.701" endtime="20201115 22:01:02.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.671" endtime="20201115 22:01:02.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.669" endtime="20201115 22:01:02.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:02.710" endtime="20201115 22:01:02.995"></status>
</kw>
<msg timestamp="20201115 22:01:02.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:02.709" endtime="20201115 22:01:02.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.000" endtime="20201115 22:01:03.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.008" endtime="20201115 22:01:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.706" endtime="20201115 22:01:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.705" endtime="20201115 22:01:03.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.015" level="INFO">${RESULT} = [{'time': 0.022342444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.022568597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.011" endtime="20201115 22:01:03.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.028" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.016" endtime="20201115 22:01:03.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.033" level="INFO">NAME: 00-overhead-10-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.032" endtime="20201115 22:01:03.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.035" level="INFO">VALUE: [1.2471999999999483e-05, 1.2444000000000344e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.2528000000001233e-05, 1.252699999999829e-05, 1.2457999999999914e-05, 1.2569000000000469e-05, 1.252699999999829e-05, 1.2528000000001233e-05, 1.2542000000000803e-05, 1.2569999999999942e-05, 1.2541000000001329e-05, 1.2513999999998193e-05, 1.2542000000000803e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.2527999999997763e-05, 1.2500000000002093e-05, 1.2444000000000344e-05, 1.255499999999743e-05, 1.2527999999997763e-05, 1.254099999999786e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.2514000000001663e-05, 1.2514000000001663e-05, 1.251299999999872e-05, 1.2514000000001663e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.2584000000002982e-05, 1.2514000000001663e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.254099999999786e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2583999999999512e-05, 1.2528000000001233e-05, 1.254099999999786e-05, 1.2568999999997e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2555999999996903e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2527999999997763e-05, 1.2527000000005228e-05, 1.2541999999997333e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.034" endtime="20201115 22:01:03.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.029" endtime="20201115 22:01:03.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.038" endtime="20201115 22:01:03.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.042" endtime="20201115 22:01:03.061"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.040" endtime="20201115 22:01:03.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.037" endtime="20201115 22:01:03.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:02.667" endtime="20201115 22:01:03.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.064" endtime="20201115 22:01:03.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:01.064" endtime="20201115 22:01:03.063"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.065" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.074" endtime="20201115 22:01:03.097"></status>
</kw>
<msg timestamp="20201115 22:01:03.098" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.072" endtime="20201115 22:01:03.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.100" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.099" endtime="20201115 22:01:03.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.101" endtime="20201115 22:01:03.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.070" endtime="20201115 22:01:03.104"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.067" endtime="20201115 22:01:03.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.110" endtime="20201115 22:01:03.398"></status>
</kw>
<msg timestamp="20201115 22:01:03.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.109" endtime="20201115 22:01:03.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025060486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025073319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.402" endtime="20201115 22:01:03.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.410" endtime="20201115 22:01:03.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.106" endtime="20201115 22:01:03.412"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.105" endtime="20201115 22:01:03.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.417" level="INFO">${RESULT} = [{'time': 0.025073319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.025321319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.413" endtime="20201115 22:01:03.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.430" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.418" endtime="20201115 22:01:03.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.434" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.433" endtime="20201115 22:01:03.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.437" level="INFO">VALUE: [1.2833000000000289e-05, 1.283299999999682e-05, 1.2806000000000622e-05, 1.2833000000000289e-05, 1.2819999999996723e-05, 1.2847999999999332e-05, 1.2777999999998013e-05, 1.2820000000000192e-05, 1.2833000000000289e-05, 1.2860999999999428e-05, 1.2820000000000192e-05, 1.2847999999999332e-05, 1.2833999999999762e-05, 1.2860999999999428e-05, 1.2819000000000719e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.283299999999682e-05, 1.2806000000000622e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2805999999997153e-05, 1.2819000000000719e-05, 1.2833999999999762e-05, 1.2860999999999428e-05, 1.2833999999996293e-05, 1.283299999999682e-05, 1.2833999999996293e-05, 1.2792000000004522e-05, 1.2833000000003758e-05, 1.2861000000002898e-05, 1.2833000000003758e-05, 1.2860999999995959e-05, 1.2833999999996293e-05, 1.283299999999682e-05, 1.281899999999725e-05, 1.2860999999995959e-05, 1.2834000000003232e-05, 1.2819999999996723e-05, 1.283299999999682e-05, 1.2916999999994239e-05, 1.281899999999725e-05, 1.2833000000003758e-05, 1.2833999999996293e-05, 1.2833000000003758e-05, 1.281899999999725e-05, 1.2833000000003758e-05, 1.2847999999995863e-05, 1.2833999999996293e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.436" endtime="20201115 22:01:03.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.431" endtime="20201115 22:01:03.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.440" endtime="20201115 22:01:03.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.444" endtime="20201115 22:01:03.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.442" endtime="20201115 22:01:03.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.438" endtime="20201115 22:01:03.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.065" endtime="20201115 22:01:03.464"></status>
</kw>
<msg timestamp="20201115 22:01:03.464" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.473" endtime="20201115 22:01:03.496"></status>
</kw>
<msg timestamp="20201115 22:01:03.497" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.472" endtime="20201115 22:01:03.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.498" endtime="20201115 22:01:03.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.500" endtime="20201115 22:01:03.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.469" endtime="20201115 22:01:03.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.467" endtime="20201115 22:01:03.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.509" endtime="20201115 22:01:03.796"></status>
</kw>
<msg timestamp="20201115 22:01:03.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.507" endtime="20201115 22:01:03.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.801" endtime="20201115 22:01:03.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.809" endtime="20201115 22:01:03.810"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.505" endtime="20201115 22:01:03.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.503" endtime="20201115 22:01:03.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:03.816" level="INFO">${RESULT} = [{'time': 0.022402028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.022646194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:03.812" endtime="20201115 22:01:03.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:03.829" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:03.816" endtime="20201115 22:01:03.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.833" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:03.832" endtime="20201115 22:01:03.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.836" level="INFO">VALUE: [1.2846999999999859e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2820000000000192e-05, 1.2805999999997153e-05, 1.2819000000000719e-05, 1.2847999999999332e-05, 1.2860999999999428e-05, 1.2860999999999428e-05, 1.279099999999811e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2833999999999762e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2860999999999428e-05, 1.2846999999999859e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2820000000000192e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2861000000002898e-05, 1.2819000000000719e-05, 1.2846999999999859e-05, 1.2820000000000192e-05, 1.2805999999997153e-05, 1.2833999999999762e-05, 1.2833999999999762e-05, 1.2833999999999762e-05, 1.2860999999999428e-05, 1.2833000000000289e-05, 1.2819000000000719e-05, 1.283299999999682e-05, 1.283299999999682e-05, 1.2819999999996723e-05, 1.2820000000003662e-05, 1.2874999999995529e-05, 1.2833000000003758e-05, 1.2833000000003758e-05, 1.2847000000003328e-05, 1.280499999999768e-05, 1.2861000000002898e-05, 1.281899999999725e-05, 1.2834000000003232e-05, 1.2833000000003758e-05]</msg>
<status status="PASS" starttime="20201115 22:01:03.834" endtime="20201115 22:01:03.836"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.830" endtime="20201115 22:01:03.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.839" endtime="20201115 22:01:03.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:03.842" endtime="20201115 22:01:03.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.841" endtime="20201115 22:01:03.862"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.837" endtime="20201115 22:01:03.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.465" endtime="20201115 22:01:03.863"></status>
</kw>
<msg timestamp="20201115 22:01:03.863" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.872" endtime="20201115 22:01:03.896"></status>
</kw>
<msg timestamp="20201115 22:01:03.896" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.871" endtime="20201115 22:01:03.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:03.898" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:03.897" endtime="20201115 22:01:03.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.900" endtime="20201115 22:01:03.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.868" endtime="20201115 22:01:03.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.866" endtime="20201115 22:01:03.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:03.909" endtime="20201115 22:01:04.196"></status>
</kw>
<msg timestamp="20201115 22:01:04.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023091333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:03.907" endtime="20201115 22:01:04.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023091333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.200" endtime="20201115 22:01:04.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.208" endtime="20201115 22:01:04.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.905" endtime="20201115 22:01:04.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.903" endtime="20201115 22:01:04.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.215" level="INFO">${RESULT} = [{'time': 0.023091333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.023332, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:04.211" endtime="20201115 22:01:04.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.228" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.216" endtime="20201115 22:01:04.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.232" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.231" endtime="20201115 22:01:04.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.235" level="INFO">VALUE: [1.2846999999999859e-05, 1.2833000000000289e-05, 1.2806000000000622e-05, 1.2792000000001053e-05, 1.2820000000000192e-05, 1.2833999999999762e-05, 1.2778000000001483e-05, 1.2819000000000719e-05, 1.2874999999998998e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2847999999999332e-05, 1.2860999999999428e-05, 1.2846999999999859e-05, 1.2819000000000719e-05, 1.2846999999999859e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2792000000001053e-05, 1.2860999999999428e-05, 1.2833999999999762e-05, 1.2860999999999428e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2820000000000192e-05, 1.2777999999998013e-05, 1.2833999999999762e-05, 1.2903000000001608e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2874999999998998e-05, 1.2806000000000622e-05, 1.2833000000003758e-05, 1.2833000000003758e-05, 1.2846999999996389e-05, 1.2833999999996293e-05, 1.2792000000004522e-05, 1.2861000000002898e-05, 1.279099999999811e-05, 1.2861000000002898e-05, 1.2833000000003758e-05, 1.2848000000002802e-05, 1.2846999999996389e-05, 1.283299999999682e-05, 1.281899999999725e-05, 1.2819000000004188e-05, 1.283299999999682e-05, 1.283299999999682e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.233" endtime="20201115 22:01:04.235"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.229" endtime="20201115 22:01:04.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.238" endtime="20201115 22:01:04.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.242" endtime="20201115 22:01:04.261"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.240" endtime="20201115 22:01:04.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.236" endtime="20201115 22:01:04.262"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.864" endtime="20201115 22:01:04.263"></status>
</kw>
<msg timestamp="20201115 22:01:04.263" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.272" endtime="20201115 22:01:04.294"></status>
</kw>
<msg timestamp="20201115 22:01:04.294" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.270" endtime="20201115 22:01:04.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.295" endtime="20201115 22:01:04.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.298" endtime="20201115 22:01:04.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.267" endtime="20201115 22:01:04.300"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.265" endtime="20201115 22:01:04.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.307" endtime="20201115 22:01:04.594"></status>
</kw>
<msg timestamp="20201115 22:01:04.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.305" endtime="20201115 22:01:04.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.598" endtime="20201115 22:01:04.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.606" endtime="20201115 22:01:04.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.303" endtime="20201115 22:01:04.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.301" endtime="20201115 22:01:04.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:04.613" level="INFO">${RESULT} = [{'time': 0.022500194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.022745542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:04.609" endtime="20201115 22:01:04.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:04.626" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:04.614" endtime="20201115 22:01:04.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.630" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:04.629" endtime="20201115 22:01:04.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.633" level="INFO">VALUE: [1.2833000000000289e-05, 1.2833999999999762e-05, 1.2819000000000719e-05, 1.2833999999999762e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2792000000001053e-05, 1.2820000000000192e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2833999999999762e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2860999999999428e-05, 1.2833999999999762e-05, 1.2819000000000719e-05, 1.2820000000000192e-05, 1.2833000000000289e-05, 1.2847999999999332e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833999999999762e-05, 1.2820000000000192e-05, 1.2763999999998443e-05, 1.2846999999999859e-05, 1.2819000000000719e-05, 1.2833999999999762e-05, 1.2833999999999762e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000003758e-05, 1.2834000000003232e-05, 1.2847000000003328e-05, 1.2791999999997583e-05, 1.2847000000003328e-05, 1.2833000000003758e-05, 1.2819000000004188e-05, 1.2846999999996389e-05, 1.2833000000003758e-05, 1.2820000000003662e-05, 1.2917000000001178e-05, 1.2819000000004188e-05, 1.2874999999995529e-05, 1.2833000000003758e-05]</msg>
<status status="PASS" starttime="20201115 22:01:04.631" endtime="20201115 22:01:04.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.627" endtime="20201115 22:01:04.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.643" endtime="20201115 22:01:04.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:04.646" endtime="20201115 22:01:04.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.644" endtime="20201115 22:01:04.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.641" endtime="20201115 22:01:04.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.263" endtime="20201115 22:01:04.667"></status>
</kw>
<msg timestamp="20201115 22:01:04.667" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.676" endtime="20201115 22:01:04.699"></status>
</kw>
<msg timestamp="20201115 22:01:04.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.674" endtime="20201115 22:01:04.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:04.702" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 11', 'msg': ['overhead_timer_list remove 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:04.700" endtime="20201115 22:01:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.703" endtime="20201115 22:01:04.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.672" endtime="20201115 22:01:04.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.669" endtime="20201115 22:01:04.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:04.712" endtime="20201115 22:01:04.998"></status>
</kw>
<msg timestamp="20201115 22:01:05.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:04.710" endtime="20201115 22:01:05.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.002" endtime="20201115 22:01:05.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.011" endtime="20201115 22:01:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.708" endtime="20201115 22:01:05.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.706" endtime="20201115 22:01:05.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.017" level="INFO">${RESULT} = [{'time': 0.022755944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.022999111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:05.014" endtime="20201115 22:01:05.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.031" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.018" endtime="20201115 22:01:05.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.035" level="INFO">NAME: 00-overhead-11-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.034" endtime="20201115 22:01:05.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.037" level="INFO">VALUE: [1.2846999999999859e-05, 1.280499999999768e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2861000000002898e-05, 1.2833999999999762e-05, 1.2846999999999859e-05, 1.2848000000002802e-05, 1.2820000000000192e-05, 1.2763999999998443e-05, 1.2820000000000192e-05, 1.2792000000001053e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.280499999999768e-05, 1.2792000000001053e-05, 1.2820000000000192e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2819999999996723e-05, 1.2846999999999859e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2888999999998568e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2819000000000719e-05, 1.2833000000000289e-05, 1.2833000000000289e-05, 1.2846999999999859e-05, 1.2902999999998138e-05, 1.2833999999999762e-05, 1.2846999999999859e-05, 1.2860999999999428e-05, 1.283299999999682e-05, 1.2834000000003232e-05, 1.2861000000002898e-05, 1.2806000000004092e-05, 1.2791999999997583e-05, 1.2833000000003758e-05, 1.2847000000003328e-05, 1.2860999999995959e-05, 1.283299999999682e-05, 1.2833999999996293e-05, 1.2833000000003758e-05, 1.281899999999725e-05, 1.2819000000004188e-05, 1.2874999999995529e-05, 1.2819000000004188e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.036" endtime="20201115 22:01:05.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.031" endtime="20201115 22:01:05.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.041" endtime="20201115 22:01:05.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.045" endtime="20201115 22:01:05.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.043" endtime="20201115 22:01:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.040" endtime="20201115 22:01:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:04.667" endtime="20201115 22:01:05.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.064" endtime="20201115 22:01:05.066"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:03.063" endtime="20201115 22:01:05.066"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.068" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.077" endtime="20201115 22:01:05.100"></status>
</kw>
<msg timestamp="20201115 22:01:05.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.075" endtime="20201115 22:01:05.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.102" endtime="20201115 22:01:05.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.104" endtime="20201115 22:01:05.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.073" endtime="20201115 22:01:05.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.070" endtime="20201115 22:01:05.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.113" endtime="20201115 22:01:05.399"></status>
</kw>
<msg timestamp="20201115 22:01:05.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.111" endtime="20201115 22:01:05.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024643722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.403" endtime="20201115 22:01:05.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.411" endtime="20201115 22:01:05.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.109" endtime="20201115 22:01:05.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.107" endtime="20201115 22:01:05.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.418" level="INFO">${RESULT} = [{'time': 0.024643722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.024902236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:05.414" endtime="20201115 22:01:05.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.431" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.419" endtime="20201115 22:01:05.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.436" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.435" endtime="20201115 22:01:05.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.438" level="INFO">VALUE: [1.3138999999998818e-05, 1.3125000000002718e-05, 1.3152999999998388e-05, 1.3139000000002288e-05, 1.3139000000002288e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3125000000002718e-05, 1.3209000000000137e-05, 1.3179999999998054e-05, 1.3139000000002288e-05, 1.3152999999998388e-05, 1.3152999999998388e-05, 1.3138999999998818e-05, 1.3152999999998388e-05, 1.3153000000001858e-05, 1.3152999999998388e-05, 1.3195000000000567e-05, 1.3152999999998388e-05, 1.3151999999998915e-05, 1.3097000000000109e-05, 1.3167000000001428e-05, 1.3180999999997528e-05, 1.3069000000000969e-05, 1.3153000000001858e-05, 1.3165999999998484e-05, 1.3138999999995349e-05, 1.3152999999994919e-05, 1.3153000000001858e-05, 1.3125000000002718e-05, 1.3166999999994489e-05, 1.3194000000001094e-05, 1.3138000000002814e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3151999999995445e-05, 1.3110999999996209e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3110999999996209e-05, 1.3167000000001428e-05, 1.3152999999994919e-05, 1.3153000000001858e-05, 1.3181000000000997e-05, 1.3152000000002384e-05, 1.3180000000001524e-05, 1.3152000000002384e-05, 1.3139000000002288e-05, 1.3166000000001954e-05, 1.3153000000001858e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.437" endtime="20201115 22:01:05.439"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.432" endtime="20201115 22:01:05.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.442" endtime="20201115 22:01:05.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.445" endtime="20201115 22:01:05.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.444" endtime="20201115 22:01:05.465"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.440" endtime="20201115 22:01:05.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.068" endtime="20201115 22:01:05.466"></status>
</kw>
<msg timestamp="20201115 22:01:05.466" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.475" endtime="20201115 22:01:05.499"></status>
</kw>
<msg timestamp="20201115 22:01:05.499" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.473" endtime="20201115 22:01:05.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.500" endtime="20201115 22:01:05.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.503" endtime="20201115 22:01:05.504"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.471" endtime="20201115 22:01:05.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.469" endtime="20201115 22:01:05.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.512" endtime="20201115 22:01:05.797"></status>
</kw>
<msg timestamp="20201115 22:01:05.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.510" endtime="20201115 22:01:05.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.802" endtime="20201115 22:01:05.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.810" endtime="20201115 22:01:05.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.508" endtime="20201115 22:01:05.812"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.506" endtime="20201115 22:01:05.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:05.817" level="INFO">${RESULT} = [{'time': 0.022537194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3165999999998484e-05, 'source_diff': 1.3165999999998484e-05}, {'time': 0.022797694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:05.813" endtime="20201115 22:01:05.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:05.830" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:05.818" endtime="20201115 22:01:05.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.835" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:05.834" endtime="20201115 22:01:05.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.837" level="INFO">VALUE: [1.3165999999998484e-05, 1.3151999999998915e-05, 1.3152999999998388e-05, 1.3179999999998054e-05, 1.3138999999998818e-05, 1.3138999999998818e-05, 1.3209000000000137e-05, 1.3180000000001524e-05, 1.3111999999999152e-05, 1.3181000000000997e-05, 1.3138999999998818e-05, 1.3138999999998818e-05, 1.3166999999997958e-05, 1.3125000000002718e-05, 1.3125000000002718e-05, 1.3167000000001428e-05, 1.3110999999999678e-05, 1.3139000000002288e-05, 1.3139000000002288e-05, 1.3166999999997958e-05, 1.3151999999998915e-05, 1.3152000000002384e-05, 1.3195000000000567e-05, 1.3153000000001858e-05, 1.3138999999998818e-05, 1.3139000000002288e-05, 1.3167000000001428e-05, 1.3153000000001858e-05, 1.3152000000002384e-05, 1.3125000000002718e-05, 1.3153000000001858e-05, 1.3166999999997958e-05, 1.3124999999999248e-05, 1.3151999999998915e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3181000000000997e-05, 1.3167000000001428e-05, 1.3167000000001428e-05, 1.3165999999995015e-05, 1.3138999999995349e-05, 1.3152999999994919e-05, 1.3153000000001858e-05, 1.3069000000004438e-05, 1.3153000000001858e-05, 1.3194000000001094e-05, 1.3139000000002288e-05, 1.3152000000002384e-05, 1.3153000000001858e-05]</msg>
<status status="PASS" starttime="20201115 22:01:05.836" endtime="20201115 22:01:05.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.831" endtime="20201115 22:01:05.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.840" endtime="20201115 22:01:05.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:05.844" endtime="20201115 22:01:05.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.842" endtime="20201115 22:01:05.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.839" endtime="20201115 22:01:05.864"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.467" endtime="20201115 22:01:05.864"></status>
</kw>
<msg timestamp="20201115 22:01:05.865" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.873" endtime="20201115 22:01:05.897"></status>
</kw>
<msg timestamp="20201115 22:01:05.897" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.872" endtime="20201115 22:01:05.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:05.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:05.898" endtime="20201115 22:01:05.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.901" endtime="20201115 22:01:05.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.869" endtime="20201115 22:01:05.903"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.867" endtime="20201115 22:01:05.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:05.910" endtime="20201115 22:01:06.197"></status>
</kw>
<msg timestamp="20201115 22:01:06.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:05.908" endtime="20201115 22:01:06.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.201" endtime="20201115 22:01:06.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.209" endtime="20201115 22:01:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.906" endtime="20201115 22:01:06.212"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.904" endtime="20201115 22:01:06.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.217" level="INFO">${RESULT} = [{'time': 0.022606972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3165999999998484e-05, 'source_diff': 1.3165999999998484e-05}, {'time': 0.022869292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.213" endtime="20201115 22:01:06.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.230" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.217" endtime="20201115 22:01:06.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.234" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.233" endtime="20201115 22:01:06.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.237" level="INFO">VALUE: [1.3165999999998484e-05, 1.3124999999999248e-05, 1.3151999999998915e-05, 1.3166999999997958e-05, 1.3180000000001524e-05, 1.3124999999999248e-05, 1.3167000000001428e-05, 1.3097999999999582e-05, 1.3165999999998484e-05, 1.3166000000001954e-05, 1.3152999999998388e-05, 1.3151999999998915e-05, 1.3151999999998915e-05, 1.3138999999998818e-05, 1.3139000000002288e-05, 1.3138999999998818e-05, 1.3138999999998818e-05, 1.3138999999998818e-05, 1.3124999999999248e-05, 1.3152999999998388e-05, 1.3139000000002288e-05, 1.3179999999998054e-05, 1.3153000000001858e-05, 1.3097999999999582e-05, 1.3138999999998818e-05, 1.3167000000001428e-05, 1.3152000000002384e-05, 1.3153000000001858e-05, 1.3152000000002384e-05, 1.3151999999998915e-05, 1.3180000000001524e-05, 1.3138999999998818e-05, 1.3153000000001858e-05, 1.3097000000000109e-05, 1.3137999999995875e-05, 1.3139000000002288e-05, 1.3137999999995875e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3166000000001954e-05, 1.3139000000002288e-05, 1.3139000000002288e-05, 1.3167000000001428e-05, 1.3139000000002288e-05, 1.3208000000000664e-05, 1.3194000000001094e-05, 1.3152000000002384e-05, 1.3138999999995349e-05, 1.3139000000002288e-05, 1.3222000000000234e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.235" endtime="20201115 22:01:06.237"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.231" endtime="20201115 22:01:06.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.240" endtime="20201115 22:01:06.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.243" endtime="20201115 22:01:06.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.242" endtime="20201115 22:01:06.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.238" endtime="20201115 22:01:06.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.865" endtime="20201115 22:01:06.264"></status>
</kw>
<msg timestamp="20201115 22:01:06.264" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.273" endtime="20201115 22:01:06.297"></status>
</kw>
<msg timestamp="20201115 22:01:06.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.271" endtime="20201115 22:01:06.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.298" endtime="20201115 22:01:06.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.301" endtime="20201115 22:01:06.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.269" endtime="20201115 22:01:06.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.267" endtime="20201115 22:01:06.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.310" endtime="20201115 22:01:06.597"></status>
</kw>
<msg timestamp="20201115 22:01:06.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.308" endtime="20201115 22:01:06.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:01:06.601" endtime="20201115 22:01:06.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.609" endtime="20201115 22:01:06.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.306" endtime="20201115 22:01:06.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.304" endtime="20201115 22:01:06.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:06.616" level="INFO">${RESULT} = [{'time': 0.022594139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.022857167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:06.613" endtime="20201115 22:01:06.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:06.629" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:06.617" endtime="20201115 22:01:06.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.634" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:06.633" endtime="20201115 22:01:06.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.636" level="INFO">VALUE: [1.3138999999998818e-05, 1.3125000000002718e-05, 1.3153000000001858e-05, 1.3125000000002718e-05, 1.3125000000002718e-05, 1.3137999999999345e-05, 1.3153000000001858e-05, 1.3124999999999248e-05, 1.3165999999998484e-05, 1.3193999999997624e-05, 1.3139000000002288e-05, 1.3124999999999248e-05, 1.3153000000001858e-05, 1.3152999999998388e-05, 1.3193999999997624e-05, 1.3138999999998818e-05, 1.3153000000001858e-05, 1.3138999999998818e-05, 1.3152999999998388e-05, 1.3167000000001428e-05, 1.3138999999998818e-05, 1.3070000000000442e-05, 1.3167000000001428e-05, 1.3165999999998484e-05, 1.3139000000002288e-05, 1.3083000000000539e-05, 1.3180000000001524e-05, 1.3097000000000109e-05, 1.3166999999997958e-05, 1.3124999999999248e-05, 1.3152999999998388e-05, 1.3152999999998388e-05, 1.3165999999998484e-05, 1.3166999999994489e-05, 1.3138999999995349e-05, 1.3152000000002384e-05, 1.3166999999994489e-05, 1.3139000000002288e-05, 1.3151999999995445e-05, 1.3153000000001858e-05, 1.3137999999995875e-05, 1.3139000000002288e-05, 1.3167000000001428e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3167000000001428e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3125000000002718e-05]</msg>
<status status="PASS" starttime="20201115 22:01:06.635" endtime="20201115 22:01:06.637"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.630" endtime="20201115 22:01:06.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.639" endtime="20201115 22:01:06.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:06.643" endtime="20201115 22:01:06.662"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.641" endtime="20201115 22:01:06.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.638" endtime="20201115 22:01:06.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.265" endtime="20201115 22:01:06.663"></status>
</kw>
<msg timestamp="20201115 22:01:06.664" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.672" endtime="20201115 22:01:06.696"></status>
</kw>
<msg timestamp="20201115 22:01:06.697" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.671" endtime="20201115 22:01:06.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:06.699" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 12', 'msg': ['overhead_timer_list remove 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:06.698" endtime="20201115 22:01:06.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.700" endtime="20201115 22:01:06.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.668" endtime="20201115 22:01:06.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.666" endtime="20201115 22:01:06.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:06.709" endtime="20201115 22:01:06.997"></status>
</kw>
<msg timestamp="20201115 22:01:07.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:06.708" endtime="20201115 22:01:07.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.002" endtime="20201115 22:01:07.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.010" endtime="20201115 22:01:07.011"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.705" endtime="20201115 22:01:07.012"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.703" endtime="20201115 22:01:07.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.017" level="INFO">${RESULT} = [{'time': 0.022456819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.022716514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.013" endtime="20201115 22:01:07.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.031" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.018" endtime="20201115 22:01:07.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.035" level="INFO">NAME: 00-overhead-12-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.034" endtime="20201115 22:01:07.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.037" level="INFO">VALUE: [1.3124999999999248e-05, 1.3167000000001428e-05, 1.3180000000001524e-05, 1.3151999999998915e-05, 1.3180000000001524e-05, 1.3138999999998818e-05, 1.3153000000001858e-05, 1.3138999999998818e-05, 1.3222000000000234e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3195000000000567e-05, 1.3194999999997098e-05, 1.3138999999998818e-05, 1.3137999999999345e-05, 1.3125000000002718e-05, 1.3139000000002288e-05, 1.3151999999998915e-05, 1.3139000000002288e-05, 1.3138999999998818e-05, 1.3166000000001954e-05, 1.3138999999998818e-05, 1.3139000000002288e-05, 1.3152999999998388e-05, 1.3193999999997624e-05, 1.3124999999999248e-05, 1.3153000000001858e-05, 1.3152000000002384e-05, 1.3195000000000567e-05, 1.3138999999998818e-05, 1.3152999999998388e-05, 1.3138999999998818e-05, 1.3125000000002718e-05, 1.3153000000001858e-05, 1.3195000000000567e-05, 1.3138999999995349e-05, 1.3166999999994489e-05, 1.3167000000001428e-05, 1.3124999999995779e-05, 1.3069999999996973e-05, 1.3153000000001858e-05, 1.3153000000001858e-05, 1.3139000000002288e-05, 1.3125000000002718e-05, 1.3151999999995445e-05, 1.3138999999995349e-05, 1.3139000000002288e-05, 1.3139000000002288e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.036" endtime="20201115 22:01:07.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.031" endtime="20201115 22:01:07.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.041" endtime="20201115 22:01:07.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.044" endtime="20201115 22:01:07.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.042" endtime="20201115 22:01:07.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.039" endtime="20201115 22:01:07.064"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:06.664" endtime="20201115 22:01:07.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.067" endtime="20201115 22:01:07.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:05.066" endtime="20201115 22:01:07.065"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.067" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.076" endtime="20201115 22:01:07.101"></status>
</kw>
<msg timestamp="20201115 22:01:07.101" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.074" endtime="20201115 22:01:07.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.103" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.102" endtime="20201115 22:01:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.104" endtime="20201115 22:01:07.106"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.072" endtime="20201115 22:01:07.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.070" endtime="20201115 22:01:07.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.114" endtime="20201115 22:01:07.400"></status>
</kw>
<msg timestamp="20201115 22:01:07.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.112" endtime="20201115 22:01:07.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.405" endtime="20201115 22:01:07.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.413" endtime="20201115 22:01:07.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.110" endtime="20201115 22:01:07.415"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.108" endtime="20201115 22:01:07.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.419" level="INFO">${RESULT} = [{'time': 0.024808528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3431000000001247e-05, 'source_diff': 1.3431000000001247e-05}, {'time': 0.025084667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.416" endtime="20201115 22:01:07.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.433" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.421" endtime="20201115 22:01:07.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.438" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.437" endtime="20201115 22:01:07.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.440" level="INFO">VALUE: [1.3431000000001247e-05, 1.3403000000002108e-05, 1.3458000000000914e-05, 1.3430000000001774e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3445000000000817e-05, 1.3429999999998304e-05, 1.3444999999997348e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3486999999999527e-05, 1.3485999999996584e-05, 1.3459000000000387e-05, 1.3429999999998304e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.3389000000002538e-05, 1.3459000000000387e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3459000000000387e-05, 1.3431000000001247e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3457999999993975e-05, 1.3486000000000054e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3417000000001678e-05, 1.3457999999993975e-05, 1.3403000000002108e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3430000000001774e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3444000000001344e-05, 1.3458999999993448e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3459000000000387e-05, 1.3459000000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.439" endtime="20201115 22:01:07.441"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.434" endtime="20201115 22:01:07.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.443" endtime="20201115 22:01:07.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.447" endtime="20201115 22:01:07.466"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.445" endtime="20201115 22:01:07.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.442" endtime="20201115 22:01:07.467"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.068" endtime="20201115 22:01:07.467"></status>
</kw>
<msg timestamp="20201115 22:01:07.468" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.477" endtime="20201115 22:01:07.500"></status>
</kw>
<msg timestamp="20201115 22:01:07.501" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.475" endtime="20201115 22:01:07.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.504" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.502" endtime="20201115 22:01:07.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.505" endtime="20201115 22:01:07.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.472" endtime="20201115 22:01:07.507"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.470" endtime="20201115 22:01:07.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.514" endtime="20201115 22:01:07.802"></status>
</kw>
<msg timestamp="20201115 22:01:07.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.512" endtime="20201115 22:01:07.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.806" endtime="20201115 22:01:07.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.815" endtime="20201115 22:01:07.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.510" endtime="20201115 22:01:07.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.508" endtime="20201115 22:01:07.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:07.822" level="INFO">${RESULT} = [{'time': 0.022643625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.022921222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:07.818" endtime="20201115 22:01:07.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:07.836" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:07.823" endtime="20201115 22:01:07.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.840" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:07.839" endtime="20201115 22:01:07.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.843" level="INFO">VALUE: [1.3499999999999623e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3457999999997444e-05, 1.3458999999996918e-05, 1.3459000000000387e-05, 1.3486999999999527e-05, 1.3457999999997444e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3443999999997874e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3457999999997444e-05, 1.3486000000000054e-05, 1.3443999999997874e-05, 1.3487000000002997e-05, 1.3527999999998763e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3457999999997444e-05, 1.3472999999999957e-05, 1.3472000000000484e-05, 1.3457999999997444e-05, 1.3458000000000914e-05, 1.3457999999997444e-05, 1.3443999999997874e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3499999999999623e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3417000000001678e-05, 1.3416000000002204e-05, 1.3444000000001344e-05, 1.3486000000000054e-05, 1.3389000000002538e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3459000000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:01:07.841" endtime="20201115 22:01:07.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.836" endtime="20201115 22:01:07.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.846" endtime="20201115 22:01:07.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:07.850" endtime="20201115 22:01:07.869"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.848" endtime="20201115 22:01:07.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.844" endtime="20201115 22:01:07.870"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.468" endtime="20201115 22:01:07.870"></status>
</kw>
<msg timestamp="20201115 22:01:07.871" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.880" endtime="20201115 22:01:07.904"></status>
</kw>
<msg timestamp="20201115 22:01:07.905" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.879" endtime="20201115 22:01:07.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:07.907" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:07.906" endtime="20201115 22:01:07.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.908" endtime="20201115 22:01:07.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.876" endtime="20201115 22:01:07.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.873" endtime="20201115 22:01:07.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:07.918" endtime="20201115 22:01:08.224"></status>
</kw>
<msg timestamp="20201115 22:01:08.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023588847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:07.916" endtime="20201115 22:01:08.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023588847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.228" endtime="20201115 22:01:08.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.237" endtime="20201115 22:01:08.238"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.914" endtime="20201115 22:01:08.239"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.912" endtime="20201115 22:01:08.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.244" level="INFO">${RESULT} = [{'time': 0.023588847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3458000000000914e-05, 'source_diff': 1.3458000000000914e-05}, {'time': 0.023867347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:08.240" endtime="20201115 22:01:08.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.257" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.245" endtime="20201115 22:01:08.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.262" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.261" endtime="20201115 22:01:08.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.264" level="INFO">VALUE: [1.3458000000000914e-05, 1.3472000000000484e-05, 1.3415999999998734e-05, 1.3527999999998763e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3513999999999193e-05, 1.3444000000001344e-05, 1.3457999999997444e-05, 1.3444000000001344e-05, 1.3472000000000484e-05, 1.3417000000001678e-05, 1.3444999999997348e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3417000000001678e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3443999999997874e-05, 1.3458000000000914e-05, 1.3457999999997444e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3443999999994405e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3389000000002538e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.3417000000001678e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3457999999993975e-05, 1.352699999999929e-05, 1.3458000000000914e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.263" endtime="20201115 22:01:08.265"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.258" endtime="20201115 22:01:08.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.268" endtime="20201115 22:01:08.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.272" endtime="20201115 22:01:08.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.270" endtime="20201115 22:01:08.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.266" endtime="20201115 22:01:08.292"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.871" endtime="20201115 22:01:08.292"></status>
</kw>
<msg timestamp="20201115 22:01:08.293" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.302" endtime="20201115 22:01:08.327"></status>
</kw>
<msg timestamp="20201115 22:01:08.328" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.300" endtime="20201115 22:01:08.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.330" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.329" endtime="20201115 22:01:08.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.331" endtime="20201115 22:01:08.333"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.297" endtime="20201115 22:01:08.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.295" endtime="20201115 22:01:08.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.341" endtime="20201115 22:01:08.629"></status>
</kw>
<msg timestamp="20201115 22:01:08.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.339" endtime="20201115 22:01:08.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.633" endtime="20201115 22:01:08.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.641" endtime="20201115 22:01:08.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.336" endtime="20201115 22:01:08.644"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.335" endtime="20201115 22:01:08.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:08.648" level="INFO">${RESULT} = [{'time': 0.023061486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3457999999997444e-05, 'source_diff': 1.3457999999997444e-05}, {'time': 0.023347472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:08.645" endtime="20201115 22:01:08.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:08.662" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:08.649" endtime="20201115 22:01:08.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.667" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:08.666" endtime="20201115 22:01:08.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.669" level="INFO">VALUE: [1.3457999999997444e-05, 1.3403000000002108e-05, 1.3416000000002204e-05, 1.3486000000000054e-05, 1.3528000000002233e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3513999999999193e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472999999999957e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3443999999997874e-05, 1.3472000000000484e-05, 1.3445000000000817e-05, 1.3459000000000387e-05, 1.3457999999997444e-05, 1.3499999999999623e-05, 1.3472999999999957e-05, 1.3401999999999165e-05, 1.3472999999999957e-05, 1.3472000000000484e-05, 1.3457999999997444e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.352699999999929e-05, 1.3443999999994405e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3444000000001344e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3459000000000387e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3444000000001344e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3429999999994835e-05, 1.3444000000001344e-05, 1.3457999999993975e-05, 1.3459000000000387e-05]</msg>
<status status="PASS" starttime="20201115 22:01:08.668" endtime="20201115 22:01:08.670"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.663" endtime="20201115 22:01:08.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.673" endtime="20201115 22:01:08.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:08.676" endtime="20201115 22:01:08.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.675" endtime="20201115 22:01:08.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.671" endtime="20201115 22:01:08.697"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.293" endtime="20201115 22:01:08.697"></status>
</kw>
<msg timestamp="20201115 22:01:08.697" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.707" endtime="20201115 22:01:08.732"></status>
</kw>
<msg timestamp="20201115 22:01:08.732" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.705" endtime="20201115 22:01:08.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:08.735" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 13', 'msg': ['overhead_timer_list remove 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:08.733" endtime="20201115 22:01:08.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.736" endtime="20201115 22:01:08.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.702" endtime="20201115 22:01:08.738"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.700" endtime="20201115 22:01:08.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:08.745" endtime="20201115 22:01:09.032"></status>
</kw>
<msg timestamp="20201115 22:01:09.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:08.744" endtime="20201115 22:01:09.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023102264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023115736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.036" endtime="20201115 22:01:09.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.045" endtime="20201115 22:01:09.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.741" endtime="20201115 22:01:09.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.739" endtime="20201115 22:01:09.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.053" level="INFO">${RESULT} = [{'time': 0.023115736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.023397722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.049" endtime="20201115 22:01:09.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.067" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.054" endtime="20201115 22:01:09.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.071" level="INFO">NAME: 00-overhead-13-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.070" endtime="20201115 22:01:09.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.074" level="INFO">VALUE: [1.3472000000000484e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3417000000001678e-05, 1.3445000000000817e-05, 1.3445000000000817e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.3486999999999527e-05, 1.3443999999997874e-05, 1.3415999999998734e-05, 1.3403000000002108e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3443999999997874e-05, 1.3500000000003093e-05, 1.3459000000000387e-05, 1.3445000000000817e-05, 1.3458000000000914e-05, 1.3444999999997348e-05, 1.3457999999993975e-05, 1.3457999999993975e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3457999999993975e-05, 1.3402000000002634e-05, 1.3459000000000387e-05, 1.3444000000001344e-05, 1.3444000000001344e-05, 1.3445000000000817e-05, 1.3417000000001678e-05, 1.3459000000000387e-05, 1.3458000000000914e-05, 1.3444000000001344e-05, 1.3459000000000387e-05, 1.3457999999993975e-05, 1.3401999999995695e-05, 1.3458000000000914e-05, 1.3445000000000817e-05, 1.3459000000000387e-05, 1.3403000000002108e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.072" endtime="20201115 22:01:09.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.068" endtime="20201115 22:01:09.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.078" endtime="20201115 22:01:09.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.081" endtime="20201115 22:01:09.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.080" endtime="20201115 22:01:09.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.076" endtime="20201115 22:01:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:08.698" endtime="20201115 22:01:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.066" endtime="20201115 22:01:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:07.065" endtime="20201115 22:01:09.102"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.105" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.114" endtime="20201115 22:01:09.140"></status>
</kw>
<msg timestamp="20201115 22:01:09.140" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.112" endtime="20201115 22:01:09.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.143" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.141" endtime="20201115 22:01:09.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.144" endtime="20201115 22:01:09.145"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.110" endtime="20201115 22:01:09.146"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.107" endtime="20201115 22:01:09.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.153" endtime="20201115 22:01:09.441"></status>
</kw>
<msg timestamp="20201115 22:01:09.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025782111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.152" endtime="20201115 22:01:09.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025782111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.445" endtime="20201115 22:01:09.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.454" endtime="20201115 22:01:09.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.149" endtime="20201115 22:01:09.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.147" endtime="20201115 22:01:09.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.461" level="INFO">${RESULT} = [{'time': 0.025782111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.026079403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.457" endtime="20201115 22:01:09.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.474" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.462" endtime="20201115 22:01:09.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.479" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.478" endtime="20201115 22:01:09.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.482" level="INFO">VALUE: [1.3736000000000304e-05, 1.3778000000002483e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3792000000002053e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.376299999999997e-05, 1.380499999999868e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.3777999999999013e-05, 1.3778000000002483e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3722000000000734e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3749999999999873e-05, 1.3778000000005952e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.3805999999998153e-05, 1.3763999999999443e-05, 1.3778000000005952e-05, 1.3680000000002024e-05, 1.3778000000005952e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.376299999999997e-05, 1.377699999999954e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.480" endtime="20201115 22:01:09.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.475" endtime="20201115 22:01:09.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.486" endtime="20201115 22:01:09.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.489" endtime="20201115 22:01:09.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.487" endtime="20201115 22:01:09.509"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.484" endtime="20201115 22:01:09.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.105" endtime="20201115 22:01:09.510"></status>
</kw>
<msg timestamp="20201115 22:01:09.510" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.519" endtime="20201115 22:01:09.545"></status>
</kw>
<msg timestamp="20201115 22:01:09.546" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.518" endtime="20201115 22:01:09.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.547" endtime="20201115 22:01:09.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.549" endtime="20201115 22:01:09.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.515" endtime="20201115 22:01:09.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.513" endtime="20201115 22:01:09.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.559" endtime="20201115 22:01:09.845"></status>
</kw>
<msg timestamp="20201115 22:01:09.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.557" endtime="20201115 22:01:09.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023157861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.850" endtime="20201115 22:01:09.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.858" endtime="20201115 22:01:09.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.554" endtime="20201115 22:01:09.860"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.553" endtime="20201115 22:01:09.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:09.865" level="INFO">${RESULT} = [{'time': 0.023157861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.023453986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:09.862" endtime="20201115 22:01:09.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:09.879" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:09.866" endtime="20201115 22:01:09.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.888" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:09.887" endtime="20201115 22:01:09.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.891" level="INFO">VALUE: [1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.3777999999999013e-05, 1.3722000000000734e-05, 1.376299999999997e-05, 1.377699999999954e-05, 1.3735999999996834e-05, 1.3777999999999013e-05, 1.377699999999954e-05, 1.3791000000002579e-05, 1.377699999999954e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.3778000000002483e-05, 1.3805000000002149e-05, 1.376299999999997e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.377699999999954e-05, 1.381899999999825e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.3792000000005522e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3791000000006048e-05, 1.379099999999911e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3778000000005952e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3723000000000207e-05]</msg>
<status status="PASS" starttime="20201115 22:01:09.889" endtime="20201115 22:01:09.891"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.884" endtime="20201115 22:01:09.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.894" endtime="20201115 22:01:09.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:09.898" endtime="20201115 22:01:09.917"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.896" endtime="20201115 22:01:09.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.893" endtime="20201115 22:01:09.918"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.511" endtime="20201115 22:01:09.919"></status>
</kw>
<msg timestamp="20201115 22:01:09.919" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.928" endtime="20201115 22:01:09.953"></status>
</kw>
<msg timestamp="20201115 22:01:09.954" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.926" endtime="20201115 22:01:09.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:09.956" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:09.955" endtime="20201115 22:01:09.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.957" endtime="20201115 22:01:09.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.924" endtime="20201115 22:01:09.959"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.922" endtime="20201115 22:01:09.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:09.966" endtime="20201115 22:01:10.254"></status>
</kw>
<msg timestamp="20201115 22:01:10.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:09.965" endtime="20201115 22:01:10.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.259" endtime="20201115 22:01:10.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.267" endtime="20201115 22:01:10.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.962" endtime="20201115 22:01:10.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.960" endtime="20201115 22:01:10.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.275" level="INFO">${RESULT} = [{'time': 0.023128556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3764000000002913e-05, 'source_diff': 1.3764000000002913e-05}, {'time': 0.023430181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:10.271" endtime="20201115 22:01:10.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.332" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.276" endtime="20201115 22:01:10.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.337" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.336" endtime="20201115 22:01:10.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.340" level="INFO">VALUE: [1.3764000000002913e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3792000000002053e-05, 1.3764000000002913e-05, 1.3819000000001719e-05, 1.3763999999999443e-05, 1.3819000000001719e-05, 1.3749999999999873e-05, 1.3764000000002913e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3764000000002913e-05, 1.3777999999999013e-05, 1.3736999999999777e-05, 1.3792000000002053e-05, 1.3749999999999873e-05, 1.3806000000001623e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.376299999999997e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.380499999999868e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.377699999999954e-05, 1.380499999999868e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.383299999999782e-05, 1.3777999999999013e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.338" endtime="20201115 22:01:10.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.333" endtime="20201115 22:01:10.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.343" endtime="20201115 22:01:10.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.347" endtime="20201115 22:01:10.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.345" endtime="20201115 22:01:10.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.341" endtime="20201115 22:01:10.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.919" endtime="20201115 22:01:10.367"></status>
</kw>
<msg timestamp="20201115 22:01:10.367" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.377" endtime="20201115 22:01:10.404"></status>
</kw>
<msg timestamp="20201115 22:01:10.404" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.376" endtime="20201115 22:01:10.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.407" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.405" endtime="20201115 22:01:10.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.408" endtime="20201115 22:01:10.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.372" endtime="20201115 22:01:10.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.370" endtime="20201115 22:01:10.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.417" endtime="20201115 22:01:10.703"></status>
</kw>
<msg timestamp="20201115 22:01:10.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.416" endtime="20201115 22:01:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024162292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024176042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:10.707" endtime="20201115 22:01:10.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.716" endtime="20201115 22:01:10.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.413" endtime="20201115 22:01:10.718"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.411" endtime="20201115 22:01:10.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:10.723" level="INFO">${RESULT} = [{'time': 0.024176042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.0244715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:10.720" endtime="20201115 22:01:10.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:10.737" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:10.724" endtime="20201115 22:01:10.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.742" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:10.741" endtime="20201115 22:01:10.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.744" level="INFO">VALUE: [1.3749999999999873e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3764000000002913e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3805999999998153e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.376299999999997e-05, 1.3777999999999013e-05, 1.381899999999825e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3723000000000207e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.377699999999954e-05, 1.3791999999998583e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.376299999999997e-05, 1.3736000000000304e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3693999999994655e-05, 1.3805999999998153e-05, 1.3736000000000304e-05, 1.381899999999825e-05, 1.3777000000006479e-05, 1.379099999999911e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3820000000004662e-05, 1.3736000000000304e-05, 1.379099999999911e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.376299999999997e-05, 1.3791000000006048e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201115 22:01:10.743" endtime="20201115 22:01:10.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.738" endtime="20201115 22:01:10.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.747" endtime="20201115 22:01:10.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:10.751" endtime="20201115 22:01:10.770"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.749" endtime="20201115 22:01:10.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.746" endtime="20201115 22:01:10.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.368" endtime="20201115 22:01:10.772"></status>
</kw>
<msg timestamp="20201115 22:01:10.772" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.782" endtime="20201115 22:01:10.807"></status>
</kw>
<msg timestamp="20201115 22:01:10.808" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.780" endtime="20201115 22:01:10.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:10.810" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 14', 'msg': ['overhead_timer_list remove 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:10.809" endtime="20201115 22:01:10.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.811" endtime="20201115 22:01:10.813"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.777" endtime="20201115 22:01:10.814"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.775" endtime="20201115 22:01:10.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:10.821" endtime="20201115 22:01:11.109"></status>
</kw>
<msg timestamp="20201115 22:01:11.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02393425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:10.819" endtime="20201115 22:01:11.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023920458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02393425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:11.113" endtime="20201115 22:01:11.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.122" endtime="20201115 22:01:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.816" endtime="20201115 22:01:11.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.815" endtime="20201115 22:01:11.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.129" level="INFO">${RESULT} = [{'time': 0.02393425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3792000000002053e-05, 'source_diff': 1.3792000000002053e-05}, {'time': 0.0242375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:11.125" endtime="20201115 22:01:11.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.143" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.130" endtime="20201115 22:01:11.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.147" level="INFO">NAME: 00-overhead-14-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.146" endtime="20201115 22:01:11.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.150" level="INFO">VALUE: [1.3792000000002053e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.3708000000001164e-05, 1.3777000000003009e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3764000000002913e-05, 1.3792000000002053e-05, 1.3777999999999013e-05, 1.3792000000002053e-05, 1.377699999999954e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.3777000000003009e-05, 1.376299999999997e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.3791999999998583e-05, 1.3764000000006382e-05, 1.379099999999911e-05, 1.376299999999997e-05, 1.3861000000003898e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3792000000005522e-05, 1.3778000000005952e-05, 1.3764000000006382e-05, 1.3777999999999013e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3778000000005952e-05, 1.3708000000001164e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.148" endtime="20201115 22:01:11.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.144" endtime="20201115 22:01:11.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.153" endtime="20201115 22:01:11.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.157" endtime="20201115 22:01:11.176"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.155" endtime="20201115 22:01:11.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.151" endtime="20201115 22:01:11.177"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:10.772" endtime="20201115 22:01:11.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.104" endtime="20201115 22:01:11.178"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:09.103" endtime="20201115 22:01:11.178"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.180" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.189" endtime="20201115 22:01:11.217"></status>
</kw>
<msg timestamp="20201115 22:01:11.218" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.188" endtime="20201115 22:01:11.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.220" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.219" endtime="20201115 22:01:11.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.221" endtime="20201115 22:01:11.223"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.185" endtime="20201115 22:01:11.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.183" endtime="20201115 22:01:11.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.231" endtime="20201115 22:01:11.517"></status>
</kw>
<msg timestamp="20201115 22:01:11.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026406167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.230" endtime="20201115 22:01:11.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026392097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026406167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.521" endtime="20201115 22:01:11.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.529" endtime="20201115 22:01:11.531"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.227" endtime="20201115 22:01:11.532"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.225" endtime="20201115 22:01:11.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.536" level="INFO">${RESULT} = [{'time': 0.026406167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4070000000001442e-05, 'source_diff': 1.4070000000001442e-05}, {'time': 0.026727056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.533" endtime="20201115 22:01:11.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.550" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.537" endtime="20201115 22:01:11.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.555" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.554" endtime="20201115 22:01:11.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.558" level="INFO">VALUE: [1.4070000000001442e-05, 1.4083999999997543e-05, 1.408299999999807e-05, 1.4056000000001873e-05, 1.409699999999764e-05, 1.409699999999764e-05, 1.408299999999807e-05, 1.4013999999999693e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4084000000001012e-05, 1.4069000000001969e-05, 1.4069999999997973e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.4084000000001012e-05, 1.4041999999998833e-05, 1.4084000000004482e-05, 1.409699999999764e-05, 1.40689999999985e-05, 1.4027999999999263e-05, 1.4097000000004578e-05, 1.4083000000005008e-05, 1.4055999999998403e-05, 1.408299999999807e-05, 1.4083000000005008e-05, 1.4097999999997113e-05, 1.4084000000004482e-05, 1.409699999999764e-05, 1.4084000000004482e-05, 1.4084000000004482e-05, 1.4083999999997543e-05, 1.4083999999997543e-05, 1.4125000000003718e-05, 1.40689999999985e-05, 1.4083000000005008e-05, 1.4069000000005438e-05, 1.409699999999764e-05, 1.4124999999996779e-05, 1.4055999999998403e-05, 1.408299999999807e-05, 1.4110999999997209e-05, 1.4070000000004912e-05, 1.4097000000004578e-05, 1.4083000000005008e-05, 1.4084000000004482e-05, 1.4097999999997113e-05, 1.4069000000005438e-05, 1.409699999999764e-05, 1.4069999999997973e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.556" endtime="20201115 22:01:11.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.551" endtime="20201115 22:01:11.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.561" endtime="20201115 22:01:11.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.564" endtime="20201115 22:01:11.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.563" endtime="20201115 22:01:11.584"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.559" endtime="20201115 22:01:11.585"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.181" endtime="20201115 22:01:11.585"></status>
</kw>
<msg timestamp="20201115 22:01:11.585" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.595" endtime="20201115 22:01:11.621"></status>
</kw>
<msg timestamp="20201115 22:01:11.622" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.593" endtime="20201115 22:01:11.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.625" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.623" endtime="20201115 22:01:11.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.626" endtime="20201115 22:01:11.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.590" endtime="20201115 22:01:11.628"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.588" endtime="20201115 22:01:11.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.635" endtime="20201115 22:01:11.921"></status>
</kw>
<msg timestamp="20201115 22:01:11.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023823292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.634" endtime="20201115 22:01:11.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023823292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:11.925" endtime="20201115 22:01:11.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.934" endtime="20201115 22:01:11.935"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.631" endtime="20201115 22:01:11.936"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.629" endtime="20201115 22:01:11.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:11.941" level="INFO">${RESULT} = [{'time': 0.023823292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4084000000001012e-05, 'source_diff': 1.4084000000001012e-05}, {'time': 0.024141056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:11.937" endtime="20201115 22:01:11.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:11.955" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:11.942" endtime="20201115 22:01:11.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.960" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:11.959" endtime="20201115 22:01:11.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:11.963" level="INFO">VALUE: [1.4084000000001012e-05, 1.4098000000000582e-05, 1.4125000000000248e-05, 1.405499999999893e-05, 1.4098000000000582e-05, 1.4125000000000248e-05, 1.4083000000001539e-05, 1.4083999999997543e-05, 1.4069000000001969e-05, 1.4097000000001109e-05, 1.4098000000000582e-05, 1.4013999999999693e-05, 1.4097000000001109e-05, 1.4152999999999388e-05, 1.4083000000001539e-05, 1.4165999999999485e-05, 1.4013999999999693e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.4165999999999485e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.4070000000001442e-05, 1.4084000000001012e-05, 1.40689999999985e-05, 1.4083000000005008e-05, 1.4084000000004482e-05, 1.4125000000003718e-05, 1.404099999999936e-05, 1.4042000000005772e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.4124999999996779e-05, 1.4069999999997973e-05, 1.408299999999807e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.4124999999996779e-05, 1.408299999999807e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.409699999999764e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.408299999999807e-05, 1.408299999999807e-05, 1.4083000000005008e-05, 1.408299999999807e-05]</msg>
<status status="PASS" starttime="20201115 22:01:11.961" endtime="20201115 22:01:11.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.956" endtime="20201115 22:01:11.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:11.966" endtime="20201115 22:01:11.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:11.970" endtime="20201115 22:01:11.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.968" endtime="20201115 22:01:11.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.964" endtime="20201115 22:01:11.990"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.586" endtime="20201115 22:01:11.990"></status>
</kw>
<msg timestamp="20201115 22:01:11.991" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.000" endtime="20201115 22:01:12.027"></status>
</kw>
<msg timestamp="20201115 22:01:12.028" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:11.999" endtime="20201115 22:01:12.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.030" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.029" endtime="20201115 22:01:12.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.032" endtime="20201115 22:01:12.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.996" endtime="20201115 22:01:12.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.993" endtime="20201115 22:01:12.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.042" endtime="20201115 22:01:12.328"></status>
</kw>
<msg timestamp="20201115 22:01:12.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023963167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.040" endtime="20201115 22:01:12.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023963167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023977236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.332" endtime="20201115 22:01:12.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.340" endtime="20201115 22:01:12.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.038" endtime="20201115 22:01:12.343"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.036" endtime="20201115 22:01:12.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.347" level="INFO">${RESULT} = [{'time': 0.023977236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.024291153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:12.344" endtime="20201115 22:01:12.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.361" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.348" endtime="20201115 22:01:12.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.366" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.365" endtime="20201115 22:01:12.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.368" level="INFO">VALUE: [1.40689999999985e-05, 1.4111000000000679e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.4056000000001873e-05, 1.4041999999998833e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.4166999999998958e-05, 1.4084000000001012e-05, 1.4083000000001539e-05, 1.4041999999998833e-05, 1.4111000000000679e-05, 1.409699999999764e-05, 1.4098000000000582e-05, 1.408299999999807e-05, 1.4013999999999693e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.4027999999999263e-05, 1.4110999999997209e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.4097000000001109e-05, 1.409699999999764e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.4097000000004578e-05, 1.4069999999997973e-05, 1.4084000000004482e-05, 1.4125000000003718e-05, 1.4083999999997543e-05, 1.4110999999997209e-05, 1.40689999999985e-05, 1.4069999999997973e-05, 1.4069999999997973e-05, 1.4055000000005868e-05, 1.4097999999997113e-05, 1.409699999999764e-05, 1.4111000000004148e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.4083999999997543e-05, 1.4083000000005008e-05, 1.408299999999807e-05, 1.405499999999893e-05, 1.4083999999997543e-05, 1.408299999999807e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.367" endtime="20201115 22:01:12.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.362" endtime="20201115 22:01:12.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.372" endtime="20201115 22:01:12.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.375" endtime="20201115 22:01:12.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.374" endtime="20201115 22:01:12.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.370" endtime="20201115 22:01:12.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.991" endtime="20201115 22:01:12.396"></status>
</kw>
<msg timestamp="20201115 22:01:12.397" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.406" endtime="20201115 22:01:12.433"></status>
</kw>
<msg timestamp="20201115 22:01:12.434" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.404" endtime="20201115 22:01:12.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.436" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.435" endtime="20201115 22:01:12.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.437" endtime="20201115 22:01:12.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.401" endtime="20201115 22:01:12.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.399" endtime="20201115 22:01:12.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.447" endtime="20201115 22:01:12.734"></status>
</kw>
<msg timestamp="20201115 22:01:12.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.446" endtime="20201115 22:01:12.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.738" endtime="20201115 22:01:12.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.746" endtime="20201115 22:01:12.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.443" endtime="20201115 22:01:12.749"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.441" endtime="20201115 22:01:12.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:12.753" level="INFO">${RESULT} = [{'time': 0.023090708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4041000000002829e-05, 'source_diff': 1.4041000000002829e-05}, {'time': 0.023411764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:12.750" endtime="20201115 22:01:12.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:12.767" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:12.754" endtime="20201115 22:01:12.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.772" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:12.771" endtime="20201115 22:01:12.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.774" level="INFO">VALUE: [1.4041000000002829e-05, 1.4014000000003163e-05, 1.4083000000001539e-05, 1.4125000000000248e-05, 1.409699999999764e-05, 1.409699999999764e-05, 1.4097000000001109e-05, 1.4084000000001012e-05, 1.4084000000001012e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.4055999999998403e-05, 1.4069999999997973e-05, 1.4125000000000248e-05, 1.408299999999807e-05, 1.4041999999998833e-05, 1.408299999999807e-05, 1.409699999999764e-05, 1.4083000000001539e-05, 1.4152999999999388e-05, 1.408299999999807e-05, 1.4083000000001539e-05, 1.408299999999807e-05, 1.4069999999997973e-05, 1.4055999999998403e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4069999999997973e-05, 1.40689999999985e-05, 1.408299999999807e-05, 1.40689999999985e-05, 1.408299999999807e-05, 1.40689999999985e-05, 1.4083000000005008e-05, 1.4083000000005008e-05, 1.4069999999997973e-05, 1.4125000000003718e-05, 1.4084000000004482e-05, 1.4139000000003288e-05, 1.4083000000005008e-05, 1.4083999999997543e-05, 1.4070000000004912e-05, 1.408299999999807e-05, 1.4055000000005868e-05, 1.40689999999985e-05, 1.4083999999997543e-05, 1.4083999999997543e-05, 1.4083999999997543e-05]</msg>
<status status="PASS" starttime="20201115 22:01:12.773" endtime="20201115 22:01:12.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.768" endtime="20201115 22:01:12.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.778" endtime="20201115 22:01:12.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:12.782" endtime="20201115 22:01:12.801"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.780" endtime="20201115 22:01:12.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.776" endtime="20201115 22:01:12.802"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.397" endtime="20201115 22:01:12.802"></status>
</kw>
<msg timestamp="20201115 22:01:12.803" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.812" endtime="20201115 22:01:12.839"></status>
</kw>
<msg timestamp="20201115 22:01:12.840" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.810" endtime="20201115 22:01:12.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:12.842" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 15', 'msg': ['overhead_timer_list remove 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:12.841" endtime="20201115 22:01:12.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.843" endtime="20201115 22:01:12.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.807" endtime="20201115 22:01:12.846"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.805" endtime="20201115 22:01:12.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:12.854" endtime="20201115 22:01:13.141"></status>
</kw>
<msg timestamp="20201115 22:01:13.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:12.852" endtime="20201115 22:01:13.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023161361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.146" endtime="20201115 22:01:13.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.154" endtime="20201115 22:01:13.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.849" endtime="20201115 22:01:13.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.848" endtime="20201115 22:01:13.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.161" level="INFO">${RESULT} = [{'time': 0.023175444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.023493333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.158" endtime="20201115 22:01:13.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.175" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.162" endtime="20201115 22:01:13.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.180" level="INFO">NAME: 00-overhead-15-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.178" endtime="20201115 22:01:13.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.182" level="INFO">VALUE: [1.4083000000001539e-05, 1.4069000000001969e-05, 1.4069999999997973e-05, 1.4084000000001012e-05, 1.4083000000001539e-05, 1.4042000000002303e-05, 1.4111000000000679e-05, 1.409699999999764e-05, 1.4097000000001109e-05, 1.4083999999997543e-05, 1.4098000000000582e-05, 1.408299999999807e-05, 1.4083000000001539e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.4055999999998403e-05, 1.4028000000002733e-05, 1.4070000000001442e-05, 1.4110999999997209e-05, 1.40689999999985e-05, 1.409699999999764e-05, 1.4125000000000248e-05, 1.4083000000001539e-05, 1.4097000000001109e-05, 1.4097000000001109e-05, 1.409699999999764e-05, 1.408299999999807e-05, 1.4083999999997543e-05, 1.4083000000005008e-05, 1.408299999999807e-05, 1.4152999999995919e-05, 1.4098000000004052e-05, 1.4153000000002858e-05, 1.409699999999764e-05, 1.4041999999998833e-05, 1.4083999999997543e-05, 1.4083000000005008e-05, 1.4084000000004482e-05, 1.409699999999764e-05, 1.4069999999997973e-05, 1.4139000000003288e-05, 1.4097000000004578e-05, 1.4111000000004148e-05, 1.4069999999997973e-05, 1.4083000000005008e-05, 1.4111000000004148e-05, 1.408299999999807e-05, 1.4083000000005008e-05, 1.4110999999997209e-05, 1.4110999999997209e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.181" endtime="20201115 22:01:13.183"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.176" endtime="20201115 22:01:13.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.186" endtime="20201115 22:01:13.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.189" endtime="20201115 22:01:13.209"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.188" endtime="20201115 22:01:13.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.184" endtime="20201115 22:01:13.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:12.803" endtime="20201115 22:01:13.210"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.179" endtime="20201115 22:01:13.211"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:11.178" endtime="20201115 22:01:13.211"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.213" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.222" endtime="20201115 22:01:13.251"></status>
</kw>
<msg timestamp="20201115 22:01:13.251" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.221" endtime="20201115 22:01:13.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.254" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.252" endtime="20201115 22:01:13.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.255" endtime="20201115 22:01:13.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.218" endtime="20201115 22:01:13.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.216" endtime="20201115 22:01:13.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.264" endtime="20201115 22:01:13.550"></status>
</kw>
<msg timestamp="20201115 22:01:13.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026469861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026484306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.263" endtime="20201115 22:01:13.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026469861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026484306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.554" endtime="20201115 22:01:13.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.563" endtime="20201115 22:01:13.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.260" endtime="20201115 22:01:13.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.258" endtime="20201115 22:01:13.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.569" level="INFO">${RESULT} = [{'time': 0.026484306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4444999999998348e-05, 'source_diff': 1.4444999999998348e-05}, {'time': 0.026822236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.566" endtime="20201115 22:01:13.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.584" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.571" endtime="20201115 22:01:13.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.589" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.588" endtime="20201115 22:01:13.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.592" level="INFO">VALUE: [1.4444999999998348e-05, 1.4402999999999638e-05, 1.4402999999999638e-05, 1.4319000000002219e-05, 1.4457999999998444e-05, 1.4360999999997459e-05, 1.4402000000000165e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4416999999999208e-05, 1.4388999999996599e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4402999999999638e-05, 1.4416999999995739e-05, 1.4374999999997029e-05, 1.4445000000001817e-05, 1.4458000000001914e-05, 1.4389000000003538e-05, 1.4402999999996169e-05, 1.4417000000002678e-05, 1.4389000000003538e-05, 1.4388999999996599e-05, 1.4430000000002774e-05, 1.4403000000003108e-05, 1.4402000000003634e-05, 1.4403000000003108e-05, 1.4402999999996169e-05, 1.4401999999996695e-05, 1.4389000000003538e-05, 1.4402000000003634e-05, 1.4472000000001484e-05, 1.4402000000003634e-05, 1.4416000000003204e-05, 1.4401999999996695e-05, 1.4375000000003968e-05, 1.4403000000003108e-05, 1.4443999999995405e-05, 1.4375000000003968e-05, 1.4402999999996169e-05, 1.4389000000003538e-05, 1.4403000000003108e-05, 1.4375000000003968e-05, 1.4388999999996599e-05, 1.4403000000003108e-05, 1.4402999999996169e-05, 1.4431000000002248e-05, 1.4389000000003538e-05, 1.4417000000002678e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.590" endtime="20201115 22:01:13.593"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.585" endtime="20201115 22:01:13.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.595" endtime="20201115 22:01:13.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:13.599" endtime="20201115 22:01:13.618"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.597" endtime="20201115 22:01:13.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.594" endtime="20201115 22:01:13.619"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.214" endtime="20201115 22:01:13.620"></status>
</kw>
<msg timestamp="20201115 22:01:13.620" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.629" endtime="20201115 22:01:13.657"></status>
</kw>
<msg timestamp="20201115 22:01:13.658" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.628" endtime="20201115 22:01:13.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.660" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:13.659" endtime="20201115 22:01:13.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.662" endtime="20201115 22:01:13.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.625" endtime="20201115 22:01:13.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.623" endtime="20201115 22:01:13.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.672" endtime="20201115 22:01:13.959"></status>
</kw>
<msg timestamp="20201115 22:01:13.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023464875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.670" endtime="20201115 22:01:13.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023450472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023464875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:13.963" endtime="20201115 22:01:13.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:13.972" endtime="20201115 22:01:13.973"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.668" endtime="20201115 22:01:13.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.666" endtime="20201115 22:01:13.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:13.979" level="INFO">${RESULT} = [{'time': 0.023464875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4402999999999638e-05, 'source_diff': 1.4402999999999638e-05}, {'time': 0.023802667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:13.975" endtime="20201115 22:01:13.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:13.993" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:13.980" endtime="20201115 22:01:13.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:13.998" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:13.997" endtime="20201115 22:01:13.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.000" level="INFO">VALUE: [1.4402999999999638e-05, 1.4389000000000068e-05, 1.4388000000000595e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.4389000000000068e-05, 1.434699999999789e-05, 1.4375000000000498e-05, 1.4403000000003108e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4444999999998348e-05, 1.4389000000000068e-05, 1.4402000000000165e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4417000000002678e-05, 1.4388000000000595e-05, 1.4417000000002678e-05, 1.4402999999996169e-05, 1.4375000000003968e-05, 1.4403000000003108e-05, 1.4444000000002344e-05, 1.4347000000004828e-05, 1.4375000000003968e-05, 1.4402999999996169e-05, 1.4387999999997125e-05, 1.4431000000002248e-05, 1.4416999999995739e-05, 1.4402999999996169e-05, 1.4334000000004732e-05, 1.4402999999996169e-05, 1.4402999999996169e-05, 1.4388999999996599e-05, 1.4389000000003538e-05, 1.4430999999995309e-05, 1.4389000000003538e-05, 1.4416000000003204e-05, 1.4402999999996169e-05, 1.4389000000003538e-05, 1.434699999999789e-05, 1.4416000000003204e-05, 1.4388999999996599e-05, 1.4388999999996599e-05]</msg>
<status status="PASS" starttime="20201115 22:01:13.999" endtime="20201115 22:01:14.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.994" endtime="20201115 22:01:14.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.004" endtime="20201115 22:01:14.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.007" endtime="20201115 22:01:14.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.006" endtime="20201115 22:01:14.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.002" endtime="20201115 22:01:14.028"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.621" endtime="20201115 22:01:14.028"></status>
</kw>
<msg timestamp="20201115 22:01:14.028" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.037" endtime="20201115 22:01:14.065"></status>
</kw>
<msg timestamp="20201115 22:01:14.065" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.036" endtime="20201115 22:01:14.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.068" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.066" endtime="20201115 22:01:14.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.069" endtime="20201115 22:01:14.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.033" endtime="20201115 22:01:14.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.031" endtime="20201115 22:01:14.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.079" endtime="20201115 22:01:14.367"></status>
</kw>
<msg timestamp="20201115 22:01:14.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.078" endtime="20201115 22:01:14.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.372" endtime="20201115 22:01:14.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.380" endtime="20201115 22:01:14.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.075" endtime="20201115 22:01:14.382"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.073" endtime="20201115 22:01:14.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.387" level="INFO">${RESULT} = [{'time': 0.023065056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.023396875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:14.384" endtime="20201115 22:01:14.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.401" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.388" endtime="20201115 22:01:14.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.406" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.405" endtime="20201115 22:01:14.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.409" level="INFO">VALUE: [1.4389000000000068e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4402999999999638e-05, 1.4347000000001359e-05, 1.4389000000000068e-05, 1.4374999999997029e-05, 1.4374999999997029e-05, 1.4402999999999638e-05, 1.4416999999999208e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4402000000000165e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4415999999999735e-05, 1.4375000000000498e-05, 1.4402000000000165e-05, 1.4430999999998778e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4403000000003108e-05, 1.4403000000003108e-05, 1.4401999999996695e-05, 1.4416000000003204e-05, 1.4374999999997029e-05, 1.4403000000003108e-05, 1.4374999999997029e-05, 1.4402999999996169e-05, 1.4374999999997029e-05, 1.4361000000004398e-05, 1.4403000000003108e-05, 1.4416000000003204e-05, 1.4402000000003634e-05, 1.4402999999996169e-05, 1.4389000000003538e-05, 1.4415999999996265e-05, 1.4403000000003108e-05, 1.4375000000003968e-05, 1.4415999999996265e-05, 1.4415999999996265e-05, 1.4305999999998653e-05, 1.4388999999996599e-05, 1.4431000000002248e-05, 1.4387999999997125e-05, 1.4347999999997363e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.407" endtime="20201115 22:01:14.409"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.402" endtime="20201115 22:01:14.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.412" endtime="20201115 22:01:14.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.416" endtime="20201115 22:01:14.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.414" endtime="20201115 22:01:14.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.410" endtime="20201115 22:01:14.436"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.029" endtime="20201115 22:01:14.436"></status>
</kw>
<msg timestamp="20201115 22:01:14.437" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.446" endtime="20201115 22:01:14.473"></status>
</kw>
<msg timestamp="20201115 22:01:14.474" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.444" endtime="20201115 22:01:14.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.476" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.475" endtime="20201115 22:01:14.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.477" endtime="20201115 22:01:14.480"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.441" endtime="20201115 22:01:14.481"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.439" endtime="20201115 22:01:14.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.488" endtime="20201115 22:01:14.775"></status>
</kw>
<msg timestamp="20201115 22:01:14.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:14.486" endtime="20201115 22:01:14.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0231115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:14.779" endtime="20201115 22:01:14.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.788" endtime="20201115 22:01:14.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.484" endtime="20201115 22:01:14.790"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.482" endtime="20201115 22:01:14.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:14.795" level="INFO">${RESULT} = [{'time': 0.0231115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.023452319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:14.792" endtime="20201115 22:01:14.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:14.809" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:14.796" endtime="20201115 22:01:14.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.814" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:14.813" endtime="20201115 22:01:14.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.816" level="INFO">VALUE: [1.4375000000000498e-05, 1.4388000000000595e-05, 1.4402000000000165e-05, 1.4361000000000929e-05, 1.4403000000003108e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4374999999997029e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.4402000000000165e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4347000000001359e-05, 1.4375000000000498e-05, 1.4445000000001817e-05, 1.4401999999996695e-05, 1.4402000000000165e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4459000000001387e-05, 1.4360999999997459e-05, 1.4402999999996169e-05, 1.4402999999996169e-05, 1.4388999999996599e-05, 1.4417000000002678e-05, 1.4387999999997125e-05, 1.4374999999997029e-05, 1.4375000000003968e-05, 1.4416999999995739e-05, 1.4389000000003538e-05, 1.4388999999996599e-05, 1.4402999999996169e-05, 1.4360999999997459e-05, 1.4402999999996169e-05, 1.4401999999996695e-05, 1.4430000000002774e-05, 1.4401999999996695e-05, 1.4402999999996169e-05, 1.4388999999996599e-05, 1.4403000000003108e-05, 1.4416999999995739e-05, 1.4374999999997029e-05, 1.4457999999994975e-05, 1.4430000000002774e-05]</msg>
<status status="PASS" starttime="20201115 22:01:14.815" endtime="20201115 22:01:14.817"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.810" endtime="20201115 22:01:14.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.820" endtime="20201115 22:01:14.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:14.823" endtime="20201115 22:01:14.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.822" endtime="20201115 22:01:14.843"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.818" endtime="20201115 22:01:14.844"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.437" endtime="20201115 22:01:14.844"></status>
</kw>
<msg timestamp="20201115 22:01:14.844" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.853" endtime="20201115 22:01:14.881"></status>
</kw>
<msg timestamp="20201115 22:01:14.881" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.852" endtime="20201115 22:01:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:14.884" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 16', 'msg': ['overhead_timer_list remove 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:14.882" endtime="20201115 22:01:14.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.885" endtime="20201115 22:01:14.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.849" endtime="20201115 22:01:14.888"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.847" endtime="20201115 22:01:14.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:14.895" endtime="20201115 22:01:15.182"></status>
</kw>
<msg timestamp="20201115 22:01:15.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023460708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:14.894" endtime="20201115 22:01:15.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023460708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.191" endtime="20201115 22:01:15.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.199" endtime="20201115 22:01:15.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.891" endtime="20201115 22:01:15.202"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.889" endtime="20201115 22:01:15.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.206" level="INFO">${RESULT} = [{'time': 0.023460708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.023802514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:15.203" endtime="20201115 22:01:15.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.221" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.207" endtime="20201115 22:01:15.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.226" level="INFO">NAME: 00-overhead-16-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.225" endtime="20201115 22:01:15.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.229" level="INFO">VALUE: [1.4389000000000068e-05, 1.4389000000000068e-05, 1.4361000000000929e-05, 1.4402999999999638e-05, 1.4402999999999638e-05, 1.4430999999998778e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4402999999999638e-05, 1.4388000000000595e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4415999999999735e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4416999999999208e-05, 1.4402000000000165e-05, 1.4402999999996169e-05, 1.4375000000003968e-05, 1.4389000000003538e-05, 1.4430999999995309e-05, 1.4402999999996169e-05, 1.4403000000003108e-05, 1.4403000000003108e-05, 1.4374999999997029e-05, 1.4388999999996599e-05, 1.4403000000003108e-05, 1.4430000000002774e-05, 1.4402999999996169e-05, 1.4417000000002678e-05, 1.4402999999996169e-05, 1.4388999999996599e-05, 1.4403000000003108e-05, 1.4389000000003538e-05, 1.4361000000004398e-05, 1.4360999999997459e-05, 1.4402999999996169e-05, 1.4347000000004828e-05, 1.4388999999996599e-05, 1.4402999999996169e-05, 1.4375000000003968e-05, 1.4389000000003538e-05, 1.4402999999996169e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.227" endtime="20201115 22:01:15.229"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.222" endtime="20201115 22:01:15.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.232" endtime="20201115 22:01:15.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.235" endtime="20201115 22:01:15.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.234" endtime="20201115 22:01:15.255"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.230" endtime="20201115 22:01:15.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:14.845" endtime="20201115 22:01:15.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.212" endtime="20201115 22:01:15.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:13.211" endtime="20201115 22:01:15.256"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.259" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.268" endtime="20201115 22:01:15.297"></status>
</kw>
<msg timestamp="20201115 22:01:15.297" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.266" endtime="20201115 22:01:15.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.300" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.298" endtime="20201115 22:01:15.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.301" endtime="20201115 22:01:15.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.264" endtime="20201115 22:01:15.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.262" endtime="20201115 22:01:15.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.311" endtime="20201115 22:01:15.597"></status>
</kw>
<msg timestamp="20201115 22:01:15.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025592319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025607014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.309" endtime="20201115 22:01:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025592319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025607014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.601" endtime="20201115 22:01:15.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.609" endtime="20201115 22:01:15.611"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.307" endtime="20201115 22:01:15.612"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.305" endtime="20201115 22:01:15.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:15.617" level="INFO">${RESULT} = [{'time': 0.025607014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.025965389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:15.613" endtime="20201115 22:01:15.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:15.630" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:15.618" endtime="20201115 22:01:15.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.635" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:15.634" endtime="20201115 22:01:15.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.638" level="INFO">VALUE: [1.4695000000002068e-05, 1.4707999999998694e-05, 1.4722000000001734e-05, 1.4735999999997834e-05, 1.4707999999998694e-05, 1.4709000000001637e-05, 1.4721999999998264e-05, 1.4722000000001734e-05, 1.4680999999999028e-05, 1.4694999999998598e-05, 1.4707999999998694e-05, 1.4681000000002498e-05, 1.4693999999999124e-05, 1.4695000000002068e-05, 1.4693999999999124e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4707999999995225e-05, 1.4651999999996945e-05, 1.4722000000001734e-05, 1.4708999999994699e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.4707999999995225e-05, 1.4778000000000013e-05, 1.4666999999995989e-05, 1.4722000000001734e-05, 1.4721999999994795e-05, 1.4721999999994795e-05, 1.4721999999994795e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4679999999996085e-05, 1.4708000000002164e-05, 1.4695000000002068e-05, 1.4723000000001207e-05, 1.4722000000001734e-05, 1.4736000000001304e-05, 1.4708000000002164e-05, 1.4707999999995225e-05, 1.4693999999995655e-05, 1.4695000000002068e-05, 1.4681000000002498e-05, 1.4693999999995655e-05, 1.4694000000002594e-05, 1.4722000000001734e-05, 1.4708000000002164e-05, 1.4693999999995655e-05, 1.4708000000002164e-05, 1.4707999999995225e-05]</msg>
<status status="PASS" starttime="20201115 22:01:15.636" endtime="20201115 22:01:15.638"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.631" endtime="20201115 22:01:15.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.641" endtime="20201115 22:01:15.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:15.644" endtime="20201115 22:01:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.643" endtime="20201115 22:01:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.639" endtime="20201115 22:01:15.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.259" endtime="20201115 22:01:15.665"></status>
</kw>
<msg timestamp="20201115 22:01:15.665" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.674" endtime="20201115 22:01:15.703"></status>
</kw>
<msg timestamp="20201115 22:01:15.703" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.673" endtime="20201115 22:01:15.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:15.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:15.705" endtime="20201115 22:01:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.707" endtime="20201115 22:01:15.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.670" endtime="20201115 22:01:15.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.668" endtime="20201115 22:01:15.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:15.717" endtime="20201115 22:01:16.018"></status>
</kw>
<msg timestamp="20201115 22:01:16.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:15.716" endtime="20201115 22:01:16.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022470361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.022" endtime="20201115 22:01:16.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.030" endtime="20201115 22:01:16.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.713" endtime="20201115 22:01:16.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.711" endtime="20201115 22:01:16.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.037" level="INFO">${RESULT} = [{'time': 0.022485069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.022844278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.034" endtime="20201115 22:01:16.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.051" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.038" endtime="20201115 22:01:16.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.055" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.054" endtime="20201115 22:01:16.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.057" level="INFO">VALUE: [1.4707999999998694e-05, 1.4694999999998598e-05, 1.4693999999999124e-05, 1.4694999999998598e-05, 1.4708000000002164e-05, 1.4693999999999124e-05, 1.4681000000002498e-05, 1.4693999999999124e-05, 1.4709000000001637e-05, 1.4708999999998168e-05, 1.4722000000001734e-05, 1.4639000000000318e-05, 1.4708000000002164e-05, 1.4693999999999124e-05, 1.4707999999998694e-05, 1.4708999999998168e-05, 1.4665999999999985e-05, 1.4652000000000415e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4736000000001304e-05, 1.4667000000002928e-05, 1.4722000000001734e-05, 1.4721999999998264e-05, 1.4707999999998694e-05, 1.4707999999995225e-05, 1.4695000000002068e-05, 1.4695000000002068e-05, 1.4695000000002068e-05, 1.4638999999996849e-05, 1.4764000000000443e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4750000000000874e-05, 1.4694000000002594e-05, 1.4707999999995225e-05, 1.4653000000003358e-05, 1.4735999999994365e-05, 1.4625000000004218e-05, 1.4707999999995225e-05, 1.4722000000001734e-05, 1.4750000000000874e-05, 1.4708999999994699e-05, 1.4721999999994795e-05, 1.4735999999994365e-05, 1.4666999999995989e-05, 1.4681000000002498e-05, 1.4708000000002164e-05, 1.4709000000001637e-05, 1.4736000000001304e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.056" endtime="20201115 22:01:16.058"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.051" endtime="20201115 22:01:16.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.061" endtime="20201115 22:01:16.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.064" endtime="20201115 22:01:16.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.062" endtime="20201115 22:01:16.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.059" endtime="20201115 22:01:16.084"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.666" endtime="20201115 22:01:16.085"></status>
</kw>
<msg timestamp="20201115 22:01:16.085" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.094" endtime="20201115 22:01:16.123"></status>
</kw>
<msg timestamp="20201115 22:01:16.123" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.093" endtime="20201115 22:01:16.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.126" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.124" endtime="20201115 22:01:16.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.127" endtime="20201115 22:01:16.129"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.090" endtime="20201115 22:01:16.130"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.087" endtime="20201115 22:01:16.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.137" endtime="20201115 22:01:16.423"></status>
</kw>
<msg timestamp="20201115 22:01:16.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.135" endtime="20201115 22:01:16.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022957528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.428" endtime="20201115 22:01:16.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.436" endtime="20201115 22:01:16.437"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.133" endtime="20201115 22:01:16.438"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.131" endtime="20201115 22:01:16.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.443" level="INFO">${RESULT} = [{'time': 0.022972236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.023326278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.439" endtime="20201115 22:01:16.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.456" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.444" endtime="20201115 22:01:16.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.460" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.459" endtime="20201115 22:01:16.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.463" level="INFO">VALUE: [1.4707999999998694e-05, 1.4639000000000318e-05, 1.4652999999999888e-05, 1.4708000000002164e-05, 1.4709000000001637e-05, 1.4736000000001304e-05, 1.4722999999997738e-05, 1.4638000000000845e-05, 1.4722000000001734e-05, 1.4707999999998694e-05, 1.4709000000001637e-05, 1.4722000000001734e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4695000000002068e-05, 1.4652999999999888e-05, 1.4695000000002068e-05, 1.4707999999998694e-05, 1.4721999999998264e-05, 1.4721999999998264e-05, 1.4707999999998694e-05, 1.4693999999999124e-05, 1.4680999999999028e-05, 1.4695000000002068e-05, 1.4681000000002498e-05, 1.4708000000002164e-05, 1.4736999999993838e-05, 1.4764000000000443e-05, 1.4709000000001637e-05, 1.4709000000001637e-05, 1.4694000000002594e-05, 1.4695000000002068e-05, 1.4764000000000443e-05, 1.4709000000001637e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4722000000001734e-05, 1.4666999999995989e-05, 1.4708000000002164e-05, 1.4695000000002068e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.4722000000001734e-05, 1.4693999999995655e-05, 1.4723000000001207e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4708000000002164e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.461" endtime="20201115 22:01:16.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.457" endtime="20201115 22:01:16.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.466" endtime="20201115 22:01:16.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.470" endtime="20201115 22:01:16.489"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.468" endtime="20201115 22:01:16.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.465" endtime="20201115 22:01:16.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.085" endtime="20201115 22:01:16.491"></status>
</kw>
<msg timestamp="20201115 22:01:16.491" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.500" endtime="20201115 22:01:16.529"></status>
</kw>
<msg timestamp="20201115 22:01:16.529" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.498" endtime="20201115 22:01:16.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.531" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.530" endtime="20201115 22:01:16.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.533" endtime="20201115 22:01:16.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.496" endtime="20201115 22:01:16.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.494" endtime="20201115 22:01:16.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.542" endtime="20201115 22:01:16.827"></status>
</kw>
<msg timestamp="20201115 22:01:16.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:16.541" endtime="20201115 22:01:16.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:16.831" endtime="20201115 22:01:16.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.839" endtime="20201115 22:01:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.538" endtime="20201115 22:01:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.537" endtime="20201115 22:01:16.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:16.846" level="INFO">${RESULT} = [{'time': 0.022577389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.022933583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:16.842" endtime="20201115 22:01:16.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:16.860" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:16.847" endtime="20201115 22:01:16.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.865" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:16.864" endtime="20201115 22:01:16.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.867" level="INFO">VALUE: [1.4639000000000318e-05, 1.4708000000002164e-05, 1.4721999999998264e-05, 1.4764000000000443e-05, 1.4750000000000874e-05, 1.4749999999997404e-05, 1.4679999999999555e-05, 1.4695000000002068e-05, 1.4666999999999458e-05, 1.4707999999998694e-05, 1.4721999999998264e-05, 1.4723000000001207e-05, 1.4722000000001734e-05, 1.4694999999998598e-05, 1.4708999999998168e-05, 1.4737000000000777e-05, 1.4708999999998168e-05, 1.4679999999999555e-05, 1.4722999999997738e-05, 1.4707999999998694e-05, 1.4723000000001207e-05, 1.4694999999998598e-05, 1.4693999999999124e-05, 1.4736000000001304e-05, 1.4708000000002164e-05, 1.4694000000002594e-05, 1.4708000000002164e-05, 1.4693999999995655e-05, 1.4708000000002164e-05, 1.4707999999995225e-05, 1.4708000000002164e-05, 1.4666000000003454e-05, 1.4707999999995225e-05, 1.4708000000002164e-05, 1.4723000000001207e-05, 1.4764000000000443e-05, 1.4708000000002164e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.4778000000000013e-05, 1.4695000000002068e-05, 1.4709000000001637e-05, 1.4695000000002068e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4695000000002068e-05, 1.4695000000002068e-05, 1.4694000000002594e-05, 1.4721999999994795e-05, 1.4722000000001734e-05]</msg>
<status status="PASS" starttime="20201115 22:01:16.866" endtime="20201115 22:01:16.868"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.861" endtime="20201115 22:01:16.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.871" endtime="20201115 22:01:16.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:16.874" endtime="20201115 22:01:16.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.873" endtime="20201115 22:01:16.894"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.869" endtime="20201115 22:01:16.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.492" endtime="20201115 22:01:16.895"></status>
</kw>
<msg timestamp="20201115 22:01:16.895" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.904" endtime="20201115 22:01:16.933"></status>
</kw>
<msg timestamp="20201115 22:01:16.933" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.902" endtime="20201115 22:01:16.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:16.935" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 17', 'msg': ['overhead_timer_list remove 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:16.934" endtime="20201115 22:01:16.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.936" endtime="20201115 22:01:16.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.900" endtime="20201115 22:01:16.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.898" endtime="20201115 22:01:16.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:16.946" endtime="20201115 22:01:17.232"></status>
</kw>
<msg timestamp="20201115 22:01:17.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:16.945" endtime="20201115 22:01:17.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.236" endtime="20201115 22:01:17.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.244" endtime="20201115 22:01:17.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.942" endtime="20201115 22:01:17.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.941" endtime="20201115 22:01:17.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.251" level="INFO">${RESULT} = [{'time': 0.022786306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4708999999998168e-05, 'source_diff': 1.4708999999998168e-05}, {'time': 0.023143847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.247" endtime="20201115 22:01:17.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.264" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.252" endtime="20201115 22:01:17.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.269" level="INFO">NAME: 00-overhead-17-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.268" endtime="20201115 22:01:17.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.271" level="INFO">VALUE: [1.4708999999998168e-05, 1.4707999999998694e-05, 1.4708999999998168e-05, 1.47629999999975e-05, 1.4707999999998694e-05, 1.4708000000002164e-05, 1.4722000000001734e-05, 1.4736000000001304e-05, 1.4707999999998694e-05, 1.4722000000001734e-05, 1.4722000000001734e-05, 1.4695000000002068e-05, 1.4707999999998694e-05, 1.4709000000001637e-05, 1.4708999999998168e-05, 1.4707999999998694e-05, 1.4694000000002594e-05, 1.4707999999998694e-05, 1.4707999999998694e-05, 1.4707999999998694e-05, 1.4693999999999124e-05, 1.4624999999997279e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4707999999995225e-05, 1.4693999999995655e-05, 1.4723000000001207e-05, 1.4762999999994031e-05, 1.4722000000001734e-05, 1.4694000000002594e-05, 1.4709000000001637e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4708000000002164e-05, 1.4736000000001304e-05, 1.4695000000002068e-05, 1.4709000000001637e-05, 1.4707999999995225e-05, 1.4651999999996945e-05, 1.4707999999995225e-05, 1.4695000000002068e-05, 1.4708999999994699e-05, 1.4680999999995559e-05, 1.4708000000002164e-05, 1.4694000000002594e-05, 1.4708000000002164e-05, 1.4679999999996085e-05, 1.4721999999994795e-05, 1.4694999999995129e-05, 1.4695000000002068e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.270" endtime="20201115 22:01:17.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.265" endtime="20201115 22:01:17.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.275" endtime="20201115 22:01:17.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.278" endtime="20201115 22:01:17.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.277" endtime="20201115 22:01:17.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.273" endtime="20201115 22:01:17.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:16.896" endtime="20201115 22:01:17.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.258" endtime="20201115 22:01:17.299"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:15.257" endtime="20201115 22:01:17.299"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.302" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.310" endtime="20201115 22:01:17.340"></status>
</kw>
<msg timestamp="20201115 22:01:17.340" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.309" endtime="20201115 22:01:17.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.343" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.341" endtime="20201115 22:01:17.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.344" endtime="20201115 22:01:17.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.306" endtime="20201115 22:01:17.346"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.304" endtime="20201115 22:01:17.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.353" endtime="20201115 22:01:17.637"></status>
</kw>
<msg timestamp="20201115 22:01:17.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.351" endtime="20201115 22:01:17.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025309139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025324153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.641" endtime="20201115 22:01:17.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.649" endtime="20201115 22:01:17.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.349" endtime="20201115 22:01:17.651"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.347" endtime="20201115 22:01:17.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:17.656" level="INFO">${RESULT} = [{'time': 0.025324153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5013999999997224e-05, 'source_diff': 1.5013999999997224e-05}, {'time': 0.025705556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:17.653" endtime="20201115 22:01:17.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:17.669" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:17.657" endtime="20201115 22:01:17.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.674" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:17.673" endtime="20201115 22:01:17.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.677" level="INFO">VALUE: [1.5013999999997224e-05, 1.5000000000001124e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5084000000002012e-05, 1.5027999999996794e-05, 1.5000000000001124e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.50689999999995e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.505499999999993e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.4958000000002414e-05, 1.5014000000000693e-05, 1.5013999999993755e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.4958000000002414e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5013999999993755e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.509699999999864e-05, 1.509699999999864e-05]</msg>
<status status="PASS" starttime="20201115 22:01:17.675" endtime="20201115 22:01:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.670" endtime="20201115 22:01:17.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.680" endtime="20201115 22:01:17.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:17.683" endtime="20201115 22:01:17.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.682" endtime="20201115 22:01:17.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.678" endtime="20201115 22:01:17.704"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.302" endtime="20201115 22:01:17.704"></status>
</kw>
<msg timestamp="20201115 22:01:17.704" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.713" endtime="20201115 22:01:17.743"></status>
</kw>
<msg timestamp="20201115 22:01:17.743" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.711" endtime="20201115 22:01:17.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:17.746" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:17.745" endtime="20201115 22:01:17.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.747" endtime="20201115 22:01:17.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.709" endtime="20201115 22:01:17.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.707" endtime="20201115 22:01:17.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:17.757" endtime="20201115 22:01:18.049"></status>
</kw>
<msg timestamp="20201115 22:01:18.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:17.755" endtime="20201115 22:01:18.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.058" endtime="20201115 22:01:18.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.076" endtime="20201115 22:01:18.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.753" endtime="20201115 22:01:18.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.751" endtime="20201115 22:01:18.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.091" level="INFO">${RESULT} = [{'time': 0.022579625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.022952708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:18.084" endtime="20201115 22:01:18.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.120" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.093" endtime="20201115 22:01:18.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.124" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.123" endtime="20201115 22:01:18.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.127" level="INFO">VALUE: [1.5028000000000263e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.4999999999997654e-05, 1.5041999999999833e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.501300000000122e-05, 1.5027999999996794e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5055999999999403e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4958000000002414e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.5000000000001124e-05, 1.502700000000079e-05, 1.5000000000001124e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.5013999999993755e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.126" endtime="20201115 22:01:18.127"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.121" endtime="20201115 22:01:18.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.130" endtime="20201115 22:01:18.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.134" endtime="20201115 22:01:18.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.132" endtime="20201115 22:01:18.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.129" endtime="20201115 22:01:18.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.705" endtime="20201115 22:01:18.154"></status>
</kw>
<msg timestamp="20201115 22:01:18.154" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.163" endtime="20201115 22:01:18.193"></status>
</kw>
<msg timestamp="20201115 22:01:18.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.162" endtime="20201115 22:01:18.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.196" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.195" endtime="20201115 22:01:18.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.197" endtime="20201115 22:01:18.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.159" endtime="20201115 22:01:18.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.157" endtime="20201115 22:01:18.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.207" endtime="20201115 22:01:18.494"></status>
</kw>
<msg timestamp="20201115 22:01:18.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.206" endtime="20201115 22:01:18.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022600861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.498" endtime="20201115 22:01:18.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.506" endtime="20201115 22:01:18.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.203" endtime="20201115 22:01:18.508"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.201" endtime="20201115 22:01:18.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.513" level="INFO">${RESULT} = [{'time': 0.022600861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.022979597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:18.510" endtime="20201115 22:01:18.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.528" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.514" endtime="20201115 22:01:18.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.533" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.532" endtime="20201115 22:01:18.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.535" level="INFO">VALUE: [1.505499999999993e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.4999999999997654e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.4985999999998084e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5069999999998973e-05, 1.504100000000036e-05, 1.4985999999998084e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.4999999999997654e-05, 1.502700000000079e-05, 1.5000000000001124e-05, 1.504100000000036e-05, 1.5098000000001582e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5069999999998973e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.501300000000122e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5000000000001124e-05, 1.5055000000006868e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.504100000000036e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5000000000001124e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.534" endtime="20201115 22:01:18.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.529" endtime="20201115 22:01:18.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.538" endtime="20201115 22:01:18.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.542" endtime="20201115 22:01:18.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.540" endtime="20201115 22:01:18.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.537" endtime="20201115 22:01:18.562"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.155" endtime="20201115 22:01:18.562"></status>
</kw>
<msg timestamp="20201115 22:01:18.563" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.572" endtime="20201115 22:01:18.600"></status>
</kw>
<msg timestamp="20201115 22:01:18.601" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.570" endtime="20201115 22:01:18.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.603" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.602" endtime="20201115 22:01:18.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.604" endtime="20201115 22:01:18.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.568" endtime="20201115 22:01:18.607"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.565" endtime="20201115 22:01:18.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.614" endtime="20201115 22:01:18.900"></status>
</kw>
<msg timestamp="20201115 22:01:18.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.613" endtime="20201115 22:01:18.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:18.904" endtime="20201115 22:01:18.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.913" endtime="20201115 22:01:18.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.610" endtime="20201115 22:01:18.915"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.608" endtime="20201115 22:01:18.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:18.920" level="INFO">${RESULT} = [{'time': 0.022906847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.023280931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:18.916" endtime="20201115 22:01:18.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:18.933" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:18.921" endtime="20201115 22:01:18.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.938" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:18.937" endtime="20201115 22:01:18.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:18.941" level="INFO">VALUE: [1.5014000000000693e-05, 1.5014000000000693e-05, 1.508299999999907e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5000000000001124e-05, 1.4985999999998084e-05, 1.5014000000000693e-05, 1.501300000000122e-05, 1.501300000000122e-05, 1.504100000000036e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5027999999996794e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4945000000002318e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.4986000000001554e-05, 1.501300000000122e-05, 1.501300000000122e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.4971999999995045e-05, 1.5042000000006772e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4999999999994185e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.5111000000005148e-05, 1.5014000000000693e-05, 1.4945000000002318e-05, 1.502700000000079e-05, 1.5000000000001124e-05]</msg>
<status status="PASS" starttime="20201115 22:01:18.939" endtime="20201115 22:01:18.941"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.934" endtime="20201115 22:01:18.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.944" endtime="20201115 22:01:18.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:18.947" endtime="20201115 22:01:18.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.946" endtime="20201115 22:01:18.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.942" endtime="20201115 22:01:18.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.563" endtime="20201115 22:01:18.968"></status>
</kw>
<msg timestamp="20201115 22:01:18.968" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:18.977" endtime="20201115 22:01:19.007"></status>
</kw>
<msg timestamp="20201115 22:01:19.007" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:18.975" endtime="20201115 22:01:19.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.010" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 18', 'msg': ['overhead_timer_list remove 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.008" endtime="20201115 22:01:19.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.011" endtime="20201115 22:01:19.013"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.973" endtime="20201115 22:01:19.014"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.971" endtime="20201115 22:01:19.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.021" endtime="20201115 22:01:19.308"></status>
</kw>
<msg timestamp="20201115 22:01:19.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023066861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.019" endtime="20201115 22:01:19.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023066861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.312" endtime="20201115 22:01:19.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.321" endtime="20201115 22:01:19.322"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.017" endtime="20201115 22:01:19.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.015" endtime="20201115 22:01:19.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.327" level="INFO">${RESULT} = [{'time': 0.023066861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4972000000001984e-05, 'source_diff': 1.4972000000001984e-05}, {'time': 0.02343825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:19.324" endtime="20201115 22:01:19.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.341" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.328" endtime="20201115 22:01:19.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.346" level="INFO">NAME: 00-overhead-18-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.344" endtime="20201115 22:01:19.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.348" level="INFO">VALUE: [1.4972000000001984e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.502699999999732e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5083999999998543e-05, 1.501299999999775e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.4945000000002318e-05, 1.502700000000079e-05, 1.4999999999997654e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5069000000006438e-05, 1.4986000000001554e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.4971999999995045e-05, 1.4999999999994185e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5083000000006008e-05, 1.5013999999993755e-05, 1.5000000000001124e-05, 1.5055999999999403e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.347" endtime="20201115 22:01:19.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.342" endtime="20201115 22:01:19.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.352" endtime="20201115 22:01:19.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.355" endtime="20201115 22:01:19.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.353" endtime="20201115 22:01:19.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.350" endtime="20201115 22:01:19.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:18.969" endtime="20201115 22:01:19.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.301" endtime="20201115 22:01:19.376"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:17.300" endtime="20201115 22:01:19.376"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.378" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.387" endtime="20201115 22:01:19.417"></status>
</kw>
<msg timestamp="20201115 22:01:19.417" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.385" endtime="20201115 22:01:19.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.420" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.418" endtime="20201115 22:01:19.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.421" endtime="20201115 22:01:19.423"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.383" endtime="20201115 22:01:19.424"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.381" endtime="20201115 22:01:19.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.431" endtime="20201115 22:01:19.718"></status>
</kw>
<msg timestamp="20201115 22:01:19.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.429" endtime="20201115 22:01:19.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025155694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:19.722" endtime="20201115 22:01:19.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.730" endtime="20201115 22:01:19.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.427" endtime="20201115 22:01:19.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.425" endtime="20201115 22:01:19.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:19.737" level="INFO">${RESULT} = [{'time': 0.025171028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5334000000002262e-05, 'source_diff': 1.5334000000002262e-05}, {'time': 0.025567139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:19.733" endtime="20201115 22:01:19.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:19.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:19.738" endtime="20201115 22:01:19.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.755" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:19.754" endtime="20201115 22:01:19.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.757" level="INFO">VALUE: [1.5334000000002262e-05, 1.533299999999932e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.536100000000193e-05, 1.531899999999975e-05, 1.5334000000002262e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.541700000000021e-05, 1.5347999999998363e-05, 1.534699999999889e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.534699999999889e-05, 1.536099999999846e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.5347999999998363e-05, 1.534699999999889e-05, 1.5319999999999223e-05, 1.530500000000018e-05, 1.5292000000000083e-05, 1.5333999999998793e-05, 1.5347000000005828e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.530500000000018e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.5319999999999223e-05, 1.534699999999889e-05, 1.531900000000669e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.534699999999889e-05]</msg>
<status status="PASS" starttime="20201115 22:01:19.756" endtime="20201115 22:01:19.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.751" endtime="20201115 22:01:19.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.760" endtime="20201115 22:01:19.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:19.764" endtime="20201115 22:01:19.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.762" endtime="20201115 22:01:19.783"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.758" endtime="20201115 22:01:19.784"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.379" endtime="20201115 22:01:19.784"></status>
</kw>
<msg timestamp="20201115 22:01:19.784" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.793" endtime="20201115 22:01:19.824"></status>
</kw>
<msg timestamp="20201115 22:01:19.825" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.792" endtime="20201115 22:01:19.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:19.827" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:19.826" endtime="20201115 22:01:19.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.828" endtime="20201115 22:01:19.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.789" endtime="20201115 22:01:19.832"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.787" endtime="20201115 22:01:19.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:19.838" endtime="20201115 22:01:20.124"></status>
</kw>
<msg timestamp="20201115 22:01:20.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02294625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:19.837" endtime="20201115 22:01:20.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02294625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:20.128" endtime="20201115 22:01:20.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.136" endtime="20201115 22:01:20.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.834" endtime="20201115 22:01:20.138"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.833" endtime="20201115 22:01:20.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.143" level="INFO">${RESULT} = [{'time': 0.02294625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.023347528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:20.139" endtime="20201115 22:01:20.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.157" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.144" endtime="20201115 22:01:20.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.162" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.161" endtime="20201115 22:01:20.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.164" level="INFO">VALUE: [1.531899999999975e-05, 1.5319999999999223e-05, 1.533300000000279e-05, 1.536099999999846e-05, 1.538900000000107e-05, 1.5333999999998793e-05, 1.5334000000002262e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.536099999999846e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.536100000000193e-05, 1.5319999999999223e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.5333999999998793e-05, 1.5333999999998793e-05, 1.5334000000005732e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.5249999999994435e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.5403000000004108e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5305999999999653e-05, 1.5320000000006162e-05, 1.534699999999889e-05, 1.53889999999976e-05, 1.5319999999999223e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.163" endtime="20201115 22:01:20.164"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.158" endtime="20201115 22:01:20.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.167" endtime="20201115 22:01:20.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.171" endtime="20201115 22:01:20.190"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.169" endtime="20201115 22:01:20.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.165" endtime="20201115 22:01:20.191"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.785" endtime="20201115 22:01:20.191"></status>
</kw>
<msg timestamp="20201115 22:01:20.191" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.205" endtime="20201115 22:01:20.235"></status>
</kw>
<msg timestamp="20201115 22:01:20.235" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.203" endtime="20201115 22:01:20.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.238" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.236" endtime="20201115 22:01:20.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.239" endtime="20201115 22:01:20.241"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.201" endtime="20201115 22:01:20.242"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.194" endtime="20201115 22:01:20.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.249" endtime="20201115 22:01:20.534"></status>
</kw>
<msg timestamp="20201115 22:01:20.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0272305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027245833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:20.247" endtime="20201115 22:01:20.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0272305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027245833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:01:20.538" endtime="20201115 22:01:20.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.546" endtime="20201115 22:01:20.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.245" endtime="20201115 22:01:20.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.243" endtime="20201115 22:01:20.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.553" level="INFO">${RESULT} = [{'time': 0.027245833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.533299999999932e-05, 'source_diff': 1.533299999999932e-05}, {'time': 0.027646111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.550" endtime="20201115 22:01:20.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.566" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.554" endtime="20201115 22:01:20.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.571" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.570" endtime="20201115 22:01:20.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.574" level="INFO">VALUE: [1.533299999999932e-05, 1.533299999999932e-05, 1.534700000000236e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.541700000000021e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.5347000000005828e-05, 1.5347999999998363e-05, 1.531899999999975e-05, 1.53889999999976e-05, 1.5278000000000513e-05, 1.5347999999998363e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.5292000000000083e-05, 1.5347000000005828e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.536099999999846e-05, 1.526300000000147e-05, 1.5333999999998793e-05, 1.5348000000005302e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.529100000000061e-05, 1.531899999999975e-05, 1.5319999999999223e-05, 1.534699999999889e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.534699999999889e-05, 1.5347000000005828e-05, 1.534699999999889e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.572" endtime="20201115 22:01:20.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.567" endtime="20201115 22:01:20.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.577" endtime="20201115 22:01:20.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.580" endtime="20201115 22:01:20.600"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.579" endtime="20201115 22:01:20.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.575" endtime="20201115 22:01:20.601"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.192" endtime="20201115 22:01:20.601"></status>
</kw>
<msg timestamp="20201115 22:01:20.602" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.610" endtime="20201115 22:01:20.641"></status>
</kw>
<msg timestamp="20201115 22:01:20.642" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.609" endtime="20201115 22:01:20.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:20.643" endtime="20201115 22:01:20.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.645" endtime="20201115 22:01:20.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.606" endtime="20201115 22:01:20.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.604" endtime="20201115 22:01:20.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.655" endtime="20201115 22:01:20.941"></status>
</kw>
<msg timestamp="20201115 22:01:20.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.654" endtime="20201115 22:01:20.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:20.945" endtime="20201115 22:01:20.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.953" endtime="20201115 22:01:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.651" endtime="20201115 22:01:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.649" endtime="20201115 22:01:20.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:20.960" level="INFO">${RESULT} = [{'time': 0.022924875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.536100000000193e-05, 'source_diff': 1.536100000000193e-05}, {'time': 0.023318764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:20.956" endtime="20201115 22:01:20.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:20.973" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:20.961" endtime="20201115 22:01:20.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.978" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:20.977" endtime="20201115 22:01:20.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:20.980" level="INFO">VALUE: [1.536100000000193e-05, 1.5305999999999653e-05, 1.531900000000322e-05, 1.5319999999999223e-05, 1.5333999999998793e-05, 1.5347999999998363e-05, 1.534700000000236e-05, 1.5333999999998793e-05, 1.531899999999975e-05, 1.5333999999998793e-05, 1.536099999999846e-05, 1.5305999999999653e-05, 1.534699999999889e-05, 1.5348000000001832e-05, 1.541700000000021e-05, 1.5292000000000083e-05, 1.5333999999998793e-05, 1.527700000000104e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5319999999999223e-05, 1.5319999999999223e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.53889999999976e-05, 1.534699999999889e-05, 1.5320000000006162e-05, 1.5278000000000513e-05, 1.5305999999999653e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.5333999999998793e-05, 1.5347000000005828e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.531899999999975e-05, 1.534699999999889e-05, 1.5347000000005828e-05, 1.533299999999932e-05, 1.533299999999932e-05]</msg>
<status status="PASS" starttime="20201115 22:01:20.979" endtime="20201115 22:01:20.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.974" endtime="20201115 22:01:20.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:20.984" endtime="20201115 22:01:20.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:20.987" endtime="20201115 22:01:21.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.986" endtime="20201115 22:01:21.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.982" endtime="20201115 22:01:21.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:20.602" endtime="20201115 22:01:21.008"></status>
</kw>
<msg timestamp="20201115 22:01:21.008" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.017" endtime="20201115 22:01:21.047"></status>
</kw>
<msg timestamp="20201115 22:01:21.047" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.015" endtime="20201115 22:01:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.050" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 19', 'msg': ['overhead_timer_list remove 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.048" endtime="20201115 22:01:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.051" endtime="20201115 22:01:21.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.013" endtime="20201115 22:01:21.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.011" endtime="20201115 22:01:21.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.061" endtime="20201115 22:01:21.347"></status>
</kw>
<msg timestamp="20201115 22:01:21.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.059" endtime="20201115 22:01:21.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.351" endtime="20201115 22:01:21.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.359" endtime="20201115 22:01:21.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.057" endtime="20201115 22:01:21.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.055" endtime="20201115 22:01:21.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.366" level="INFO">${RESULT} = [{'time': 0.022748972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.02314875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:01:21.363" endtime="20201115 22:01:21.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.379" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.367" endtime="20201115 22:01:21.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.384" level="INFO">NAME: 00-overhead-19-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.383" endtime="20201115 22:01:21.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.386" level="INFO">VALUE: [1.531899999999975e-05, 1.533299999999932e-05, 1.53750000000015e-05, 1.533299999999932e-05, 1.534700000000236e-05, 1.5305999999999653e-05, 1.534699999999889e-05, 1.5305999999999653e-05, 1.531899999999975e-05, 1.5292000000000083e-05, 1.536099999999846e-05, 1.533299999999932e-05, 1.533300000000279e-05, 1.533299999999932e-05, 1.5334000000002262e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.5334000000002262e-05, 1.538900000000107e-05, 1.5305999999999653e-05, 1.5333999999998793e-05, 1.533299999999932e-05, 1.533299999999932e-05, 1.536099999999846e-05, 1.5348000000005302e-05, 1.529100000000061e-05, 1.5333999999998793e-05, 1.5250000000001374e-05, 1.536099999999846e-05, 1.531899999999975e-05, 1.531900000000669e-05, 1.534699999999889e-05, 1.5347999999998363e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.533299999999932e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.534699999999889e-05, 1.536099999999846e-05, 1.5319999999999223e-05, 1.536099999999846e-05, 1.534699999999889e-05, 1.5333999999998793e-05, 1.5361999999997933e-05, 1.5292000000000083e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.385" endtime="20201115 22:01:21.387"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.380" endtime="20201115 22:01:21.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.390" endtime="20201115 22:01:21.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.393" endtime="20201115 22:01:21.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.392" endtime="20201115 22:01:21.413"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.388" endtime="20201115 22:01:21.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.009" endtime="20201115 22:01:21.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.377" endtime="20201115 22:01:21.414"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:19.376" endtime="20201115 22:01:21.414"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.417" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.427" endtime="20201115 22:01:21.458"></status>
</kw>
<msg timestamp="20201115 22:01:21.458" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.425" endtime="20201115 22:01:21.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.461" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.460" endtime="20201115 22:01:21.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.462" endtime="20201115 22:01:21.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.422" endtime="20201115 22:01:21.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.419" endtime="20201115 22:01:21.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.471" endtime="20201115 22:01:21.757"></status>
</kw>
<msg timestamp="20201115 22:01:21.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026139806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.469" endtime="20201115 22:01:21.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026139806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.761" endtime="20201115 22:01:21.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.769" endtime="20201115 22:01:21.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.467" endtime="20201115 22:01:21.771"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.465" endtime="20201115 22:01:21.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:21.776" level="INFO">${RESULT} = [{'time': 0.026155444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5637999999998375e-05, 'source_diff': 1.5637999999998375e-05}, {'time': 0.026572889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:21.772" endtime="20201115 22:01:21.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:21.790" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:21.777" endtime="20201115 22:01:21.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.795" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:21.794" endtime="20201115 22:01:21.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.798" level="INFO">VALUE: [1.5637999999998375e-05, 1.566700000000046e-05, 1.5681000000000028e-05, 1.565299999999742e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.5665999999997515e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.5707999999996225e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5639000000004788e-05, 1.5651999999997945e-05, 1.5652000000004884e-05, 1.5639000000004788e-05, 1.563899999999785e-05, 1.5639000000004788e-05, 1.563899999999785e-05, 1.5638000000005314e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5651999999997945e-05, 1.5681000000003498e-05, 1.5665999999997515e-05, 1.566699999999699e-05, 1.5653000000004358e-05, 1.5639000000004788e-05, 1.5665999999997515e-05, 1.5722000000002734e-05, 1.566699999999699e-05, 1.5708000000003164e-05, 1.5707999999996225e-05, 1.5651999999997945e-05, 1.5651999999997945e-05, 1.5653000000004358e-05, 1.5652000000004884e-05, 1.5637999999998375e-05, 1.5639000000004788e-05, 1.565299999999742e-05, 1.5665999999997515e-05]</msg>
<status status="PASS" starttime="20201115 22:01:21.796" endtime="20201115 22:01:21.798"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.791" endtime="20201115 22:01:21.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.801" endtime="20201115 22:01:21.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:21.804" endtime="20201115 22:01:21.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.803" endtime="20201115 22:01:21.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.799" endtime="20201115 22:01:21.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.417" endtime="20201115 22:01:21.825"></status>
</kw>
<msg timestamp="20201115 22:01:21.825" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.834" endtime="20201115 22:01:21.866"></status>
</kw>
<msg timestamp="20201115 22:01:21.866" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.832" endtime="20201115 22:01:21.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:21.868" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:21.867" endtime="20201115 22:01:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.870" endtime="20201115 22:01:21.872"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.830" endtime="20201115 22:01:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.828" endtime="20201115 22:01:21.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:21.880" endtime="20201115 22:01:22.166"></status>
</kw>
<msg timestamp="20201115 22:01:22.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:21.878" endtime="20201115 22:01:22.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.170" endtime="20201115 22:01:22.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.178" endtime="20201115 22:01:22.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.876" endtime="20201115 22:01:22.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.874" endtime="20201115 22:01:22.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.185" level="INFO">${RESULT} = [{'time': 0.022709431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.566699999999699e-05, 'source_diff': 1.566699999999699e-05}, {'time': 0.023124028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.182" endtime="20201115 22:01:22.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.198" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.186" endtime="20201115 22:01:22.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.203" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.202" endtime="20201115 22:01:22.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.206" level="INFO">VALUE: [1.566699999999699e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.5652000000001415e-05, 1.558299999999957e-05, 1.5651999999997945e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.563900000000132e-05, 1.563899999999785e-05, 1.5694000000000125e-05, 1.561100000000218e-05, 1.5569999999999473e-05, 1.562499999999828e-05, 1.565300000000089e-05, 1.562499999999828e-05, 1.5680000000000555e-05, 1.565300000000089e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.5653000000004358e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.5651999999997945e-05, 1.5653000000004358e-05, 1.563899999999785e-05, 1.5652000000004884e-05, 1.5666000000004454e-05, 1.563899999999785e-05, 1.5665999999997515e-05, 1.565299999999742e-05, 1.5667000000003928e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.5651999999997945e-05, 1.565299999999742e-05, 1.5665999999997515e-05, 1.566699999999699e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.561099999999871e-05, 1.5639000000004788e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5693999999996655e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.5665999999997515e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.204" endtime="20201115 22:01:22.206"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.200" endtime="20201115 22:01:22.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.209" endtime="20201115 22:01:22.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.212" endtime="20201115 22:01:22.231"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.211" endtime="20201115 22:01:22.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.207" endtime="20201115 22:01:22.232"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.826" endtime="20201115 22:01:22.233"></status>
</kw>
<msg timestamp="20201115 22:01:22.233" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.243" endtime="20201115 22:01:22.274"></status>
</kw>
<msg timestamp="20201115 22:01:22.274" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.241" endtime="20201115 22:01:22.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.277" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.275" endtime="20201115 22:01:22.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.278" endtime="20201115 22:01:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.238" endtime="20201115 22:01:22.281"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.236" endtime="20201115 22:01:22.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.288" endtime="20201115 22:01:22.573"></status>
</kw>
<msg timestamp="20201115 22:01:22.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.286" endtime="20201115 22:01:22.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023461278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.578" endtime="20201115 22:01:22.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.586" endtime="20201115 22:01:22.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.284" endtime="20201115 22:01:22.588"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.282" endtime="20201115 22:01:22.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:22.593" level="INFO">${RESULT} = [{'time': 0.023461278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.565299999999742e-05, 'source_diff': 1.565299999999742e-05}, {'time': 0.023876889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:22.589" endtime="20201115 22:01:22.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:22.606" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:22.594" endtime="20201115 22:01:22.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.611" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:22.610" endtime="20201115 22:01:22.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.613" level="INFO">VALUE: [1.565299999999742e-05, 1.565299999999742e-05, 1.5569e-05, 1.563899999999785e-05, 1.5707999999999694e-05, 1.5652000000001415e-05, 1.5637999999998375e-05, 1.5652000000001415e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.566700000000046e-05, 1.566700000000046e-05, 1.565299999999742e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.562500000000175e-05, 1.5666000000004454e-05, 1.5639000000004788e-05, 1.5667000000003928e-05, 1.5651999999997945e-05, 1.5680000000004024e-05, 1.5666000000004454e-05, 1.5555999999999903e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.5625000000005218e-05, 1.568099999999656e-05, 1.5651999999997945e-05, 1.5653000000004358e-05, 1.5639000000004788e-05, 1.566699999999699e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.57089999999957e-05, 1.5667000000003928e-05, 1.566699999999699e-05, 1.563899999999785e-05, 1.5652000000004884e-05, 1.5653000000004358e-05, 1.565299999999742e-05, 1.5651999999997945e-05, 1.565299999999742e-05, 1.565299999999742e-05, 1.558299999999957e-05, 1.5639000000004788e-05]</msg>
<status status="PASS" starttime="20201115 22:01:22.612" endtime="20201115 22:01:22.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.607" endtime="20201115 22:01:22.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.616" endtime="20201115 22:01:22.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:22.620" endtime="20201115 22:01:22.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.618" endtime="20201115 22:01:22.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.615" endtime="20201115 22:01:22.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.234" endtime="20201115 22:01:22.641"></status>
</kw>
<msg timestamp="20201115 22:01:22.641" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.650" endtime="20201115 22:01:22.681"></status>
</kw>
<msg timestamp="20201115 22:01:22.681" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.648" endtime="20201115 22:01:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.684" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:22.683" endtime="20201115 22:01:22.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.685" endtime="20201115 22:01:22.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.646" endtime="20201115 22:01:22.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.643" endtime="20201115 22:01:22.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.695" endtime="20201115 22:01:22.980"></status>
</kw>
<msg timestamp="20201115 22:01:22.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.694" endtime="20201115 22:01:22.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:22.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:22.984" endtime="20201115 22:01:22.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:22.993" endtime="20201115 22:01:22.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.691" endtime="20201115 22:01:22.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.689" endtime="20201115 22:01:22.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.000" level="INFO">${RESULT} = [{'time': 0.022754667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5708999999999168e-05, 'source_diff': 1.5708999999999168e-05}, {'time': 0.023169194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:22.996" endtime="20201115 22:01:23.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.013" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.001" endtime="20201115 22:01:23.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.018" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.017" endtime="20201115 22:01:23.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.020" level="INFO">VALUE: [1.5708999999999168e-05, 1.561100000000218e-05, 1.5694999999999598e-05, 1.561099999999871e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.559699999999914e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.5707999999999694e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5694000000000125e-05, 1.566699999999699e-05, 1.563900000000132e-05, 1.5708999999999168e-05, 1.5680000000000555e-05, 1.5680000000004024e-05, 1.563899999999785e-05, 1.5637999999998375e-05, 1.5653000000004358e-05, 1.5652000000004884e-05, 1.562499999999828e-05, 1.5653000000004358e-05, 1.563899999999785e-05, 1.5679999999997085e-05, 1.565299999999742e-05, 1.5569e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.5625000000005218e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5653000000004358e-05, 1.5651999999997945e-05, 1.563899999999785e-05, 1.5625000000005218e-05, 1.563899999999785e-05, 1.5637999999998375e-05, 1.563899999999785e-05, 1.5625000000005218e-05, 1.5639000000004788e-05, 1.562499999999828e-05, 1.562499999999828e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.019" endtime="20201115 22:01:23.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.014" endtime="20201115 22:01:23.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.023" endtime="20201115 22:01:23.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.027" endtime="20201115 22:01:23.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.025" endtime="20201115 22:01:23.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.022" endtime="20201115 22:01:23.047"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:22.641" endtime="20201115 22:01:23.047"></status>
</kw>
<msg timestamp="20201115 22:01:23.048" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.056" endtime="20201115 22:01:23.087"></status>
</kw>
<msg timestamp="20201115 22:01:23.088" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.055" endtime="20201115 22:01:23.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.090" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 20', 'msg': ['overhead_timer_list remove 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.089" endtime="20201115 22:01:23.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.091" endtime="20201115 22:01:23.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.052" endtime="20201115 22:01:23.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.050" endtime="20201115 22:01:23.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.101" endtime="20201115 22:01:23.388"></status>
</kw>
<msg timestamp="20201115 22:01:23.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.100" endtime="20201115 22:01:23.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.392" endtime="20201115 22:01:23.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.400" endtime="20201115 22:01:23.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.097" endtime="20201115 22:01:23.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.096" endtime="20201115 22:01:23.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.407" level="INFO">${RESULT} = [{'time': 0.022922792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.565300000000089e-05, 'source_diff': 1.565300000000089e-05}, {'time': 0.023337403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:23.404" endtime="20201115 22:01:23.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.421" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.408" endtime="20201115 22:01:23.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.426" level="INFO">NAME: 00-overhead-20-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.425" endtime="20201115 22:01:23.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.429" level="INFO">VALUE: [1.565300000000089e-05, 1.563900000000132e-05, 1.561099999999871e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.5597999999998613e-05, 1.5652000000001415e-05, 1.563899999999785e-05, 1.5666000000000985e-05, 1.5652000000001415e-05, 1.561100000000218e-05, 1.5681000000000028e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.563900000000132e-05, 1.5679999999997085e-05, 1.563899999999785e-05, 1.5681000000000028e-05, 1.562499999999828e-05, 1.5638000000005314e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.565299999999742e-05, 1.5708000000003164e-05, 1.566699999999699e-05, 1.562499999999828e-05, 1.568099999999656e-05, 1.565299999999742e-05, 1.565299999999742e-05, 1.566699999999699e-05, 1.566699999999699e-05, 1.565299999999742e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.5637999999998375e-05, 1.5667000000003928e-05, 1.5681000000003498e-05, 1.5651999999997945e-05, 1.561099999999871e-05, 1.562499999999828e-05, 1.563899999999785e-05, 1.5639000000004788e-05, 1.565299999999742e-05, 1.565299999999742e-05, 1.563899999999785e-05, 1.563899999999785e-05, 1.562499999999828e-05, 1.5639000000004788e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.427" endtime="20201115 22:01:23.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.422" endtime="20201115 22:01:23.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.432" endtime="20201115 22:01:23.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.435" endtime="20201115 22:01:23.454"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.434" endtime="20201115 22:01:23.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.430" endtime="20201115 22:01:23.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.048" endtime="20201115 22:01:23.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.416" endtime="20201115 22:01:23.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:21.415" endtime="20201115 22:01:23.456"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.458" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.467" endtime="20201115 22:01:23.499"></status>
</kw>
<msg timestamp="20201115 22:01:23.500" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.466" endtime="20201115 22:01:23.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.502" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.501" endtime="20201115 22:01:23.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.504" endtime="20201115 22:01:23.505"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.463" endtime="20201115 22:01:23.506"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.461" endtime="20201115 22:01:23.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.513" endtime="20201115 22:01:23.806"></status>
</kw>
<msg timestamp="20201115 22:01:23.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.511" endtime="20201115 22:01:23.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024792486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.815" endtime="20201115 22:01:23.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.834" endtime="20201115 22:01:23.837"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.509" endtime="20201115 22:01:23.838"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.507" endtime="20201115 22:01:23.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:23.848" level="INFO">${RESULT} = [{'time': 0.024792486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5971999999999514e-05, 'source_diff': 1.5971999999999514e-05}, {'time': 0.025232569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:23.840" endtime="20201115 22:01:23.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:23.874" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:23.850" endtime="20201115 22:01:23.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.879" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:23.878" endtime="20201115 22:01:23.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.882" level="INFO">VALUE: [1.5971999999999514e-05, 1.5957999999999944e-05, 1.5945000000003318e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5985999999999084e-05, 1.6000000000002124e-05, 1.5944000000000375e-05, 1.5901999999998195e-05, 1.6028000000001263e-05, 1.5958999999999418e-05, 1.5986000000002554e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5958999999999418e-05, 1.5957999999996475e-05, 1.5971999999996045e-05, 1.6000000000002124e-05, 1.58889999999981e-05, 1.5972000000002984e-05, 1.593099999999681e-05, 1.5971999999996045e-05, 1.6000000000002124e-05, 1.5917000000004178e-05, 1.5971999999996045e-05, 1.5943999999996905e-05, 1.590299999999767e-05, 1.5959000000002888e-05, 1.5958000000003414e-05, 1.5971999999996045e-05, 1.5887999999998625e-05, 1.6000000000002124e-05, 1.5916000000004704e-05, 1.5999999999995185e-05, 1.595899999999595e-05, 1.5972000000002984e-05, 1.591699999999724e-05, 1.5958000000003414e-05, 1.593099999999681e-05, 1.58889999999981e-05, 1.5971999999996045e-05, 1.5959000000002888e-05, 1.5959000000002888e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.594499999999638e-05, 1.5959000000002888e-05, 1.594499999999638e-05, 1.5957999999996475e-05, 1.6028000000001263e-05]</msg>
<status status="PASS" starttime="20201115 22:01:23.880" endtime="20201115 22:01:23.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.875" endtime="20201115 22:01:23.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.885" endtime="20201115 22:01:23.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:23.888" endtime="20201115 22:01:23.907"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.887" endtime="20201115 22:01:23.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.883" endtime="20201115 22:01:23.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.459" endtime="20201115 22:01:23.909"></status>
</kw>
<msg timestamp="20201115 22:01:23.909" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.918" endtime="20201115 22:01:23.949"></status>
</kw>
<msg timestamp="20201115 22:01:23.950" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.916" endtime="20201115 22:01:23.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:23.953" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:23.951" endtime="20201115 22:01:23.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.954" endtime="20201115 22:01:23.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.914" endtime="20201115 22:01:23.957"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.912" endtime="20201115 22:01:23.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:23.964" endtime="20201115 22:01:24.250"></status>
</kw>
<msg timestamp="20201115 22:01:24.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:23.962" endtime="20201115 22:01:24.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.254" endtime="20201115 22:01:24.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.262" endtime="20201115 22:01:24.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.960" endtime="20201115 22:01:24.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.958" endtime="20201115 22:01:24.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.269" level="INFO">${RESULT} = [{'time': 0.022602083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5971999999999514e-05, 'source_diff': 1.5971999999999514e-05}, {'time': 0.023043333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:24.265" endtime="20201115 22:01:24.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.283" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.270" endtime="20201115 22:01:24.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.288" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.287" endtime="20201115 22:01:24.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.290" level="INFO">VALUE: [1.5971999999999514e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.6014000000001694e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.5972999999998988e-05, 1.5957999999999944e-05, 1.5972999999998988e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5958999999999418e-05, 1.5931000000000278e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5959000000002888e-05, 1.5973000000002457e-05, 1.5943999999996905e-05, 1.58889999999981e-05, 1.5943999999996905e-05, 1.5971999999996045e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.5958000000003414e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.5903000000004608e-05, 1.5945000000003318e-05, 1.5958000000003414e-05, 1.6014000000001694e-05, 1.6000000000002124e-05, 1.5959000000002888e-05, 1.5959000000002888e-05, 1.5957999999996475e-05, 1.595899999999595e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.6000000000002124e-05, 1.5930000000004274e-05, 1.5957999999996475e-05, 1.5971999999996045e-05, 1.5958000000003414e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.289" endtime="20201115 22:01:24.291"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.284" endtime="20201115 22:01:24.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.293" endtime="20201115 22:01:24.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.297" endtime="20201115 22:01:24.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.295" endtime="20201115 22:01:24.316"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.292" endtime="20201115 22:01:24.317"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.910" endtime="20201115 22:01:24.317"></status>
</kw>
<msg timestamp="20201115 22:01:24.317" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.327" endtime="20201115 22:01:24.359"></status>
</kw>
<msg timestamp="20201115 22:01:24.359" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.325" endtime="20201115 22:01:24.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.362" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.361" endtime="20201115 22:01:24.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.363" endtime="20201115 22:01:24.365"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.322" endtime="20201115 22:01:24.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.320" endtime="20201115 22:01:24.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.373" endtime="20201115 22:01:24.659"></status>
</kw>
<msg timestamp="20201115 22:01:24.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:24.371" endtime="20201115 22:01:24.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:24.663" endtime="20201115 22:01:24.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.672" endtime="20201115 22:01:24.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.369" endtime="20201115 22:01:24.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.367" endtime="20201115 22:01:24.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:24.679" level="INFO">${RESULT} = [{'time': 0.02305925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.023495847, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:24.676" endtime="20201115 22:01:24.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:24.693" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:24.680" endtime="20201115 22:01:24.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.697" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:24.696" endtime="20201115 22:01:24.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.700" level="INFO">VALUE: [1.5957999999999944e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5931000000000278e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5930000000000805e-05, 1.5944000000000375e-05, 1.5999999999998654e-05, 1.5957999999996475e-05, 1.5959000000002888e-05, 1.6014000000001694e-05, 1.5957999999996475e-05, 1.5945000000003318e-05, 1.5986000000002554e-05, 1.5973000000002457e-05, 1.5972000000002984e-05, 1.5943999999996905e-05, 1.5929999999997335e-05, 1.5999999999995185e-05, 1.5958000000003414e-05, 1.5959000000002888e-05, 1.5930000000004274e-05, 1.6000000000002124e-05, 1.5943999999996905e-05, 1.5958000000003414e-05, 1.5957999999996475e-05, 1.5987000000002027e-05, 1.5986000000002554e-05, 1.5958000000003414e-05, 1.5957999999996475e-05, 1.5971999999996045e-05, 1.5944000000003844e-05, 1.5957999999996475e-05, 1.5958000000003414e-05, 1.5945000000003318e-05, 1.5957999999996475e-05, 1.597299999999552e-05, 1.595899999999595e-05, 1.5957999999996475e-05]</msg>
<status status="PASS" starttime="20201115 22:01:24.698" endtime="20201115 22:01:24.700"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.694" endtime="20201115 22:01:24.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.703" endtime="20201115 22:01:24.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:24.706" endtime="20201115 22:01:24.725"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.705" endtime="20201115 22:01:24.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.701" endtime="20201115 22:01:24.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.318" endtime="20201115 22:01:24.727"></status>
</kw>
<msg timestamp="20201115 22:01:24.727" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.736" endtime="20201115 22:01:24.769"></status>
</kw>
<msg timestamp="20201115 22:01:24.769" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.735" endtime="20201115 22:01:24.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:24.772" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:24.770" endtime="20201115 22:01:24.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.773" endtime="20201115 22:01:24.775"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.732" endtime="20201115 22:01:24.776"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.730" endtime="20201115 22:01:24.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:24.783" endtime="20201115 22:01:25.068"></status>
</kw>
<msg timestamp="20201115 22:01:25.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:24.781" endtime="20201115 22:01:25.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023055444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.073" endtime="20201115 22:01:25.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.081" endtime="20201115 22:01:25.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.778" endtime="20201115 22:01:25.083"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.777" endtime="20201115 22:01:25.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.088" level="INFO">${RESULT} = [{'time': 0.023071403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5958999999999418e-05, 'source_diff': 1.5958999999999418e-05}, {'time': 0.023508514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.084" endtime="20201115 22:01:25.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.102" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.089" endtime="20201115 22:01:25.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.107" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.106" endtime="20201115 22:01:25.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.109" level="INFO">VALUE: [1.5958999999999418e-05, 1.5971999999999514e-05, 1.5972999999998988e-05, 1.58889999999981e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5931000000000278e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5972999999998988e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5958999999999418e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5971999999996045e-05, 1.5986000000002554e-05, 1.595899999999595e-05, 1.5889000000005038e-05, 1.5957999999996475e-05, 1.5959000000002888e-05, 1.5945000000003318e-05, 1.5971999999996045e-05, 1.5958000000003414e-05, 1.5971999999996045e-05, 1.5972000000002984e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.6014000000001694e-05, 1.5958000000003414e-05, 1.5931000000003748e-05, 1.5971999999996045e-05, 1.5945000000003318e-05, 1.5972000000002984e-05, 1.5959000000002888e-05, 1.5972000000002984e-05, 1.5944000000003844e-05, 1.5971999999996045e-05, 1.5973000000002457e-05, 1.5958000000003414e-05, 1.5945000000003318e-05, 1.5957999999996475e-05, 1.6000000000002124e-05, 1.5958000000003414e-05, 1.5957999999996475e-05, 1.5957999999996475e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.108" endtime="20201115 22:01:25.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.103" endtime="20201115 22:01:25.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.113" endtime="20201115 22:01:25.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.116" endtime="20201115 22:01:25.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.115" endtime="20201115 22:01:25.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.111" endtime="20201115 22:01:25.136"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:24.728" endtime="20201115 22:01:25.137"></status>
</kw>
<msg timestamp="20201115 22:01:25.137" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.146" endtime="20201115 22:01:25.177"></status>
</kw>
<msg timestamp="20201115 22:01:25.178" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.144" endtime="20201115 22:01:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.180" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 21', 'msg': ['overhead_timer_list remove 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.179" endtime="20201115 22:01:25.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.181" endtime="20201115 22:01:25.184"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.142" endtime="20201115 22:01:25.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.139" endtime="20201115 22:01:25.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.191" endtime="20201115 22:01:25.477"></status>
</kw>
<msg timestamp="20201115 22:01:25.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.190" endtime="20201115 22:01:25.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.481" endtime="20201115 22:01:25.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.489" endtime="20201115 22:01:25.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.187" endtime="20201115 22:01:25.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.186" endtime="20201115 22:01:25.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.496" level="INFO">${RESULT} = [{'time': 0.022562889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.023001819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.493" endtime="20201115 22:01:25.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.510" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.497" endtime="20201115 22:01:25.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.514" level="INFO">NAME: 00-overhead-21-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.513" endtime="20201115 22:01:25.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.516" level="INFO">VALUE: [1.5957999999999944e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5930000000000805e-05, 1.5971999999999514e-05, 1.5959000000002888e-05, 1.5958999999999418e-05, 1.5944999999999848e-05, 1.5999999999998654e-05, 1.5957999999999944e-05, 1.5973000000002457e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5943999999996905e-05, 1.5972000000002984e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.591699999999724e-05, 1.594499999999638e-05, 1.5957999999996475e-05, 1.5958000000003414e-05, 1.598699999999509e-05, 1.5957999999996475e-05, 1.5945000000003318e-05, 1.5957999999996475e-05, 1.5957999999996475e-05, 1.5986000000002554e-05, 1.6027999999994325e-05, 1.6028000000001263e-05, 1.595899999999595e-05, 1.594499999999638e-05, 1.594499999999638e-05, 1.5958000000003414e-05, 1.5943999999996905e-05, 1.5959000000002888e-05, 1.594499999999638e-05, 1.5943999999996905e-05, 1.6014000000001694e-05, 1.5957999999996475e-05, 1.5999999999995185e-05, 1.5958000000003414e-05, 1.5973000000002457e-05, 1.5958000000003414e-05, 1.5945000000003318e-05, 1.595899999999595e-05, 1.5971999999996045e-05, 1.5903000000004608e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.515" endtime="20201115 22:01:25.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.510" endtime="20201115 22:01:25.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.520" endtime="20201115 22:01:25.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.523" endtime="20201115 22:01:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.522" endtime="20201115 22:01:25.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.518" endtime="20201115 22:01:25.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.137" endtime="20201115 22:01:25.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.457" endtime="20201115 22:01:25.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:23.457" endtime="20201115 22:01:25.544"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.547" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.555" endtime="20201115 22:01:25.590"></status>
</kw>
<msg timestamp="20201115 22:01:25.590" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.554" endtime="20201115 22:01:25.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.593" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.591" endtime="20201115 22:01:25.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.594" endtime="20201115 22:01:25.595"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.551" endtime="20201115 22:01:25.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.549" endtime="20201115 22:01:25.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.603" endtime="20201115 22:01:25.887"></status>
</kw>
<msg timestamp="20201115 22:01:25.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.601" endtime="20201115 22:01:25.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:25.892" endtime="20201115 22:01:25.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.900" endtime="20201115 22:01:25.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.598" endtime="20201115 22:01:25.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.597" endtime="20201115 22:01:25.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:25.906" level="INFO">${RESULT} = [{'time': 0.025096403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.025553806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:25.903" endtime="20201115 22:01:25.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:25.920" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:25.907" endtime="20201115 22:01:25.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.924" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:25.923" endtime="20201115 22:01:25.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:25.927" level="INFO">VALUE: [1.6249999999998904e-05, 1.6277999999998044e-05, 1.6277999999998044e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.627700000000204e-05, 1.6277999999998044e-05, 1.6306000000000653e-05, 1.6262999999999e-05, 1.6250000000002374e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.6235999999999334e-05, 1.6264000000001944e-05, 1.6249999999995435e-05, 1.6235999999995865e-05, 1.6264000000001944e-05, 1.6277999999994575e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.62769999999951e-05, 1.62769999999951e-05, 1.6236000000002804e-05, 1.6250000000002374e-05, 1.6263999999995005e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6277999999994575e-05, 1.6277999999994575e-05, 1.6263999999995005e-05, 1.6278000000001513e-05, 1.6236000000002804e-05, 1.627700000000204e-05, 1.6292000000001083e-05, 1.6264000000001944e-05, 1.626300000000247e-05, 1.6292000000001083e-05, 1.629100000000161e-05, 1.623699999999534e-05, 1.6263999999995005e-05, 1.6278000000001513e-05, 1.6263999999995005e-05, 1.6278000000001513e-05, 1.629099999999467e-05, 1.6292000000001083e-05, 1.6208000000003664e-05, 1.6250000000002374e-05, 1.6264000000001944e-05]</msg>
<status status="PASS" starttime="20201115 22:01:25.925" endtime="20201115 22:01:25.928"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.921" endtime="20201115 22:01:25.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.930" endtime="20201115 22:01:25.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:25.934" endtime="20201115 22:01:25.953"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.933" endtime="20201115 22:01:25.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.929" endtime="20201115 22:01:25.954"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.547" endtime="20201115 22:01:25.955"></status>
</kw>
<msg timestamp="20201115 22:01:25.955" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:25.964" endtime="20201115 22:01:25.998"></status>
</kw>
<msg timestamp="20201115 22:01:25.998" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.962" endtime="20201115 22:01:25.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.001" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:25.999" endtime="20201115 22:01:26.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.002" endtime="20201115 22:01:26.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.960" endtime="20201115 22:01:26.005"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.958" endtime="20201115 22:01:26.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.012" endtime="20201115 22:01:26.300"></status>
</kw>
<msg timestamp="20201115 22:01:26.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.010" endtime="20201115 22:01:26.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.304" endtime="20201115 22:01:26.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.313" endtime="20201115 22:01:26.314"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.008" endtime="20201115 22:01:26.315"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.006" endtime="20201115 22:01:26.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.319" level="INFO">${RESULT} = [{'time': 0.022613542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6278000000001513e-05, 'source_diff': 1.6278000000001513e-05}, {'time': 0.023069903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.316" endtime="20201115 22:01:26.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.320" endtime="20201115 22:01:26.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.338" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.337" endtime="20201115 22:01:26.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.340" level="INFO">VALUE: [1.6278000000001513e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6333999999999793e-05, 1.6277999999998044e-05, 1.6264000000001944e-05, 1.6278000000001513e-05, 1.6277999999998044e-05, 1.6305999999997184e-05, 1.6264000000001944e-05, 1.6292000000001083e-05, 1.6263999999998474e-05, 1.6236999999998808e-05, 1.6264000000001944e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.633300000000032e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6277999999994575e-05, 1.6292000000001083e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6250000000002374e-05, 1.6306000000000653e-05, 1.6278000000001513e-05, 1.62769999999951e-05, 1.6264000000001944e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6278000000001513e-05, 1.6249999999995435e-05, 1.6306000000000653e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.629100000000161e-05, 1.6278000000001513e-05, 1.631900000000075e-05, 1.6264000000001944e-05, 1.6277999999994575e-05, 1.6292000000001083e-05, 1.627700000000204e-05, 1.6278000000001513e-05, 1.630500000000118e-05, 1.6264000000001944e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.339" endtime="20201115 22:01:26.341"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.334" endtime="20201115 22:01:26.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.343" endtime="20201115 22:01:26.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.347" endtime="20201115 22:01:26.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.345" endtime="20201115 22:01:26.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.342" endtime="20201115 22:01:26.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.956" endtime="20201115 22:01:26.367"></status>
</kw>
<msg timestamp="20201115 22:01:26.368" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.376" endtime="20201115 22:01:26.409"></status>
</kw>
<msg timestamp="20201115 22:01:26.410" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.375" endtime="20201115 22:01:26.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.412" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.411" endtime="20201115 22:01:26.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.413" endtime="20201115 22:01:26.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.372" endtime="20201115 22:01:26.416"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.370" endtime="20201115 22:01:26.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.423" endtime="20201115 22:01:26.713"></status>
</kw>
<msg timestamp="20201115 22:01:26.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.422" endtime="20201115 22:01:26.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022652278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.723" endtime="20201115 22:01:26.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.741" endtime="20201115 22:01:26.744"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.419" endtime="20201115 22:01:26.745"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.417" endtime="20201115 22:01:26.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:26.756" level="INFO">${RESULT} = [{'time': 0.022668542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6263999999998474e-05, 'source_diff': 1.6263999999998474e-05}, {'time': 0.023128764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:26.748" endtime="20201115 22:01:26.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:26.788" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:26.758" endtime="20201115 22:01:26.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.797" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:26.795" endtime="20201115 22:01:26.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.802" level="INFO">VALUE: [1.6263999999998474e-05, 1.6235999999999334e-05, 1.6263999999998474e-05, 1.6278000000001513e-05, 1.6277999999998044e-05, 1.6264000000001944e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.629099999999814e-05, 1.6264000000001944e-05, 1.6262999999999e-05, 1.6264000000001944e-05, 1.6277999999998044e-05, 1.6292000000001083e-05, 1.6320000000000223e-05, 1.6263999999998474e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.6263999999998474e-05, 1.6278000000001513e-05, 1.6250000000002374e-05, 1.62769999999951e-05, 1.6236000000002804e-05, 1.629100000000161e-05, 1.6263999999995005e-05, 1.6221999999996295e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6235999999995865e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6250000000002374e-05, 1.6292000000001083e-05, 1.627700000000204e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6249999999995435e-05, 1.6264000000001944e-05, 1.6278000000001513e-05, 1.62769999999951e-05, 1.6209000000003138e-05, 1.6278000000001513e-05, 1.6195000000003568e-05, 1.6333999999999793e-05, 1.629100000000161e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6278000000001513e-05, 1.6264000000001944e-05]</msg>
<status status="PASS" starttime="20201115 22:01:26.799" endtime="20201115 22:01:26.803"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.790" endtime="20201115 22:01:26.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.809" endtime="20201115 22:01:26.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:26.814" endtime="20201115 22:01:26.833"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.812" endtime="20201115 22:01:26.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.805" endtime="20201115 22:01:26.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.368" endtime="20201115 22:01:26.835"></status>
</kw>
<msg timestamp="20201115 22:01:26.835" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.844" endtime="20201115 22:01:26.877"></status>
</kw>
<msg timestamp="20201115 22:01:26.878" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.842" endtime="20201115 22:01:26.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:26.880" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:26.879" endtime="20201115 22:01:26.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.881" endtime="20201115 22:01:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.839" endtime="20201115 22:01:26.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.837" endtime="20201115 22:01:26.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:26.891" endtime="20201115 22:01:27.178"></status>
</kw>
<msg timestamp="20201115 22:01:27.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:26.890" endtime="20201115 22:01:27.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.182" endtime="20201115 22:01:27.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.191" endtime="20201115 22:01:27.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.887" endtime="20201115 22:01:27.193"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.885" endtime="20201115 22:01:27.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.198" level="INFO">${RESULT} = [{'time': 0.022698208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.627700000000204e-05, 'source_diff': 1.627700000000204e-05}, {'time': 0.023152278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:27.194" endtime="20201115 22:01:27.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.211" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.198" endtime="20201115 22:01:27.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.215" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.214" endtime="20201115 22:01:27.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.218" level="INFO">VALUE: [1.627700000000204e-05, 1.6305999999997184e-05, 1.6278000000001513e-05, 1.627700000000204e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.6264000000001944e-05, 1.6262999999999e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6222999999999238e-05, 1.6278000000001513e-05, 1.6319999999996754e-05, 1.6263999999998474e-05, 1.6264000000001944e-05, 1.626300000000247e-05, 1.629100000000161e-05, 1.6278000000001513e-05, 1.6263999999998474e-05, 1.6249999999995435e-05, 1.6278000000001513e-05, 1.6277999999994575e-05, 1.6278000000001513e-05, 1.629099999999467e-05, 1.6181000000003998e-05, 1.6249999999995435e-05, 1.626300000000247e-05, 1.6264000000001944e-05, 1.6291999999994144e-05, 1.6264000000001944e-05, 1.6249999999995435e-05, 1.627700000000204e-05, 1.630500000000118e-05, 1.6278000000001513e-05, 1.6320000000000223e-05, 1.629100000000161e-05, 1.6249999999995435e-05, 1.6306000000000653e-05, 1.6305999999993714e-05, 1.6264000000001944e-05, 1.6263999999995005e-05, 1.6264000000001944e-05, 1.6222000000003234e-05, 1.6236000000002804e-05, 1.631900000000075e-05, 1.6250000000002374e-05, 1.6278000000001513e-05, 1.6263999999995005e-05, 1.6278000000001513e-05, 1.629100000000161e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.216" endtime="20201115 22:01:27.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.212" endtime="20201115 22:01:27.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.221" endtime="20201115 22:01:27.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.224" endtime="20201115 22:01:27.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.223" endtime="20201115 22:01:27.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.219" endtime="20201115 22:01:27.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:26.835" endtime="20201115 22:01:27.245"></status>
</kw>
<msg timestamp="20201115 22:01:27.245" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.254" endtime="20201115 22:01:27.288"></status>
</kw>
<msg timestamp="20201115 22:01:27.288" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.252" endtime="20201115 22:01:27.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 22', 'msg': ['overhead_timer_list remove 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.289" endtime="20201115 22:01:27.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.292" endtime="20201115 22:01:27.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.250" endtime="20201115 22:01:27.295"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.248" endtime="20201115 22:01:27.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.301" endtime="20201115 22:01:27.601"></status>
</kw>
<msg timestamp="20201115 22:01:27.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.300" endtime="20201115 22:01:27.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.611" endtime="20201115 22:01:27.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.623" endtime="20201115 22:01:27.624"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.297" endtime="20201115 22:01:27.625"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.296" endtime="20201115 22:01:27.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:27.629" level="INFO">${RESULT} = [{'time': 0.022705847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6278000000001513e-05, 'source_diff': 1.6278000000001513e-05}, {'time': 0.023166556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:27.626" endtime="20201115 22:01:27.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:27.643" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:27.630" endtime="20201115 22:01:27.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.647" level="INFO">NAME: 00-overhead-22-remove</msg>
<status status="PASS" starttime="20201115 22:01:27.646" endtime="20201115 22:01:27.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.650" level="INFO">VALUE: [1.6278000000001513e-05, 1.6264000000001944e-05, 1.6291999999997614e-05, 1.6277999999998044e-05, 1.633300000000032e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.6291999999997614e-05, 1.6264000000001944e-05, 1.6262999999999e-05, 1.6262999999999e-05, 1.6263999999998474e-05, 1.6306000000000653e-05, 1.627699999999857e-05, 1.6292000000001083e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.6277999999994575e-05, 1.6278000000001513e-05, 1.626300000000247e-05, 1.6306000000000653e-05, 1.6292000000001083e-05, 1.626300000000247e-05, 1.6221999999996295e-05, 1.6277999999994575e-05, 1.6333999999999793e-05, 1.6264000000001944e-05, 1.6249999999995435e-05, 1.6278000000001513e-05, 1.629099999999467e-05, 1.6264000000001944e-05, 1.6221999999996295e-05, 1.633300000000032e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6277999999994575e-05, 1.6292000000001083e-05, 1.6250000000002374e-05, 1.6264000000001944e-05, 1.6264000000001944e-05, 1.6291999999994144e-05, 1.629099999999467e-05, 1.6278000000001513e-05, 1.6263999999995005e-05, 1.6263999999995005e-05]</msg>
<status status="PASS" starttime="20201115 22:01:27.648" endtime="20201115 22:01:27.650"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.644" endtime="20201115 22:01:27.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.653" endtime="20201115 22:01:27.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:27.656" endtime="20201115 22:01:27.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.655" endtime="20201115 22:01:27.676"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.651" endtime="20201115 22:01:27.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.246" endtime="20201115 22:01:27.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.546" endtime="20201115 22:01:27.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:25.545" endtime="20201115 22:01:27.677"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.680" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.688" endtime="20201115 22:01:27.723"></status>
</kw>
<msg timestamp="20201115 22:01:27.724" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.687" endtime="20201115 22:01:27.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:27.726" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:27.725" endtime="20201115 22:01:27.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.727" endtime="20201115 22:01:27.729"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.684" endtime="20201115 22:01:27.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.682" endtime="20201115 22:01:27.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:27.737" endtime="20201115 22:01:28.022"></status>
</kw>
<msg timestamp="20201115 22:01:28.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025094333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:27.735" endtime="20201115 22:01:28.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025094333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.026" endtime="20201115 22:01:28.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.034" endtime="20201115 22:01:28.036"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.732" endtime="20201115 22:01:28.037"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.731" endtime="20201115 22:01:28.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.041" level="INFO">${RESULT} = [{'time': 0.025110931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6597999999999613e-05, 'source_diff': 1.6597999999999613e-05}, {'time': 0.02559525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:28.038" endtime="20201115 22:01:28.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.055" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.042" endtime="20201115 22:01:28.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.059" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.058" endtime="20201115 22:01:28.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.062" level="INFO">VALUE: [1.6597999999999613e-05, 1.6569000000001e-05, 1.6570000000000473e-05, 1.658300000000057e-05, 1.6569000000001e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.6611999999999183e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.6513999999998724e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.6597999999999613e-05, 1.663899999999885e-05, 1.658299999999363e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.6569000000001e-05, 1.6528000000001764e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.655500000000143e-05, 1.6637999999999376e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.6555999999993964e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.6570000000000473e-05, 1.6639000000005788e-05, 1.654100000000186e-05, 1.658300000000057e-05, 1.6625000000006218e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.654100000000186e-05, 1.658300000000057e-05, 1.659700000000014e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.060" endtime="20201115 22:01:28.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.056" endtime="20201115 22:01:28.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.065" endtime="20201115 22:01:28.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.068" endtime="20201115 22:01:28.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.067" endtime="20201115 22:01:28.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.063" endtime="20201115 22:01:28.088"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.680" endtime="20201115 22:01:28.089"></status>
</kw>
<msg timestamp="20201115 22:01:28.089" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.098" endtime="20201115 22:01:28.132"></status>
</kw>
<msg timestamp="20201115 22:01:28.133" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.096" endtime="20201115 22:01:28.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.136" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.134" endtime="20201115 22:01:28.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.137" endtime="20201115 22:01:28.139"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.094" endtime="20201115 22:01:28.140"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.092" endtime="20201115 22:01:28.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.147" endtime="20201115 22:01:28.433"></status>
</kw>
<msg timestamp="20201115 22:01:28.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.145" endtime="20201115 22:01:28.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.437" endtime="20201115 22:01:28.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.446" endtime="20201115 22:01:28.447"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.143" endtime="20201115 22:01:28.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.141" endtime="20201115 22:01:28.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.452" level="INFO">${RESULT} = [{'time': 0.022703472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.654099999999839e-05, 'source_diff': 1.654099999999839e-05}, {'time': 0.023186958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:28.449" endtime="20201115 22:01:28.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.467" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.453" endtime="20201115 22:01:28.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.471" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.470" endtime="20201115 22:01:28.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.474" level="INFO">VALUE: [1.654099999999839e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.6569000000001e-05, 1.65829999999971e-05, 1.656899999999753e-05, 1.655499999999796e-05, 1.6569000000001e-05, 1.6584000000000043e-05, 1.6570000000000473e-05, 1.65829999999971e-05, 1.6570000000000473e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.663899999999885e-05, 1.658299999999363e-05, 1.662499999999928e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.655500000000143e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.6570000000000473e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.6570000000000473e-05, 1.6528000000001764e-05, 1.6584000000000043e-05, 1.6570000000000473e-05, 1.661099999999971e-05, 1.6499999999995685e-05, 1.6569000000001e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.6584000000000043e-05, 1.6652000000005884e-05, 1.659700000000014e-05, 1.6597999999999613e-05, 1.6584000000000043e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.472" endtime="20201115 22:01:28.474"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.467" endtime="20201115 22:01:28.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.477" endtime="20201115 22:01:28.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.480" endtime="20201115 22:01:28.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.479" endtime="20201115 22:01:28.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.475" endtime="20201115 22:01:28.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.090" endtime="20201115 22:01:28.501"></status>
</kw>
<msg timestamp="20201115 22:01:28.501" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.510" endtime="20201115 22:01:28.545"></status>
</kw>
<msg timestamp="20201115 22:01:28.545" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.509" endtime="20201115 22:01:28.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.548" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.546" endtime="20201115 22:01:28.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.549" endtime="20201115 22:01:28.551"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.506" endtime="20201115 22:01:28.552"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.504" endtime="20201115 22:01:28.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.559" endtime="20201115 22:01:28.844"></status>
</kw>
<msg timestamp="20201115 22:01:28.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:28.557" endtime="20201115 22:01:28.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02312725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:28.848" endtime="20201115 22:01:28.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.856" endtime="20201115 22:01:28.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.555" endtime="20201115 22:01:28.858"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.553" endtime="20201115 22:01:28.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:28.863" level="INFO">${RESULT} = [{'time': 0.02312725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.65829999999971e-05, 'source_diff': 1.65829999999971e-05}, {'time': 0.023605069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:28.860" endtime="20201115 22:01:28.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:28.876" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:28.864" endtime="20201115 22:01:28.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.881" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:28.880" endtime="20201115 22:01:28.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.883" level="INFO">VALUE: [1.65829999999971e-05, 1.655499999999796e-05, 1.6514000000002194e-05, 1.662499999999928e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.656899999999406e-05, 1.658300000000057e-05, 1.655500000000143e-05, 1.6584000000000043e-05, 1.6597999999999613e-05, 1.662499999999928e-05, 1.6597999999999613e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.6514000000002194e-05, 1.6570000000000473e-05, 1.6569000000001e-05, 1.658300000000057e-05, 1.65969999999932e-05, 1.662499999999928e-05, 1.6556000000000903e-05, 1.6569000000001e-05, 1.6584000000000043e-05, 1.662499999999928e-05, 1.6611000000006648e-05, 1.6513999999995255e-05, 1.663899999999885e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.658299999999363e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.655499999999449e-05, 1.654100000000186e-05]</msg>
<status status="PASS" starttime="20201115 22:01:28.882" endtime="20201115 22:01:28.884"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.877" endtime="20201115 22:01:28.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.886" endtime="20201115 22:01:28.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:28.890" endtime="20201115 22:01:28.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.888" endtime="20201115 22:01:28.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.885" endtime="20201115 22:01:28.911"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.502" endtime="20201115 22:01:28.911"></status>
</kw>
<msg timestamp="20201115 22:01:28.911" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.920" endtime="20201115 22:01:28.955"></status>
</kw>
<msg timestamp="20201115 22:01:28.955" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.918" endtime="20201115 22:01:28.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:28.958" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:28.956" endtime="20201115 22:01:28.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.959" endtime="20201115 22:01:28.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.916" endtime="20201115 22:01:28.962"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.914" endtime="20201115 22:01:28.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:28.968" endtime="20201115 22:01:29.254"></status>
</kw>
<msg timestamp="20201115 22:01:29.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:28.967" endtime="20201115 22:01:29.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.258" endtime="20201115 22:01:29.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.267" endtime="20201115 22:01:29.268"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.964" endtime="20201115 22:01:29.269"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.963" endtime="20201115 22:01:29.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.273" level="INFO">${RESULT} = [{'time': 0.022694333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6569000000001e-05, 'source_diff': 1.6569000000001e-05}, {'time': 0.0231705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6...</msg>
<status status="PASS" starttime="20201115 22:01:29.270" endtime="20201115 22:01:29.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.287" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.274" endtime="20201115 22:01:29.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.291" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.290" endtime="20201115 22:01:29.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.294" level="INFO">VALUE: [1.6569000000001e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.6527999999998294e-05, 1.6569000000001e-05, 1.663899999999885e-05, 1.659699999999667e-05, 1.6542000000001333e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.658300000000057e-05, 1.65829999999971e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.655500000000143e-05, 1.656899999999406e-05, 1.658299999999363e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.662499999999928e-05, 1.661099999999971e-05, 1.656899999999406e-05, 1.6584000000000043e-05, 1.6528000000001764e-05, 1.6569000000001e-05, 1.6570000000000473e-05, 1.6569000000001e-05, 1.658300000000057e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.6556000000000903e-05, 1.658300000000057e-05, 1.6556000000000903e-05, 1.6584000000000043e-05, 1.6584000000000043e-05, 1.655500000000143e-05, 1.658300000000057e-05, 1.6611000000006648e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.292" endtime="20201115 22:01:29.294"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.287" endtime="20201115 22:01:29.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.297" endtime="20201115 22:01:29.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.301" endtime="20201115 22:01:29.320"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.299" endtime="20201115 22:01:29.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.296" endtime="20201115 22:01:29.321"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:28.912" endtime="20201115 22:01:29.321"></status>
</kw>
<msg timestamp="20201115 22:01:29.321" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.330" endtime="20201115 22:01:29.366"></status>
</kw>
<msg timestamp="20201115 22:01:29.367" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.329" endtime="20201115 22:01:29.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.369" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 23', 'msg': ['overhead_timer_list remove 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.368" endtime="20201115 22:01:29.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.370" endtime="20201115 22:01:29.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.326" endtime="20201115 22:01:29.373"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.324" endtime="20201115 22:01:29.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.380" endtime="20201115 22:01:29.666"></status>
</kw>
<msg timestamp="20201115 22:01:29.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.378" endtime="20201115 22:01:29.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.670" endtime="20201115 22:01:29.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.678" endtime="20201115 22:01:29.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.376" endtime="20201115 22:01:29.681"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.374" endtime="20201115 22:01:29.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:29.685" level="INFO">${RESULT} = [{'time': 0.022997736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.659700000000014e-05, 'source_diff': 1.659700000000014e-05}, {'time': 0.023472375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:29.682" endtime="20201115 22:01:29.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:29.698" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:29.686" endtime="20201115 22:01:29.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.703" level="INFO">NAME: 00-overhead-23-remove</msg>
<status status="PASS" starttime="20201115 22:01:29.702" endtime="20201115 22:01:29.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.706" level="INFO">VALUE: [1.659700000000014e-05, 1.6569000000001e-05, 1.662499999999928e-05, 1.6541999999997864e-05, 1.6569000000001e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.6584000000000043e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.6528000000001764e-05, 1.661099999999971e-05, 1.6570000000000473e-05, 1.6570000000000473e-05, 1.6570000000000473e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.658299999999363e-05, 1.656899999999406e-05, 1.6569000000001e-05, 1.6569000000001e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.661099999999971e-05, 1.658300000000057e-05, 1.6528000000001764e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.655500000000143e-05, 1.658300000000057e-05, 1.662499999999928e-05, 1.658300000000057e-05, 1.6584000000000043e-05, 1.6570000000000473e-05, 1.6569000000001e-05, 1.6597999999999613e-05, 1.6569000000001e-05, 1.6514000000002194e-05, 1.6584000000000043e-05, 1.6653000000005358e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.662499999999928e-05]</msg>
<status status="PASS" starttime="20201115 22:01:29.704" endtime="20201115 22:01:29.706"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.699" endtime="20201115 22:01:29.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.709" endtime="20201115 22:01:29.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:29.713" endtime="20201115 22:01:29.732"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.711" endtime="20201115 22:01:29.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.708" endtime="20201115 22:01:29.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.322" endtime="20201115 22:01:29.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.678" endtime="20201115 22:01:29.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:27.678" endtime="20201115 22:01:29.734"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.736" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.745" endtime="20201115 22:01:29.781"></status>
</kw>
<msg timestamp="20201115 22:01:29.781" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.743" endtime="20201115 22:01:29.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:29.784" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:29.782" endtime="20201115 22:01:29.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.785" endtime="20201115 22:01:29.786"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.741" endtime="20201115 22:01:29.787"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.738" endtime="20201115 22:01:29.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:29.794" endtime="20201115 22:01:30.081"></status>
</kw>
<msg timestamp="20201115 22:01:30.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025215444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:29.792" endtime="20201115 22:01:30.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025215444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.085" endtime="20201115 22:01:30.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.093" endtime="20201115 22:01:30.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.790" endtime="20201115 22:01:30.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.788" endtime="20201115 22:01:30.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.100" level="INFO">${RESULT} = [{'time': 0.025215444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6915999999998765e-05, 'source_diff': 1.6915999999998765e-05}, {'time': 0.025715667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.096" endtime="20201115 22:01:30.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.114" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.101" endtime="20201115 22:01:30.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.118" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.117" endtime="20201115 22:01:30.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.121" level="INFO">VALUE: [1.6915999999998765e-05, 1.688900000000257e-05, 1.690300000000214e-05, 1.690299999999867e-05, 1.6930000000001805e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.691700000000171e-05, 1.690300000000214e-05, 1.68889999999991e-05, 1.690300000000214e-05, 1.690299999999867e-05, 1.684700000000039e-05, 1.691699999999824e-05, 1.6902000000006134e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.6889000000006038e-05, 1.6889000000006038e-05, 1.690299999999867e-05, 1.6945000000004318e-05, 1.690299999999867e-05, 1.691699999999824e-05, 1.683299999999388e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.6889000000006038e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.68889999999991e-05, 1.6819999999993784e-05, 1.694499999999738e-05, 1.6901999999999195e-05, 1.6916000000005704e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.6887999999999626e-05, 1.687499999999953e-05, 1.6901999999999195e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.119" endtime="20201115 22:01:30.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.115" endtime="20201115 22:01:30.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.125" endtime="20201115 22:01:30.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.128" endtime="20201115 22:01:30.147"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.126" endtime="20201115 22:01:30.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.123" endtime="20201115 22:01:30.148"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.736" endtime="20201115 22:01:30.149"></status>
</kw>
<msg timestamp="20201115 22:01:30.149" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.157" endtime="20201115 22:01:30.194"></status>
</kw>
<msg timestamp="20201115 22:01:30.194" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.156" endtime="20201115 22:01:30.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.197" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.195" endtime="20201115 22:01:30.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.198" endtime="20201115 22:01:30.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.153" endtime="20201115 22:01:30.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.151" endtime="20201115 22:01:30.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.208" endtime="20201115 22:01:30.504"></status>
</kw>
<msg timestamp="20201115 22:01:30.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.206" endtime="20201115 22:01:30.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.513" endtime="20201115 22:01:30.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.531" endtime="20201115 22:01:30.534"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.204" endtime="20201115 22:01:30.535"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.202" endtime="20201115 22:01:30.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.543" level="INFO">${RESULT} = [{'time': 0.022990014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.023488264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 22:01:30.538" endtime="20201115 22:01:30.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.557" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.544" endtime="20201115 22:01:30.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.567" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.566" endtime="20201115 22:01:30.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.570" level="INFO">VALUE: [1.68889999999991e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.690300000000214e-05, 1.6971999999997045e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.693100000000128e-05, 1.68889999999991e-05, 1.690300000000214e-05, 1.6915999999998765e-05, 1.690300000000214e-05, 1.68889999999991e-05, 1.686099999999996e-05, 1.690300000000214e-05, 1.691700000000171e-05, 1.6889000000006038e-05, 1.68889999999991e-05, 1.6917000000005178e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.686099999999996e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.6903000000005608e-05, 1.6903000000005608e-05, 1.687499999999953e-05, 1.6903000000005608e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.6902000000006134e-05, 1.68889999999991e-05, 1.693099999999781e-05, 1.690299999999867e-05, 1.6887999999999626e-05, 1.686099999999996e-05, 1.6930000000005274e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.691699999999824e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.568" endtime="20201115 22:01:30.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.564" endtime="20201115 22:01:30.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.573" endtime="20201115 22:01:30.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.576" endtime="20201115 22:01:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.575" endtime="20201115 22:01:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.571" endtime="20201115 22:01:30.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.149" endtime="20201115 22:01:30.597"></status>
</kw>
<msg timestamp="20201115 22:01:30.597" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.606" endtime="20201115 22:01:30.641"></status>
</kw>
<msg timestamp="20201115 22:01:30.641" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.604" endtime="20201115 22:01:30.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.644" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:30.643" endtime="20201115 22:01:30.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.645" endtime="20201115 22:01:30.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.602" endtime="20201115 22:01:30.648"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.600" endtime="20201115 22:01:30.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.655" endtime="20201115 22:01:30.941"></status>
</kw>
<msg timestamp="20201115 22:01:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.653" endtime="20201115 22:01:30.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:30.946" endtime="20201115 22:01:30.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.954" endtime="20201115 22:01:30.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.651" endtime="20201115 22:01:30.956"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.649" endtime="20201115 22:01:30.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:30.960" level="INFO">${RESULT} = [{'time': 0.022654083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6915999999998765e-05, 'source_diff': 1.6915999999998765e-05}, {'time': 0.023158681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:30.957" endtime="20201115 22:01:30.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:30.974" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:30.962" endtime="20201115 22:01:30.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.979" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:30.978" endtime="20201115 22:01:30.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:30.981" level="INFO">VALUE: [1.6915999999998765e-05, 1.690300000000214e-05, 1.693100000000128e-05, 1.688900000000257e-05, 1.688900000000257e-05, 1.690300000000214e-05, 1.6930000000001805e-05, 1.6901999999999195e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.690300000000214e-05, 1.691699999999824e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.6929999999998335e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.6902000000002665e-05, 1.6847999999999863e-05, 1.6903000000005608e-05, 1.6903000000005608e-05, 1.68889999999991e-05, 1.6903000000005608e-05, 1.68889999999991e-05, 1.6917000000005178e-05, 1.68889999999991e-05, 1.6903000000005608e-05, 1.6889000000006038e-05, 1.684700000000039e-05, 1.6902000000006134e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.691699999999824e-05, 1.6943999999997905e-05, 1.690299999999867e-05, 1.6957999999997475e-05, 1.6916000000005704e-05, 1.6903000000005608e-05, 1.68889999999991e-05, 1.6901999999999195e-05, 1.6903000000005608e-05, 1.683300000000082e-05, 1.6887999999999626e-05, 1.6903000000005608e-05, 1.687499999999953e-05, 1.6943999999997905e-05, 1.695899999999695e-05, 1.6901999999999195e-05, 1.691699999999824e-05, 1.690299999999867e-05]</msg>
<status status="PASS" starttime="20201115 22:01:30.980" endtime="20201115 22:01:30.982"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.975" endtime="20201115 22:01:30.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:30.984" endtime="20201115 22:01:30.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:30.988" endtime="20201115 22:01:31.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.986" endtime="20201115 22:01:31.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.983" endtime="20201115 22:01:31.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:30.598" endtime="20201115 22:01:31.008"></status>
</kw>
<msg timestamp="20201115 22:01:31.009" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.018" endtime="20201115 22:01:31.053"></status>
</kw>
<msg timestamp="20201115 22:01:31.054" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.016" endtime="20201115 22:01:31.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.056" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.055" endtime="20201115 22:01:31.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.057" endtime="20201115 22:01:31.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.013" endtime="20201115 22:01:31.060"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.011" endtime="20201115 22:01:31.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.067" endtime="20201115 22:01:31.352"></status>
</kw>
<msg timestamp="20201115 22:01:31.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023638792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.065" endtime="20201115 22:01:31.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023638792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.356" endtime="20201115 22:01:31.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.365" endtime="20201115 22:01:31.366"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.063" endtime="20201115 22:01:31.367"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.061" endtime="20201115 22:01:31.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.371" level="INFO">${RESULT} = [{'time': 0.023655681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.688900000000257e-05, 'source_diff': 1.688900000000257e-05}, {'time': 0.024156931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:31.368" endtime="20201115 22:01:31.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.385" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.373" endtime="20201115 22:01:31.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.390" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.389" endtime="20201115 22:01:31.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.392" level="INFO">VALUE: [1.688900000000257e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.691700000000171e-05, 1.68889999999991e-05, 1.6945000000000848e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.6834000000000293e-05, 1.68889999999991e-05, 1.6929999999998335e-05, 1.690300000000214e-05, 1.684700000000039e-05, 1.691699999999824e-05, 1.68889999999991e-05, 1.683299999999388e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.681900000000125e-05, 1.690299999999867e-05, 1.6820000000000723e-05, 1.690299999999867e-05, 1.6917000000005178e-05, 1.6957999999997475e-05, 1.690299999999867e-05, 1.6915999999998765e-05, 1.68889999999991e-05, 1.6915999999998765e-05, 1.68889999999991e-05, 1.684700000000039e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.6901999999999195e-05, 1.6903000000005608e-05, 1.6903000000005608e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.6915999999998765e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.6915999999998765e-05, 1.68889999999991e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.391" endtime="20201115 22:01:31.393"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.386" endtime="20201115 22:01:31.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.395" endtime="20201115 22:01:31.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.399" endtime="20201115 22:01:31.418"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.397" endtime="20201115 22:01:31.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.394" endtime="20201115 22:01:31.419"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.009" endtime="20201115 22:01:31.420"></status>
</kw>
<msg timestamp="20201115 22:01:31.420" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.428" endtime="20201115 22:01:31.465"></status>
</kw>
<msg timestamp="20201115 22:01:31.465" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.427" endtime="20201115 22:01:31.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.467" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 24', 'msg': ['overhead_timer_list remove 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.466" endtime="20201115 22:01:31.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.468" endtime="20201115 22:01:31.471"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.424" endtime="20201115 22:01:31.472"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.422" endtime="20201115 22:01:31.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.478" endtime="20201115 22:01:31.763"></status>
</kw>
<msg timestamp="20201115 22:01:31.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.477" endtime="20201115 22:01:31.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:31.767" endtime="20201115 22:01:31.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.775" endtime="20201115 22:01:31.777"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.474" endtime="20201115 22:01:31.778"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.473" endtime="20201115 22:01:31.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:31.782" level="INFO">${RESULT} = [{'time': 0.02314725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.688900000000257e-05, 'source_diff': 1.688900000000257e-05}, {'time': 0.0236525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 22:01:31.779" endtime="20201115 22:01:31.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:31.796" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:31.783" endtime="20201115 22:01:31.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.801" level="INFO">NAME: 00-overhead-24-remove</msg>
<status status="PASS" starttime="20201115 22:01:31.800" endtime="20201115 22:01:31.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.803" level="INFO">VALUE: [1.688900000000257e-05, 1.687499999999953e-05, 1.6972000000000514e-05, 1.6959000000000418e-05, 1.6958000000000945e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.693099999999781e-05, 1.694499999999738e-05, 1.68889999999991e-05, 1.6887999999999626e-05, 1.6972999999999988e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.684700000000039e-05, 1.6916000000002235e-05, 1.6915999999998765e-05, 1.690299999999867e-05, 1.687499999999953e-05, 1.6916000000005704e-05, 1.691699999999824e-05, 1.687499999999953e-05, 1.6875000000006468e-05, 1.6945000000004318e-05, 1.6903000000005608e-05, 1.6901999999999195e-05, 1.68889999999991e-05, 1.68889999999991e-05, 1.6915999999998765e-05, 1.687499999999953e-05, 1.683300000000082e-05, 1.68889999999991e-05, 1.681899999999431e-05, 1.6915999999998765e-05, 1.690299999999867e-05, 1.691699999999824e-05, 1.6915999999998765e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.6903000000005608e-05, 1.693099999999781e-05, 1.687499999999953e-05, 1.6903000000005608e-05, 1.693099999999781e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.6887999999999626e-05, 1.691699999999824e-05]</msg>
<status status="PASS" starttime="20201115 22:01:31.802" endtime="20201115 22:01:31.804"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.797" endtime="20201115 22:01:31.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.806" endtime="20201115 22:01:31.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:31.810" endtime="20201115 22:01:31.829"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.808" endtime="20201115 22:01:31.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.805" endtime="20201115 22:01:31.830"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.420" endtime="20201115 22:01:31.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.735" endtime="20201115 22:01:31.831"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:29.734" endtime="20201115 22:01:31.831"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Timer List Overhead</arg>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.833" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.842" endtime="20201115 22:01:31.879"></status>
</kw>
<msg timestamp="20201115 22:01:31.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.840" endtime="20201115 22:01:31.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:31.882" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:31.880" endtime="20201115 22:01:31.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.883" endtime="20201115 22:01:31.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.838" endtime="20201115 22:01:31.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.836" endtime="20201115 22:01:31.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:31.892" endtime="20201115 22:01:32.178"></status>
</kw>
<msg timestamp="20201115 22:01:32.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:31.891" endtime="20201115 22:01:32.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.182" endtime="20201115 22:01:32.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.190" endtime="20201115 22:01:32.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.888" endtime="20201115 22:01:32.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.886" endtime="20201115 22:01:32.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.197" level="INFO">${RESULT} = [{'time': 0.025056667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7195000000001098e-05, 'source_diff': 1.7195000000001098e-05}, {'time': 0.025575819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.194" endtime="20201115 22:01:32.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.211" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.198" endtime="20201115 22:01:32.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.215" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.214" endtime="20201115 22:01:32.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.218" level="INFO">VALUE: [1.7195000000001098e-05, 1.7222000000000764e-05, 1.719499999999763e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7193999999998155e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.719499999999763e-05, 1.7278000000002514e-05, 1.7194000000005094e-05, 1.716699999999849e-05, 1.7193999999998155e-05, 1.7193999999998155e-05, 1.7235999999996865e-05, 1.7193999999998155e-05, 1.7222000000004234e-05, 1.719499999999763e-05, 1.719499999999763e-05, 1.7195000000004568e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7208000000004664e-05, 1.726299999999653e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.7278000000002514e-05, 1.715299999999892e-05, 1.7221999999997295e-05, 1.7194000000005094e-05, 1.719499999999763e-05, 1.72089999999972e-05, 1.7222000000004234e-05, 1.7194000000005094e-05, 1.7179999999998585e-05, 1.719499999999763e-05, 1.7208000000004664e-05, 1.7194000000005094e-05, 1.72089999999972e-05, 1.7235999999996865e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7208000000004664e-05, 1.7236000000003804e-05, 1.7208000000004664e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.216" endtime="20201115 22:01:32.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.212" endtime="20201115 22:01:32.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.221" endtime="20201115 22:01:32.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.224" endtime="20201115 22:01:32.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.223" endtime="20201115 22:01:32.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.219" endtime="20201115 22:01:32.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.834" endtime="20201115 22:01:32.245"></status>
</kw>
<msg timestamp="20201115 22:01:32.245" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.254" endtime="20201115 22:01:32.290"></status>
</kw>
<msg timestamp="20201115 22:01:32.291" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.252" endtime="20201115 22:01:32.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.293" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.292" endtime="20201115 22:01:32.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.295" endtime="20201115 22:01:32.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.250" endtime="20201115 22:01:32.298"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.248" endtime="20201115 22:01:32.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.305" endtime="20201115 22:01:32.590"></status>
</kw>
<msg timestamp="20201115 22:01:32.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023125125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.303" endtime="20201115 22:01:32.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023125125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.594" endtime="20201115 22:01:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.602" endtime="20201115 22:01:32.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.301" endtime="20201115 22:01:32.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.299" endtime="20201115 22:01:32.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:32.609" level="INFO">${RESULT} = [{'time': 0.023125125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.023650764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:32.606" endtime="20201115 22:01:32.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:32.622" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:32.610" endtime="20201115 22:01:32.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.627" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:32.626" endtime="20201115 22:01:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.629" level="INFO">VALUE: [1.7208000000001195e-05, 1.7208000000001195e-05, 1.7207999999997725e-05, 1.7263999999999474e-05, 1.7223000000000238e-05, 1.7208000000001195e-05, 1.7222000000000764e-05, 1.715300000000239e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.7236000000000334e-05, 1.7277999999999044e-05, 1.7236000000000334e-05, 1.7207999999997725e-05, 1.7223000000000238e-05, 1.7236000000000334e-05, 1.7249999999996435e-05, 1.7195000000004568e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.719499999999763e-05, 1.7193999999998155e-05, 1.7292000000002083e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7165999999999015e-05, 1.722299999999677e-05, 1.7222000000004234e-05, 1.7236000000003804e-05, 1.7209000000004138e-05, 1.7195000000004568e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.7194000000005094e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7250000000003374e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7222000000004234e-05, 1.7235999999996865e-05, 1.7208000000004664e-05, 1.7221999999997295e-05, 1.7179999999998585e-05]</msg>
<status status="PASS" starttime="20201115 22:01:32.628" endtime="20201115 22:01:32.630"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.623" endtime="20201115 22:01:32.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.633" endtime="20201115 22:01:32.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:32.636" endtime="20201115 22:01:32.655"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.634" endtime="20201115 22:01:32.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.631" endtime="20201115 22:01:32.656"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.246" endtime="20201115 22:01:32.657"></status>
</kw>
<msg timestamp="20201115 22:01:32.657" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.666" endtime="20201115 22:01:32.703"></status>
</kw>
<msg timestamp="20201115 22:01:32.704" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.665" endtime="20201115 22:01:32.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:32.706" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:32.705" endtime="20201115 22:01:32.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.707" endtime="20201115 22:01:32.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.662" endtime="20201115 22:01:32.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.659" endtime="20201115 22:01:32.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:32.717" endtime="20201115 22:01:33.002"></status>
</kw>
<msg timestamp="20201115 22:01:33.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023253139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:32.716" endtime="20201115 22:01:33.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023253139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.006" endtime="20201115 22:01:33.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.014" endtime="20201115 22:01:33.016"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.713" endtime="20201115 22:01:33.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.711" endtime="20201115 22:01:33.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.021" level="INFO">${RESULT} = [{'time': 0.023253139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.716699999999849e-05, 'source_diff': 1.716699999999849e-05}, {'time': 0.023779111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:01:33.018" endtime="20201115 22:01:33.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.035" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.022" endtime="20201115 22:01:33.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.039" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.038" endtime="20201115 22:01:33.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.041" level="INFO">VALUE: [1.716699999999849e-05, 1.7207999999997725e-05, 1.7223000000000238e-05, 1.7195000000001098e-05, 1.7263999999999474e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.7195000000001098e-05, 1.7165999999999015e-05, 1.7151999999999445e-05, 1.715299999999892e-05, 1.7223000000000238e-05, 1.7222000000004234e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.715299999999892e-05, 1.7223000000003708e-05, 1.7237000000003277e-05, 1.7264000000002944e-05, 1.7208000000004664e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.7153000000005858e-05, 1.7208000000004664e-05, 1.7221999999997295e-05, 1.718099999999806e-05, 1.7193999999998155e-05, 1.7222000000004234e-05, 1.7207999999997725e-05, 1.7236000000003804e-05, 1.722299999999677e-05, 1.719499999999763e-05, 1.719499999999763e-05, 1.719499999999763e-05, 1.72089999999972e-05, 1.7278000000002514e-05, 1.7222000000004234e-05, 1.7207999999997725e-05, 1.7209000000004138e-05, 1.7207999999997725e-05, 1.719499999999763e-05, 1.7250000000003374e-05, 1.7207999999997725e-05, 1.7207999999997725e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.040" endtime="20201115 22:01:33.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.035" endtime="20201115 22:01:33.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.045" endtime="20201115 22:01:33.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.048" endtime="20201115 22:01:33.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.046" endtime="20201115 22:01:33.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.043" endtime="20201115 22:01:33.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:32.657" endtime="20201115 22:01:33.069"></status>
</kw>
<msg timestamp="20201115 22:01:33.069" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.078" endtime="20201115 22:01:33.115"></status>
</kw>
<msg timestamp="20201115 22:01:33.115" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.076" endtime="20201115 22:01:33.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.118" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.116" endtime="20201115 22:01:33.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.119" endtime="20201115 22:01:33.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.074" endtime="20201115 22:01:33.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.072" endtime="20201115 22:01:33.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.129" endtime="20201115 22:01:33.429"></status>
</kw>
<msg timestamp="20201115 22:01:33.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.127" endtime="20201115 22:01:33.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:01:33.439" endtime="20201115 22:01:33.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.458" endtime="20201115 22:01:33.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.125" endtime="20201115 22:01:33.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.123" endtime="20201115 22:01:33.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.472" level="INFO">${RESULT} = [{'time': 0.022921708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7165999999999015e-05, 'source_diff': 1.7165999999999015e-05}, {'time': 0.023440181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:01:33.466" endtime="20201115 22:01:33.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.487" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.473" endtime="20201115 22:01:33.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.492" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.491" endtime="20201115 22:01:33.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.495" level="INFO">VALUE: [1.7165999999999015e-05, 1.7195000000001098e-05, 1.7208000000001195e-05, 1.72089999999972e-05, 1.718100000000153e-05, 1.7236000000000334e-05, 1.7221999999997295e-05, 1.713900000000282e-05, 1.7209000000000668e-05, 1.719499999999763e-05, 1.7194000000001625e-05, 1.7194000000001625e-05, 1.72089999999972e-05, 1.7236000000000334e-05, 1.7221999999997295e-05, 1.7207999999997725e-05, 1.715299999999892e-05, 1.7193999999998155e-05, 1.7221999999997295e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.7236000000003804e-05, 1.7236000000003804e-05, 1.7236000000003804e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7137999999999876e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.7208000000004664e-05, 1.7209000000004138e-05, 1.730499999999524e-05, 1.72089999999972e-05, 1.7222000000004234e-05, 1.7222000000004234e-05, 1.7209000000004138e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7249999999996435e-05, 1.7207999999997725e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7236000000003804e-05, 1.72089999999972e-05, 1.7208000000004664e-05, 1.7209000000004138e-05, 1.722299999999677e-05, 1.7249999999996435e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.493" endtime="20201115 22:01:33.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.488" endtime="20201115 22:01:33.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.498" endtime="20201115 22:01:33.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.502" endtime="20201115 22:01:33.521"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.500" endtime="20201115 22:01:33.522"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.497" endtime="20201115 22:01:33.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.070" endtime="20201115 22:01:33.523"></status>
</kw>
<msg timestamp="20201115 22:01:33.523" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="Measure Timer List Overhead">
<arguments>
<arg>remove</arg>
<arg>${n + 1}</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer List</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer List" library="DutDeviceIf">
<doc>Run the overhead timer list benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.532" endtime="20201115 22:01:33.570"></status>
</kw>
<msg timestamp="20201115 22:01:33.570" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.531" endtime="20201115 22:01:33.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.573" level="INFO">${RESULT} = {'cmd': 'overhead_timer_list remove 25', 'msg': ['overhead_timer_list remove 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:01:33.571" endtime="20201115 22:01:33.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.574" endtime="20201115 22:01:33.576"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.528" endtime="20201115 22:01:33.577"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.526" endtime="20201115 22:01:33.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.584" endtime="20201115 22:01:33.871"></status>
</kw>
<msg timestamp="20201115 22:01:33.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02350025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:33.583" endtime="20201115 22:01:33.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023483042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02350025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:01:33.875" endtime="20201115 22:01:33.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.883" endtime="20201115 22:01:33.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.580" endtime="20201115 22:01:33.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.578" endtime="20201115 22:01:33.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:01:33.890" level="INFO">${RESULT} = [{'time': 0.02350025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.024020403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:01:33.887" endtime="20201115 22:01:33.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201115 22:01:33.904" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201115 22:01:33.891" endtime="20201115 22:01:33.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>00-overhead-${position}-${method}</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.909" level="INFO">NAME: 00-overhead-25-remove</msg>
<status status="PASS" starttime="20201115 22:01:33.908" endtime="20201115 22:01:33.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:01:33.911" level="INFO">VALUE: [1.7208000000001195e-05, 1.719499999999763e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.719499999999763e-05, 1.712499999999978e-05, 1.7207999999997725e-05, 1.719499999999763e-05, 1.72089999999972e-05, 1.7222000000000764e-05, 1.7222000000000764e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7209000000000668e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.72089999999972e-05, 1.719499999999763e-05, 1.7207999999997725e-05, 1.7222000000004234e-05, 1.7207999999997725e-05, 1.7221999999997295e-05, 1.7221999999997295e-05, 1.7264000000002944e-05, 1.72089999999972e-05, 1.7221999999997295e-05, 1.7193999999998155e-05, 1.7207999999997725e-05, 1.7207999999997725e-05, 1.722299999999677e-05, 1.7208000000004664e-05, 1.7221999999997295e-05, 1.7249999999996435e-05, 1.7153000000005858e-05, 1.7235999999996865e-05, 1.7209000000004138e-05, 1.7221999999997295e-05, 1.72089999999972e-05, 1.7208000000004664e-05, 1.7209000000004138e-05, 1.7208000000004664e-05, 1.7250000000003374e-05, 1.7236000000003804e-05, 1.7236000000003804e-05, 1.7221999999997295e-05, 1.722299999999677e-05, 1.7179999999998585e-05, 1.7207999999997725e-05, 1.7221999999997295e-05]</msg>
<status status="PASS" starttime="20201115 22:01:33.910" endtime="20201115 22:01:33.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.905" endtime="20201115 22:01:33.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:01:33.915" endtime="20201115 22:01:33.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.919" endtime="20201115 22:01:33.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.917" endtime="20201115 22:01:33.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.913" endtime="20201115 22:01:33.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.524" endtime="20201115 22:01:33.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.832" endtime="20201115 22:01:33.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:31.831" endtime="20201115 22:01:33.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:00:43.295" endtime="20201115 22:01:33.940"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="teardown">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:01:33.946" endtime="20201115 22:01:33.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.945" endtime="20201115 22:01:33.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:01:33.943" endtime="20201115 22:01:33.967"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:00:43.225" endtime="20201115 22:01:33.967" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 21:59:46.845" endtime="20201115 22:01:33.974"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 21:59:44.826" endtime="20201115 22:01:33.995"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="0">Critical Tests</stat>
<stat pass="5" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="5" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="5" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="5" fail="0">dev</stat>
</tag>
<suite>
<stat pass="5" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="4" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
